package model;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.MediaTracker;
import java.awt.geom.AffineTransform;
import java.awt.image.ImageObserver;

public class ImagePaintStrategy extends APaintStrategy {
	ImageObserver imageObs;
	Image image;
	double scaleFactor = 1.0;
	double fillFactor = 1.0;
	AffineTransform localAT = new AffineTransform();
	AffineTransform tempAT = new AffineTransform();
	String filename;
	// what do the hashtags mean? ask a TA
	
	public ImagePaintStrategy(String filename, double fillFactor) {
		this.fillFactor = fillFactor;
		this.filename = filename;
	}
	
	public void init(Ball host) {
//		  imageObs = host.getCanvas();
//		  MediaTracker mt = new MediaTracker(host.getCanvas());
//		  mt.addImage(image, 1);
//		  try {
//		  	mt.waitForAll();
//		  }
//		  catch(Exception e){
//		  	System.out.println("ImagePaintStrategy.init(): Error waiting for image.  Exception = "+e);
//		  }
//
//		  scaleFactor = 2.0/(fillFactor*(image.getWidth(imageObs)+image.getHeight(imageObs))/2.0); // this line is described below
		}
	
	public ImagePaintStrategy(String filename, double fillFactor, AffineTransform at) {
		this.fillFactor = fillFactor;
		this.filename = filename;
		this.at = at;
	}

	@Override
	public void paintXfrm(Graphics g, Ball host, AffineTransform at) {
		// TODO Auto-generated method stub
		
	}
	
	
	
	
}
