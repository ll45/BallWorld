<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_rtVTcAt3EeiiCrav3vcpBQ" name="Strategies">
    <eAnnotations xmi:id="_rzgz8At3EeiiCrav3vcpBQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_rzgz8Qt3EeiiCrav3vcpBQ" source="codegen">
        <details xmi:id="_rzgz8gt3EeiiCrav3vcpBQ" key="codegenDirectory" value="/HW04/src"/>
        <details xmi:id="_s52J4At3EeiiCrav3vcpBQ" key="AssociatedSourceCode" value="/HW04/src/controller/BallWorldController.java;133705207/1;/HW04/src/model/ADecoratorPaintStrategy.java;3522512554/1;/HW04/src/model/APaintStrategy.java;1740869287/1;/HW04/src/model/Ball.java;544139014/1;/HW04/src/model/BallPaintStrategy.java;538568874/1;/HW04/src/model/BallWorldModel.java;3438198808/1;/HW04/src/model/BreathingStrategy.java;569949667/1;/HW04/src/model/ColorStrategy.java;783269627/1;/HW04/src/model/CompositePaintStrategy.java;2517148635/1;/HW04/src/model/CrashStrategy.java;4279759508/1;/HW04/src/model/EllipsePaintStrategy.java;292774861/1;/HW04/src/model/EllipseShapeFactory.java;1636135608/1;/HW04/src/model/FastStrategy.java;3009224450/1;/HW04/src/model/IBallCmd.java;2100560540/1;/HW04/src/model/IModel2ViewAdapter.java;715642539/1;/HW04/src/model/IPaintStrategy.java;556726924/1;/HW04/src/model/IShapeFactory.java;810833796/1;/HW04/src/model/IStrategyFac.java;3581042476/1;/HW04/src/model/IUpdateStrategy.java;1651050839/1;/HW04/src/model/ImagePaintStrategy.java;2009657845/1;/HW04/src/model/MultiPaintStrategy.java;843652504/1;/HW04/src/model/MultiStrategy.java;1636671415/1;/HW04/src/model/PolygonFactory.java;352231935/1;/HW04/src/model/RectanglePaintStrategy.java;952260073/1;/HW04/src/model/RectangleShapeFactory.java;3860937959/1;/HW04/src/model/ShapePaintStrategy.java;851889235/1;/HW04/src/model/SpawnStrategy.java;3065061180/1;/HW04/src/model/SquarePaintStrategy.java;3526266484/1;/HW04/src/model/StraightStrategy.java;3914615527/1;/HW04/src/model/SwellStrategy.java;1352457759/1;/HW04/src/model/SwitcherStrategy.java;2480375116/1;/HW04/src/model/TeleportStrategy.java;2565727986/1;/HW04/src/model/UprightCompositePaintStrategy.java;585067317/1;/HW04/src/model/UprightImageStrategy.java;3761235521/1;/HW04/src/model/UprightShapePaintStrategy.java;35762995/1;/HW04/src/model/WiggleStrategy.java;4246409471/1;/HW04/src/util/Dispatcher.java;77051068/1;/HW04/src/util/IRandomizer.java;4224991458/1;/HW04/src/util/Randomizer.java;1541548940/1;/HW04/src/util/SineMaker.java;1378225368/1;/HW04/src/view/BallWorldView.java;1506153628/1;/HW04/src/view/IView2ModelAdapter.java;637323524/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_sieywAt3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_sieywQt3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_sieywgt3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_sieywwt3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_sifZ0At3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_sifZ0Qt3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_sifZ0gt3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_sifZ0wt3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_sifZ1At3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_sign8At3EeiiCrav3vcpBQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_sign8Qt3EeiiCrav3vcpBQ" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_sipx4At3EeiiCrav3vcpBQ" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_ssr3oAt3EeiiCrav3vcpBQ" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_stJxsgt3EeiiCrav3vcpBQ" name="Ellipse2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_skx40At3EeiiCrav3vcpBQ" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_suCigQt3EeiiCrav3vcpBQ" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_suDwoAt3EeiiCrav3vcpBQ" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ssnmMAt3EeiiCrav3vcpBQ" name="Container"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ssoNQQt3EeiiCrav3vcpBQ" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ssqCcQt3EeiiCrav3vcpBQ" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sszzcAt3EeiiCrav3vcpBQ" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ss0agAt3EeiiCrav3vcpBQ" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ss89YAt3EeiiCrav3vcpBQ" name="Rectangle"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_stJxsAt3EeiiCrav3vcpBQ" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_stQfYAt3EeiiCrav3vcpBQ" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_stRGcQt3EeiiCrav3vcpBQ" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_stRtgQt3EeiiCrav3vcpBQ" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_stS7oQt3EeiiCrav3vcpBQ" name="Toolkit"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_stfv8At3EeiiCrav3vcpBQ" name="Polygon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_st_fMAt3EeiiCrav3vcpBQ" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_suEXsQt3EeiiCrav3vcpBQ" name="FlowLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_suFl0At3EeiiCrav3vcpBQ" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_svDPIQt3EeiiCrav3vcpBQ" name="Dimension"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_si30UAt3EeiiCrav3vcpBQ" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_ss0aggt3EeiiCrav3vcpBQ" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ss1BkQt3EeiiCrav3vcpBQ" name="Observer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_suhqsAt3EeiiCrav3vcpBQ" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_suhqsQt3EeiiCrav3vcpBQ" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_sihPAAt3EeiiCrav3vcpBQ" name="model">
      <packagedElement xmi:type="uml:Class" xmi:id="_sma3kAt3EeiiCrav3vcpBQ" name="ADecoratorPaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_swdkYwt3EeiiCrav3vcpBQ">
          <body>This is the ADecoratePaintStrategy class that is abstract. It has the basic functionality&#xD;
of a paint strategy, and the methods simply delegate to the decoree.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_ssu68At3EeiiCrav3vcpBQ" general="_smfwEAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_sves8Qt3EeiiCrav3vcpBQ" name="decoree" visibility="private" type="_smfwEAt3EeiiCrav3vcpBQ" association="_swyUgQt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swG_EAt3EeiiCrav3vcpBQ" name="ADecoratorPaintStrategy" specification="_sssesQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swG_EQt3EeiiCrav3vcpBQ" name="decoree" type="_smfwEAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swG_Egt3EeiiCrav3vcpBQ" type="_sma3kAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(new AffineTransform());&#xD;
		this.decoree = decoree;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swG_Ewt3EeiiCrav3vcpBQ" name="init" specification="_sstFwwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swG_FAt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>decoree.init(ball);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swG_FQt3EeiiCrav3vcpBQ" name="paintXfrm" specification="_suaV8At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swG_Fgt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swG_Fwt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swG_GAt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>decoree.paintXfrm(g, ball, at);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swHmIAt3EeiiCrav3vcpBQ" name="paint" specification="_subkEAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swHmIQt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swHmIgt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>decoree.paint(g, ball);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_sssesQt3EeiiCrav3vcpBQ" name="ADecoratorPaintStrategy" method="_swG_EAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_sstFwAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_sstFwQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_swdkZAt3EeiiCrav3vcpBQ">
            <body>This is the constructor for ADecoratorPaintStrategy, that calls the&#xD;
	 * super constructor with an affine transform, and sets the decoree.&#xD;
	 * @param decoree An APaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_sssesgt3EeiiCrav3vcpBQ" name="decoree" type="_smfwEAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_sstFwgt3EeiiCrav3vcpBQ" type="_sma3kAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sstFwwt3EeiiCrav3vcpBQ" name="init" method="_swG_Ewt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_ssts0At3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_suaV8At3EeiiCrav3vcpBQ" name="paintXfrm" method="_swG_FQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_suaV8Qt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_suaV8gt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_suaV8wt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_subkEAt3EeiiCrav3vcpBQ" name="paint" method="_swHmIAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_sucLIAt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_sucLIQt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_smfwEAt3EeiiCrav3vcpBQ" name="APaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_swdkZQt3EeiiCrav3vcpBQ">
          <body>This is an abstract class that defines the top level affine transform based
paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_svf7EAt3EeiiCrav3vcpBQ" name="at" visibility="package" type="_ssr3oAt3EeiiCrav3vcpBQ" association="_swy7kAt3EeiiCrav3vcpBQ"/>
        <interfaceRealization xmi:id="_sswJEAt3EeiiCrav3vcpBQ" client="_smfwEAt3EeiiCrav3vcpBQ" supplier="_snLskAt3EeiiCrav3vcpBQ" contract="_snLskAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swHmIwt3EeiiCrav3vcpBQ" name="APaintStrategy" specification="_sucyMAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swHmJAt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swHmJQt3EeiiCrav3vcpBQ" type="_smfwEAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.at = at;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swHmJgt3EeiiCrav3vcpBQ" name="paint" specification="_sudZRAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swHmJwt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swHmKAt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>double scale = ball.getRad();
		at.setToTranslation(ball.getLoc().x, ball.getLoc().y);
		at.scale(scale, scale);
		at.rotate(ball.getVel().x, ball.getVel().y);
		g.setColor(ball.getCol());    
		paintCfg(g, ball);
		paintXfrm(g, ball, at);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swINMAt3EeiiCrav3vcpBQ" name="getAT" specification="_smhlQAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swINMQt3EeiiCrav3vcpBQ" type="_ssr3oAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return this.at;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_smgXIAt3EeiiCrav3vcpBQ" name="APaintStrategy">
          <eAnnotations xmi:id="_smg-MAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_smg-MQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_smg-Mwt3EeiiCrav3vcpBQ" type="_smfwEAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_smhlQAt3EeiiCrav3vcpBQ" name="getAT" method="_swINMAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_sweLcAt3EeiiCrav3vcpBQ">
            <body>This is a getter that returns the Affine Transform
	 * @return An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_suenYQt3EeiiCrav3vcpBQ" type="_ssr3oAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sswwIAt3EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_sswwIQt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sucyMAt3EeiiCrav3vcpBQ" name="APaintStrategy" method="_swHmIwt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_sudZQQt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_sudZQgt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_swdkZgt3EeiiCrav3vcpBQ">
            <body>This is the constructor that takes in Affine Transform.
	 * @param at</body>
          </ownedComment>
          <ownedParameter xmi:id="_sudZQAt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_sudZQwt3EeiiCrav3vcpBQ" type="_smfwEAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sudZRAt3EeiiCrav3vcpBQ" name="paint" method="_swHmJgt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swdkZwt3EeiiCrav3vcpBQ">
            <body>This function paints the ball on the passed in Graphics object.</body>
          </ownedComment>
          <ownedParameter xmi:id="_sudZRQt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_sudZRgt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sueAUAt3EeiiCrav3vcpBQ" name="paintCfg" visibility="protected">
          <ownedParameter xmi:id="_sueAUQt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_sueAUgt3EeiiCrav3vcpBQ" name="host" type="_smkokAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sufOcAt3EeiiCrav3vcpBQ" name="paintXfrm" isAbstract="true">
          <ownedComment xmi:id="_sweLcQt3EeiiCrav3vcpBQ">
            <body>This function is a secondary paint operation that is the last step of the above
	 * paint method, which does not calculate its own affine transform, but instead,
	 * uses a supplied affine transform.
	 * @param g A graphics object
	 * @param host The host ball
	 * @param at An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_sufOcQt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_sufOcgt3EeiiCrav3vcpBQ" name="host" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_sufOcwt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_smkokAt3EeiiCrav3vcpBQ" name="Ball">
        <ownedComment xmi:id="_sweLcgt3EeiiCrav3vcpBQ">
          <body>This is the Ball class, which is what is drawn on the screen, and implements
Observer to use dispatching.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_svhJMAt3EeiiCrav3vcpBQ" name="col" type="_sszzcAt3EeiiCrav3vcpBQ" association="_sweLcwt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_svhwQAt3EeiiCrav3vcpBQ" name="loc" type="_ss0agAt3EeiiCrav3vcpBQ" association="_sweygAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_svhwQQt3EeiiCrav3vcpBQ" name="rad" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sviXUQt3EeiiCrav3vcpBQ" name="vel" type="_ss0agAt3EeiiCrav3vcpBQ" association="_sweyggt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_sviXUgt3EeiiCrav3vcpBQ" name="con" type="_ssnmMAt3EeiiCrav3vcpBQ" association="_swfZkAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_svi-YAt3EeiiCrav3vcpBQ" name="strat" visibility="private" type="_snSaQAt3EeiiCrav3vcpBQ" association="_swzioAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_svi-Ygt3EeiiCrav3vcpBQ" name="paintStrat" type="_snLskAt3EeiiCrav3vcpBQ" isReadOnly="true" association="_swziowt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_svjlcAt3EeiiCrav3vcpBQ" name="itr" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_svjlcQt3EeiiCrav3vcpBQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svkMgAt3EeiiCrav3vcpBQ" name="radDelta">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_suf1gAt3EeiiCrav3vcpBQ" client="_smkokAt3EeiiCrav3vcpBQ" supplier="_ss1BkQt3EeiiCrav3vcpBQ" contract="_ss1BkQt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swI0QAt3EeiiCrav3vcpBQ" name="Ball" specification="_suhDoAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swI0QQt3EeiiCrav3vcpBQ" name="col" type="_sszzcAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swI0Qgt3EeiiCrav3vcpBQ" name="loc" type="_ss0agAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swI0Qwt3EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swI0RAt3EeiiCrav3vcpBQ" name="vel" type="_ss0agAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swI0RQt3EeiiCrav3vcpBQ" name="con" type="_ssnmMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swI0Rgt3EeiiCrav3vcpBQ" name="updateStrat" type="_snSaQAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swI0Rwt3EeiiCrav3vcpBQ" name="paintStrat" type="_snLskAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swI0SAt3EeiiCrav3vcpBQ" type="_smkokAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>setCol(col);
		setLoc(loc);
		setRad(rad);
		setVel(vel);
		setCon(con);
		setStrat(updateStrat);
		setRadDelta(5);
		setPaintStrat(paintStrat);
		paintStrat.init(this);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swI0SQt3EeiiCrav3vcpBQ" name="getRad" specification="_smnE0At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swI0Sgt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swI0Swt3EeiiCrav3vcpBQ" name="setRad" specification="_smnE0gt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swI0TAt3EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.rad = rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swI0TQt3EeiiCrav3vcpBQ" name="move" specification="_smnr4At3EeiiCrav3vcpBQ">
          <language>java</language>
          <body>setLoc(new Point(getLoc().x + getVel().x, getLoc().y + getVel().y));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swJbUAt3EeiiCrav3vcpBQ" name="update" specification="_sujf4Qt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swJbUQt3EeiiCrav3vcpBQ" name="o" type="_ss0aggt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swJbUgt3EeiiCrav3vcpBQ" name="cmd" type="_suhqsQt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>((IBallCmd) cmd).apply(this, (Dispatcher) o);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swJbUwt3EeiiCrav3vcpBQ" name="paint" specification="_sujf5At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swJbVAt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>getPaintStrat().paint(g, this);
//		g.setColor(this.getCol());
//		g.fillOval(this.getLoc().x - getRad(), this.getLoc().y - getRad(), getRad() * 2, getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swJbVQt3EeiiCrav3vcpBQ" name="getStrat" specification="_smoS8At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swJbVgt3EeiiCrav3vcpBQ" type="_snSaQAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swJbVwt3EeiiCrav3vcpBQ" name="setStrat" specification="_ss22wQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swJbWAt3EeiiCrav3vcpBQ" name="strat" type="_snSaQAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>this.strat = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swKCYAt3EeiiCrav3vcpBQ" name="getItr" specification="_smo6AAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swKCYQt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swKCYgt3EeiiCrav3vcpBQ" name="setItr" specification="_smphEAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swKCYwt3EeiiCrav3vcpBQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.itr = itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swKCZAt3EeiiCrav3vcpBQ" name="bounce" specification="_smphEgt3EeiiCrav3vcpBQ">
          <language>java</language>
          <body>// Boundaries of the window
		int rightWall = getCon().getWidth();
		int bottomWall = getCon().getHeight();
		int leftWall = 0;
		int topWall = 0;
		
		int leftX = getLoc().x - getRad();
		int rightX = getLoc().x + getRad();
		
		int bottomY = getLoc().y + getRad();
		int topY = getLoc().y - getRad();
		
		int maxX = rightWall - getRad();
		int minX = getRad();
		
		int maxY = bottomWall - getRad();
		int minY = getRad();

		// Collision detected with left or right wall.
		if (leftX == leftWall || rightX == rightWall) {
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond right wall.
		else if (rightX > rightWall) {
			int diff = getLoc().x - maxX;
			setLoc(new Point(maxX - diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond left wall.
		else if (leftX &lt; leftWall) {
			int diff = minX - getLoc().x;
			setLoc(new Point(minX + diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Collision detected with top or bottom wall.
		else if (topY == topWall || bottomY == bottomWall) {
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond bottom wall.
		else if (bottomY > bottomWall) {
			int diff = getLoc().y - maxY;
			setLoc(new Point(getLoc().x, maxY - diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond top wall.
		else if (topY &lt; topWall) {
			int diff = minY - getLoc().y;
			setLoc(new Point(getLoc().x, minY + diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swKpcAt3EeiiCrav3vcpBQ" name="setPaintStrat" specification="_ss3d0Qt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swKpcQt3EeiiCrav3vcpBQ" name="paintStrat" type="_snLskAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>this.paintStrat = paintStrat;
		getPaintStrat().init(this);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_smnE0At3EeiiCrav3vcpBQ" name="getRad" method="_swI0SQt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swfZkwt3EeiiCrav3vcpBQ">
            <body>This returns the radius of the ball.
	 * @return the rad</body>
          </ownedComment>
          <ownedParameter xmi:id="_smnE0Qt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_smnE0gt3EeiiCrav3vcpBQ" name="setRad" method="_swI0Swt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swfZlAt3EeiiCrav3vcpBQ">
            <body>This sets the radius of the ball.
	 * @param rad the rad to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_smnE0wt3EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_smnr4At3EeiiCrav3vcpBQ" name="move" method="_swI0TQt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgAoAt3EeiiCrav3vcpBQ">
            <body>This function tells the ball to update its current location by the respective velocity
	 * component.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_smoS8At3EeiiCrav3vcpBQ" name="getStrat" method="_swJbVQt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgAowt3EeiiCrav3vcpBQ">
            <body>This function returns the ball's movement strategy.
	 * @return the strat</body>
          </ownedComment>
          <ownedParameter xmi:id="_ss22wAt3EeiiCrav3vcpBQ" type="_snSaQAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_smo6AAt3EeiiCrav3vcpBQ" name="getItr" method="_swKCYAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgApQt3EeiiCrav3vcpBQ">
            <body>This function returns the current iteration of the ball.
	 * @return the itr</body>
          </ownedComment>
          <ownedParameter xmi:id="_smo6AQt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_smphEAt3EeiiCrav3vcpBQ" name="setItr" method="_swKCYgt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgApgt3EeiiCrav3vcpBQ">
            <body>This function sets the current iteration of the ball.
	 * @param itr the itr to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_smphEQt3EeiiCrav3vcpBQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_smphEgt3EeiiCrav3vcpBQ" name="bounce" method="_swKCZAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgApwt3EeiiCrav3vcpBQ">
            <body>This function checks to see if the ball has come into contact with one of the boundaries of the 
	 *  panel. If it has, this function reverses the velocity of the ball, simulating a rebound off
	 *  of the wall. If, due to the delay of the GUI thread, the ball has passed one of the panel
	 *  boundaries, this function moves the ball to the location it would be at if it had properly 
	 *  bounced off of the wall, and sets the velocity to its appropriate value.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_ss22wQt3EeiiCrav3vcpBQ" name="setStrat" method="_swJbVwt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgApAt3EeiiCrav3vcpBQ">
            <body>This function sets the ball's movement strategy.
	 * @param strat the strat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_ss3d0At3EeiiCrav3vcpBQ" name="strat" type="_snSaQAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ss3d0Qt3EeiiCrav3vcpBQ" name="setPaintStrat" method="_swKpcAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgAqAt3EeiiCrav3vcpBQ">
            <body>This function sets the paint strategy.
	 * @param paintStrat the paintStrat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_ss3d0gt3EeiiCrav3vcpBQ" name="paintStrat" type="_snLskAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_suhDoAt3EeiiCrav3vcpBQ" name="Ball" method="_swI0QAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_suhDqAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_suhDqQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_swfZkgt3EeiiCrav3vcpBQ">
            <body>This is the Ball constructor, which sets its initial values.
	 * @param col The color of the ball
	 * @param loc The initial location of the ball.
	 * @param rad The radius of the ball.
	 * @param vel The initial velocity of the ball.
	 * @param con The container (component) on which the ball is drawn.
	 * @param updateStrat The IUpdateStrategy that decides how to update the ball.
	 * @param paintStrat The IPaintStrategy that decides how to paint the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_suhDoQt3EeiiCrav3vcpBQ" name="col" type="_sszzcAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_suhDogt3EeiiCrav3vcpBQ" name="loc" type="_ss0agAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_suhDowt3EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_suhDpAt3EeiiCrav3vcpBQ" name="vel" type="_ss0agAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_suhDpQt3EeiiCrav3vcpBQ" name="con" type="_ssnmMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_suhDpgt3EeiiCrav3vcpBQ" name="updateStrat" type="_snSaQAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_suhDpwt3EeiiCrav3vcpBQ" name="paintStrat" type="_snLskAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_suhDqgt3EeiiCrav3vcpBQ" type="_smkokAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sujf4Qt3EeiiCrav3vcpBQ" name="update" method="_swJbUAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgAoQt3EeiiCrav3vcpBQ">
            <body>This function is required when implementing Observer, that tells the ball what to
	 * do when it is notified by the dispatcher.
	 * @param o An observable
	 * @param g An Object, which should be an IBallCmd</body>
          </ownedComment>
          <ownedParameter xmi:id="_sujf4gt3EeiiCrav3vcpBQ" name="o" type="_ss0aggt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_sujf4wt3EeiiCrav3vcpBQ" name="cmd" type="_suhqsQt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sujf5At3EeiiCrav3vcpBQ" name="paint" method="_swJbUwt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgAogt3EeiiCrav3vcpBQ">
            <body>This function determines how to paint the ball, and it delegates
	 * to the paint strategy's paint.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_sujf5Qt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_smuZkAt3EeiiCrav3vcpBQ" name="BallPaintStrategy">
        <ownedComment xmi:id="_swgAqQt3EeiiCrav3vcpBQ">
          <body>This is the ball paint strategy, which implements a paint strategy for a ball.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_ss7IMAt3EeiiCrav3vcpBQ" client="_smuZkAt3EeiiCrav3vcpBQ" supplier="_snLskAt3EeiiCrav3vcpBQ" contract="_snLskAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swKpcgt3EeiiCrav3vcpBQ" name="paint" specification="_sul8IAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swKpcwt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swKpdAt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>g.setColor(ball.getCol());
		g.fillOval(ball.getLoc().x - ball.getRad(), ball.getLoc().y - ball.getRad(),
				ball.getRad() * 2, ball.getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_smuZkQt3EeiiCrav3vcpBQ" name="BallPaintStrategy">
          <eAnnotations xmi:id="_smvAoAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_smvAoQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_smvAowt3EeiiCrav3vcpBQ" type="_smuZkAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ss7vQAt3EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_ss7vQQt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sul8IAt3EeiiCrav3vcpBQ" name="paint" method="_swKpcgt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_sumjMAt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_sumjMQt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_smw10At3EeiiCrav3vcpBQ" name="BallWorldModel">
        <ownedComment xmi:id="_swgnsAt3EeiiCrav3vcpBQ">
          <body>This is the BallWorldModel class, which makes balls, clears balls, and updates the balls.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_svkzkAt3EeiiCrav3vcpBQ" name="adapter" visibility="private" type="_snJ3YAt3EeiiCrav3vcpBQ" association="_sw0JsQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_svkzkQt3EeiiCrav3vcpBQ" value="IModel2ViewAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svlaoQt3EeiiCrav3vcpBQ" name="timeSlice" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_svlaogt3EeiiCrav3vcpBQ" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svmBsQt3EeiiCrav3vcpBQ" name="dispatcher" visibility="private" type="_soJ88At3EeiiCrav3vcpBQ" association="_sw0wwQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_svmBsgt3EeiiCrav3vcpBQ" value="new Dispatcher()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svmowAt3EeiiCrav3vcpBQ" name="timer" visibility="private" type="_ss9kcQt3EeiiCrav3vcpBQ" association="_sw1X0Qt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_svmowQt3EeiiCrav3vcpBQ" value="new Timer(timeSlice, (e) -> adapter.update())"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swLQgAt3EeiiCrav3vcpBQ" name="BallWorldModel" specification="_ss-ykAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swLQgQt3EeiiCrav3vcpBQ" name="adapter" type="_snJ3YAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swLQggt3EeiiCrav3vcpBQ" type="_smw10At3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.adapter = adapter;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swLQgwt3EeiiCrav3vcpBQ" name="clearBalls" specification="_smyD8At3EeiiCrav3vcpBQ">
          <language>java</language>
          <body>dispatcher.deleteObservers();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swLQhAt3EeiiCrav3vcpBQ" name="start" specification="_smyrAAt3EeiiCrav3vcpBQ">
          <language>java</language>
          <body>timer.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swL3kAt3EeiiCrav3vcpBQ" name="update" specification="_sunKQAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swL3kQt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll((IBallCmd) (ball, disp)->{
         // Whatever you want to do with the context Ball!
			ball.setItr(ball.getItr() + 1);
			ball.getStrat().updateState(ball, disp);
			ball.move();
			ball.bounce();
			ball.paint((Graphics) g);
		});
//        dispatcher.notifyAll(g);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swL3kgt3EeiiCrav3vcpBQ" name="loadStrategy" specification="_smyrAQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swL3kwt3EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swL3lAt3EeiiCrav3vcpBQ" type="_snSaQAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>Object[] args =  new Object[]{};
		java.lang.reflect.Constructor&lt;?> cons[];
		try {
			cons = Class.forName(strat).getConstructors();
			return (IUpdateStrategy) cons[0].newInstance(args);
		} catch (Exception e) {
			return IStrategyFac._errorStrategyFac.make();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swL3lQt3EeiiCrav3vcpBQ" name="fixName" specification="_smzSEAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swL3lgt3EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swL3lwt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;model.&quot; + classname.substring(0, 1).toUpperCase() + classname.substring(1).toLowerCase() + &quot;Strategy&quot;;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swL3mAt3EeiiCrav3vcpBQ" name="makeStrategyFac" specification="_smz5IAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swL3mQt3EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swL3mgt3EeiiCrav3vcpBQ" type="_snPW8At3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>if (null == classname) {
			return IStrategyFac._errorStrategyFac;
		}
	    return new IStrategyFac() {
	        /**
	         * Instantiate a strategy corresponding to the given class name.
	         * @return An IUpdateStrategy instance
	         */
	        public IUpdateStrategy make() {
	        		return loadStrategy(fixName(classname));
	        }

	        /**
	         * Return the given class name string
	         */
	        public String toString() {
	            return classname;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swL3mwt3EeiiCrav3vcpBQ" name="makeBall" specification="_ss_Zpgt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swL3nAt3EeiiCrav3vcpBQ" name="make" type="_snSaQAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swL3nQt3EeiiCrav3vcpBQ" name="paintStrat" type="_snLskAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>Container con = adapter.getCanvas();
		Randomizer rzr = Randomizer.Singleton;
		
		int startRad = rzr.randomInt(10, 45);
		Point randLoc = rzr.randomLoc(new Rectangle(con.getWidth() - startRad, con.getHeight() - startRad));
		Point startLoc = new Point(randLoc.x + startRad, randLoc.y + startRad);
		Point startVel = new Point(0, 0);

		// Handles case where both x- and y-components of velocity are 0 to prevent ball from starting stationary.
		while (startVel.x == 0 &amp;&amp; startVel.y == 0) {
			startVel = new Point(rzr.randomInt(-20, 20), rzr.randomInt(-20, 20));
		}
		Color startCol = rzr.randomColor();
		
		Ball loaded = new Ball(startCol, startLoc, startRad, startVel, con, make, paintStrat);
		dispatcher.addObserver(loaded);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swMeoAt3EeiiCrav3vcpBQ" name="combineStrategyFacs" specification="_stAAsgt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swMeoQt3EeiiCrav3vcpBQ" name="stratFac1" type="_snPW8At3EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_swMeogt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_swMeowt3EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_swMepAt3EeiiCrav3vcpBQ" name="stratFac2" type="_snPW8At3EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_swMepQt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_swMepgt3EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_swMepwt3EeiiCrav3vcpBQ" type="_snPW8At3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>if (null == stratFac1 || null == stratFac2) {
	    		return IStrategyFac._errorStrategyFac;
	    	}
	    
	    return new IStrategyFac() {
	        /**
	         * Instantiate a new MultiStrategy with the strategies from the given strategy factories
	         * @return A MultiStrategy instance
	         */
	        public IUpdateStrategy make() {
	            return new MultiStrategy(stratFac1.make(), stratFac2.make());
	        }

	        /**
	         * Return a string that is the toString()'s of the given strategy factories concatenated with a &quot;-&quot;
	         */
	        public String toString() {
	            return stratFac1.toString() + &quot;-&quot; + stratFac2.toString();
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swMeqAt3EeiiCrav3vcpBQ" name="setSwitcherStrategy" specification="_stAnxAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swMeqQt3EeiiCrav3vcpBQ" name="switchFac" type="_snPW8At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>SwitcherStrategy.setStrat(switchFac.make());
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swMeqgt3EeiiCrav3vcpBQ" name="getSwitcherFac" specification="_sm0gMAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swMeqwt3EeiiCrav3vcpBQ" type="_snPW8At3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return IStrategyFac.switcherStrat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swNFsAt3EeiiCrav3vcpBQ" name="makePaintFactory" specification="_sm1HQAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swNFsQt3EeiiCrav3vcpBQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swNFsgt3EeiiCrav3vcpBQ" type="_snPW8At3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return new IStrategyFac() {
	        public IUpdateStrategy make() {
	        		return new StraightStrategy();
	        }
 
	        public String toString() {
	            return text;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return loadPaintStrat(fixPaintName(text));
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swNFswt3EeiiCrav3vcpBQ" name="loadPaintStrat" specification="_sm1uUAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swNFtAt3EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swNFtQt3EeiiCrav3vcpBQ" type="_snLskAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>if (strat.endsWith(&quot;ImagePaintStrategy&quot;)) {
			int imgInd = strat.indexOf(&quot;ImagePaintStrategy&quot;);
			String nameFile = strat.substring(6, imgInd);
			
			String filename = &quot;images/&quot; + nameFile + &quot;.gif&quot;;
			
			Object[] args =  new Object[]{filename, 1.0};
			java.lang.reflect.Constructor&lt;?> cons[];
			try {
				cons = Class.forName(&quot;model.ImagePaintStrategy&quot;).getConstructors();
				if (cons[0].getParameterCount() == 2) {
					return (IPaintStrategy) cons[0].newInstance(args);
				} else {
					return (IPaintStrategy) cons[1].newInstance(args);
				}
				
			} catch (Exception e) {
				System.out.println(e);
				return IStrategyFac._errorStrategyFac.makePaint();
			}
		} else if (strat.endsWith(&quot;CompositePaintStrategy&quot;)) {
			APaintStrategy[] pstrats = {new ImagePaintStrategy(&quot;images/Mars.gif&quot;, 1.0), new ImagePaintStrategy(&quot;images/Mario.gif&quot;, 1.0)};
			return new UprightCompositePaintStrategy(pstrats);
		} else {
			Object[] args =  new Object[]{};
			java.lang.reflect.Constructor&lt;?> cons[];
			try {
				cons = Class.forName(strat).getConstructors();
				return (IPaintStrategy) cons[0].newInstance(args);
			} catch (Exception e) {
				return IStrategyFac._errorStrategyFac.makePaint();
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swNFtgt3EeiiCrav3vcpBQ" name="fixPaintName" specification="_sm2VYAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swNFtwt3EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swNFuAt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String classnameLower = classname.toLowerCase();
		if (classnameLower.endsWith(&quot;image&quot;)) {
			int indImg = classnameLower.indexOf(&quot;image&quot;);
			String imgType = classnameLower.substring(0, indImg);
			return &quot;model.&quot; + imgType.substring(0, 1).toUpperCase() + imgType.substring(1).toLowerCase() + &quot;ImagePaintStrategy&quot;;
		}
		return &quot;model.&quot; + classname.substring(0, 1).toUpperCase() + classname.substring(1).toLowerCase() + &quot;PaintStrategy&quot;;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_smyD8At3EeiiCrav3vcpBQ" name="clearBalls" method="_swLQgwt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgnsgt3EeiiCrav3vcpBQ">
            <body>This function clears all the balls from the canvas, by removing them as observers.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_smyrAAt3EeiiCrav3vcpBQ" name="start" method="_swLQhAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgnswt3EeiiCrav3vcpBQ">
            <body>This function starts the timer.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_smyrAQt3EeiiCrav3vcpBQ" name="loadStrategy" method="_swL3kgt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgntQt3EeiiCrav3vcpBQ">
            <body>This function takes an input string and loads the associated IUpdateStrategy,
	 * and returns the error strategy if the strategy isn't available.
	 * @param strat A string of the strategy to be created.
	 * @return The IUpdateStrategy associated with the string, or the error strategy if
	 * there is no associated strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_smyrAgt3EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ss_ZpAt3EeiiCrav3vcpBQ" type="_snSaQAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_smzSEAt3EeiiCrav3vcpBQ" name="fixName" method="_swL3lQt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgntgt3EeiiCrav3vcpBQ">
            <body>This function takes the input and confirms it to the required model.ClassStrategy format for
	 * dynamic class loading.
	 * @param classname The string that should be modified to conform to the model.ClassStrategy format.
	 * @return The class string in a model.ClassStrategy format.</body>
          </ownedComment>
          <ownedParameter xmi:id="_smzSEQt3EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_smzSEgt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_smz5IAt3EeiiCrav3vcpBQ" name="makeStrategyFac" method="_swL3mAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgntwt3EeiiCrav3vcpBQ">
            <body>This takes a class name, and creates a strategy factory for it, by loading the strategy and returning it
	 * in the make method.
	 * @param classname The class of strategy to make.
	 * @return An IStrategyFac whose make function calls the associated model.ClassStrategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_smz5IQt3EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ss_ZpQt3EeiiCrav3vcpBQ" type="_snPW8At3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sm0gMAt3EeiiCrav3vcpBQ" name="getSwitcherFac" method="_swMeqgt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgnuwt3EeiiCrav3vcpBQ">
            <body>This function returns a strategy factory, which makes the current switcher balls' update
	 * strategy
	 * @return An IStrategyFac, which makes the current strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_stAnxgt3EeiiCrav3vcpBQ" type="_snPW8At3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sm1HQAt3EeiiCrav3vcpBQ" name="makePaintFactory" method="_swNFsAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swhOwAt3EeiiCrav3vcpBQ">
            <body>This function returns an IStrategyFac to allow the Paint Strategies to be made later on.
	 * @param text The type of paint strategy.
	 * @return An IStrategyFac</body>
          </ownedComment>
          <ownedParameter xmi:id="_sm1HQQt3EeiiCrav3vcpBQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_stBO0At3EeiiCrav3vcpBQ" type="_snPW8At3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sm1uUAt3EeiiCrav3vcpBQ" name="loadPaintStrat" method="_swNFswt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swhOwQt3EeiiCrav3vcpBQ">
            <body>This function loads an instance of an IPaintStrategy, given a classname.
	 * @param strat The type of paint strategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_sm1uUQt3EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_stBO0Qt3EeiiCrav3vcpBQ" type="_snLskAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sm2VYAt3EeiiCrav3vcpBQ" name="fixPaintName" method="_swNFtgt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swhOwgt3EeiiCrav3vcpBQ">
            <body>This function &quot;fixes&quot; the type passed in to create an IPaintStrategy.
	 * @param classname The type of paint strategy to create.
	 * @return The fixed paint strategy information as a string.</body>
          </ownedComment>
          <ownedParameter xmi:id="_sm2VYQt3EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sm2VYgt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ss-ykAt3EeiiCrav3vcpBQ" name="BallWorldModel" method="_swLQgAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_ss_ZoQt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_ss_Zogt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_swgnsQt3EeiiCrav3vcpBQ">
            <body>This is the BallWorldModel constructor, which creates a model for the controller to interact with.
	 * @param adapter An IModel2ViewAdapter.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ss_ZoAt3EeiiCrav3vcpBQ" name="adapter" type="_snJ3YAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ss_Zowt3EeiiCrav3vcpBQ" type="_smw10At3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ss_Zpgt3EeiiCrav3vcpBQ" name="makeBall" method="_swL3mwt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgnuAt3EeiiCrav3vcpBQ">
            <body>This function randomizes parameters for the ball, and makes a ball with the parameter's update strategy.
	 * @param make The IUpdateStrategy that determines how the ball updates.</body>
          </ownedComment>
          <ownedParameter xmi:id="_stAAsAt3EeiiCrav3vcpBQ" name="make" type="_snSaQAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_stAAsQt3EeiiCrav3vcpBQ" name="paintStrat" type="_snLskAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_stAAsgt3EeiiCrav3vcpBQ" name="combineStrategyFacs" method="_swMeoAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgnuQt3EeiiCrav3vcpBQ">
            <body>Returns an IStrategyFac that can instantiate a MultiStrategy with the two
	 * strategies made by the two given IStrategyFac objects. Returns null if
	 * either supplied factory is null. The toString() of the returned factory
	 * is the toString()'s of the two given factories, concatenated with &quot;-&quot;. 
	 * If either factory is null, then a factory for a beeping error strategy is returned.
	 * 
	 * @param stratFac1 An IStrategyFac for a strategy
	 * @param stratFac2 An IStrategyFac for a strategy
	 * @return An IStrategyFac for the composition of the two strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_stAAswt3EeiiCrav3vcpBQ" name="stratFac1" type="_snPW8At3EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_stAnwAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_stAnwQt3EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_stAAtAt3EeiiCrav3vcpBQ" name="stratFac2" type="_snPW8At3EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_stAnwgt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_stAnwwt3EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_stAAtQt3EeiiCrav3vcpBQ" type="_snPW8At3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_stAnxAt3EeiiCrav3vcpBQ" name="setSwitcherStrategy" method="_swMeqAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgnugt3EeiiCrav3vcpBQ">
            <body>This function sets the switcher balls strategy to the one made by the input.
	 * @param switchFac IStrategyFac which makes the new update strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_stAnxQt3EeiiCrav3vcpBQ" name="switchFac" type="_snPW8At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sunKQAt3EeiiCrav3vcpBQ" name="update" method="_swL3kAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swgntAt3EeiiCrav3vcpBQ">
            <body>This function updates all the balls by notifying them using the dispatcher
	 * and an IBallCmd
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_sunKQQt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_sm5YsAt3EeiiCrav3vcpBQ" name="BreathingStrategy">
        <ownedComment xmi:id="_swhOwwt3EeiiCrav3vcpBQ">
          <body>This class defines a Breathing Strategy, which grows and shrinks the ball's radius.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_stCc8At3EeiiCrav3vcpBQ" client="_sm5YsAt3EeiiCrav3vcpBQ" supplier="_snSaQAt3EeiiCrav3vcpBQ" contract="_snSaQAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swNswAt3EeiiCrav3vcpBQ" name="updateState" specification="_stCc8Qt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swNswQt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swNswgt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getItr() % 5 == 0) {
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_stCc8Qt3EeiiCrav3vcpBQ" name="updateState" method="_swNswAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_stCc8gt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_stDEAAt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_sm7N4At3EeiiCrav3vcpBQ" name="ColorStrategy">
        <ownedComment xmi:id="_swhOxAt3EeiiCrav3vcpBQ">
          <body>This class defines a Color Strategy, which changes the ball's color.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_stDrEgt3EeiiCrav3vcpBQ" client="_sm7N4At3EeiiCrav3vcpBQ" supplier="_snSaQAt3EeiiCrav3vcpBQ" contract="_snSaQAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swNswwt3EeiiCrav3vcpBQ" name="updateState" specification="_stESIAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swNsxAt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swNsxQt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (ball.getItr() % 10 == 0) {
						Color newColor = Randomizer.Singleton.randomColor();
						ball.setCol(newColor);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_stESIAt3EeiiCrav3vcpBQ" name="updateState" method="_swNswwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_stESIQt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_stESIgt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_sm9DEAt3EeiiCrav3vcpBQ" name="CompositePaintStrategy">
        <ownedComment xmi:id="_swhOxQt3EeiiCrav3vcpBQ">
          <body>This class defines a CompositePaintStrategy, which is a concrete class of MultiPaintStrategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_stGuYAt3EeiiCrav3vcpBQ" general="_snbkMAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swNsxgt3EeiiCrav3vcpBQ" name="CompositePaintStrategy" specification="_stFgQQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swNsxwt3EeiiCrav3vcpBQ" name="pstrats" type="_smfwEAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_swNsyAt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swNsyQt3EeiiCrav3vcpBQ" type="_sm9DEAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swOT0At3EeiiCrav3vcpBQ" name="CompositePaintStrategy" specification="_suoYYAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swOT0Qt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swOT0gt3EeiiCrav3vcpBQ" name="pstrats" type="_smfwEAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_swOT0wt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swOT1At3EeiiCrav3vcpBQ" type="_sm9DEAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, pstrats);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_stFgQQt3EeiiCrav3vcpBQ" name="CompositePaintStrategy" method="_swNsxgt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_stGHUQt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_stGHUgt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_stGHUAt3EeiiCrav3vcpBQ" name="pstrats" type="_smfwEAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_stGHVAt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_stGHUwt3EeiiCrav3vcpBQ" type="_sm9DEAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_suoYYAt3EeiiCrav3vcpBQ" name="CompositePaintStrategy" method="_swOT0At3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_suo_cgt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_suo_cwt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_suo_cAt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_suo_cQt3EeiiCrav3vcpBQ" name="pstrats" type="_smfwEAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_suo_dQt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_suo_dAt3EeiiCrav3vcpBQ" type="_sm9DEAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_sm-4QAt3EeiiCrav3vcpBQ" name="CrashStrategy">
        <ownedComment xmi:id="_swhOxgt3EeiiCrav3vcpBQ">
          <body>This class defines a Crash Strategy which makes the ball
change color when it bounces from the boundaries of the canvas.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_stHVcAt3EeiiCrav3vcpBQ" client="_sm-4QAt3EeiiCrav3vcpBQ" supplier="_snSaQAt3EeiiCrav3vcpBQ" contract="_snSaQAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swOT1Qt3EeiiCrav3vcpBQ" name="updateState" specification="_stHVcQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swOT1gt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swOT1wt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					
					if ((ball.getLoc().x + ball.getRad() + 8 >= ball.getCon().getWidth()) ||
							(ball.getLoc().x - ball.getRad() &lt;= 8) ||
							(ball.getLoc().y + ball.getRad() >= ball.getCon().getHeight() - 8) ||
							(ball.getLoc().y - ball.getRad() &lt;= 8)) {
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_stHVcQt3EeiiCrav3vcpBQ" name="updateState" method="_swOT1Qt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_stH8gAt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_stH8gQt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_snAtcAt3EeiiCrav3vcpBQ" name="EllipsePaintStrategy">
        <ownedComment xmi:id="_swhOxwt3EeiiCrav3vcpBQ">
          <body>This class defines a paint strategy to paint an ellipse shape.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_stJKoAt3EeiiCrav3vcpBQ" general="_snvGMAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swOT2At3EeiiCrav3vcpBQ" name="EllipsePaintStrategy" specification="_snBUgAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swOT2Qt3EeiiCrav3vcpBQ" type="_snAtcAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 4.0/3.0, 2.0/3.0);
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swO64At3EeiiCrav3vcpBQ" name="EllipsePaintStrategy" specification="_suo_dgt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swO64Qt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swO64gt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swO64wt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swO65At3EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swO65Qt3EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swO65gt3EeiiCrav3vcpBQ" type="_snAtcAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, EllipseShapeFactory.Singleton.makeShape(x, y, width, height));
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_snBUgAt3EeiiCrav3vcpBQ" name="EllipsePaintStrategy" method="_swOT2At3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_snBUgQt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_snBUggt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_snBUgwt3EeiiCrav3vcpBQ" type="_snAtcAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_suo_dgt3EeiiCrav3vcpBQ" name="EllipsePaintStrategy" method="_swO64At3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_suqNlAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_suqNlQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_supmgAt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_suqNkAt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_suqNkQt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_suqNkgt3EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_suqNkwt3EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_suqNlgt3EeiiCrav3vcpBQ" type="_snAtcAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_snDJsAt3EeiiCrav3vcpBQ" name="EllipseShapeFactory">
        <ownedComment xmi:id="_swhOyAt3EeiiCrav3vcpBQ">
          <body>This class defines a shape factory to make Ellipses.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_svn24At3EeiiCrav3vcpBQ" name="Singleton" isLeaf="true" isStatic="true" type="_snDJsAt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sw2l8Qt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_svn24Qt3EeiiCrav3vcpBQ" value="new EllipseShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_stK_0Qt3EeiiCrav3vcpBQ" client="_snDJsAt3EeiiCrav3vcpBQ" supplier="_snNhwAt3EeiiCrav3vcpBQ" contract="_snNhwAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swO65wt3EeiiCrav3vcpBQ" name="makeShape" specification="_snDwwAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swO66At3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swO66Qt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swO66gt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swO66wt3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swO67At3EeiiCrav3vcpBQ" type="_stJxsAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>Shape ellipse = new Ellipse2D.Double(x, y, xScale, yScale);
		return ellipse;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_snDwwAt3EeiiCrav3vcpBQ" name="makeShape" method="_swO65wt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_snEX0At3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_snEX0Qt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_snEX0gt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_snEX0wt3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_suqNlwt3EeiiCrav3vcpBQ" type="_stJxsAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_snG0EAt3EeiiCrav3vcpBQ" name="FastStrategy">
        <ownedComment xmi:id="_swhOyQt3EeiiCrav3vcpBQ">
          <body>This class defines a Fast Strategy that makes the ball's velocity increase and stop once it reaches
a pre defined max speed.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_stLm4At3EeiiCrav3vcpBQ" client="_snG0EAt3EeiiCrav3vcpBQ" supplier="_snSaQAt3EeiiCrav3vcpBQ" contract="_snSaQAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swO67Qt3EeiiCrav3vcpBQ" name="updateState" specification="_stLm4Qt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swO67gt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swO67wt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (Math.abs(ball.getVel().x) &lt; 100 &amp;&amp; Math.abs(ball.getVel().y) &lt; 100) {
						if (ball.getItr() % 10 == 0) {
							if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y + 2));
							} else if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y - 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y + 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y - 2));
							}
						}
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_stLm4Qt3EeiiCrav3vcpBQ" name="updateState" method="_swO67Qt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_stLm4gt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_stLm4wt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_snIpQAt3EeiiCrav3vcpBQ" name="IBallCmd" isAbstract="true">
        <ownedOperation xmi:id="_stM1AAt3EeiiCrav3vcpBQ" name="apply" isAbstract="true">
          <ownedParameter xmi:id="_stM1AQt3EeiiCrav3vcpBQ" name="context" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_stM1Agt3EeiiCrav3vcpBQ" name="disp" type="_soJ88At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_snJ3YAt3EeiiCrav3vcpBQ" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_swhOygt3EeiiCrav3vcpBQ">
          <body>This is an interface which defines the functions that the model wants the view to have/do.
@author sn32, kyl3</body>
        </ownedComment>
        <ownedAttribute xmi:id="_snLFgAt3EeiiCrav3vcpBQ" name="canvas" type="_ssnmMAt3EeiiCrav3vcpBQ" isReadOnly="true" association="_swtcAAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_snLFgQt3EeiiCrav3vcpBQ" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_snJ3YAt3EeiiCrav3vcpBQ" isReadOnly="true" association="_swuDEQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_snLFggt3EeiiCrav3vcpBQ" value="new IModel2ViewAdapter() {&#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is an update function that we want the view to have.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public void update() {&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9; &#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is a function that gets the canvas from the view.&#xA;&#x9;&#x9;  * @return A container that is initially null.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public Container getCanvas() {&#xA;&#x9;&#x9;&#x9; return null;&#xA;&#x9;&#x9; }&#xA;&#x9; }"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_snKecAt3EeiiCrav3vcpBQ" name="update">
          <ownedComment xmi:id="_swhOywt3EeiiCrav3vcpBQ">
            <body>This is an update function that we want the view to have.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_snLskAt3EeiiCrav3vcpBQ" name="IPaintStrategy">
        <ownedComment xmi:id="_swh10At3EeiiCrav3vcpBQ">
          <body>This is an interface for an IPaintStrategy that defines the methods we want it to have.
@author sn32, ll45</body>
        </ownedComment>
        <ownedOperation xmi:id="_stNcEAt3EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_stODIAt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_suq0oAt3EeiiCrav3vcpBQ" name="paint">
          <ownedParameter xmi:id="_suq0oQt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_suq0ogt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_snNhwAt3EeiiCrav3vcpBQ" name="IShapeFactory">
        <ownedComment xmi:id="_swh10Qt3EeiiCrav3vcpBQ">
          <body>This interface defines the methods we want a shape factory to have.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_snOI0At3EeiiCrav3vcpBQ" name="makeShape">
          <ownedParameter xmi:id="_snOI0Qt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_snOv4At3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_snOv4Qt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_snOv4gt3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_surbsAt3EeiiCrav3vcpBQ" type="_stJxsAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_snPW8At3EeiiCrav3vcpBQ" name="IStrategyFac">
        <ownedComment xmi:id="_swh10gt3EeiiCrav3vcpBQ">
          <body>This interface defines the functions we want IStrategyFac to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_snQlEAt3EeiiCrav3vcpBQ" name="_errorStrategyFac" type="_snPW8At3EeiiCrav3vcpBQ" association="_swuqIQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_snQlEQt3EeiiCrav3vcpBQ" value="new IStrategyFac(){&#xA;        /**&#xA;         * Make the beeping error strategy&#xA;         * @return  An instance of a beeping error strategy&#xA;         */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;            return new IUpdateStrategy() {&#xA;                private int count = 0; // update counter&#xA;                &#xA;                /**&#xA;                 * Beep the speaker every 25 updates&#xA;                 */&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void updateState(Ball ball, Dispatcher dispatcher) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(25 &lt; count++){&#xA;                        java.awt.Toolkit.getDefaultToolkit().beep(); &#xA;                        count = 0;&#xA;                    }&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;            };&#xA;        }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;}&#xA;    }"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_snRzMAt3EeiiCrav3vcpBQ" name="switcherStrat" type="_snPW8At3EeiiCrav3vcpBQ" association="_swvRMQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_snRzMQt3EeiiCrav3vcpBQ" value="new IStrategyFac() {&#xA;    &#x9;&#x9;/**&#xA;    &#x9;&#x9; * This function makes the switcher strategy.&#xA;    &#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;&#x9;&#x9;&#x9;return new SwitcherStrategy();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_snPW8Qt3EeiiCrav3vcpBQ" name="make">
          <ownedComment xmi:id="_swh10wt3EeiiCrav3vcpBQ">
            <body>This function allows IStrategyFac to make an IUpdateStrategy.
	 * @return An IUpdateStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_stOqMAt3EeiiCrav3vcpBQ" type="_snSaQAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_snP-AAt3EeiiCrav3vcpBQ" name="makePaint">
          <ownedComment xmi:id="_swh11At3EeiiCrav3vcpBQ">
            <body>This function allows IStrategyFac to make an IPaintStrategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_stPRQAt3EeiiCrav3vcpBQ" type="_snLskAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_snSaQAt3EeiiCrav3vcpBQ" name="IUpdateStrategy">
        <ownedComment xmi:id="_swh11Qt3EeiiCrav3vcpBQ">
          <body>This interface defines the functions we want IUpdateStrategies to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedOperation xmi:id="_stPRQQt3EeiiCrav3vcpBQ" name="updateState">
          <ownedParameter xmi:id="_stP4UAt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_stP4UQt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_snToYAt3EeiiCrav3vcpBQ" name="ImagePaintStrategy">
        <ownedComment xmi:id="_swh11gt3EeiiCrav3vcpBQ">
          <body>This class defines a paint strategy for an image that extends APaintStrategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_stVX4At3EeiiCrav3vcpBQ" general="_smfwEAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_svod8At3EeiiCrav3vcpBQ" name="scaleFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_svod8Qt3EeiiCrav3vcpBQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svpFAAt3EeiiCrav3vcpBQ" name="fillFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_svpFAQt3EeiiCrav3vcpBQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svpFAwt3EeiiCrav3vcpBQ" name="localAT" visibility="private" type="_ssr3oAt3EeiiCrav3vcpBQ" association="_sw3NAQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_svpsEAt3EeiiCrav3vcpBQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svqTIAt3EeiiCrav3vcpBQ" name="tempAT" type="_ssr3oAt3EeiiCrav3vcpBQ" association="_sw30EAt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_svqTIQt3EeiiCrav3vcpBQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svqTIgt3EeiiCrav3vcpBQ" name="filename" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svqTIwt3EeiiCrav3vcpBQ" name="image" visibility="private" type="_stRGcQt3EeiiCrav3vcpBQ" association="_sw30Ewt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_svq6MQt3EeiiCrav3vcpBQ" name="imageObs" visibility="private" type="_ssnmMAt3EeiiCrav3vcpBQ" association="_sw4bIQt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swPh8At3EeiiCrav3vcpBQ" name="ImagePaintStrategy" specification="_snVdkAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swPh8Qt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swPh8gt3EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swPh8wt3EeiiCrav3vcpBQ" type="_snToYAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super (new AffineTransform());
		this.fillFactor = fillFactor;
		this.setFilename(filename);
				
		try {
			image =  Toolkit.getDefaultToolkit().getImage(filename);	
			
		} catch (Exception e) {
			System.out.println(&quot;failed&quot;);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swPh9At3EeiiCrav3vcpBQ" name="ImagePaintStrategy" specification="_susp0At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swPh9Qt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swPh9gt3EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swPh9wt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swPh-At3EeiiCrav3vcpBQ" type="_snToYAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.fillFactor = fillFactor;
		this.setFilename(filename);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swQJAAt3EeiiCrav3vcpBQ" name="init" specification="_stUJwAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swQJAQt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>imageObs = ball.getCon();
		MediaTracker mt = new MediaTracker(ball.getCon());
		mt.addImage(image, 1);
		try {
			mt.waitForAll();
		} catch(Exception e){
			System.out.println(&quot;ImagePaintStrategy.init(): Error waiting for image.  Exception = &quot;+e);
		}
		scaleFactor = 2.0/(fillFactor*(image.getWidth(imageObs)+image.getHeight(imageObs))/2.0); // this line is described below
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swQJAgt3EeiiCrav3vcpBQ" name="paintXfrm" specification="_sutQ5At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swQJAwt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swQJBAt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swQJBQt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>localAT.setToScale(scaleFactor, scaleFactor);
		localAT.translate(-image.getWidth(imageObs)/2.0, -image.getHeight(imageObs)/2.0);
		localAT.preConcatenate(at);
		((Graphics2D)g).drawImage(image, localAT, imageObs); 
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swQJBgt3EeiiCrav3vcpBQ" name="setFilename" specification="_snWrsAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swQJBwt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.filename = filename;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_snVdkAt3EeiiCrav3vcpBQ" name="ImagePaintStrategy" method="_swPh8At3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_snVdkwt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_snVdlAt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_swh11wt3EeiiCrav3vcpBQ">
            <body>This is a constructor for the Image Paint Strategy that doesn't take an Affine Transform.
	 * @param filename String that is the path to the image file to load
	 * @param fillFactor A double that is the fill factor</body>
          </ownedComment>
          <ownedParameter xmi:id="_snVdkQt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_snVdkgt3EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_snVdlQt3EeiiCrav3vcpBQ" type="_snToYAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_snWrsAt3EeiiCrav3vcpBQ" name="setFilename" method="_swQJBgt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swh12gt3EeiiCrav3vcpBQ">
            <body>This function sets the filename.
	 * @param filename the filename to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_snWrsQt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_stUJwAt3EeiiCrav3vcpBQ" name="init" method="_swQJAAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swh12Qt3EeiiCrav3vcpBQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_stUw0At3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_susp0At3EeiiCrav3vcpBQ" name="ImagePaintStrategy" method="_swPh9At3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_sutQ4Qt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_sutQ4gt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_swh12At3EeiiCrav3vcpBQ">
            <body>This is a constructor for Image Paint Strategy that takes an Affine Transform.
	 * @param filename String that is the path to the image file to load.
	 * @param fillFactor A double that is the fill factor
	 * @param at An Affine Transform.</body>
          </ownedComment>
          <ownedParameter xmi:id="_susp0Qt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_susp0gt3EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sutQ4At3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_sutQ4wt3EeiiCrav3vcpBQ" type="_snToYAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sutQ5At3EeiiCrav3vcpBQ" name="paintXfrm" method="_swQJAgt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_sut38At3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_sut38Qt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_sut38gt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_snbkMAt3EeiiCrav3vcpBQ" name="MultiPaintStrategy">
        <ownedComment xmi:id="_swh12wt3EeiiCrav3vcpBQ">
          <body>This class defines a multi paint strategy which is the composition of other paint strategies.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_staQYQt3EeiiCrav3vcpBQ" general="_smfwEAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_svsIUAt3EeiiCrav3vcpBQ" name="pstrats" visibility="private" type="_smfwEAt3EeiiCrav3vcpBQ" association="_sw5CMQt3EeiiCrav3vcpBQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_svsIUQt3EeiiCrav3vcpBQ" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swQwEAt3EeiiCrav3vcpBQ" name="MultiPaintStrategy" specification="_stYbMAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swQwEQt3EeiiCrav3vcpBQ" name="pstrats" type="_smfwEAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_swQwEgt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swQwEwt3EeiiCrav3vcpBQ" type="_snbkMAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(new AffineTransform());&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swQwFAt3EeiiCrav3vcpBQ" name="MultiPaintStrategy" specification="_suwUMAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swQwFQt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swQwFgt3EeiiCrav3vcpBQ" name="pstrats" type="_smfwEAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_swQwFwt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swQwGAt3EeiiCrav3vcpBQ" type="_snbkMAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at);&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swQwGQt3EeiiCrav3vcpBQ" name="init" specification="_stZpUAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swQwGgt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
		    strategy.init(ball);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swRXIAt3EeiiCrav3vcpBQ" name="paintXfrm" specification="_suw7Rgt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swRXIQt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swRXIgt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swRXIwt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
			strategy.paintXfrm(g, ball, at);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_stYbMAt3EeiiCrav3vcpBQ" name="MultiPaintStrategy" method="_swQwEAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_stZCQAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_stZCQQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_swic4At3EeiiCrav3vcpBQ">
            <body>This is a constructor that doesn't take in an affine transform.&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_stYbMQt3EeiiCrav3vcpBQ" name="pstrats" type="_smfwEAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_stZCQwt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_stZCQgt3EeiiCrav3vcpBQ" type="_snbkMAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_stZpUAt3EeiiCrav3vcpBQ" name="init" method="_swQwGQt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swic4gt3EeiiCrav3vcpBQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_staQYAt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_suwUMAt3EeiiCrav3vcpBQ" name="MultiPaintStrategy" method="_swQwFAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_suw7Qgt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_suw7Qwt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_swic4Qt3EeiiCrav3vcpBQ">
            <body>This is a constructor that does take in an affine transform.&#xD;
	 * @param at An affine transform&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_suw7QAt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_suw7QQt3EeiiCrav3vcpBQ" name="pstrats" type="_smfwEAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_suw7RQt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_suw7RAt3EeiiCrav3vcpBQ" type="_snbkMAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_suw7Rgt3EeiiCrav3vcpBQ" name="paintXfrm" method="_swRXIAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_suw7Rwt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_suw7SAt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_suxiUAt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_sngcsAt3EeiiCrav3vcpBQ" name="MultiStrategy">
        <ownedComment xmi:id="_swic4wt3EeiiCrav3vcpBQ">
          <body>This class defines a Multi Strategy which defines a movement strategy for a ball
is a combination of 2 other strategies.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_svsvYQt3EeiiCrav3vcpBQ" name="s1" visibility="private" type="_snSaQAt3EeiiCrav3vcpBQ" association="_sw5CNAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_swic5At3EeiiCrav3vcpBQ" name="s2" visibility="private" type="_snSaQAt3EeiiCrav3vcpBQ" association="_sxKH8At3EeiiCrav3vcpBQ"/>
        <interfaceRealization xmi:id="_stcsoAt3EeiiCrav3vcpBQ" client="_sngcsAt3EeiiCrav3vcpBQ" supplier="_snSaQAt3EeiiCrav3vcpBQ" contract="_snSaQAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swRXJAt3EeiiCrav3vcpBQ" name="MultiStrategy" specification="_stdTsAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swRXJQt3EeiiCrav3vcpBQ" name="s1" type="_snSaQAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swRXJgt3EeiiCrav3vcpBQ" name="s2" type="_snSaQAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swRXJwt3EeiiCrav3vcpBQ" type="_sngcsAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.s1 = s1;
		this.s2 = s2;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swRXKAt3EeiiCrav3vcpBQ" name="updateState" specification="_std6wwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swRXKQt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swRXKgt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					s1.updateState(ball, disp);
					s2.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_stdTsAt3EeiiCrav3vcpBQ" name="MultiStrategy" method="_swRXJAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_std6wAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_std6wQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_stdTsQt3EeiiCrav3vcpBQ" name="s1" type="_snSaQAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_stdTsgt3EeiiCrav3vcpBQ" name="s2" type="_snSaQAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_std6wgt3EeiiCrav3vcpBQ" type="_sngcsAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_std6wwt3EeiiCrav3vcpBQ" name="updateState" method="_swRXKAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_steh0At3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_steh0Qt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_snjgAAt3EeiiCrav3vcpBQ" name="PolygonFactory">
        <ownedComment xmi:id="_swjD8gt3EeiiCrav3vcpBQ">
          <body>This class defines a polygon factory, which makes polygons.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_svt9gAt3EeiiCrav3vcpBQ" name="poly" visibility="package" type="_stfv8At3EeiiCrav3vcpBQ" association="_sw5pQQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_svt9gQt3EeiiCrav3vcpBQ" value="new Polygon()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svukkQt3EeiiCrav3vcpBQ" name="at" visibility="package" type="_ssr3oAt3EeiiCrav3vcpBQ" association="_sw6QUQt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_svvLoAt3EeiiCrav3vcpBQ" name="scaleFactor" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_svvLoQt3EeiiCrav3vcpBQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svvysAt3EeiiCrav3vcpBQ" name="pts" visibility="package" type="_ss0agAt3EeiiCrav3vcpBQ" association="_sw6QVAt3EeiiCrav3vcpBQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_svvysQt3EeiiCrav3vcpBQ" value="*"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_stgXAQt3EeiiCrav3vcpBQ" client="_snjgAAt3EeiiCrav3vcpBQ" supplier="_snNhwAt3EeiiCrav3vcpBQ" contract="_snNhwAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swR-MAt3EeiiCrav3vcpBQ" name="PolygonFactory" specification="_suz-kAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swR-MQt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swR-Mgt3EeiiCrav3vcpBQ" name="scaleFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swR-Mwt3EeiiCrav3vcpBQ" name="pts" type="_ss0agAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_swR-NAt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swR-NQt3EeiiCrav3vcpBQ" type="_snjgAAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.at = at;
		this.scaleFactor = scaleFactor;
		this.pts = pts;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swSlQAt3EeiiCrav3vcpBQ" name="makeShape" specification="_snlVMAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swSlQQt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swSlQgt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swSlQwt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swSlRAt3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swSlRQt3EeiiCrav3vcpBQ" type="_stJxsAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>at.setToTranslation(x, y);
		at.scale(xScale*scaleFactor, yScale*scaleFactor);  // optional rotation can be added as well
		return at.createTransformedShape(poly);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_snlVMAt3EeiiCrav3vcpBQ" name="makeShape" method="_swSlQAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_snl8QAt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_snl8QQt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_snl8Qgt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_snl8Qwt3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_su0loQt3EeiiCrav3vcpBQ" type="_stJxsAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_suz-kAt3EeiiCrav3vcpBQ" name="PolygonFactory" method="_swR-MAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_suz-lAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_suz-lQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_suz-kQt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_suz-kgt3EeiiCrav3vcpBQ" name="scaleFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_suz-kwt3EeiiCrav3vcpBQ" name="pts" type="_ss0agAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_su0loAt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_suz-lgt3EeiiCrav3vcpBQ" type="_snjgAAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_sno_kAt3EeiiCrav3vcpBQ" name="RectanglePaintStrategy">
        <ownedComment xmi:id="_swjD8wt3EeiiCrav3vcpBQ">
          <body>This class defines a Rectangle Paint Strategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_stizQAt3EeiiCrav3vcpBQ" general="_snvGMAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swTMUAt3EeiiCrav3vcpBQ" name="RectanglePaintStrategy" specification="_snpmoAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swTMUQt3EeiiCrav3vcpBQ" type="_sno_kAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 3.0, 1.0);
	  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swTMUgt3EeiiCrav3vcpBQ" name="RectanglePaintStrategy" specification="_su1zwAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swTMUwt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swTMVAt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swTMVQt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swTMVgt3EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swTMVwt3EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swTMWAt3EeiiCrav3vcpBQ" type="_sno_kAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, RectangleShapeFactory.Singleton.makeShape(x,y,width,height));
	  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_snpmoAt3EeiiCrav3vcpBQ" name="RectanglePaintStrategy" method="_swTMUAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_snqNsAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_snqNsQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_snqNsgt3EeiiCrav3vcpBQ" type="_sno_kAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_su1zwAt3EeiiCrav3vcpBQ" name="RectanglePaintStrategy" method="_swTMUgt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_su1zxgt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_su1zxwt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_su1zwQt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_su1zwgt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_su1zwwt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_su1zxAt3EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_su1zxQt3EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_su2a0At3EeiiCrav3vcpBQ" type="_sno_kAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_snrb0At3EeiiCrav3vcpBQ" name="RectangleShapeFactory">
        <ownedComment xmi:id="_swjD9At3EeiiCrav3vcpBQ">
          <body>This class defines a factory that makes rectangles.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_svwZwAt3EeiiCrav3vcpBQ" name="Singleton" isLeaf="true" isStatic="true" type="_snrb0At3EeiiCrav3vcpBQ" isReadOnly="true" association="_sw63YQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_svwZwQt3EeiiCrav3vcpBQ" value="new RectangleShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_stkBYAt3EeiiCrav3vcpBQ" client="_snrb0At3EeiiCrav3vcpBQ" supplier="_snNhwAt3EeiiCrav3vcpBQ" contract="_snNhwAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swTzYAt3EeiiCrav3vcpBQ" name="makeShape" specification="_snsp8At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swTzYQt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swTzYgt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swTzYwt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swTzZAt3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swTzZQt3EeiiCrav3vcpBQ" type="_stJxsAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>Shape rec = new Rectangle((int) (x), (int) (y), (int) (xScale), (int) (yScale));
		return rec;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_snsp8At3EeiiCrav3vcpBQ" name="makeShape" method="_swTzYAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_sntRAAt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sntRAQt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sntRAgt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sntRAwt3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_su3B4At3EeiiCrav3vcpBQ" type="_stJxsAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_snvGMAt3EeiiCrav3vcpBQ" name="ShapePaintStrategy">
        <ownedComment xmi:id="_swjrAAt3EeiiCrav3vcpBQ">
          <body>This class defines a shape paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_stmdoAt3EeiiCrav3vcpBQ" general="_smfwEAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_svwZwgt3EeiiCrav3vcpBQ" name="shape" visibility="package" type="_stJxsAt3EeiiCrav3vcpBQ" association="_sw7ecQt3EeiiCrav3vcpBQ"/>
        <interfaceRealization xmi:id="_stkocAt3EeiiCrav3vcpBQ" client="_snvGMAt3EeiiCrav3vcpBQ" supplier="_snNhwAt3EeiiCrav3vcpBQ" contract="_snNhwAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swTzZgt3EeiiCrav3vcpBQ" name="ShapePaintStrategy" specification="_su3o8At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swTzZwt3EeiiCrav3vcpBQ" name="shape" type="_stJxsAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swTzaAt3EeiiCrav3vcpBQ" type="_snvGMAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swTzaQt3EeiiCrav3vcpBQ" name="ShapePaintStrategy" specification="_su4QAAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swTzagt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swTzawt3EeiiCrav3vcpBQ" name="shape" type="_stJxsAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swTzbAt3EeiiCrav3vcpBQ" type="_snvGMAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swUacAt3EeiiCrav3vcpBQ" name="paintXfrm" specification="_su5eIwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swUacQt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swUacgt3EeiiCrav3vcpBQ" name="host" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swUacwt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>((Graphics2D) g).fill(at.createTransformedShape(shape));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swUadAt3EeiiCrav3vcpBQ" name="makeShape" specification="_snw7YAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swUadQt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swUadgt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swUadwt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swUaeAt3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swUaeQt3EeiiCrav3vcpBQ" type="_stJxsAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>at.setToTranslation(x, y);
		at.scale(x * xScale, y * yScale);  // optional rotation can be added as well
		return at.createTransformedShape(shape);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_snw7YAt3EeiiCrav3vcpBQ" name="makeShape" method="_swUadAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_snw7YQt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_snw7Ygt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_snw7Ywt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_snw7ZAt3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_su6FMgt3EeiiCrav3vcpBQ" type="_stJxsAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_su3o8At3EeiiCrav3vcpBQ" name="ShapePaintStrategy" method="_swTzZgt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_su3o8gt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_su3o8wt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_su3o8Qt3EeiiCrav3vcpBQ" name="shape" type="_stJxsAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_su3o9At3EeiiCrav3vcpBQ" type="_snvGMAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_su4QAAt3EeiiCrav3vcpBQ" name="ShapePaintStrategy" method="_swTzaQt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_su5eIAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_su5eIQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_su4QAQt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_su43EAt3EeiiCrav3vcpBQ" name="shape" type="_stJxsAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_su5eIgt3EeiiCrav3vcpBQ" type="_snvGMAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_su5eIwt3EeiiCrav3vcpBQ" name="paintXfrm" method="_swUacAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_su5eJAt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_su6FMAt3EeiiCrav3vcpBQ" name="host" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_su6FMQt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_sn0lwAt3EeiiCrav3vcpBQ" name="SpawnStrategy">
        <ownedComment xmi:id="_swjrAQt3EeiiCrav3vcpBQ">
          <body>This class defines a spawn strategy that interacts with other balls.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_svxn4At3EeiiCrav3vcpBQ" name="count" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_svxn4Qt3EeiiCrav3vcpBQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svyO8At3EeiiCrav3vcpBQ" name="delay" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_svyO8Qt3EeiiCrav3vcpBQ" value="100"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_sto54At3EeiiCrav3vcpBQ" client="_sn0lwAt3EeiiCrav3vcpBQ" supplier="_snSaQAt3EeiiCrav3vcpBQ" contract="_snSaQAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swUaegt3EeiiCrav3vcpBQ" name="updateState" specification="_sto54Qt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swUaewt3EeiiCrav3vcpBQ" name="context" type="_smkokAt3EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_swUafAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_swUafQt3EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_swUafgt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>if (delay &lt; count++) {
			dispatcher.notifyAll(new IBallCmd() {
				/**
				 * This function applies this command to the correct ball using a dispatcher.
				 */
				@Override
				public void apply(Ball other, Dispatcher disp) {
					if (count != 0 &amp;&amp; context != other) {
						if ((context.getRad() + other.getRad()) > 
						    context.getLoc().distance(other.getLoc())) {
							disp.addObserver(new Ball(
									context.getCol(),
									new Point(context.getLoc()), 
									context.getRad(),
									new Point(-context.getVel().x+1,-context.getVel().y+1), 
									context.getCon(), 
									new SpawnStrategy(), 
									context.getPaintStrat()));
							count = 0;
							delay *= 5;
						}
					}
				}
			});
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_sto54Qt3EeiiCrav3vcpBQ" name="updateState" method="_swUaegt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_sto54gt3EeiiCrav3vcpBQ" name="context" type="_smkokAt3EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_stqIAQt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_stqIAgt3EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_stpg8At3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_sn3CAAt3EeiiCrav3vcpBQ" name="SquarePaintStrategy">
        <ownedComment xmi:id="_swjrAgt3EeiiCrav3vcpBQ">
          <body>This is the square paint strategy that paints a square.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_stqvEAt3EeiiCrav3vcpBQ" client="_sn3CAAt3EeiiCrav3vcpBQ" supplier="_snLskAt3EeiiCrav3vcpBQ" contract="_snLskAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swVBgAt3EeiiCrav3vcpBQ" name="paint" specification="_su6sQAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swVBgQt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swVBggt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>int halfSide = ball.getRad();
		g.setColor(ball.getCol());
		g.fillRect(ball.getLoc().x - halfSide, ball.getLoc().y - halfSide, 2 * halfSide, 2 * halfSide);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_strWIAt3EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_strWIQt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_su6sQAt3EeiiCrav3vcpBQ" name="paint" method="_swVBgAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_su6sQQt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_su6sQgt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_sn43MAt3EeiiCrav3vcpBQ" name="StraightStrategy">
        <ownedComment xmi:id="_swjrAwt3EeiiCrav3vcpBQ">
          <body>This class defines a Straight Strategy which defines a movement strategy for a ball that just
moves by changing it's location by its velocity components.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_sttyYAt3EeiiCrav3vcpBQ" client="_sn43MAt3EeiiCrav3vcpBQ" supplier="_snSaQAt3EeiiCrav3vcpBQ" contract="_snSaQAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swVBgwt3EeiiCrav3vcpBQ" name="updateState" specification="_stuZcAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swVBhAt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swVBhQt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_stuZcAt3EeiiCrav3vcpBQ" name="updateState" method="_swVBgwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_stuZcQt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_stuZcgt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_sn6FUAt3EeiiCrav3vcpBQ" name="SwellStrategy">
        <ownedComment xmi:id="_swjrBAt3EeiiCrav3vcpBQ">
          <body>This class defines a Swell Strategy which defines a movement strategy for a ball that grows it
in size, and once it reaches a certain size, it changes colors, and then shrinks slowly and repeats.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_stvnkAt3EeiiCrav3vcpBQ" client="_sn6FUAt3EeiiCrav3vcpBQ" supplier="_snSaQAt3EeiiCrav3vcpBQ" contract="_snSaQAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swVBhgt3EeiiCrav3vcpBQ" name="updateState" specification="_stvnkQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swVBhwt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swVBiAt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getRad() >= 80) {
						ball.setRadDelta(1);
						ball.setRadDelta(ball.getRadDelta() * -1);
						ball.setCol(rzr.randomColor());
					} else if (ball.getRad() &lt;= 20) {
						ball.setRadDelta(-5);
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_stvnkQt3EeiiCrav3vcpBQ" name="updateState" method="_swVBhgt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_stwOoAt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_stwOoQt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_sn76gAt3EeiiCrav3vcpBQ" name="SwitcherStrategy">
        <ownedComment xmi:id="_swjrBQt3EeiiCrav3vcpBQ">
          <body>This class defines a Switcher Strategy which defines a strategy for a ball that can
change by updating the strategy.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_svy2AAt3EeiiCrav3vcpBQ" name="strategy" visibility="private" isStatic="true" type="_snSaQAt3EeiiCrav3vcpBQ" association="_sw8FgQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_svy2AQt3EeiiCrav3vcpBQ" value="new StraightStrategy()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_stxcwAt3EeiiCrav3vcpBQ" client="_sn76gAt3EeiiCrav3vcpBQ" supplier="_snSaQAt3EeiiCrav3vcpBQ" contract="_snSaQAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swVokAt3EeiiCrav3vcpBQ" name="updateState" specification="_styD0At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swVokQt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swVokgt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					strategy.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swVokwt3EeiiCrav3vcpBQ" name="setStrat" specification="_styq4gt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swVolAt3EeiiCrav3vcpBQ" name="strat" type="_snSaQAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>SwitcherStrategy.strategy = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swWPoAt3EeiiCrav3vcpBQ" name="getStrat" specification="_sn8hkAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swWPoQt3EeiiCrav3vcpBQ" type="_snSaQAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return SwitcherStrategy.strategy;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_sn8hkAt3EeiiCrav3vcpBQ" name="getStrat" isStatic="true" method="_swWPoAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swjrBwt3EeiiCrav3vcpBQ">
            <body>This function returns the current strategy of the switcher balls.
	 * @return An IUpdateStrategy which is the current strategy of the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_stzR8At3EeiiCrav3vcpBQ" type="_snSaQAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_styD0At3EeiiCrav3vcpBQ" name="updateState" method="_swVokAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_styD0Qt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_styD0gt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_styq4gt3EeiiCrav3vcpBQ" name="setStrat" isStatic="true" method="_swVokwt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swjrBgt3EeiiCrav3vcpBQ">
            <body>This function changes the strategy of all switcher balls to that of the parameter.
	 * @param strat An IUpdateStrategy which is the new strategy for all the balls to use</body>
          </ownedComment>
          <ownedParameter xmi:id="_styq4wt3EeiiCrav3vcpBQ" name="strat" type="_snSaQAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_sn-90At3EeiiCrav3vcpBQ" name="TeleportStrategy">
        <ownedComment xmi:id="_swjrCAt3EeiiCrav3vcpBQ">
          <body>This class defines a Teleport Strategy which defines a movement strategy for a ball that randomly
changes the location of it, so it teleports.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_stz5AAt3EeiiCrav3vcpBQ" client="_sn-90At3EeiiCrav3vcpBQ" supplier="_snSaQAt3EeiiCrav3vcpBQ" contract="_snSaQAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swWPogt3EeiiCrav3vcpBQ" name="updateState" specification="_stz5AQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swWPowt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swWPpAt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % 80 == 0) {
						ball.setLoc(rzr.randomLoc(new Rectangle(ball.getCon().getWidth() - ball.getRad(), ball.getCon().getHeight() - ball.getRad())));
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_stz5AQt3EeiiCrav3vcpBQ" name="updateState" method="_swWPogt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_stz5Agt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_stz5Awt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_soAL8At3EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy">
        <ownedComment xmi:id="_swjrCQt3EeiiCrav3vcpBQ">
          <body>This classd defines an upright composite paint strategy.
@author sn32, ll45
 *</body>
        </ownedComment>
        <generalization xmi:id="_st2VQAt3EeiiCrav3vcpBQ" general="_sm9DEAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swWPpQt3EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" specification="_st1HIQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swWPpgt3EeiiCrav3vcpBQ" name="pstrats" type="_smfwEAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_swWPpwt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swWPqAt3EeiiCrav3vcpBQ" type="_soAL8At3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swWPqQt3EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" specification="_su8hcAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swWPqgt3EeiiCrav3vcpBQ" name="pstrats" type="_smfwEAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_swWPqwt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swWPrAt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swWPrQt3EeiiCrav3vcpBQ" type="_soAL8At3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swW2sAt3EeiiCrav3vcpBQ" name="paintCfg" specification="_su9IgQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swW2sQt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swW2sgt3EeiiCrav3vcpBQ" name="host" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>super.paintCfg(g, host);
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {
			at.scale(1.0, -1.0);
		}        
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_st1HIQt3EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" method="_swWPpQt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_st1uMAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_st1uMQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_st1HIgt3EeiiCrav3vcpBQ" name="pstrats" type="_smfwEAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_st1uMwt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_st1uMgt3EeiiCrav3vcpBQ" type="_soAL8At3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_su8hcAt3EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" method="_swWPqQt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_su8hcwt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_su8hdAt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_su8hcQt3EeiiCrav3vcpBQ" name="pstrats" type="_smfwEAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_su9IgAt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_su8hcgt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_su8hdQt3EeiiCrav3vcpBQ" type="_soAL8At3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_su9IgQt3EeiiCrav3vcpBQ" name="paintCfg" visibility="protected" method="_swW2sAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_su9Iggt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_su9Igwt3EeiiCrav3vcpBQ" name="host" type="_smkokAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_soD2UAt3EeiiCrav3vcpBQ" name="UprightImageStrategy">
        <ownedComment xmi:id="_swkSEAt3EeiiCrav3vcpBQ">
          <body>This class defines an upright image.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_st28UAt3EeiiCrav3vcpBQ" general="_snToYAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swW2swt3EeiiCrav3vcpBQ" name="UprightImageStrategy" specification="_soEdYAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swW2tAt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swW2tQt3EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swW2tgt3EeiiCrav3vcpBQ" type="_soD2UAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swW2twt3EeiiCrav3vcpBQ" name="UprightImageStrategy" specification="_su-WoAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swW2uAt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swW2uQt3EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swW2ugt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swW2uwt3EeiiCrav3vcpBQ" type="_soD2UAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor, at);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swW2vAt3EeiiCrav3vcpBQ" name="paintCfg" specification="_su-9sAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swW2vQt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swW2vgt3EeiiCrav3vcpBQ" name="host" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>super.paintCfg(g, host);&#xD;
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {&#xD;
			at.scale(1.0, -1.0);&#xD;
		}       &#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_soEdYAt3EeiiCrav3vcpBQ" name="UprightImageStrategy" method="_swW2swt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_soEdYwt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_soEdZAt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_soEdYQt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_soEdYgt3EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_soEdZQt3EeiiCrav3vcpBQ" type="_soD2UAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_su-WoAt3EeiiCrav3vcpBQ" name="UprightImageStrategy" method="_swW2twt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_su-WpAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_su-WpQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_su-WoQt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_su-Wogt3EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_su-Wowt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_su-Wpgt3EeiiCrav3vcpBQ" type="_soD2UAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_su-9sAt3EeiiCrav3vcpBQ" name="paintCfg" visibility="protected" method="_swW2vAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_su-9sQt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_su-9sgt3EeiiCrav3vcpBQ" name="host" type="_smkokAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_soGSkAt3EeiiCrav3vcpBQ" name="UprightShapePaintStrategy">
        <ownedComment xmi:id="_swkSEQt3EeiiCrav3vcpBQ">
          <body>This class defines an upright shape paint strategy.
@author sn32, ll45
 *</body>
        </ownedComment>
        <generalization xmi:id="_st4KcAt3EeiiCrav3vcpBQ" general="_snvGMAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swXdwAt3EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" specification="_svAL0At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swXdwQt3EeiiCrav3vcpBQ" name="shape" type="_stJxsAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swXdwgt3EeiiCrav3vcpBQ" type="_soGSkAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(shape);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swXdwwt3EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" specification="_svAy5At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swXdxAt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swXdxQt3EeiiCrav3vcpBQ" name="shape" type="_stJxsAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swXdxgt3EeiiCrav3vcpBQ" type="_soGSkAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, shape);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_svAL0At3EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" method="_swXdwAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_svAy4Qt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_svAy4gt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_svAy4At3EeiiCrav3vcpBQ" name="shape" type="_stJxsAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svAy4wt3EeiiCrav3vcpBQ" type="_soGSkAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svAy5At3EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" method="_swXdwwt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_svBZ8Qt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_svBZ8gt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_svAy5Qt3EeiiCrav3vcpBQ" name="at" type="_ssr3oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svBZ8At3EeiiCrav3vcpBQ" name="shape" type="_stJxsAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svBZ8wt3EeiiCrav3vcpBQ" type="_soGSkAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_soIu0At3EeiiCrav3vcpBQ" name="WiggleStrategy">
        <ownedComment xmi:id="_swkSEgt3EeiiCrav3vcpBQ">
          <body>This class defines a Wiggle Strategy which defines a movement strategy for a ball that randomly
changes the velocity direction, so it wiggles.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_st5YkAt3EeiiCrav3vcpBQ" client="_soIu0At3EeiiCrav3vcpBQ" supplier="_snSaQAt3EeiiCrav3vcpBQ" contract="_snSaQAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swXdxwt3EeiiCrav3vcpBQ" name="updateState" specification="_st5YkQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swXdyAt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swXdyQt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % rzr.randomInt(2,  100) == 0) {
						ball.setVel(new Point(ball.getVel().x, ball.getVel().y * -1));
					} else if (ball.getItr() % rzr.randomInt(2, 100) == 0){
						ball.setVel(new Point(ball.getVel().x * -1, ball.getVel().y));
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_st5YkQt3EeiiCrav3vcpBQ" name="updateState" method="_swXdxwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_st5Ykgt3EeiiCrav3vcpBQ" name="ball" type="_smkokAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_st5_oAt3EeiiCrav3vcpBQ" name="dispatcher" type="_soJ88At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sweLcwt3EeiiCrav3vcpBQ" name="" memberEnd="_svhJMAt3EeiiCrav3vcpBQ _sweLdAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sweLdAt3EeiiCrav3vcpBQ" name="" type="_smkokAt3EeiiCrav3vcpBQ" association="_sweLcwt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sweygAt3EeiiCrav3vcpBQ" name="" memberEnd="_svhwQAt3EeiiCrav3vcpBQ _sweygQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sweygQt3EeiiCrav3vcpBQ" name="" type="_smkokAt3EeiiCrav3vcpBQ" association="_sweygAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sweyggt3EeiiCrav3vcpBQ" name="" memberEnd="_sviXUQt3EeiiCrav3vcpBQ _sweygwt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sweygwt3EeiiCrav3vcpBQ" name="" type="_smkokAt3EeiiCrav3vcpBQ" association="_sweyggt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_swfZkAt3EeiiCrav3vcpBQ" name="" memberEnd="_sviXUgt3EeiiCrav3vcpBQ _swfZkQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_swfZkQt3EeiiCrav3vcpBQ" name="" type="_smkokAt3EeiiCrav3vcpBQ" association="_swfZkAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_swtcAAt3EeiiCrav3vcpBQ" name="" memberEnd="_swtcAQt3EeiiCrav3vcpBQ _snLFgAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_swtcAQt3EeiiCrav3vcpBQ" name="" type="_snJ3YAt3EeiiCrav3vcpBQ" association="_swtcAAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_swuDEQt3EeiiCrav3vcpBQ" name="" memberEnd="_swuDEgt3EeiiCrav3vcpBQ _snLFgQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_swuDEgt3EeiiCrav3vcpBQ" name="" type="_snJ3YAt3EeiiCrav3vcpBQ" association="_swuDEQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_swuqIQt3EeiiCrav3vcpBQ" name="" memberEnd="_swuqIgt3EeiiCrav3vcpBQ _snQlEAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_swuqIgt3EeiiCrav3vcpBQ" name="" type="_snPW8At3EeiiCrav3vcpBQ" association="_swuqIQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_swvRMQt3EeiiCrav3vcpBQ" name="" memberEnd="_swvRMgt3EeiiCrav3vcpBQ _snRzMAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_swvRMgt3EeiiCrav3vcpBQ" name="" type="_snPW8At3EeiiCrav3vcpBQ" association="_swvRMQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_swyUgQt3EeiiCrav3vcpBQ" name="" memberEnd="_swyUggt3EeiiCrav3vcpBQ _sves8Qt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_swyUggt3EeiiCrav3vcpBQ" name="" type="_sma3kAt3EeiiCrav3vcpBQ" association="_swyUgQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_swy7kAt3EeiiCrav3vcpBQ" name="" memberEnd="_swy7kQt3EeiiCrav3vcpBQ _svf7EAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_swy7kQt3EeiiCrav3vcpBQ" name="" type="_smfwEAt3EeiiCrav3vcpBQ" association="_swy7kAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_swzioAt3EeiiCrav3vcpBQ" name="" memberEnd="_swzioQt3EeiiCrav3vcpBQ _svi-YAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_swzioQt3EeiiCrav3vcpBQ" name="" type="_smkokAt3EeiiCrav3vcpBQ" association="_swzioAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_swziowt3EeiiCrav3vcpBQ" name="" memberEnd="_swzipAt3EeiiCrav3vcpBQ _svi-Ygt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_swzipAt3EeiiCrav3vcpBQ" name="" type="_smkokAt3EeiiCrav3vcpBQ" association="_swziowt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw0JsQt3EeiiCrav3vcpBQ" name="" memberEnd="_sw0Jsgt3EeiiCrav3vcpBQ _svkzkAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw0Jsgt3EeiiCrav3vcpBQ" name="" type="_smw10At3EeiiCrav3vcpBQ" association="_sw0JsQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw0wwQt3EeiiCrav3vcpBQ" name="" memberEnd="_sw0wwgt3EeiiCrav3vcpBQ _svmBsQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw0wwgt3EeiiCrav3vcpBQ" name="" type="_smw10At3EeiiCrav3vcpBQ" association="_sw0wwQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw1X0Qt3EeiiCrav3vcpBQ" name="" memberEnd="_sw1X0gt3EeiiCrav3vcpBQ _svmowAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw1X0gt3EeiiCrav3vcpBQ" name="" type="_smw10At3EeiiCrav3vcpBQ" association="_sw1X0Qt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw2l8Qt3EeiiCrav3vcpBQ" name="" memberEnd="_sw2l8gt3EeiiCrav3vcpBQ _svn24At3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw2l8gt3EeiiCrav3vcpBQ" name="" type="_snDJsAt3EeiiCrav3vcpBQ" association="_sw2l8Qt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw3NAQt3EeiiCrav3vcpBQ" name="" memberEnd="_sw3NAgt3EeiiCrav3vcpBQ _svpFAwt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw3NAgt3EeiiCrav3vcpBQ" name="" type="_snToYAt3EeiiCrav3vcpBQ" association="_sw3NAQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw30EAt3EeiiCrav3vcpBQ" name="" memberEnd="_sw30EQt3EeiiCrav3vcpBQ _svqTIAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw30EQt3EeiiCrav3vcpBQ" name="" type="_snToYAt3EeiiCrav3vcpBQ" association="_sw30EAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw30Ewt3EeiiCrav3vcpBQ" name="" memberEnd="_sw30FAt3EeiiCrav3vcpBQ _svqTIwt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw30FAt3EeiiCrav3vcpBQ" name="" type="_snToYAt3EeiiCrav3vcpBQ" association="_sw30Ewt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw4bIQt3EeiiCrav3vcpBQ" name="" memberEnd="_sw4bIgt3EeiiCrav3vcpBQ _svq6MQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw4bIgt3EeiiCrav3vcpBQ" name="" type="_snToYAt3EeiiCrav3vcpBQ" association="_sw4bIQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw5CMQt3EeiiCrav3vcpBQ" name="" memberEnd="_sw5CMgt3EeiiCrav3vcpBQ _svsIUAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw5CMgt3EeiiCrav3vcpBQ" name="" type="_snbkMAt3EeiiCrav3vcpBQ" association="_sw5CMQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw5CNAt3EeiiCrav3vcpBQ" name="" memberEnd="_sw5CNQt3EeiiCrav3vcpBQ _svsvYQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw5CNQt3EeiiCrav3vcpBQ" name="" type="_sngcsAt3EeiiCrav3vcpBQ" association="_sw5CNAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw5pQQt3EeiiCrav3vcpBQ" name="" memberEnd="_sw5pQgt3EeiiCrav3vcpBQ _svt9gAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw5pQgt3EeiiCrav3vcpBQ" name="" type="_snjgAAt3EeiiCrav3vcpBQ" association="_sw5pQQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw6QUQt3EeiiCrav3vcpBQ" name="" memberEnd="_sw6QUgt3EeiiCrav3vcpBQ _svukkQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw6QUgt3EeiiCrav3vcpBQ" name="" type="_snjgAAt3EeiiCrav3vcpBQ" association="_sw6QUQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw6QVAt3EeiiCrav3vcpBQ" name="" memberEnd="_sw6QVQt3EeiiCrav3vcpBQ _svvysAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw6QVQt3EeiiCrav3vcpBQ" name="" type="_snjgAAt3EeiiCrav3vcpBQ" association="_sw6QVAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw63YQt3EeiiCrav3vcpBQ" name="" memberEnd="_sw63Ygt3EeiiCrav3vcpBQ _svwZwAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw63Ygt3EeiiCrav3vcpBQ" name="" type="_snrb0At3EeiiCrav3vcpBQ" association="_sw63YQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw7ecQt3EeiiCrav3vcpBQ" name="" memberEnd="_sw7ecgt3EeiiCrav3vcpBQ _svwZwgt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw7ecgt3EeiiCrav3vcpBQ" name="" type="_snvGMAt3EeiiCrav3vcpBQ" association="_sw7ecQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw8FgQt3EeiiCrav3vcpBQ" name="" memberEnd="_sw8Fggt3EeiiCrav3vcpBQ _svy2AAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw8Fggt3EeiiCrav3vcpBQ" name="" type="_sn76gAt3EeiiCrav3vcpBQ" association="_sw8FgQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sxKH8At3EeiiCrav3vcpBQ" name="" memberEnd="_sxKH8Qt3EeiiCrav3vcpBQ _swic5At3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sxKH8Qt3EeiiCrav3vcpBQ" name="" type="_sngcsAt3EeiiCrav3vcpBQ" association="_sxKH8At3EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_sih2EAt3EeiiCrav3vcpBQ" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_sode8At3EeiiCrav3vcpBQ" name="BallWorldView">
        <ownedComment xmi:id="_swk5JQt3EeiiCrav3vcpBQ">
          <body>This is the BallWorldView class, which has the frame on which our BallWorld is displayed.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <generalization xmi:id="_svRRkQt3EeiiCrav3vcpBQ" general="_suAGQQt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_sv3HcAt3EeiiCrav3vcpBQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_sv3HcQt3EeiiCrav3vcpBQ" value="-7114823923004621639L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sv3Hcgt3EeiiCrav3vcpBQ" name="contentPane" visibility="private" type="_suAtUQt3EeiiCrav3vcpBQ" association="_sw8slAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_sv3ugQt3EeiiCrav3vcpBQ" name="pnlControl" visibility="private" isLeaf="true" type="_suAtUQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sw9Togt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_sv3uggt3EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sv4VkQt3EeiiCrav3vcpBQ" name="tfClassname" visibility="private" isLeaf="true" type="_suBUYQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sw96sQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_sv4Vkgt3EeiiCrav3vcpBQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sv48oQt3EeiiCrav3vcpBQ" name="btnClearBalls" visibility="private" isLeaf="true" type="_suB7cQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sw-hwQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_sv48ogt3EeiiCrav3vcpBQ" value="new JButton(&quot;Clear balls&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sv5jsAt3EeiiCrav3vcpBQ" name="adapter" visibility="private" type="_sooeEAt3EeiiCrav3vcpBQ" association="_sw_I0Qt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_sv6KwQt3EeiiCrav3vcpBQ" name="pnlCanvas" visibility="private" isLeaf="true" type="_suAtUQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sw_v4Qt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_sv6Kwgt3EeiiCrav3vcpBQ" value="new JPanel() {&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * This is a private variable that gives the class an ID to serialize and deserialize.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;private static final long serialVersionUID = 8303517520311377718L;&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Overridden paintComponent method to paint a shape in the panel.&#xA;&#x9;&#x9; * @param g The Graphics object to paint on.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public void paintComponent(Graphics g) {&#xA;&#x9;&#x9;&#x9;super.paintComponent(g); // Do everything normally done first, e.g. clear the screen.&#xA;&#x9;&#x9;&#x9;adapter.paintBalls(g);&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sv6x0Qt3EeiiCrav3vcpBQ" name="btnAddToList" visibility="private" isLeaf="true" type="_suB7cQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sxAW8Qt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_sv6x0gt3EeiiCrav3vcpBQ" value="new JButton(&quot;Add to list&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sv7Y4At3EeiiCrav3vcpBQ" name="btnCombine" visibility="private" isLeaf="true" type="_suB7cQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sxA-AQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_sv7Y4Qt3EeiiCrav3vcpBQ" value="new JButton(&quot;Combine&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sv7_8At3EeiiCrav3vcpBQ" name="btnMakeSelectedBall" visibility="private" isLeaf="true" type="_suB7cQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sxBlEQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_sv7_8Qt3EeiiCrav3vcpBQ" value="new JButton(&quot;Make selected ball&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sv7_8wt3EeiiCrav3vcpBQ" name="btnMakeSwitcher" visibility="private" isLeaf="true" type="_suB7cQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sxCMIQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_sv8nAAt3EeiiCrav3vcpBQ" value="new JButton(&quot;Make switcher&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sv8nAgt3EeiiCrav3vcpBQ" name="btnSwitch" visibility="private" isLeaf="true" type="_suB7cQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sxCzMQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_sv8nAwt3EeiiCrav3vcpBQ" value="new JButton(&quot;Switch&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sv9OEQt3EeiiCrav3vcpBQ" name="comBoxTop" visibility="private" type="_suDwogt3EeiiCrav3vcpBQ" association="_sxEBUAt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_sv91IQt3EeiiCrav3vcpBQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sv-cMQt3EeiiCrav3vcpBQ" name="comBoxBottom" visibility="private" type="_suDwogt3EeiiCrav3vcpBQ" association="_sxEoYAt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_sv_DQQt3EeiiCrav3vcpBQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sv_qUQt3EeiiCrav3vcpBQ" name="pnlChangeList" visibility="private" isLeaf="true" type="_suAtUQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sxFPcAt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_sv_qUgt3EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swARYAt3EeiiCrav3vcpBQ" name="pnlDropDowns" visibility="private" isLeaf="true" type="_suAtUQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sxF2gAt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_swARYQt3EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swARYwt3EeiiCrav3vcpBQ" name="pnlSwitching" visibility="private" isLeaf="true" type="_suAtUQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sxGdkQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_swA4cAt3EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swA4cgt3EeiiCrav3vcpBQ" name="pnlPaintStrats" visibility="private" isLeaf="true" type="_suAtUQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sxHEoQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_swA4cwt3EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swBfgQt3EeiiCrav3vcpBQ" name="btnAddPaintStrat" visibility="private" isLeaf="true" type="_suB7cQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sxHrsQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_swBfggt3EeiiCrav3vcpBQ" value="new JButton(&quot;Add&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swCGkAt3EeiiCrav3vcpBQ" name="txtPaintStrat" visibility="private" isLeaf="true" type="_suBUYQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sxISwQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_swCGkQt3EeiiCrav3vcpBQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swCGkwt3EeiiCrav3vcpBQ" name="comBoxStrats" visibility="private" isLeaf="true" type="_suDwogt3EeiiCrav3vcpBQ" isReadOnly="true" association="_sxJg4At3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_swCtoQt3EeiiCrav3vcpBQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swahEAt3EeiiCrav3vcpBQ" name="getPanel" specification="_sohJUAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swahEQt3EeiiCrav3vcpBQ" type="_suAtUQt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return pnlCanvas;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swahEgt3EeiiCrav3vcpBQ" name="BallWorldView" specification="_suHbAAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swahEwt3EeiiCrav3vcpBQ" name="adapter" type="_sooeEAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swahFAt3EeiiCrav3vcpBQ" type="_sode8At3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>txtPaintStrat.setToolTipText(&quot;This is the text field where you can add paint strategies.&quot;);
		pnlPaintStrats.setToolTipText(&quot;This is the panel that holds the components that let you add paint strategies and select them.&quot;);
		pnlPaintStrats.add(txtPaintStrat);
		txtPaintStrat.setColumns(10);
		this.adapter = adapter;
		initGUI();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swahFQt3EeiiCrav3vcpBQ" name="updateView" specification="_sohwYAt3EeiiCrav3vcpBQ">
          <language>java</language>
          <body>repaint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swahFgt3EeiiCrav3vcpBQ" name="getCanvas" specification="_soiXcAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swahFwt3EeiiCrav3vcpBQ" type="_ssnmMAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return getPanel();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swahGAt3EeiiCrav3vcpBQ" name="initGUI" specification="_soiXcQt3EeiiCrav3vcpBQ">
          <language>java</language>
          <body>setTitle(&quot;BallWorld&quot;);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setToolTipText(&quot;This is the content of the frame.&quot;);
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		pnlControl.setBackground(Color.DARK_GRAY);
		pnlControl.setToolTipText(&quot;This is the control panel that lets you create balls and clear them.&quot;);
		
		contentPane.add(pnlControl, BorderLayout.NORTH);
		pnlControl.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		pnlChangeList.setToolTipText(&quot;This panel is where you can add the type of ball you want to make to the drop down lists.&quot;);
		
		pnlControl.add(pnlChangeList);
		pnlChangeList.setLayout(new GridLayout(0, 1, 0, 0));
		
		pnlChangeList.add(tfClassname);
		tfClassname.setToolTipText(&quot;The type of the ball you want to make.&quot;);
		
		tfClassname.setColumns(10);
		btnAddToList.setToolTipText(&quot;This button adds the strategy type in the text field to the drop down boxes.&quot;);
		pnlChangeList.add(btnAddToList);
		btnAddToList.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (tfClassname.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem stratFac = adapter.addStrategy(tfClassname.getText());

             comBoxTop.insertItemAt(stratFac, 0);
             comBoxBottom.insertItemAt(stratFac, 0);
			}
		});
		pnlDropDowns.setToolTipText(&quot;This panel is for the drop down boxes, and buttons to make selected balls and combine strategies.&quot;);
		
		pnlControl.add(pnlDropDowns);
		pnlDropDowns.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSelectedBall.setToolTipText(&quot;This button makes a ball with the update strategy of the factory that's selected on the top drop down box.&quot;);
		pnlDropDowns.add(btnMakeSelectedBall);
		comBoxTop.setToolTipText(&quot;This is the drop down list on the top.&quot;);
		pnlDropDowns.add(comBoxTop);
		comBoxBottom.setToolTipText(&quot;This is the drop down list on the bottom.&quot;);
		pnlDropDowns.add(comBoxBottom);
		btnCombine.setToolTipText(&quot;This button combines the two strategy factories in the combo boxes.&quot;);
		pnlDropDowns.add(btnCombine);
		btnCombine.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem top = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem bottom = comBoxBottom.getItemAt(comBoxBottom.getSelectedIndex());
				
				if (top == null || bottom == null) {
					return;
				}
				
				TDropListItem combo = adapter.combineStrategies(top, bottom);
				comBoxTop.addItem(combo);
				comBoxBottom.addItem(combo);
			}
		});
		btnMakeSelectedBall.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem selected = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem paintFac = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (selected == null || paintFac == null) {
					return;
				}
				
				adapter.makeBall(selected, paintFac);
			}
		});
		pnlSwitching.setToolTipText(&quot;This panel is for the buttons related to making switcher balls and switching their strategies.&quot;);
		
		pnlControl.add(pnlSwitching);
		pnlSwitching.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSwitcher.setToolTipText(&quot;Click this item to make a switcher ball.&quot;);
		pnlSwitching.add(btnMakeSwitcher);
		btnSwitch.setToolTipText(&quot;Click this button to switch the switcher balls to the selected item in the top combo box.&quot;);
		pnlSwitching.add(btnSwitch);
		
		btnSwitch.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switchFac = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				
				if (switchFac == null) {
					return;
				}
				
				adapter.setSwitcherStrategy(switchFac);
			}
		});
		
		btnMakeSwitcher.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switcherStrat = adapter.getSwitcherFac();
				TDropListItem paintStrat = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (paintStrat == null) {
					return;
				}
				
				adapter.makeBall(switcherStrat, paintStrat);
			}
		});
		btnClearBalls.setToolTipText(&quot;Click this to clear the balls on the canvas.&quot;);
		btnClearBalls.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				adapter.clearBalls();
			}
		});
		
		pnlControl.add(btnClearBalls);
		
		pnlControl.add(pnlPaintStrats);
		pnlPaintStrats.setLayout(new GridLayout(0, 1, 0, 0));
		btnAddPaintStrat.setToolTipText(&quot;This is the button that lets you add paint strategies to the combo box below.&quot;);
		btnAddPaintStrat.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (txtPaintStrat.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem paintFac = adapter.addPaintFactory(txtPaintStrat.getText());
             comBoxStrats.insertItemAt(paintFac, 0);
			}
		});
		
		
		pnlPaintStrats.add(btnAddPaintStrat);
		comBoxStrats.setToolTipText(&quot;The is the combo box for the paint strategies that can be implemented.&quot;);
		
		pnlPaintStrats.add(comBoxStrats);
		pnlCanvas.setBackground(Color.LIGHT_GRAY);
		pnlCanvas.setToolTipText(&quot;This is the canvas where the balls move, and stay in.&quot;);
		
		contentPane.add(pnlCanvas, BorderLayout.CENTER);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swahGQt3EeiiCrav3vcpBQ" name="start" specification="_soiXcgt3EeiiCrav3vcpBQ">
          <language>java</language>
          <body>setExtendedState(JFrame.MAXIMIZED_BOTH);
		setVisible(true);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_sohJUAt3EeiiCrav3vcpBQ" name="getPanel" method="_swahEAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swk5Jgt3EeiiCrav3vcpBQ">
            <body>This gets the canvas of the frame.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_svQqgAt3EeiiCrav3vcpBQ" type="_suAtUQt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sohwYAt3EeiiCrav3vcpBQ" name="updateView" method="_swahFQt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swk5KAt3EeiiCrav3vcpBQ">
            <body>Update the view by repainting</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_soiXcAt3EeiiCrav3vcpBQ" name="getCanvas" method="_swahFgt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swk5KQt3EeiiCrav3vcpBQ">
            <body>This function returns the canvas panel.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_svRRkAt3EeiiCrav3vcpBQ" type="_ssnmMAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_soiXcQt3EeiiCrav3vcpBQ" name="initGUI" visibility="private" method="_swahGAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swk5Kgt3EeiiCrav3vcpBQ">
            <body>This private function initializes the GUI.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_soiXcgt3EeiiCrav3vcpBQ" name="start" method="_swahGQt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swlgMAt3EeiiCrav3vcpBQ">
            <body>This function makes the frame visible after initializing it.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_suHbAAt3EeiiCrav3vcpBQ" name="BallWorldView" method="_swahEgt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_suICEQt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_suICEgt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_swk5Jwt3EeiiCrav3vcpBQ">
            <body>Create the frame
	 * @param adapter An IView2ModelAdapter</body>
          </ownedComment>
          <ownedParameter xmi:id="_suICEAt3EeiiCrav3vcpBQ" name="adapter" type="_sooeEAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_suICEwt3EeiiCrav3vcpBQ" type="_sode8At3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_sooeEAt3EeiiCrav3vcpBQ" name="IView2ModelAdapter">
        <ownedComment xmi:id="_swlgMQt3EeiiCrav3vcpBQ">
          <body>This is an interface which has the functions that the view wants the model to have.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_soq6UAt3EeiiCrav3vcpBQ" name="switcherFac" type="_svUU4At3EeiiCrav3vcpBQ" isReadOnly="true" association="_swwfUQt3EeiiCrav3vcpBQ"/>
        <ownedOperation xmi:id="_sopsMAt3EeiiCrav3vcpBQ" name="clearBalls">
          <ownedComment xmi:id="_swlgMgt3EeiiCrav3vcpBQ">
            <body>This is a function that will tell the model to clear the balls.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_sopsMQt3EeiiCrav3vcpBQ" name="addStrategy">
          <ownedComment xmi:id="_swlgNAt3EeiiCrav3vcpBQ">
            <body>This function will take the given short strategy name and return a corresponding
     * something to put onto both drop lists.
     * @param classname The shortened class name of the desired strategy
     * @return Something to put onto both the drop lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_soqTQAt3EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svU78Qt3EeiiCrav3vcpBQ" type="_svUU4At3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sorhYAt3EeiiCrav3vcpBQ" name="addPaintFactory">
          <ownedParameter xmi:id="_sorhYQt3EeiiCrav3vcpBQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svXYMAt3EeiiCrav3vcpBQ" type="_svUU4At3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svTt0At3EeiiCrav3vcpBQ" name="paintBalls">
          <ownedComment xmi:id="_swlgMwt3EeiiCrav3vcpBQ">
            <body>This is a function that will tell the model to paint the balls.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_svTt0Qt3EeiiCrav3vcpBQ" name="g" type="_ssqCcQt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svU78gt3EeiiCrav3vcpBQ" name="makeBall">
          <ownedComment xmi:id="_swlgNQt3EeiiCrav3vcpBQ">
            <body>This function will make a ball with the selected short strategy name.
     * @param selectedItem A shorten class name for the desired strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_svVjAAt3EeiiCrav3vcpBQ" name="selectedItem" type="_svUU4At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svVjAQt3EeiiCrav3vcpBQ" name="paintStrat" type="_svUU4At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svWKEAt3EeiiCrav3vcpBQ" name="combineStrategies">
          <ownedComment xmi:id="_swlgNgt3EeiiCrav3vcpBQ">
            <body>This function will return a new object to put on both lists, given two items from the lists.
     * @param selectedItem1 An object from one drop list
     * @param selectedItem2 An object from the other drop list
     * @return An object to put back on both lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_svWKEQt3EeiiCrav3vcpBQ" name="selectedItem1" type="_svUU4At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svWxIAt3EeiiCrav3vcpBQ" name="selectedItem2" type="_svUU4At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svWxIQt3EeiiCrav3vcpBQ" type="_svUU4At3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svWxIgt3EeiiCrav3vcpBQ" name="setSwitcherStrategy">
          <ownedComment xmi:id="_swlgNwt3EeiiCrav3vcpBQ">
            <body>This function will change the current strategy of the switcher balls to whatever
     * strategy is made by the factory in the parameter.
     * @param switchFac An object from the top drop list.</body>
          </ownedComment>
          <ownedParameter xmi:id="_svWxIwt3EeiiCrav3vcpBQ" name="switchFac" type="_svUU4At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_svUU4At3EeiiCrav3vcpBQ" name="TDropListItem"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_swwfUQt3EeiiCrav3vcpBQ" name="" memberEnd="_swwfUgt3EeiiCrav3vcpBQ _soq6UAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_swwfUgt3EeiiCrav3vcpBQ" name="" type="_sooeEAt3EeiiCrav3vcpBQ" association="_swwfUQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw8slAt3EeiiCrav3vcpBQ" name="" memberEnd="_sw9ToAt3EeiiCrav3vcpBQ _sv3Hcgt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw9ToAt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sw8slAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw9Togt3EeiiCrav3vcpBQ" name="" memberEnd="_sw9Towt3EeiiCrav3vcpBQ _sv3ugQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw9Towt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sw9Togt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw96sQt3EeiiCrav3vcpBQ" name="" memberEnd="_sw96sgt3EeiiCrav3vcpBQ _sv4VkQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw96sgt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sw96sQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw-hwQt3EeiiCrav3vcpBQ" name="" memberEnd="_sw-hwgt3EeiiCrav3vcpBQ _sv48oQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw-hwgt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sw-hwQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw_I0Qt3EeiiCrav3vcpBQ" name="" memberEnd="_sw_I0gt3EeiiCrav3vcpBQ _sv5jsAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw_I0gt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sw_I0Qt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw_v4Qt3EeiiCrav3vcpBQ" name="" memberEnd="_sw_v4gt3EeiiCrav3vcpBQ _sv6KwQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw_v4gt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sw_v4Qt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sxAW8Qt3EeiiCrav3vcpBQ" name="" memberEnd="_sxAW8gt3EeiiCrav3vcpBQ _sv6x0Qt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sxAW8gt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sxAW8Qt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sxA-AQt3EeiiCrav3vcpBQ" name="" memberEnd="_sxA-Agt3EeiiCrav3vcpBQ _sv7Y4At3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sxA-Agt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sxA-AQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sxBlEQt3EeiiCrav3vcpBQ" name="" memberEnd="_sxBlEgt3EeiiCrav3vcpBQ _sv7_8At3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sxBlEgt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sxBlEQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sxCMIQt3EeiiCrav3vcpBQ" name="" memberEnd="_sxCMIgt3EeiiCrav3vcpBQ _sv7_8wt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sxCMIgt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sxCMIQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sxCzMQt3EeiiCrav3vcpBQ" name="" memberEnd="_sxCzMgt3EeiiCrav3vcpBQ _sv8nAgt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sxCzMgt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sxCzMQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sxEBUAt3EeiiCrav3vcpBQ" name="" memberEnd="_sxEBUQt3EeiiCrav3vcpBQ _sv9OEQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sxEBUQt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sxEBUAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sxEoYAt3EeiiCrav3vcpBQ" name="" memberEnd="_sxEoYQt3EeiiCrav3vcpBQ _sv-cMQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sxEoYQt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sxEoYAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sxFPcAt3EeiiCrav3vcpBQ" name="" memberEnd="_sxFPcQt3EeiiCrav3vcpBQ _sv_qUQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sxFPcQt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sxFPcAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sxF2gAt3EeiiCrav3vcpBQ" name="" memberEnd="_sxF2gQt3EeiiCrav3vcpBQ _swARYAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sxF2gQt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sxF2gAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sxGdkQt3EeiiCrav3vcpBQ" name="" memberEnd="_sxGdkgt3EeiiCrav3vcpBQ _swARYwt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sxGdkgt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sxGdkQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sxHEoQt3EeiiCrav3vcpBQ" name="" memberEnd="_sxHEogt3EeiiCrav3vcpBQ _swA4cgt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sxHEogt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sxHEoQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sxHrsQt3EeiiCrav3vcpBQ" name="" memberEnd="_sxHrsgt3EeiiCrav3vcpBQ _swBfgQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sxHrsgt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sxHrsQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sxISwQt3EeiiCrav3vcpBQ" name="" memberEnd="_sxISwgt3EeiiCrav3vcpBQ _swCGkAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sxISwgt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sxISwQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sxJg4At3EeiiCrav3vcpBQ" name="" memberEnd="_sxJg4Qt3EeiiCrav3vcpBQ _swCGkwt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sxJg4Qt3EeiiCrav3vcpBQ" name="" type="_sode8At3EeiiCrav3vcpBQ" association="_sxJg4At3EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_simukAt3EeiiCrav3vcpBQ" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_smWmIAt3EeiiCrav3vcpBQ" name="BallWorldController">
        <ownedComment xmi:id="_swc9UAt3EeiiCrav3vcpBQ">
          <body>This is the BallWorldController, that has private variables for model and view,
and is able to interface between them.
@author sn32, kyl3, lka2, swong
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_svc3wAt3EeiiCrav3vcpBQ" name="model" visibility="private" type="_smw10At3EeiiCrav3vcpBQ" association="_swxGYAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_svde0Qt3EeiiCrav3vcpBQ" name="view" visibility="private" type="_sode8At3EeiiCrav3vcpBQ" association="_swxtcQt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swGYAAt3EeiiCrav3vcpBQ" name="main" specification="_smYbUAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swGYAQt3EeiiCrav3vcpBQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_swGYAgt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(() -> {
			try {
				(new BallWorldController()).start();
			} catch (Exception e) {
				e.printStackTrace();
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swGYAwt3EeiiCrav3vcpBQ" name="BallWorldController" specification="_smZpcAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swGYBAt3EeiiCrav3vcpBQ" type="_smWmIAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>model = new BallWorldModel(new IModel2ViewAdapter() {

			/**
			 * This function from the IModel2ViewAdapter allows the controller
			 * to tell the view to update.
			 */
			@Override
			public void update() {
				view.updateView();
			}

			/**
			 * This function from the IModel2ViewAdapter allows the controller to get
			 * the canvas from the view.
			 */
			@Override
			public Container getCanvas() {
				return view.getCanvas();
			}
		});
		
		view = new BallWorldView&lt;IStrategyFac>(new IView2ModelAdapter&lt;IStrategyFac>() {
	        /**
	         * Returns an IStrategyFac that can instantiate the strategy specified
	         * by classname. Returns the error strategy factory if classname is null.
	         * The toString() of the returned factory is the classname.
	         * @param classname Shortened name of desired strategy
	         * @return A factory to make that strategy
	         */
			@Override
	        public IStrategyFac addStrategy(String classname) {
	        		return model.makeStrategyFac(classname);
	        	}

	        /**
	         * Add a ball to the system with a strategy as given by the given IStrategyFac
	         * @param selectedItem The fully qualified name of the desired strategy.
	         */
	        @Override
	        public void makeBall(IStrategyFac selectedItem, IStrategyFac paintStrat) {
	        		if (null != selectedItem &amp;&amp; paintStrat != null) {
	        			model.makeBall(selectedItem.make(), paintStrat.makePaint());
	        		}
	        	}
			
			/**
			 * Returns an IStrategyFac that can instantiate a MultiStrategy with the
			 * two strategies made by the two given IStrategyFac objects. Returns
			 * the error strategy factory if either supplied factory is null. The
			 * toString() of the returned factory is the toString()'s of the two given
			 * factories, concatenated with &quot;-&quot;.
			 * @param selectedItem1 An IStrategyFac for a strategy
			 * @param selectedItem2 An IStrategyFac for a strategy
			 * @return An IStrategyFac for the composition of the two strategies
			 */
	        @Override
			public IStrategyFac combineStrategies(IStrategyFac selectedItem1, IStrategyFac selectedItem2) {
				return model.combineStrategyFacs(selectedItem1, selectedItem2);
			}
			
			/**
			 * This function tells the model to clear all the balls from the canvas.
			 */
			@Override
			public void clearBalls() {
				model.clearBalls();
			}
			
			/**
			 * This function tells the model to paint and update the status of all the balls.
			 */
			@Override 
			public void paintBalls(Graphics g) {
				model.update(g); // see is this is correct or if a paint method is needed
			}

			/**
			 * This function sets the strategy of the switcher balls to whatever is made by
			 * the input's make method.
			 * @param switchFac The new strategy factory whose make method returns the new strategy
			 * for the switcher balls
			 */
			@Override
			public void setSwitcherStrategy(IStrategyFac switchFac) {
				model.setSwitcherStrategy(switchFac);
			}

			/**
			 * This function returns the strategy factory that is making the switcher balls' current strategy.
			 * @return An IStrategyFactory that makes the current switcher balls' strategy.
			 */
			@Override
			public IStrategyFac getSwitcherFac() {
				return model.getSwitcherFac();
			}

			@Override
			public IStrategyFac addPaintFactory(String text) {
				return model.makePaintFactory(text);
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swGYBQt3EeiiCrav3vcpBQ" name="start" specification="_smaQgAt3EeiiCrav3vcpBQ">
          <language>java</language>
          <body>view.start();
		model.start();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_smYbUAt3EeiiCrav3vcpBQ" name="main" isStatic="true" method="_swGYAAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swdkYAt3EeiiCrav3vcpBQ">
            <body>This main method starts the BallWorldController.
	 * @param args Command line arguments.</body>
          </ownedComment>
          <ownedParameter xmi:id="_smYbUQt3EeiiCrav3vcpBQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_smYbUgt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_smZpcAt3EeiiCrav3vcpBQ" name="BallWorldController" method="_swGYAwt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_smZpcQt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_smZpcgt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_swdkYQt3EeiiCrav3vcpBQ">
            <body>This is the constructor for BallWorldController, which
	 * creates anonymous inner classes for the adapters, and defines their functions.</body>
          </ownedComment>
          <ownedParameter xmi:id="_smZpcwt3EeiiCrav3vcpBQ" type="_smWmIAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_smaQgAt3EeiiCrav3vcpBQ" name="start" method="_swGYBQt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swdkYgt3EeiiCrav3vcpBQ">
            <body>This function starts the view and model.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_swxGYAt3EeiiCrav3vcpBQ" name="" memberEnd="_swxGYQt3EeiiCrav3vcpBQ _svc3wAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_swxGYQt3EeiiCrav3vcpBQ" name="" type="_smWmIAt3EeiiCrav3vcpBQ" association="_swxGYAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_swxtcQt3EeiiCrav3vcpBQ" name="" memberEnd="_swxtcgt3EeiiCrav3vcpBQ _svde0Qt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_swxtcgt3EeiiCrav3vcpBQ" name="" type="_smWmIAt3EeiiCrav3vcpBQ" association="_swxtcQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_si4bYAt3EeiiCrav3vcpBQ" name="util">
      <packagedElement xmi:type="uml:Class" xmi:id="_soJ88At3EeiiCrav3vcpBQ" name="Dispatcher">
        <ownedComment xmi:id="_swkSEwt3EeiiCrav3vcpBQ">
          <body>A simplified Observable class that immediately notifies its Observers when its
notifyAll() method is called. The changed state of the Dispatcher does not need
to be separately set.
@author sn32, kyl3</body>
        </ownedComment>
        <generalization xmi:id="_svCBAgt3EeiiCrav3vcpBQ" general="_ss0aggt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swYE0At3EeiiCrav3vcpBQ" name="notifyAll" specification="_svCBAAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swYE0Qt3EeiiCrav3vcpBQ" name="param" type="_suhqsQt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>setChanged();
     notifyObservers(param);
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_svCBAAt3EeiiCrav3vcpBQ" name="notifyAll" method="_swYE0At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_svCBAQt3EeiiCrav3vcpBQ" name="param" type="_suhqsQt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_soLLEAt3EeiiCrav3vcpBQ" name="IRandomizer">
        <ownedOperation xmi:id="_soLyIAt3EeiiCrav3vcpBQ" name="randomInt">
          <ownedComment xmi:id="_swkSFgt3EeiiCrav3vcpBQ">
            <body>Returns a random integer greater than or equal to min and less than or equal to max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return an int subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_soMZMAt3EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_soMZMQt3EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_soMZMgt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_soNAQAt3EeiiCrav3vcpBQ" name="randomDouble">
          <ownedComment xmi:id="_swkSFwt3EeiiCrav3vcpBQ">
            <body>Returns a random double greater than or equal to min and less than max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return a double subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_soNAQQt3EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_soNAQgt3EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_soNAQwt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_soOOYAt3EeiiCrav3vcpBQ" name="randomColor">
          <ownedComment xmi:id="_swkSGwt3EeiiCrav3vcpBQ">
            <body>Generates a random color
	 * @return a random Color object</body>
          </ownedComment>
          <ownedParameter xmi:id="_svHgkAt3EeiiCrav3vcpBQ" type="_sszzcAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svCoEAt3EeiiCrav3vcpBQ" name="randomLoc">
          <ownedComment xmi:id="_swkSFAt3EeiiCrav3vcpBQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than rect.width
	 * and 0 less than y less than rect.height.
	 * @param rect The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_svCoEQt3EeiiCrav3vcpBQ" name="rect" type="_ss89YAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svDPIAt3EeiiCrav3vcpBQ" type="_ss0agAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svEdQAt3EeiiCrav3vcpBQ" name="randomLoc">
          <ownedComment xmi:id="_swkSFQt3EeiiCrav3vcpBQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than dim.width
	 * and 0 less than y less than dim.height.
	 * @param dim The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_svEdQQt3EeiiCrav3vcpBQ" name="dim" type="_svDPIQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svFEUAt3EeiiCrav3vcpBQ" type="_ss0agAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svFrYAt3EeiiCrav3vcpBQ" name="randomVel">
          <ownedComment xmi:id="_swkSGAt3EeiiCrav3vcpBQ">
            <body>Returns a random velocity (as a Point) subject to the constraint that the absolute value
	 * of the velocity (speed) within the bound (inclusive) defined by rect. Thus the resultant
	 * velocity may be negative. The given Rectangle should use all positive values.
	 * @param rect The bounds for the absolute value of the velocity in the x and y directions.  
	 * @return a Point object with x and y subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_svFrYQt3EeiiCrav3vcpBQ" name="rect" type="_ss89YAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svFrYgt3EeiiCrav3vcpBQ" type="_ss0agAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svGScAt3EeiiCrav3vcpBQ" name="randomDim">
          <ownedComment xmi:id="_swkSGQt3EeiiCrav3vcpBQ">
            <body>Returns a random square Dimension, whose width is maxDim.width/2 less than width less than maxDim.width
	 * @param maxDim  The bounds on the side of the created Dimension.
	 * @return A random square Dimension subject to the given bound</body>
          </ownedComment>
          <ownedParameter xmi:id="_svG5gAt3EeiiCrav3vcpBQ" name="maxDim" type="_svDPIQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svG5gQt3EeiiCrav3vcpBQ" type="_svDPIQt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svG5ggt3EeiiCrav3vcpBQ" name="randomBounds">
          <ownedComment xmi:id="_swkSGgt3EeiiCrav3vcpBQ">
            <body>Generates a randomly located and sized rectangle
	 * @param rect  The bounds for the location of the created rectangle
	 * @param maxDim  The bounds for the dimensions of the create rectangle
	 * @return A Rectangle with location and dimensions subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_svG5gwt3EeiiCrav3vcpBQ" name="rect" type="_ss89YAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svG5hAt3EeiiCrav3vcpBQ" name="maxDim" type="_svDPIQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svG5hQt3EeiiCrav3vcpBQ" type="_ss89YAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svHgkQt3EeiiCrav3vcpBQ" name="randomChoice">
          <ownedComment xmi:id="_swkSHAt3EeiiCrav3vcpBQ">
            <body>Returns a random choice of one of two objects, x and y, where probX is the probability 
	 * that x will be picked (0 less than x less than 1).
	 * @param x The first of two choices
	 * @param y The second of two choices
	 * @param probX  The probability of the first choice
	 * @return Either x or y as per the probability of choosing them.</body>
          </ownedComment>
          <ownedParameter xmi:id="_svHgkgt3EeiiCrav3vcpBQ" name="x" type="_suhqsQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svHgkwt3EeiiCrav3vcpBQ" name="y" type="_suhqsQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svHglAt3EeiiCrav3vcpBQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svIHoAt3EeiiCrav3vcpBQ" type="_suhqsQt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_soR4wAt3EeiiCrav3vcpBQ" name="Randomizer">
        <ownedComment xmi:id="_swk5IAt3EeiiCrav3vcpBQ">
          <body>Utility class that supplies  class routines for generating various random values</body>
        </ownedComment>
        <ownedAttribute xmi:id="_svzdEAt3EeiiCrav3vcpBQ" name="Singleton" isStatic="true" type="_soR4wAt3EeiiCrav3vcpBQ" association="_sw8skQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_sv0EIAt3EeiiCrav3vcpBQ" value="new Randomizer()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_st700At3EeiiCrav3vcpBQ" client="_soR4wAt3EeiiCrav3vcpBQ" supplier="_soLLEAt3EeiiCrav3vcpBQ" contract="_soLLEAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swYE0gt3EeiiCrav3vcpBQ" name="randomLoc" specification="_svIusAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swYE0wt3EeiiCrav3vcpBQ" name="rect" type="_ss89YAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swYE1At3EeiiCrav3vcpBQ" type="_ss0agAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, rect.width), randomInt(0, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swYE1Qt3EeiiCrav3vcpBQ" name="randomLoc" specification="_svJVwQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swYE1gt3EeiiCrav3vcpBQ" name="dim" type="_svDPIQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swYE1wt3EeiiCrav3vcpBQ" type="_ss0agAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, dim.width), randomInt(0, dim.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swYr4At3EeiiCrav3vcpBQ" name="randomInt" specification="_soTt8At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swYr4Qt3EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swYr4gt3EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swYr4wt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int)Math.floor((Math.random()*(1+max-min))+min);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swYr5At3EeiiCrav3vcpBQ" name="randomDouble" specification="_soUVAAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swYr5Qt3EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swYr5gt3EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swYr5wt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return (Math.random()*(max-min))+min;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swYr6At3EeiiCrav3vcpBQ" name="randomVel" specification="_svJ80At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swYr6Qt3EeiiCrav3vcpBQ" name="rect" type="_ss89YAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swYr6gt3EeiiCrav3vcpBQ" type="_ss0agAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (new Point (randomInt(-rect.width, rect.width), randomInt(-rect.height, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swYr6wt3EeiiCrav3vcpBQ" name="randomDim" specification="_svLK8At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swYr7At3EeiiCrav3vcpBQ" name="maxDim" type="_svDPIQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swYr7Qt3EeiiCrav3vcpBQ" type="_svDPIQt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>int x =  randomInt(maxDim.width/2,maxDim.width);
		return new Dimension(x,x);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swZS8At3EeiiCrav3vcpBQ" name="randomBounds" specification="_svLyAQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swZS8Qt3EeiiCrav3vcpBQ" name="rect" type="_ss89YAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swZS8gt3EeiiCrav3vcpBQ" name="maxDim" type="_svDPIQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swZS8wt3EeiiCrav3vcpBQ" type="_ss89YAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return new Rectangle(randomLoc(rect), randomDim(maxDim));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swZS9At3EeiiCrav3vcpBQ" name="randomColor" specification="_soU8EAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swZS9Qt3EeiiCrav3vcpBQ" type="_sszzcAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return new Color( randomInt(0,255),randomInt(0,255),randomInt(0,255));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swZS9gt3EeiiCrav3vcpBQ" name="randomChoice" specification="_svNAIQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swZS9wt3EeiiCrav3vcpBQ" name="x" type="_suhqsQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swZS-At3EeiiCrav3vcpBQ" name="y" type="_suhqsQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_swZS-Qt3EeiiCrav3vcpBQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swZS-gt3EeiiCrav3vcpBQ" type="_suhqsQt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (Math.random() &lt; probX) ? x: y;

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_soSf0At3EeiiCrav3vcpBQ" name="Randomizer" visibility="private">
          <eAnnotations xmi:id="_soSf0Qt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_soSf0gt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_soTG4Qt3EeiiCrav3vcpBQ" type="_soR4wAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_soTt8At3EeiiCrav3vcpBQ" name="randomInt" method="_swYr4At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_soTt8Qt3EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_soTt8gt3EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_soTt8wt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_soUVAAt3EeiiCrav3vcpBQ" name="randomDouble" method="_swYr5At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_soUVAQt3EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_soUVAgt3EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_soUVAwt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_soU8EAt3EeiiCrav3vcpBQ" name="randomColor" method="_swZS9At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_svNAIAt3EeiiCrav3vcpBQ" type="_sszzcAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svIusAt3EeiiCrav3vcpBQ" name="randomLoc" method="_swYE0gt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_svIusQt3EeiiCrav3vcpBQ" name="rect" type="_ss89YAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svJVwAt3EeiiCrav3vcpBQ" type="_ss0agAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svJVwQt3EeiiCrav3vcpBQ" name="randomLoc" method="_swYE1Qt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_svJVwgt3EeiiCrav3vcpBQ" name="dim" type="_svDPIQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svJVwwt3EeiiCrav3vcpBQ" type="_ss0agAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svJ80At3EeiiCrav3vcpBQ" name="randomVel" method="_swYr6At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_svJ80Qt3EeiiCrav3vcpBQ" name="rect" type="_ss89YAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svJ80gt3EeiiCrav3vcpBQ" type="_ss0agAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svLK8At3EeiiCrav3vcpBQ" name="randomDim" method="_swYr6wt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_svLK8Qt3EeiiCrav3vcpBQ" name="maxDim" type="_svDPIQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svLyAAt3EeiiCrav3vcpBQ" type="_svDPIQt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svLyAQt3EeiiCrav3vcpBQ" name="randomBounds" method="_swZS8At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_svMZEAt3EeiiCrav3vcpBQ" name="rect" type="_ss89YAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svMZEQt3EeiiCrav3vcpBQ" name="maxDim" type="_svDPIQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svMZEgt3EeiiCrav3vcpBQ" type="_ss89YAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_svNAIQt3EeiiCrav3vcpBQ" name="randomChoice" method="_swZS9gt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_svNAIgt3EeiiCrav3vcpBQ" name="x" type="_suhqsQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svNnMAt3EeiiCrav3vcpBQ" name="y" type="_suhqsQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_svNnMQt3EeiiCrav3vcpBQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svNnMgt3EeiiCrav3vcpBQ" type="_suhqsQt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_soZ0kAt3EeiiCrav3vcpBQ" name="SineMaker">
        <ownedComment xmi:id="_swk5IQt3EeiiCrav3vcpBQ">
          <body>A utility class that can be used to create smoothly varying sinusoidal
numerical data.
Note that this is not a singleton class nor does it have static methods as
its behavior depends on the minimum, maximum and delta values given to 
its constructor.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_sv0rMAt3EeiiCrav3vcpBQ" name="_mid" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sv1SQQt3EeiiCrav3vcpBQ" name="_ampl" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sv15UAt3EeiiCrav3vcpBQ" name="_delta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sv15Ugt3EeiiCrav3vcpBQ" name="_theta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_sv2gYAt3EeiiCrav3vcpBQ" value="-Math.PI/2.0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swZ6AAt3EeiiCrav3vcpBQ" name="SineMaker" specification="_sobCsAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swZ6AQt3EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swZ6Agt3EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swZ6Awt3EeiiCrav3vcpBQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swZ6BAt3EeiiCrav3vcpBQ" type="_soZ0kAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>_mid = (max+min)/2.0;
		_ampl = (max-min)/2.0;
		_delta = delta;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swZ6BQt3EeiiCrav3vcpBQ" name="getDblVal" specification="_sobpwwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swZ6Bgt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double result = _mid + _ampl*Math.sin(_theta);
		_theta += _delta; // shorthand for _theta = _theta + _delta
		return result;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swZ6Bwt3EeiiCrav3vcpBQ" name="getIntVal" specification="_socQ0At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_swZ6CAt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int) Math.round(getDblVal());
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_sobCsAt3EeiiCrav3vcpBQ" name="SineMaker" method="_swZ6AAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_sobpwAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_sobpwQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_swk5Igt3EeiiCrav3vcpBQ">
            <body>The constructor takes several values to control the object's behavior.
	 * @param min The minimum and initial value to produce.
	 * @param max The maximum value to produce.
	 * @param delta The amount in radians that the generating angle is incremented each time
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_sobCsQt3EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sobCsgt3EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sobCswt3EeiiCrav3vcpBQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sobpwgt3EeiiCrav3vcpBQ" type="_soZ0kAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_sobpwwt3EeiiCrav3vcpBQ" name="getDblVal" method="_swZ6BQt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swk5Iwt3EeiiCrav3vcpBQ">
            <body>Returns a different value each time it is called.  The value varies smoothly in a 
	 * sinusoidal fashion, incrementing each time as per the above specified delta 
	 * angle increase.
	 * @return the next value as a double</body>
          </ownedComment>
          <ownedParameter xmi:id="_sobpxAt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_socQ0At3EeiiCrav3vcpBQ" name="getIntVal" method="_swZ6Bwt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_swk5JAt3EeiiCrav3vcpBQ">
            <body>Same as getDblVal, but returns the result rounded to the nearest integer.
	 * Note that getDblVal and getIntVal are not independent as getIntVal merely calls
	 * getDblVal.
	 * @return the next value as an int</body>
          </ownedComment>
          <ownedParameter xmi:id="_socQ0Qt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_sw8skQt3EeiiCrav3vcpBQ" name="" memberEnd="_sw8skgt3EeiiCrav3vcpBQ _svzdEAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_sw8skgt3EeiiCrav3vcpBQ" name="" type="_soR4wAt3EeiiCrav3vcpBQ" association="_sw8skQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_sjRc8At3EeiiCrav3vcpBQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_sjSEAAt3EeiiCrav3vcpBQ" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_ss9kcQt3EeiiCrav3vcpBQ" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_suAGQQt3EeiiCrav3vcpBQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_suAtUQt3EeiiCrav3vcpBQ" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_suBUYQt3EeiiCrav3vcpBQ" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_suB7cQt3EeiiCrav3vcpBQ" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_suDwogt3EeiiCrav3vcpBQ" name="JComboBox"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_rziCEAt3EeiiCrav3vcpBQ">
      <eAnnotations xmi:id="_rziCEQt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_rzipIAt3EeiiCrav3vcpBQ" base_Package="_rtVTcAt3EeiiCrav3vcpBQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Array xmi:id="_smZCYAt3EeiiCrav3vcpBQ" base_Element="_smYbUQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_smg-Mgt3EeiiCrav3vcpBQ" base_Element="_smgXIAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_smvAogt3EeiiCrav3vcpBQ" base_Element="_smuZkQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_snEX1At3EeiiCrav3vcpBQ" base_Element="_snDwwAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_snFl8At3EeiiCrav3vcpBQ" base_Element="_snDwwAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_snFl8Qt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_snJQUAt3EeiiCrav3vcpBQ" base_Element="_snIpQAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_snRMIAt3EeiiCrav3vcpBQ" base_Element="_snQlEAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_snRzMgt3EeiiCrav3vcpBQ" base_Element="_snRzMAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_snl8RAt3EeiiCrav3vcpBQ" base_Element="_snlVMAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_snmjUAt3EeiiCrav3vcpBQ" base_Element="_snlVMAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_snmjUQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sntRBAt3EeiiCrav3vcpBQ" base_Element="_snsp8At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_snufIAt3EeiiCrav3vcpBQ" base_Element="_snsp8At3EeiiCrav3vcpBQ">
    <annotations xmi:id="_snufIQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_snxicAt3EeiiCrav3vcpBQ" base_Element="_snw7YAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_snyJgAt3EeiiCrav3vcpBQ" base_Element="_snw7YAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_snyJgQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_soTG4At3EeiiCrav3vcpBQ" base_Element="_soSf0At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_soeGAAt3EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_sode8At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_sopFIAt3EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_sooeEAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ssoNQAt3EeiiCrav3vcpBQ" base_Element="_ssnmMAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ssqCcAt3EeiiCrav3vcpBQ" base_Element="_ssoNQQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ssqpgAt3EeiiCrav3vcpBQ" base_Element="_ssqCcQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sssesAt3EeiiCrav3vcpBQ" base_Element="_ssr3oAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ssts0Qt3EeiiCrav3vcpBQ" base_Element="_sstFwwt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_ssuT4At3EeiiCrav3vcpBQ" base_Element="_sstFwwt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_ssuT4Qt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sswwIgt3EeiiCrav3vcpBQ" base_Element="_sswwIAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sszzcQt3EeiiCrav3vcpBQ" base_Element="_sszzcAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ss0agQt3EeiiCrav3vcpBQ" base_Element="_ss0agAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ss1BkAt3EeiiCrav3vcpBQ" base_Element="_ss0aggt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ss1ooAt3EeiiCrav3vcpBQ" base_Element="_ss1BkQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ss7vQgt3EeiiCrav3vcpBQ" base_Element="_ss7vQAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_ss8WUAt3EeiiCrav3vcpBQ" base_Element="_ss7vQAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_ss8WUQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ss9kcAt3EeiiCrav3vcpBQ" base_Element="_ss89YAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ss-LgAt3EeiiCrav3vcpBQ" base_Element="_ss9kcQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_stDEAQt3EeiiCrav3vcpBQ" base_Element="_stCc8Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_stDrEAt3EeiiCrav3vcpBQ" base_Element="_stCc8Qt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_stDrEQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_stE5MAt3EeiiCrav3vcpBQ" base_Element="_stESIAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_stE5MQt3EeiiCrav3vcpBQ" base_Element="_stESIAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_stFgQAt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_stH8ggt3EeiiCrav3vcpBQ" base_Element="_stHVcQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_stIjkAt3EeiiCrav3vcpBQ" base_Element="_stHVcQt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_stIjkQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_stJxsQt3EeiiCrav3vcpBQ" base_Element="_stJxsAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_stK_0At3EeiiCrav3vcpBQ" base_Element="_stJxsgt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_stMN8At3EeiiCrav3vcpBQ" base_Element="_stLm4Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_stMN8Qt3EeiiCrav3vcpBQ" base_Element="_stLm4Qt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_stMN8gt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_stM1Awt3EeiiCrav3vcpBQ" base_Element="_stM1AAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_stRGcAt3EeiiCrav3vcpBQ" base_Element="_stQfYAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_stRtgAt3EeiiCrav3vcpBQ" base_Element="_stRGcQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_stS7oAt3EeiiCrav3vcpBQ" base_Element="_stRtgQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_stTisAt3EeiiCrav3vcpBQ" base_Element="_stS7oQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Array xmi:id="_stZCRAt3EeiiCrav3vcpBQ" base_Element="_stYbMQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_steh0gt3EeiiCrav3vcpBQ" base_Element="_std6wwt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_stfI4At3EeiiCrav3vcpBQ" base_Element="_std6wwt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_stfI4Qt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_stgXAAt3EeiiCrav3vcpBQ" base_Element="_stfv8At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_stqIAAt3EeiiCrav3vcpBQ" base_Element="_sto54Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_stqIAwt3EeiiCrav3vcpBQ" base_Element="_sto54Qt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_stqIBAt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_str9MAt3EeiiCrav3vcpBQ" base_Element="_strWIAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_stvAgAt3EeiiCrav3vcpBQ" base_Element="_stuZcAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_stvAgQt3EeiiCrav3vcpBQ" base_Element="_stuZcAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_stvAggt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_stwOogt3EeiiCrav3vcpBQ" base_Element="_stvnkQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_stw1sAt3EeiiCrav3vcpBQ" base_Element="_stvnkQt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_stw1sQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_styD0wt3EeiiCrav3vcpBQ" base_Element="_styD0At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_styq4At3EeiiCrav3vcpBQ" base_Element="_styD0At3EeiiCrav3vcpBQ">
    <annotations xmi:id="_styq4Qt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_st0gEAt3EeiiCrav3vcpBQ" base_Element="_stz5AQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_st0gEQt3EeiiCrav3vcpBQ" base_Element="_stz5AQt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_st1HIAt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_st5_oQt3EeiiCrav3vcpBQ" base_Element="_st5YkQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_st6msAt3EeiiCrav3vcpBQ" base_Element="_st5YkQt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_st6msQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_suAGQAt3EeiiCrav3vcpBQ" base_Element="_st_fMAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_suAtUAt3EeiiCrav3vcpBQ" base_Element="_suAGQQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_suBUYAt3EeiiCrav3vcpBQ" base_Element="_suAtUQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_suB7cAt3EeiiCrav3vcpBQ" base_Element="_suBUYQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_suCigAt3EeiiCrav3vcpBQ" base_Element="_suB7cQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_suDJkAt3EeiiCrav3vcpBQ" base_Element="_suCigQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_suDwoQt3EeiiCrav3vcpBQ" base_Element="_suDwoAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_suEXsAt3EeiiCrav3vcpBQ" base_Element="_suDwogt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_suE-wAt3EeiiCrav3vcpBQ" base_Element="_suEXsQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_suFl0Qt3EeiiCrav3vcpBQ" base_Element="_suFl0At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_suJQMAt3EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_suICEAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sua9AAt3EeiiCrav3vcpBQ" base_Element="_suaV8At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_sua9AQt3EeiiCrav3vcpBQ" base_Element="_suaV8At3EeiiCrav3vcpBQ">
    <annotations xmi:id="_sua9Agt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sucLIgt3EeiiCrav3vcpBQ" base_Element="_subkEAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_sucLIwt3EeiiCrav3vcpBQ" base_Element="_subkEAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_sucLJAt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_suenYAt3EeiiCrav3vcpBQ" base_Element="_sueAUAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sujf4At3EeiiCrav3vcpBQ" base_Element="_suhqsQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sumjMgt3EeiiCrav3vcpBQ" base_Element="_sul8IAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_sumjMwt3EeiiCrav3vcpBQ" base_Element="_sul8IAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_sumjNAt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sut38wt3EeiiCrav3vcpBQ" base_Element="_sutQ5At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_suufAAt3EeiiCrav3vcpBQ" base_Element="_sutQ5At3EeiiCrav3vcpBQ">
    <annotations xmi:id="_suufAQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_suxiUQt3EeiiCrav3vcpBQ" base_Element="_suw7Rgt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_suywcAt3EeiiCrav3vcpBQ" base_Element="_suw7Rgt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_suywcQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_su7TUAt3EeiiCrav3vcpBQ" base_Element="_su6sQAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_su7TUQt3EeiiCrav3vcpBQ" base_Element="_su6sQAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_su7TUgt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_svD2MAt3EeiiCrav3vcpBQ" base_Element="_svDPIQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_svU78At3EeiiCrav3vcpBQ" base_Element="_svUU4At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svde0At3EeiiCrav3vcpBQ" base_Element="_svc3wAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_sveF4At3EeiiCrav3vcpBQ" genericsValue="?" base_Element="_svde0Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sves8At3EeiiCrav3vcpBQ" base_Element="_svde0Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svfUAAt3EeiiCrav3vcpBQ" base_Element="_sves8Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svgiIAt3EeiiCrav3vcpBQ" base_Element="_svf7EAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sviXUAt3EeiiCrav3vcpBQ" base_Element="_svhwQQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svi-YQt3EeiiCrav3vcpBQ" base_Element="_svi-YAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svjlcgt3EeiiCrav3vcpBQ" base_Element="_svjlcAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svlaoAt3EeiiCrav3vcpBQ" base_Element="_svkzkAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svmBsAt3EeiiCrav3vcpBQ" base_Element="_svlaoQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svmBswt3EeiiCrav3vcpBQ" base_Element="_svmBsQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svmowgt3EeiiCrav3vcpBQ" base_Element="_svmowAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svod8gt3EeiiCrav3vcpBQ" base_Element="_svod8At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svpFAgt3EeiiCrav3vcpBQ" base_Element="_svpFAAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svpsEQt3EeiiCrav3vcpBQ" base_Element="_svpFAwt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svq6MAt3EeiiCrav3vcpBQ" base_Element="_svqTIwt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svrhQAt3EeiiCrav3vcpBQ" base_Element="_svq6MQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Array xmi:id="_svsIUgt3EeiiCrav3vcpBQ" base_Element="_svsIUAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svsvYAt3EeiiCrav3vcpBQ" base_Element="_svsIUAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_svtWcAt3EeiiCrav3vcpBQ" base_Property="_svsvYQt3EeiiCrav3vcpBQ" siblings="_swic5At3EeiiCrav3vcpBQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svtWcQt3EeiiCrav3vcpBQ" base_Element="_svsvYQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svukkAt3EeiiCrav3vcpBQ" base_Element="_svt9gAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svukkgt3EeiiCrav3vcpBQ" base_Element="_svukkQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svvLogt3EeiiCrav3vcpBQ" base_Element="_svvLoAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Array xmi:id="_svvysgt3EeiiCrav3vcpBQ" base_Element="_svvysAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svvyswt3EeiiCrav3vcpBQ" base_Element="_svvysAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svxA0At3EeiiCrav3vcpBQ" base_Element="_svwZwgt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svxn4gt3EeiiCrav3vcpBQ" base_Element="_svxn4At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svyO8gt3EeiiCrav3vcpBQ" base_Element="_svyO8At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_svy2Agt3EeiiCrav3vcpBQ" base_Element="_svy2AAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv0EIQt3EeiiCrav3vcpBQ" base_Element="_svzdEAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv1SQAt3EeiiCrav3vcpBQ" base_Element="_sv0rMAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv1SQgt3EeiiCrav3vcpBQ" base_Element="_sv1SQQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv15UQt3EeiiCrav3vcpBQ" base_Element="_sv15UAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv2gYQt3EeiiCrav3vcpBQ" base_Element="_sv15Ugt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv3ugAt3EeiiCrav3vcpBQ" base_Element="_sv3Hcgt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv4VkAt3EeiiCrav3vcpBQ" base_Element="_sv3ugQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv48oAt3EeiiCrav3vcpBQ" base_Element="_sv4VkQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv48owt3EeiiCrav3vcpBQ" base_Element="_sv48oQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_sv5jsQt3EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_sv5jsAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv6KwAt3EeiiCrav3vcpBQ" base_Element="_sv5jsAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv6x0At3EeiiCrav3vcpBQ" base_Element="_sv6KwQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv6x0wt3EeiiCrav3vcpBQ" base_Element="_sv6x0Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv7Y4gt3EeiiCrav3vcpBQ" base_Element="_sv7Y4At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv7_8gt3EeiiCrav3vcpBQ" base_Element="_sv7_8At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv8nAQt3EeiiCrav3vcpBQ" base_Element="_sv7_8wt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv9OEAt3EeiiCrav3vcpBQ" base_Element="_sv8nAgt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_sv91IAt3EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_sv9OEQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv-cMAt3EeiiCrav3vcpBQ" base_Element="_sv9OEQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_sv_DQAt3EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_sv-cMQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv_qUAt3EeiiCrav3vcpBQ" base_Element="_sv-cMQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sv_qUwt3EeiiCrav3vcpBQ" base_Element="_sv_qUQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_swARYgt3EeiiCrav3vcpBQ" base_Element="_swARYAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_swA4cQt3EeiiCrav3vcpBQ" base_Element="_swARYwt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_swBfgAt3EeiiCrav3vcpBQ" base_Element="_swA4cgt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_swBfgwt3EeiiCrav3vcpBQ" base_Element="_swBfgQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_swCGkgt3EeiiCrav3vcpBQ" base_Element="_swCGkAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_swCtoAt3EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_swCGkwt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_swDUsAt3EeiiCrav3vcpBQ" base_Element="_swCGkwt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_swjD8At3EeiiCrav3vcpBQ" base_Property="_swic5At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_swjD8Qt3EeiiCrav3vcpBQ" base_Element="_swic5At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_swuDEAt3EeiiCrav3vcpBQ" base_Element="_swtcAAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_swuqIAt3EeiiCrav3vcpBQ" base_Element="_swuDEQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_swvRMAt3EeiiCrav3vcpBQ" base_Element="_swuqIQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_swwfUAt3EeiiCrav3vcpBQ" base_Element="_swvRMQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_swwfUwt3EeiiCrav3vcpBQ" base_Element="_swwfUQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_swxtcAt3EeiiCrav3vcpBQ" base_Element="_swxGYAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_swyUgAt3EeiiCrav3vcpBQ" base_Element="_swxtcQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_swyUgwt3EeiiCrav3vcpBQ" base_Element="_swyUgQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_swy7kgt3EeiiCrav3vcpBQ" base_Element="_swy7kAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_swziogt3EeiiCrav3vcpBQ" base_Element="_swzioAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw0JsAt3EeiiCrav3vcpBQ" base_Element="_swziowt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw0wwAt3EeiiCrav3vcpBQ" base_Element="_sw0JsQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw1X0At3EeiiCrav3vcpBQ" base_Element="_sw0wwQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw2l8At3EeiiCrav3vcpBQ" base_Element="_sw1X0Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw3NAAt3EeiiCrav3vcpBQ" base_Element="_sw2l8Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw3NAwt3EeiiCrav3vcpBQ" base_Element="_sw3NAQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw30Egt3EeiiCrav3vcpBQ" base_Element="_sw30EAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw4bIAt3EeiiCrav3vcpBQ" base_Element="_sw30Ewt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw5CMAt3EeiiCrav3vcpBQ" base_Element="_sw4bIQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw5CMwt3EeiiCrav3vcpBQ" base_Element="_sw5CMQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw5pQAt3EeiiCrav3vcpBQ" base_Element="_sw5CNAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw6QUAt3EeiiCrav3vcpBQ" base_Element="_sw5pQQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw6QUwt3EeiiCrav3vcpBQ" base_Element="_sw6QUQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw63YAt3EeiiCrav3vcpBQ" base_Element="_sw6QVAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw7ecAt3EeiiCrav3vcpBQ" base_Element="_sw63YQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw8FgAt3EeiiCrav3vcpBQ" base_Element="_sw7ecQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw8skAt3EeiiCrav3vcpBQ" base_Element="_sw8FgQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw8skwt3EeiiCrav3vcpBQ" base_Element="_sw8skQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw9ToQt3EeiiCrav3vcpBQ" base_Element="_sw8slAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw96sAt3EeiiCrav3vcpBQ" base_Element="_sw9Togt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw-hwAt3EeiiCrav3vcpBQ" base_Element="_sw96sQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw_I0At3EeiiCrav3vcpBQ" base_Element="_sw-hwQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sw_v4At3EeiiCrav3vcpBQ" base_Element="_sw_I0Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sxAW8At3EeiiCrav3vcpBQ" base_Element="_sw_v4Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sxA-AAt3EeiiCrav3vcpBQ" base_Element="_sxAW8Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sxBlEAt3EeiiCrav3vcpBQ" base_Element="_sxA-AQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sxCMIAt3EeiiCrav3vcpBQ" base_Element="_sxBlEQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sxCzMAt3EeiiCrav3vcpBQ" base_Element="_sxCMIQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sxDaQAt3EeiiCrav3vcpBQ" base_Element="_sxCzMQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sxEBUgt3EeiiCrav3vcpBQ" base_Element="_sxEBUAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sxEoYgt3EeiiCrav3vcpBQ" base_Element="_sxEoYAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sxFPcgt3EeiiCrav3vcpBQ" base_Element="_sxFPcAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sxGdkAt3EeiiCrav3vcpBQ" base_Element="_sxF2gAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sxHEoAt3EeiiCrav3vcpBQ" base_Element="_sxGdkQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sxHrsAt3EeiiCrav3vcpBQ" base_Element="_sxHEoQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sxISwAt3EeiiCrav3vcpBQ" base_Element="_sxHrsQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sxI50At3EeiiCrav3vcpBQ" base_Element="_sxISwQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sxJg4gt3EeiiCrav3vcpBQ" base_Element="_sxJg4At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_sxKvAAt3EeiiCrav3vcpBQ" base_Element="_sxKH8At3EeiiCrav3vcpBQ"/>
</xmi:XMI>
