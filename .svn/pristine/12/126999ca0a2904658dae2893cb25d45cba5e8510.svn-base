<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_7iCa8At6EeiiCrav3vcpBQ" name="UpdateStrategies">
    <eAnnotations xmi:id="_7pnpoAt6EeiiCrav3vcpBQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_7pnpoQt6EeiiCrav3vcpBQ" source="codegen">
        <details xmi:id="_7pnpogt6EeiiCrav3vcpBQ" key="codegenDirectory" value="/HW04/src"/>
        <details xmi:id="_8iQh0At6EeiiCrav3vcpBQ" key="AssociatedSourceCode" value="/HW04/src/controller/BallWorldController.java;133705207/1;/HW04/src/model/ADecoratorPaintStrategy.java;3522512554/1;/HW04/src/model/APaintStrategy.java;1740869287/1;/HW04/src/model/Ball.java;544139014/1;/HW04/src/model/BallPaintStrategy.java;538568874/1;/HW04/src/model/BallWorldModel.java;3438198808/1;/HW04/src/model/BreathingStrategy.java;569949667/1;/HW04/src/model/ColorStrategy.java;783269627/1;/HW04/src/model/CompositePaintStrategy.java;2517148635/1;/HW04/src/model/CrashStrategy.java;4279759508/1;/HW04/src/model/EllipsePaintStrategy.java;292774861/1;/HW04/src/model/EllipseShapeFactory.java;1636135608/1;/HW04/src/model/FastStrategy.java;3009224450/1;/HW04/src/model/IBallCmd.java;2100560540/1;/HW04/src/model/IModel2ViewAdapter.java;715642539/1;/HW04/src/model/IPaintStrategy.java;556726924/1;/HW04/src/model/IShapeFactory.java;810833796/1;/HW04/src/model/IStrategyFac.java;3581042476/1;/HW04/src/model/IUpdateStrategy.java;1651050839/1;/HW04/src/model/ImagePaintStrategy.java;2009657845/1;/HW04/src/model/MultiPaintStrategy.java;843652504/1;/HW04/src/model/MultiStrategy.java;1636671415/1;/HW04/src/model/PolygonFactory.java;352231935/1;/HW04/src/model/RectanglePaintStrategy.java;952260073/1;/HW04/src/model/RectangleShapeFactory.java;3860937959/1;/HW04/src/model/ShapePaintStrategy.java;851889235/1;/HW04/src/model/SpawnStrategy.java;3065061180/1;/HW04/src/model/SquarePaintStrategy.java;3526266484/1;/HW04/src/model/StraightStrategy.java;3914615527/1;/HW04/src/model/SwellStrategy.java;1352457759/1;/HW04/src/model/SwitcherStrategy.java;2480375116/1;/HW04/src/model/TeleportStrategy.java;2565727986/1;/HW04/src/model/UprightCompositePaintStrategy.java;585067317/1;/HW04/src/model/UprightImageStrategy.java;3761235521/1;/HW04/src/model/UprightShapePaintStrategy.java;35762995/1;/HW04/src/model/WiggleStrategy.java;4246409471/1;/HW04/src/util/Dispatcher.java;77051068/1;/HW04/src/util/IRandomizer.java;4224991458/1;/HW04/src/util/Randomizer.java;1541548940/1;/HW04/src/util/SineMaker.java;1378225368/1;/HW04/src/view/BallWorldView.java;1506153628/1;/HW04/src/view/IView2ModelAdapter.java;637323524/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_8LxUcAt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_8Lx7gAt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_8Lx7gQt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_8Lx7ggt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_8Lx7gwt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_8Lx7hAt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_8Lx7hQt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_8Lx7hgt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_8Lx7hwt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_8Lx7iAt6EeiiCrav3vcpBQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_8Lx7iQt6EeiiCrav3vcpBQ" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_8LzwsQt6EeiiCrav3vcpBQ" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_8S3a8At6EeiiCrav3vcpBQ" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_8TK88Qt6EeiiCrav3vcpBQ" name="Ellipse2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_8M_ccAt6EeiiCrav3vcpBQ" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_8Tr6UQt6EeiiCrav3vcpBQ" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_8Tr6Uwt6EeiiCrav3vcpBQ" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_8S0-sAt6EeiiCrav3vcpBQ" name="Container"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8S1lwQt6EeiiCrav3vcpBQ" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8S2z4Qt6EeiiCrav3vcpBQ" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8S6eQAt6EeiiCrav3vcpBQ" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8S6eQgt6EeiiCrav3vcpBQ" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8TCaEAt6EeiiCrav3vcpBQ" name="Rectangle"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_8TKV4At6EeiiCrav3vcpBQ" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8TOnUgt6EeiiCrav3vcpBQ" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8TP1cQt6EeiiCrav3vcpBQ" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8TP1cwt6EeiiCrav3vcpBQ" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8TQcgQt6EeiiCrav3vcpBQ" name="Toolkit"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8TXxQgt6EeiiCrav3vcpBQ" name="Polygon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8TpeEAt6EeiiCrav3vcpBQ" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8TtIcQt6EeiiCrav3vcpBQ" name="FlowLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8TtIcwt6EeiiCrav3vcpBQ" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8UX20Qt6EeiiCrav3vcpBQ" name="Dimension"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_8L6eYAt6EeiiCrav3vcpBQ" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_8S7FUQt6EeiiCrav3vcpBQ" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_8S7FUwt6EeiiCrav3vcpBQ" name="Observer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_8UBRhAt6EeiiCrav3vcpBQ" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_8UBRhQt6EeiiCrav3vcpBQ" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_8LyikAt6EeiiCrav3vcpBQ" name="model">
      <packagedElement xmi:type="uml:Class" xmi:id="_8Nl5YAt6EeiiCrav3vcpBQ" name="ADecoratorPaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_8VaYpAt6EeiiCrav3vcpBQ">
          <body>This is the ADecoratePaintStrategy class that is abstract. It has the basic functionality&#xD;
of a paint strategy, and the methods simply delegate to the decoree.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_8S4CCAt6EeiiCrav3vcpBQ" general="_8No8sAt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8Uo8kQt6EeiiCrav3vcpBQ" name="decoree" visibility="private" type="_8No8sAt6EeiiCrav3vcpBQ" association="_8VppMQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VLvJgt6EeiiCrav3vcpBQ" name="ADecoratorPaintStrategy" specification="_8S3a8gt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VLvJwt6EeiiCrav3vcpBQ" name="decoree" type="_8No8sAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VLvKAt6EeiiCrav3vcpBQ" type="_8Nl5YAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(new AffineTransform());&#xD;
		this.decoree = decoree;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VLvKQt6EeiiCrav3vcpBQ" name="init" specification="_8S4CAwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VLvKgt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>decoree.init(ball);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VLvKwt6EeiiCrav3vcpBQ" name="paintXfrm" specification="_8T6j0At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VLvLAt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VLvLQt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VLvLgt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>decoree.paintXfrm(g, ball, at);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VMWMAt6EeiiCrav3vcpBQ" name="paint" specification="_8T8ZAAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VMWMQt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VMWMgt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>decoree.paint(g, ball);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8S3a8gt6EeiiCrav3vcpBQ" name="ADecoratorPaintStrategy" method="_8VLvJgt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8S4CAAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8S4CAQt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_8VaYpQt6EeiiCrav3vcpBQ">
            <body>This is the constructor for ADecoratorPaintStrategy, that calls the&#xD;
	 * super constructor with an affine transform, and sets the decoree.&#xD;
	 * @param decoree An APaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_8S3a8wt6EeiiCrav3vcpBQ" name="decoree" type="_8No8sAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8S4CAgt6EeiiCrav3vcpBQ" type="_8Nl5YAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8S4CAwt6EeiiCrav3vcpBQ" name="init" method="_8VLvKQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8S4CBAt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8T6j0At6EeiiCrav3vcpBQ" name="paintXfrm" method="_8VLvKwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8T7K4At6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8T7K4Qt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8T7K4gt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8T8ZAAt6EeiiCrav3vcpBQ" name="paint" method="_8VMWMAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8T8ZAQt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8T8ZAgt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8No8sAt6EeiiCrav3vcpBQ" name="APaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_8VaYpgt6EeiiCrav3vcpBQ">
          <body>This is an abstract class that defines the top level affine transform based
paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_8UqKsAt6EeiiCrav3vcpBQ" name="at" visibility="package" type="_8S3a8At6EeiiCrav3vcpBQ" association="_8VppNAt6EeiiCrav3vcpBQ"/>
        <interfaceRealization xmi:id="_8S4pEAt6EeiiCrav3vcpBQ" client="_8No8sAt6EeiiCrav3vcpBQ" supplier="_8O6vEQt6EeiiCrav3vcpBQ" contract="_8O6vEQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VMWMwt6EeiiCrav3vcpBQ" name="APaintStrategy" specification="_8T9nIAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VMWNAt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VMWNQt6EeiiCrav3vcpBQ" type="_8No8sAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.at = at;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VMWNgt6EeiiCrav3vcpBQ" name="paint" specification="_8T-OMAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VMWNwt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VMWOAt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>double scale = ball.getRad();
		at.setToTranslation(ball.getLoc().x, ball.getLoc().y);
		at.scale(scale, scale);
		at.rotate(ball.getVel().x, ball.getVel().y);
		g.setColor(ball.getCol());    
		paintCfg(g, ball);
		paintXfrm(g, ball, at);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VMWOQt6EeiiCrav3vcpBQ" name="getAT" specification="_8Nqx4At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VMWOgt6EeiiCrav3vcpBQ" type="_8S3a8At6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return this.at;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8NpjwAt6EeiiCrav3vcpBQ" name="APaintStrategy">
          <eAnnotations xmi:id="_8NqK0At6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8NqK0Qt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8NqK0wt6EeiiCrav3vcpBQ" type="_8No8sAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8Nqx4At6EeiiCrav3vcpBQ" name="getAT" method="_8VMWOQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8Va_sgt6EeiiCrav3vcpBQ">
            <body>This is a getter that returns the Affine Transform
	 * @return An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_8T-1QQt6EeiiCrav3vcpBQ" type="_8S3a8At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8S53MAt6EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_8S53MQt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8T9nIAt6EeiiCrav3vcpBQ" name="APaintStrategy" method="_8VMWMwt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8T9nIgt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8T9nIwt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_8Va_sAt6EeiiCrav3vcpBQ">
            <body>This is the constructor that takes in Affine Transform.
	 * @param at</body>
          </ownedComment>
          <ownedParameter xmi:id="_8T9nIQt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8T9nJAt6EeiiCrav3vcpBQ" type="_8No8sAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8T-OMAt6EeiiCrav3vcpBQ" name="paint" method="_8VMWNgt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8Va_sQt6EeiiCrav3vcpBQ">
            <body>This function paints the ball on the passed in Graphics object.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8T-OMQt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8T-OMgt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8T-OMwt6EeiiCrav3vcpBQ" name="paintCfg" visibility="protected">
          <ownedParameter xmi:id="_8T-ONAt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8T-ONQt6EeiiCrav3vcpBQ" name="host" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8T_cUAt6EeiiCrav3vcpBQ" name="paintXfrm" isAbstract="true">
          <ownedComment xmi:id="_8Va_swt6EeiiCrav3vcpBQ">
            <body>This function is a secondary paint operation that is the last step of the above
	 * paint method, which does not calculate its own affine transform, but instead,
	 * uses a supplied affine transform.
	 * @param g A graphics object
	 * @param host The host ball
	 * @param at An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_8T_cUQt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8T_cUgt6EeiiCrav3vcpBQ" name="host" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8T_cUwt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8NsnEAt6EeiiCrav3vcpBQ" name="Ball">
        <ownedComment xmi:id="_8Va_tAt6EeiiCrav3vcpBQ">
          <body>This is the Ball class, which is what is drawn on the screen, and implements
Observer to use dispatching.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_8UrY0At6EeiiCrav3vcpBQ" name="col" type="_8S6eQAt6EeiiCrav3vcpBQ" association="_8Va_tQt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8Ur_4At6EeiiCrav3vcpBQ" name="loc" type="_8S6eQgt6EeiiCrav3vcpBQ" association="_8VbmwAt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8Ur_4Qt6EeiiCrav3vcpBQ" name="rad" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8Usm8Qt6EeiiCrav3vcpBQ" name="vel" type="_8S6eQgt6EeiiCrav3vcpBQ" association="_8Vbmwgt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8Usm8gt6EeiiCrav3vcpBQ" name="con" type="_8S0-sAt6EeiiCrav3vcpBQ" association="_8VbmxAt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8Usm8wt6EeiiCrav3vcpBQ" name="strat" visibility="private" type="_8O9yYQt6EeiiCrav3vcpBQ" association="_8VqQQgt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8UtOAAt6EeiiCrav3vcpBQ" name="paintStrat" type="_8O6vEQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8Vq3UQt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8UtOAQt6EeiiCrav3vcpBQ" name="itr" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8UtOAgt6EeiiCrav3vcpBQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8Ut1EAt6EeiiCrav3vcpBQ" name="radDelta">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_8UADYAt6EeiiCrav3vcpBQ" client="_8NsnEAt6EeiiCrav3vcpBQ" supplier="_8S7FUwt6EeiiCrav3vcpBQ" contract="_8S7FUwt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VM9QAt6EeiiCrav3vcpBQ" name="Ball" specification="_8UAqcAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VM9QQt6EeiiCrav3vcpBQ" name="col" type="_8S6eQAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VM9Qgt6EeiiCrav3vcpBQ" name="loc" type="_8S6eQgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VM9Qwt6EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VM9RAt6EeiiCrav3vcpBQ" name="vel" type="_8S6eQgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VM9RQt6EeiiCrav3vcpBQ" name="con" type="_8S0-sAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VM9Rgt6EeiiCrav3vcpBQ" name="updateStrat" type="_8O9yYQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VM9Rwt6EeiiCrav3vcpBQ" name="paintStrat" type="_8O6vEQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VM9SAt6EeiiCrav3vcpBQ" type="_8NsnEAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>setCol(col);
		setLoc(loc);
		setRad(rad);
		setVel(vel);
		setCon(con);
		setStrat(updateStrat);
		setRadDelta(5);
		setPaintStrat(paintStrat);
		paintStrat.init(this);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VM9SQt6EeiiCrav3vcpBQ" name="getRad" specification="_8Nt1MAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VM9Sgt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VM9Swt6EeiiCrav3vcpBQ" name="setRad" specification="_8Nt1Mgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VM9TAt6EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.rad = rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VM9TQt6EeiiCrav3vcpBQ" name="move" specification="_8NucQAt6EeiiCrav3vcpBQ">
          <language>java</language>
          <body>setLoc(new Point(getLoc().x + getVel().x, getLoc().y + getVel().y));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VM9Tgt6EeiiCrav3vcpBQ" name="update" specification="_8UB4kQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VM9Twt6EeiiCrav3vcpBQ" name="o" type="_8S7FUQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VM9UAt6EeiiCrav3vcpBQ" name="cmd" type="_8UBRhQt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>((IBallCmd) cmd).apply(this, (Dispatcher) o);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VM9UQt6EeiiCrav3vcpBQ" name="paint" specification="_8UCfoAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VM9Ugt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>getPaintStrat().paint(g, this);
//		g.setColor(this.getCol());
//		g.fillOval(this.getLoc().x - getRad(), this.getLoc().y - getRad(), getRad() * 2, getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VNkUAt6EeiiCrav3vcpBQ" name="getStrat" specification="_8NucQQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VNkUQt6EeiiCrav3vcpBQ" type="_8O9yYQt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VNkUgt6EeiiCrav3vcpBQ" name="setStrat" specification="_8S8TcQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VNkUwt6EeiiCrav3vcpBQ" name="strat" type="_8O9yYQt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>this.strat = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VNkVAt6EeiiCrav3vcpBQ" name="getItr" specification="_8NucQgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VNkVQt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VNkVgt6EeiiCrav3vcpBQ" name="setItr" specification="_8NvDUQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VNkVwt6EeiiCrav3vcpBQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.itr = itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VNkWAt6EeiiCrav3vcpBQ" name="bounce" specification="_8NvDUwt6EeiiCrav3vcpBQ">
          <language>java</language>
          <body>// Boundaries of the window
		int rightWall = getCon().getWidth();
		int bottomWall = getCon().getHeight();
		int leftWall = 0;
		int topWall = 0;
		
		int leftX = getLoc().x - getRad();
		int rightX = getLoc().x + getRad();
		
		int bottomY = getLoc().y + getRad();
		int topY = getLoc().y - getRad();
		
		int maxX = rightWall - getRad();
		int minX = getRad();
		
		int maxY = bottomWall - getRad();
		int minY = getRad();

		// Collision detected with left or right wall.
		if (leftX == leftWall || rightX == rightWall) {
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond right wall.
		else if (rightX > rightWall) {
			int diff = getLoc().x - maxX;
			setLoc(new Point(maxX - diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond left wall.
		else if (leftX &lt; leftWall) {
			int diff = minX - getLoc().x;
			setLoc(new Point(minX + diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Collision detected with top or bottom wall.
		else if (topY == topWall || bottomY == bottomWall) {
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond bottom wall.
		else if (bottomY > bottomWall) {
			int diff = getLoc().y - maxY;
			setLoc(new Point(getLoc().x, maxY - diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond top wall.
		else if (topY &lt; topWall) {
			int diff = minY - getLoc().y;
			setLoc(new Point(getLoc().x, minY + diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VNkWQt6EeiiCrav3vcpBQ" name="setPaintStrat" specification="_8S86gAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VNkWgt6EeiiCrav3vcpBQ" name="paintStrat" type="_8O6vEQt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>this.paintStrat = paintStrat;
		getPaintStrat().init(this);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8Nt1MAt6EeiiCrav3vcpBQ" name="getRad" method="_8VM9SQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8Vbmxwt6EeiiCrav3vcpBQ">
            <body>This returns the radius of the ball.
	 * @return the rad</body>
          </ownedComment>
          <ownedParameter xmi:id="_8Nt1MQt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8Nt1Mgt6EeiiCrav3vcpBQ" name="setRad" method="_8VM9Swt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VbmyAt6EeiiCrav3vcpBQ">
            <body>This sets the radius of the ball.
	 * @param rad the rad to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_8Nt1Mwt6EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8NucQAt6EeiiCrav3vcpBQ" name="move" method="_8VM9TQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VbmyQt6EeiiCrav3vcpBQ">
            <body>This function tells the ball to update its current location by the respective velocity
	 * component.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8NucQQt6EeiiCrav3vcpBQ" name="getStrat" method="_8VNkUAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VbmzAt6EeiiCrav3vcpBQ">
            <body>This function returns the ball's movement strategy.
	 * @return the strat</body>
          </ownedComment>
          <ownedParameter xmi:id="_8S8TcAt6EeiiCrav3vcpBQ" type="_8O9yYQt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8NucQgt6EeiiCrav3vcpBQ" name="getItr" method="_8VNkVAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8Vbmzgt6EeiiCrav3vcpBQ">
            <body>This function returns the current iteration of the ball.
	 * @return the itr</body>
          </ownedComment>
          <ownedParameter xmi:id="_8NvDUAt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8NvDUQt6EeiiCrav3vcpBQ" name="setItr" method="_8VNkVgt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8Vbmzwt6EeiiCrav3vcpBQ">
            <body>This function sets the current iteration of the ball.
	 * @param itr the itr to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_8NvDUgt6EeiiCrav3vcpBQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8NvDUwt6EeiiCrav3vcpBQ" name="bounce" method="_8VNkWAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8Vbm0At6EeiiCrav3vcpBQ">
            <body>This function checks to see if the ball has come into contact with one of the boundaries of the 
	 *  panel. If it has, this function reverses the velocity of the ball, simulating a rebound off
	 *  of the wall. If, due to the delay of the GUI thread, the ball has passed one of the panel
	 *  boundaries, this function moves the ball to the location it would be at if it had properly 
	 *  bounced off of the wall, and sets the velocity to its appropriate value.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8S8TcQt6EeiiCrav3vcpBQ" name="setStrat" method="_8VNkUgt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VbmzQt6EeiiCrav3vcpBQ">
            <body>This function sets the ball's movement strategy.
	 * @param strat the strat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_8S8Tcgt6EeiiCrav3vcpBQ" name="strat" type="_8O9yYQt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8S86gAt6EeiiCrav3vcpBQ" name="setPaintStrat" method="_8VNkWQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8Vbm0Qt6EeiiCrav3vcpBQ">
            <body>This function sets the paint strategy.
	 * @param paintStrat the paintStrat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_8S86gQt6EeiiCrav3vcpBQ" name="paintStrat" type="_8O6vEQt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UAqcAt6EeiiCrav3vcpBQ" name="Ball" method="_8VM9QAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8UBRgQt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8UBRggt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_8Vbmxgt6EeiiCrav3vcpBQ">
            <body>This is the Ball constructor, which sets its initial values.
	 * @param col The color of the ball
	 * @param loc The initial location of the ball.
	 * @param rad The radius of the ball.
	 * @param vel The initial velocity of the ball.
	 * @param con The container (component) on which the ball is drawn.
	 * @param updateStrat The IUpdateStrategy that decides how to update the ball.
	 * @param paintStrat The IPaintStrategy that decides how to paint the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UAqcQt6EeiiCrav3vcpBQ" name="col" type="_8S6eQAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UAqcgt6EeiiCrav3vcpBQ" name="loc" type="_8S6eQgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UAqcwt6EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UAqdAt6EeiiCrav3vcpBQ" name="vel" type="_8S6eQgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UAqdQt6EeiiCrav3vcpBQ" name="con" type="_8S0-sAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UAqdgt6EeiiCrav3vcpBQ" name="updateStrat" type="_8O9yYQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UBRgAt6EeiiCrav3vcpBQ" name="paintStrat" type="_8O6vEQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UBRgwt6EeiiCrav3vcpBQ" type="_8NsnEAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UB4kQt6EeiiCrav3vcpBQ" name="update" method="_8VM9Tgt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8Vbmygt6EeiiCrav3vcpBQ">
            <body>This function is required when implementing Observer, that tells the ball what to
	 * do when it is notified by the dispatcher.
	 * @param o An observable
	 * @param g An Object, which should be an IBallCmd</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UB4kgt6EeiiCrav3vcpBQ" name="o" type="_8S7FUQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UB4kwt6EeiiCrav3vcpBQ" name="cmd" type="_8UBRhQt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UCfoAt6EeiiCrav3vcpBQ" name="paint" method="_8VM9UQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8Vbmywt6EeiiCrav3vcpBQ">
            <body>This function determines how to paint the ball, and it delegates
	 * to the paint strategy's paint.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UCfoQt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8NyGoAt6EeiiCrav3vcpBQ" name="BallPaintStrategy">
        <ownedComment xmi:id="_8VcN0At6EeiiCrav3vcpBQ">
          <body>This is the ball paint strategy, which implements a paint strategy for a ball.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_8S-vsAt6EeiiCrav3vcpBQ" client="_8NyGoAt6EeiiCrav3vcpBQ" supplier="_8O6vEQt6EeiiCrav3vcpBQ" contract="_8O6vEQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VNkWwt6EeiiCrav3vcpBQ" name="paint" specification="_8UDtwAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VNkXAt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VNkXQt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>g.setColor(ball.getCol());
		g.fillOval(ball.getLoc().x - ball.getRad(), ball.getLoc().y - ball.getRad(),
				ball.getRad() * 2, ball.getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8NyGoQt6EeiiCrav3vcpBQ" name="BallPaintStrategy">
          <eAnnotations xmi:id="_8NyGogt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8NytsAt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8Nytsgt6EeiiCrav3vcpBQ" type="_8NyGoAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8TAk4At6EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_8TAk4Qt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UDtwAt6EeiiCrav3vcpBQ" name="paint" method="_8VNkWwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8UDtwQt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UEU0At6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8NzUwAt6EeiiCrav3vcpBQ" name="BallWorldModel">
        <ownedComment xmi:id="_8VcN0Qt6EeiiCrav3vcpBQ">
          <body>This is the BallWorldModel class, which makes balls, clears balls, and updates the balls.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_8UucIAt6EeiiCrav3vcpBQ" name="adapter" visibility="private" type="_8O6IAAt6EeiiCrav3vcpBQ" association="_8VreYAt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8UucIQt6EeiiCrav3vcpBQ" value="IModel2ViewAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8UvDMQt6EeiiCrav3vcpBQ" name="timeSlice" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8UvDMgt6EeiiCrav3vcpBQ" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8UvqQQt6EeiiCrav3vcpBQ" name="dispatcher" visibility="private" type="_8PbFYAt6EeiiCrav3vcpBQ" association="_8VreYwt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8UwRUAt6EeiiCrav3vcpBQ" value="new Dispatcher()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8UxfcAt6EeiiCrav3vcpBQ" name="timer" visibility="private" type="_8TDBIQt6EeiiCrav3vcpBQ" association="_8VsFcQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8UxfcQt6EeiiCrav3vcpBQ" value="new Timer(timeSlice, (e) -> adapter.update())"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VOLYAt6EeiiCrav3vcpBQ" name="BallWorldModel" specification="_8TDoMAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VOLYQt6EeiiCrav3vcpBQ" name="adapter" type="_8O6IAAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VOLYgt6EeiiCrav3vcpBQ" type="_8NzUwAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.adapter = adapter;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VOLYwt6EeiiCrav3vcpBQ" name="clearBalls" specification="_8Nz70At6EeiiCrav3vcpBQ">
          <language>java</language>
          <body>dispatcher.deleteObservers();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VOLZAt6EeiiCrav3vcpBQ" name="start" specification="_8Nz70Qt6EeiiCrav3vcpBQ">
          <language>java</language>
          <body>timer.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VOLZQt6EeiiCrav3vcpBQ" name="update" specification="_8UFi8At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VOLZgt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll((IBallCmd) (ball, disp)->{
         // Whatever you want to do with the context Ball!
			ball.setItr(ball.getItr() + 1);
			ball.getStrat().updateState(ball, disp);
			ball.move();
			ball.bounce();
			ball.paint((Graphics) g);
		});
//        dispatcher.notifyAll(g);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VOLZwt6EeiiCrav3vcpBQ" name="loadStrategy" specification="_8N0i4At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VOLaAt6EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VOLaQt6EeiiCrav3vcpBQ" type="_8O9yYQt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>Object[] args =  new Object[]{};
		java.lang.reflect.Constructor&lt;?> cons[];
		try {
			cons = Class.forName(strat).getConstructors();
			return (IUpdateStrategy) cons[0].newInstance(args);
		} catch (Exception e) {
			return IStrategyFac._errorStrategyFac.make();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VOLagt6EeiiCrav3vcpBQ" name="fixName" specification="_8N0i4gt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VOLawt6EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VOLbAt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;model.&quot; + classname.substring(0, 1).toUpperCase() + classname.substring(1).toLowerCase() + &quot;Strategy&quot;;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VOLbQt6EeiiCrav3vcpBQ" name="makeStrategyFac" specification="_8N1J8At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VOLbgt6EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VOLbwt6EeiiCrav3vcpBQ" type="_8O8kQAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>if (null == classname) {
			return IStrategyFac._errorStrategyFac;
		}
	    return new IStrategyFac() {
	        /**
	         * Instantiate a strategy corresponding to the given class name.
	         * @return An IUpdateStrategy instance
	         */
	        public IUpdateStrategy make() {
	        		return loadStrategy(fixName(classname));
	        }

	        /**
	         * Return the given class name string
	         */
	        public String toString() {
	            return classname;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VOycAt6EeiiCrav3vcpBQ" name="makeBall" specification="_8TEPQgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VOycQt6EeiiCrav3vcpBQ" name="make" type="_8O9yYQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VOycgt6EeiiCrav3vcpBQ" name="paintStrat" type="_8O6vEQt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>Container con = adapter.getCanvas();
		Randomizer rzr = Randomizer.Singleton;
		
		int startRad = rzr.randomInt(10, 45);
		Point randLoc = rzr.randomLoc(new Rectangle(con.getWidth() - startRad, con.getHeight() - startRad));
		Point startLoc = new Point(randLoc.x + startRad, randLoc.y + startRad);
		Point startVel = new Point(0, 0);

		// Handles case where both x- and y-components of velocity are 0 to prevent ball from starting stationary.
		while (startVel.x == 0 &amp;&amp; startVel.y == 0) {
			startVel = new Point(rzr.randomInt(-20, 20), rzr.randomInt(-20, 20));
		}
		Color startCol = rzr.randomColor();
		
		Ball loaded = new Ball(startCol, startLoc, startRad, startVel, con, make, paintStrat);
		dispatcher.addObserver(loaded);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VOycwt6EeiiCrav3vcpBQ" name="combineStrategyFacs" specification="_8TEPRQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VOydAt6EeiiCrav3vcpBQ" name="stratFac1" type="_8O8kQAt6EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_8VOydQt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_8VOydgt6EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_8VOydwt6EeiiCrav3vcpBQ" name="stratFac2" type="_8O8kQAt6EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_8VOyeAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_8VOyeQt6EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_8VOyegt6EeiiCrav3vcpBQ" type="_8O8kQAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>if (null == stratFac1 || null == stratFac2) {
	    		return IStrategyFac._errorStrategyFac;
	    	}
	    
	    return new IStrategyFac() {
	        /**
	         * Instantiate a new MultiStrategy with the strategies from the given strategy factories
	         * @return A MultiStrategy instance
	         */
	        public IUpdateStrategy make() {
	            return new MultiStrategy(stratFac1.make(), stratFac2.make());
	        }

	        /**
	         * Return a string that is the toString()'s of the given strategy factories concatenated with a &quot;-&quot;
	         */
	        public String toString() {
	            return stratFac1.toString() + &quot;-&quot; + stratFac2.toString();
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VOyewt6EeiiCrav3vcpBQ" name="setSwitcherStrategy" specification="_8TE2Vgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VOyfAt6EeiiCrav3vcpBQ" name="switchFac" type="_8O8kQAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>SwitcherStrategy.setStrat(switchFac.make());
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VOyfQt6EeiiCrav3vcpBQ" name="getSwitcherFac" specification="_8N1xAAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VOyfgt6EeiiCrav3vcpBQ" type="_8O8kQAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return IStrategyFac.switcherStrat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VOyfwt6EeiiCrav3vcpBQ" name="makePaintFactory" specification="_8N1xAQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VOygAt6EeiiCrav3vcpBQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VOygQt6EeiiCrav3vcpBQ" type="_8O8kQAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return new IStrategyFac() {
	        public IUpdateStrategy make() {
	        		return new StraightStrategy();
	        }
 
	        public String toString() {
	            return text;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return loadPaintStrat(fixPaintName(text));
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VOyggt6EeiiCrav3vcpBQ" name="loadPaintStrat" specification="_8N1xAwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VOygwt6EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VOyhAt6EeiiCrav3vcpBQ" type="_8O6vEQt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>if (strat.endsWith(&quot;ImagePaintStrategy&quot;)) {
			int imgInd = strat.indexOf(&quot;ImagePaintStrategy&quot;);
			String nameFile = strat.substring(6, imgInd);
			
			String filename = &quot;images/&quot; + nameFile + &quot;.gif&quot;;
			
			Object[] args =  new Object[]{filename, 1.0};
			java.lang.reflect.Constructor&lt;?> cons[];
			try {
				cons = Class.forName(&quot;model.ImagePaintStrategy&quot;).getConstructors();
				if (cons[0].getParameterCount() == 2) {
					return (IPaintStrategy) cons[0].newInstance(args);
				} else {
					return (IPaintStrategy) cons[1].newInstance(args);
				}
				
			} catch (Exception e) {
				System.out.println(e);
				return IStrategyFac._errorStrategyFac.makePaint();
			}
		} else if (strat.endsWith(&quot;CompositePaintStrategy&quot;)) {
			APaintStrategy[] pstrats = {new ImagePaintStrategy(&quot;images/Mars.gif&quot;, 1.0), new ImagePaintStrategy(&quot;images/Mario.gif&quot;, 1.0)};
			return new UprightCompositePaintStrategy(pstrats);
		} else {
			Object[] args =  new Object[]{};
			java.lang.reflect.Constructor&lt;?> cons[];
			try {
				cons = Class.forName(strat).getConstructors();
				return (IPaintStrategy) cons[0].newInstance(args);
			} catch (Exception e) {
				return IStrategyFac._errorStrategyFac.makePaint();
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VPZgAt6EeiiCrav3vcpBQ" name="fixPaintName" specification="_8N2YEAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VPZgQt6EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VPZggt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String classnameLower = classname.toLowerCase();
		if (classnameLower.endsWith(&quot;image&quot;)) {
			int indImg = classnameLower.indexOf(&quot;image&quot;);
			String imgType = classnameLower.substring(0, indImg);
			return &quot;model.&quot; + imgType.substring(0, 1).toUpperCase() + imgType.substring(1).toLowerCase() + &quot;ImagePaintStrategy&quot;;
		}
		return &quot;model.&quot; + classname.substring(0, 1).toUpperCase() + classname.substring(1).toLowerCase() + &quot;PaintStrategy&quot;;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8Nz70At6EeiiCrav3vcpBQ" name="clearBalls" method="_8VOLYwt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VcN0wt6EeiiCrav3vcpBQ">
            <body>This function clears all the balls from the canvas, by removing them as observers.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8Nz70Qt6EeiiCrav3vcpBQ" name="start" method="_8VOLZAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VcN1At6EeiiCrav3vcpBQ">
            <body>This function starts the timer.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8N0i4At6EeiiCrav3vcpBQ" name="loadStrategy" method="_8VOLZwt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VcN1gt6EeiiCrav3vcpBQ">
            <body>This function takes an input string and loads the associated IUpdateStrategy,
	 * and returns the error strategy if the strategy isn't available.
	 * @param strat A string of the strategy to be created.
	 * @return The IUpdateStrategy associated with the string, or the error strategy if
	 * there is no associated strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8N0i4Qt6EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8TEPQAt6EeiiCrav3vcpBQ" type="_8O9yYQt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8N0i4gt6EeiiCrav3vcpBQ" name="fixName" method="_8VOLagt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VcN1wt6EeiiCrav3vcpBQ">
            <body>This function takes the input and confirms it to the required model.ClassStrategy format for
	 * dynamic class loading.
	 * @param classname The string that should be modified to conform to the model.ClassStrategy format.
	 * @return The class string in a model.ClassStrategy format.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8N0i4wt6EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8N0i5At6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8N1J8At6EeiiCrav3vcpBQ" name="makeStrategyFac" method="_8VOLbQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VcN2At6EeiiCrav3vcpBQ">
            <body>This takes a class name, and creates a strategy factory for it, by loading the strategy and returning it
	 * in the make method.
	 * @param classname The class of strategy to make.
	 * @return An IStrategyFac whose make function calls the associated model.ClassStrategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8N1J8Qt6EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8TEPQQt6EeiiCrav3vcpBQ" type="_8O8kQAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8N1xAAt6EeiiCrav3vcpBQ" name="getSwitcherFac" method="_8VOyfQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VcN3At6EeiiCrav3vcpBQ">
            <body>This function returns a strategy factory, which makes the current switcher balls' update
	 * strategy
	 * @return An IStrategyFac, which makes the current strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8TE2WAt6EeiiCrav3vcpBQ" type="_8O8kQAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8N1xAQt6EeiiCrav3vcpBQ" name="makePaintFactory" method="_8VOyfwt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VcN3Qt6EeiiCrav3vcpBQ">
            <body>This function returns an IStrategyFac to allow the Paint Strategies to be made later on.
	 * @param text The type of paint strategy.
	 * @return An IStrategyFac</body>
          </ownedComment>
          <ownedParameter xmi:id="_8N1xAgt6EeiiCrav3vcpBQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8TE2WQt6EeiiCrav3vcpBQ" type="_8O8kQAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8N1xAwt6EeiiCrav3vcpBQ" name="loadPaintStrat" method="_8VOyggt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VcN3gt6EeiiCrav3vcpBQ">
            <body>This function loads an instance of an IPaintStrategy, given a classname.
	 * @param strat The type of paint strategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_8N1xBAt6EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8TE2Wgt6EeiiCrav3vcpBQ" type="_8O6vEQt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8N2YEAt6EeiiCrav3vcpBQ" name="fixPaintName" method="_8VPZgAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VcN3wt6EeiiCrav3vcpBQ">
            <body>This function &quot;fixes&quot; the type passed in to create an IPaintStrategy.
	 * @param classname The type of paint strategy to create.
	 * @return The fixed paint strategy information as a string.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8N2YEQt6EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8N2YEgt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8TDoMAt6EeiiCrav3vcpBQ" name="BallWorldModel" method="_8VOLYAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8TDoMgt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8TDoMwt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_8VcN0gt6EeiiCrav3vcpBQ">
            <body>This is the BallWorldModel constructor, which creates a model for the controller to interact with.
	 * @param adapter An IModel2ViewAdapter.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8TDoMQt6EeiiCrav3vcpBQ" name="adapter" type="_8O6IAAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8TDoNAt6EeiiCrav3vcpBQ" type="_8NzUwAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8TEPQgt6EeiiCrav3vcpBQ" name="makeBall" method="_8VOycAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VcN2Qt6EeiiCrav3vcpBQ">
            <body>This function randomizes parameters for the ball, and makes a ball with the parameter's update strategy.
	 * @param make The IUpdateStrategy that determines how the ball updates.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8TEPQwt6EeiiCrav3vcpBQ" name="make" type="_8O9yYQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8TEPRAt6EeiiCrav3vcpBQ" name="paintStrat" type="_8O6vEQt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8TEPRQt6EeiiCrav3vcpBQ" name="combineStrategyFacs" method="_8VOycwt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VcN2gt6EeiiCrav3vcpBQ">
            <body>Returns an IStrategyFac that can instantiate a MultiStrategy with the two
	 * strategies made by the two given IStrategyFac objects. Returns null if
	 * either supplied factory is null. The toString() of the returned factory
	 * is the toString()'s of the two given factories, concatenated with &quot;-&quot;. 
	 * If either factory is null, then a factory for a beeping error strategy is returned.
	 * 
	 * @param stratFac1 An IStrategyFac for a strategy
	 * @param stratFac2 An IStrategyFac for a strategy
	 * @return An IStrategyFac for the composition of the two strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_8TEPRgt6EeiiCrav3vcpBQ" name="stratFac1" type="_8O8kQAt6EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_8TE2Ugt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_8TE2Uwt6EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_8TE2UAt6EeiiCrav3vcpBQ" name="stratFac2" type="_8O8kQAt6EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_8TE2VAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_8TE2VQt6EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_8TE2UQt6EeiiCrav3vcpBQ" type="_8O8kQAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8TE2Vgt6EeiiCrav3vcpBQ" name="setSwitcherStrategy" method="_8VOyewt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VcN2wt6EeiiCrav3vcpBQ">
            <body>This function sets the switcher balls strategy to the one made by the input.
	 * @param switchFac IStrategyFac which makes the new update strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8TE2Vwt6EeiiCrav3vcpBQ" name="switchFac" type="_8O8kQAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UFi8At6EeiiCrav3vcpBQ" name="update" method="_8VOLZQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VcN1Qt6EeiiCrav3vcpBQ">
            <body>This function updates all the balls by notifying them using the dispatcher
	 * and an IBallCmd
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UFi8Qt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8N4NQAt6EeiiCrav3vcpBQ" name="BreathingStrategy">
        <ownedComment xmi:id="_8VcN4At6EeiiCrav3vcpBQ">
          <body>This class defines a Breathing Strategy, which grows and shrinks the ball's radius.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_8TFdYAt6EeiiCrav3vcpBQ" client="_8N4NQAt6EeiiCrav3vcpBQ" supplier="_8O9yYQt6EeiiCrav3vcpBQ" contract="_8O9yYQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VPZgwt6EeiiCrav3vcpBQ" name="updateState" specification="_8TGEcAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VPZhAt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VPZhQt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getItr() % 5 == 0) {
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8TGEcAt6EeiiCrav3vcpBQ" name="updateState" method="_8VPZgwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8TGEcQt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8TGEcgt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8N5bYAt6EeiiCrav3vcpBQ" name="ColorStrategy">
        <ownedComment xmi:id="_8VcN4Qt6EeiiCrav3vcpBQ">
          <body>This class defines a Color Strategy, which changes the ball's color.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_8TGEdgt6EeiiCrav3vcpBQ" client="_8N5bYAt6EeiiCrav3vcpBQ" supplier="_8O9yYQt6EeiiCrav3vcpBQ" contract="_8O9yYQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VPZhgt6EeiiCrav3vcpBQ" name="updateState" specification="_8TGrgAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VPZhwt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VPZiAt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (ball.getItr() % 10 == 0) {
						Color newColor = Randomizer.Singleton.randomColor();
						ball.setCol(newColor);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8TGrgAt6EeiiCrav3vcpBQ" name="updateState" method="_8VPZhgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8TGrgQt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8TGrggt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8N6pgAt6EeiiCrav3vcpBQ" name="CompositePaintStrategy">
        <ownedComment xmi:id="_8VcN4gt6EeiiCrav3vcpBQ">
          <body>This class defines a CompositePaintStrategy, which is a concrete class of MultiPaintStrategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_8TIgsAt6EeiiCrav3vcpBQ" general="_8PCD0At6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VPZiQt6EeiiCrav3vcpBQ" name="CompositePaintStrategy" specification="_8THSkAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VPZigt6EeiiCrav3vcpBQ" name="pstrats" type="_8No8sAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8VPZiwt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VPZjAt6EeiiCrav3vcpBQ" type="_8N6pgAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VPZjQt6EeiiCrav3vcpBQ" name="CompositePaintStrategy" specification="_8UGxEAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VPZjgt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VPZjwt6EeiiCrav3vcpBQ" name="pstrats" type="_8No8sAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8VPZkAt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VPZkQt6EeiiCrav3vcpBQ" type="_8N6pgAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, pstrats);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8THSkAt6EeiiCrav3vcpBQ" name="CompositePaintStrategy" method="_8VPZiQt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8TH5oQt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8TH5ogt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8TH5oAt6EeiiCrav3vcpBQ" name="pstrats" type="_8No8sAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8TH5pAt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8TH5owt6EeiiCrav3vcpBQ" type="_8N6pgAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UGxEAt6EeiiCrav3vcpBQ" name="CompositePaintStrategy" method="_8VPZjQt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8UGxEwt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8UGxFAt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8UGxEQt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UGxEgt6EeiiCrav3vcpBQ" name="pstrats" type="_8No8sAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8UGxFgt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UGxFQt6EeiiCrav3vcpBQ" type="_8N6pgAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8N73oAt6EeiiCrav3vcpBQ" name="CrashStrategy">
        <ownedComment xmi:id="_8Vc04At6EeiiCrav3vcpBQ">
          <body>This class defines a Crash Strategy which makes the ball
change color when it bounces from the boundaries of the canvas.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_8TIgsQt6EeiiCrav3vcpBQ" client="_8N73oAt6EeiiCrav3vcpBQ" supplier="_8O9yYQt6EeiiCrav3vcpBQ" contract="_8O9yYQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VQAkAt6EeiiCrav3vcpBQ" name="updateState" specification="_8TIgsgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VQAkQt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VQAkgt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					
					if ((ball.getLoc().x + ball.getRad() + 8 >= ball.getCon().getWidth()) ||
							(ball.getLoc().x - ball.getRad() &lt;= 8) ||
							(ball.getLoc().y + ball.getRad() >= ball.getCon().getHeight() - 8) ||
							(ball.getLoc().y - ball.getRad() &lt;= 8)) {
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8TIgsgt6EeiiCrav3vcpBQ" name="updateState" method="_8VQAkAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8TIgswt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8TJHwAt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8N8esAt6EeiiCrav3vcpBQ" name="EllipsePaintStrategy">
        <ownedComment xmi:id="_8Vc04Qt6EeiiCrav3vcpBQ">
          <body>This class defines a paint strategy to paint an ellipse shape.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_8TJu0gt6EeiiCrav3vcpBQ" general="_8PLNwAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VQAkwt6EeiiCrav3vcpBQ" name="EllipsePaintStrategy" specification="_8N9FwAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VQAlAt6EeiiCrav3vcpBQ" type="_8N8esAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 4.0/3.0, 2.0/3.0);
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VQAlQt6EeiiCrav3vcpBQ" name="EllipsePaintStrategy" specification="_8UHYIAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VQAlgt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VQAlwt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VQAmAt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VQAmQt6EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VQAmgt6EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VQAmwt6EeiiCrav3vcpBQ" type="_8N8esAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, EllipseShapeFactory.Singleton.makeShape(x, y, width, height));
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8N9FwAt6EeiiCrav3vcpBQ" name="EllipsePaintStrategy" method="_8VQAkwt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8N9FwQt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8N9Fwgt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8N9Fwwt6EeiiCrav3vcpBQ" type="_8N8esAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UHYIAt6EeiiCrav3vcpBQ" name="EllipsePaintStrategy" method="_8VQAlQt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8UHYJgt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8UHYJwt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8UHYIQt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UHYIgt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UHYIwt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UHYJAt6EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UHYJQt6EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UHYKAt6EeiiCrav3vcpBQ" type="_8N8esAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8N9s0At6EeiiCrav3vcpBQ" name="EllipseShapeFactory">
        <ownedComment xmi:id="_8Vc04gt6EeiiCrav3vcpBQ">
          <body>This class defines a shape factory to make Ellipses.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_8UytkAt6EeiiCrav3vcpBQ" name="Singleton" isLeaf="true" isStatic="true" type="_8N9s0At6EeiiCrav3vcpBQ" isReadOnly="true" association="_8VssgQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8UzUoAt6EeiiCrav3vcpBQ" value="new EllipseShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_8TLkAAt6EeiiCrav3vcpBQ" client="_8N9s0At6EeiiCrav3vcpBQ" supplier="_8O7WIAt6EeiiCrav3vcpBQ" contract="_8O7WIAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VQAnAt6EeiiCrav3vcpBQ" name="makeShape" specification="_8N-T4At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VQAnQt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VQAngt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VQAnwt6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VQAoAt6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VQAoQt6EeiiCrav3vcpBQ" type="_8TKV4At6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>Shape ellipse = new Ellipse2D.Double(x, y, xScale, yScale);
		return ellipse;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8N-T4At6EeiiCrav3vcpBQ" name="makeShape" method="_8VQAnAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8N-T4Qt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8N-T4gt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8N-T4wt6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8N-T5At6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UH_MAt6EeiiCrav3vcpBQ" type="_8TKV4At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8O4S0At6EeiiCrav3vcpBQ" name="FastStrategy">
        <ownedComment xmi:id="_8Vc04wt6EeiiCrav3vcpBQ">
          <body>This class defines a Fast Strategy that makes the ball's velocity increase and stop once it reaches
a pre defined max speed.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_8TLkAQt6EeiiCrav3vcpBQ" client="_8O4S0At6EeiiCrav3vcpBQ" supplier="_8O9yYQt6EeiiCrav3vcpBQ" contract="_8O9yYQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VQAogt6EeiiCrav3vcpBQ" name="updateState" specification="_8TMLEAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VQAowt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VQApAt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (Math.abs(ball.getVel().x) &lt; 100 &amp;&amp; Math.abs(ball.getVel().y) &lt; 100) {
						if (ball.getItr() % 10 == 0) {
							if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y + 2));
							} else if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y - 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y + 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y - 2));
							}
						}
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8TMLEAt6EeiiCrav3vcpBQ" name="updateState" method="_8VQAogt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8TMyIAt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8TMyIQt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_8O454At6EeiiCrav3vcpBQ" name="IBallCmd" isAbstract="true">
        <ownedOperation xmi:id="_8TMyJQt6EeiiCrav3vcpBQ" name="apply" isAbstract="true">
          <ownedParameter xmi:id="_8TMyJgt6EeiiCrav3vcpBQ" name="context" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8TNZMAt6EeiiCrav3vcpBQ" name="disp" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_8O6IAAt6EeiiCrav3vcpBQ" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_8Vc05At6EeiiCrav3vcpBQ">
          <body>This is an interface which defines the functions that the model wants the view to have/do.
@author sn32, kyl3</body>
        </ownedComment>
        <ownedAttribute xmi:id="_8O6IAgt6EeiiCrav3vcpBQ" name="canvas" type="_8S0-sAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8VnM8At6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8O6IAwt6EeiiCrav3vcpBQ" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_8O6IAAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8VnM8wt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8O6vEAt6EeiiCrav3vcpBQ" value="new IModel2ViewAdapter() {&#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is an update function that we want the view to have.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public void update() {&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9; &#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is a function that gets the canvas from the view.&#xA;&#x9;&#x9;  * @return A container that is initially null.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public Container getCanvas() {&#xA;&#x9;&#x9;&#x9; return null;&#xA;&#x9;&#x9; }&#xA;&#x9; }"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_8O6IAQt6EeiiCrav3vcpBQ" name="update">
          <ownedComment xmi:id="_8Vc05Qt6EeiiCrav3vcpBQ">
            <body>This is an update function that we want the view to have.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_8O6vEQt6EeiiCrav3vcpBQ" name="IPaintStrategy">
        <ownedComment xmi:id="_8Vc05gt6EeiiCrav3vcpBQ">
          <body>This is an interface for an IPaintStrategy that defines the methods we want it to have.
@author sn32, ll45</body>
        </ownedComment>
        <ownedOperation xmi:id="_8TOAQAt6EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_8TOAQQt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UH_MQt6EeiiCrav3vcpBQ" name="paint">
          <ownedParameter xmi:id="_8UH_Mgt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UH_Mwt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_8O7WIAt6EeiiCrav3vcpBQ" name="IShapeFactory">
        <ownedComment xmi:id="_8Vc05wt6EeiiCrav3vcpBQ">
          <body>This interface defines the methods we want a shape factory to have.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_8O79MAt6EeiiCrav3vcpBQ" name="makeShape">
          <ownedParameter xmi:id="_8O79MQt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8O79Mgt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8O79Mwt6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8O79NAt6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UImQAt6EeiiCrav3vcpBQ" type="_8TKV4At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_8O8kQAt6EeiiCrav3vcpBQ" name="IStrategyFac">
        <ownedComment xmi:id="_8Vc06At6EeiiCrav3vcpBQ">
          <body>This interface defines the functions we want IStrategyFac to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_8O9LUAt6EeiiCrav3vcpBQ" name="_errorStrategyFac" type="_8O8kQAt6EeiiCrav3vcpBQ" association="_8VnM9gt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8O9LUQt6EeiiCrav3vcpBQ" value="new IStrategyFac(){&#xA;        /**&#xA;         * Make the beeping error strategy&#xA;         * @return  An instance of a beeping error strategy&#xA;         */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;            return new IUpdateStrategy() {&#xA;                private int count = 0; // update counter&#xA;                &#xA;                /**&#xA;                 * Beep the speaker every 25 updates&#xA;                 */&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void updateState(Ball ball, Dispatcher dispatcher) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(25 &lt; count++){&#xA;                        java.awt.Toolkit.getDefaultToolkit().beep(); &#xA;                        count = 0;&#xA;                    }&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;            };&#xA;        }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;}&#xA;    }"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8O9LUwt6EeiiCrav3vcpBQ" name="switcherStrat" type="_8O8kQAt6EeiiCrav3vcpBQ" association="_8Vn0AQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8O9LVAt6EeiiCrav3vcpBQ" value="new IStrategyFac() {&#xA;    &#x9;&#x9;/**&#xA;    &#x9;&#x9; * This function makes the switcher strategy.&#xA;    &#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;&#x9;&#x9;&#x9;return new SwitcherStrategy();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_8O8kQQt6EeiiCrav3vcpBQ" name="make">
          <ownedComment xmi:id="_8Vc06Qt6EeiiCrav3vcpBQ">
            <body>This function allows IStrategyFac to make an IUpdateStrategy.
	 * @return An IUpdateStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_8TOAQgt6EeiiCrav3vcpBQ" type="_8O9yYQt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8O8kQgt6EeiiCrav3vcpBQ" name="makePaint">
          <ownedComment xmi:id="_8Vc06gt6EeiiCrav3vcpBQ">
            <body>This function allows IStrategyFac to make an IPaintStrategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_8TOAQwt6EeiiCrav3vcpBQ" type="_8O6vEQt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_8O9yYQt6EeiiCrav3vcpBQ" name="IUpdateStrategy">
        <ownedComment xmi:id="_8Vc06wt6EeiiCrav3vcpBQ">
          <body>This interface defines the functions we want IUpdateStrategies to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedOperation xmi:id="_8TOARAt6EeiiCrav3vcpBQ" name="updateState">
          <ownedParameter xmi:id="_8TOnUAt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8TOnUQt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8O-ZcAt6EeiiCrav3vcpBQ" name="ImagePaintStrategy">
        <ownedComment xmi:id="_8Vc07At6EeiiCrav3vcpBQ">
          <body>This class defines a paint strategy for an image that extends APaintStrategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_8TRqoAt6EeiiCrav3vcpBQ" general="_8No8sAt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8UzUoQt6EeiiCrav3vcpBQ" name="scaleFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8Uz7sAt6EeiiCrav3vcpBQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8U0iwQt6EeiiCrav3vcpBQ" name="fillFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8U1J0At6EeiiCrav3vcpBQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8U1J0gt6EeiiCrav3vcpBQ" name="localAT" visibility="private" type="_8S3a8At6EeiiCrav3vcpBQ" association="_8VsshAt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8U1J0wt6EeiiCrav3vcpBQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8U1w4At6EeiiCrav3vcpBQ" name="tempAT" type="_8S3a8At6EeiiCrav3vcpBQ" association="_8VtTkQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8U1w4Qt6EeiiCrav3vcpBQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8U1w4gt6EeiiCrav3vcpBQ" name="filename" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8U1w4wt6EeiiCrav3vcpBQ" name="image" visibility="private" type="_8TP1cQt6EeiiCrav3vcpBQ" association="_8Vt6oQt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8U2X8Qt6EeiiCrav3vcpBQ" name="imageObs" visibility="private" type="_8S0-sAt6EeiiCrav3vcpBQ" association="_8Vw98Qt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VQnoAt6EeiiCrav3vcpBQ" name="ImagePaintStrategy" specification="_8O_nkAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VQnoQt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VQnogt6EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VQnowt6EeiiCrav3vcpBQ" type="_8O-ZcAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super (new AffineTransform());
		this.fillFactor = fillFactor;
		this.setFilename(filename);
				
		try {
			image =  Toolkit.getDefaultToolkit().getImage(filename);	
			
		} catch (Exception e) {
			System.out.println(&quot;failed&quot;);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VQnpAt6EeiiCrav3vcpBQ" name="ImagePaintStrategy" specification="_8UJNUAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VQnpQt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VQnpgt6EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VQnpwt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VQnqAt6EeiiCrav3vcpBQ" type="_8O-ZcAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.fillFactor = fillFactor;
		this.setFilename(filename);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VQnqQt6EeiiCrav3vcpBQ" name="init" specification="_8TRDkAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VQnqgt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>imageObs = ball.getCon();
		MediaTracker mt = new MediaTracker(ball.getCon());
		mt.addImage(image, 1);
		try {
			mt.waitForAll();
		} catch(Exception e){
			System.out.println(&quot;ImagePaintStrategy.init(): Error waiting for image.  Exception = &quot;+e);
		}
		scaleFactor = 2.0/(fillFactor*(image.getWidth(imageObs)+image.getHeight(imageObs))/2.0); // this line is described below
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VQnqwt6EeiiCrav3vcpBQ" name="paintXfrm" specification="_8UJ0YAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VQnrAt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VQnrQt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VQnrgt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>localAT.setToScale(scaleFactor, scaleFactor);
		localAT.translate(-image.getWidth(imageObs)/2.0, -image.getHeight(imageObs)/2.0);
		localAT.preConcatenate(at);
		((Graphics2D)g).drawImage(image, localAT, imageObs); 
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VQnrwt6EeiiCrav3vcpBQ" name="setFilename" specification="_8PAOoAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VQnsAt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.filename = filename;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8O_nkAt6EeiiCrav3vcpBQ" name="ImagePaintStrategy" method="_8VQnoAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8O_nkwt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8O_nlAt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_8Vc07Qt6EeiiCrav3vcpBQ">
            <body>This is a constructor for the Image Paint Strategy that doesn't take an Affine Transform.
	 * @param filename String that is the path to the image file to load
	 * @param fillFactor A double that is the fill factor</body>
          </ownedComment>
          <ownedParameter xmi:id="_8O_nkQt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8O_nkgt6EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8O_nlQt6EeiiCrav3vcpBQ" type="_8O-ZcAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8PAOoAt6EeiiCrav3vcpBQ" name="setFilename" method="_8VQnrwt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8Vc08At6EeiiCrav3vcpBQ">
            <body>This function sets the filename.
	 * @param filename the filename to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_8PAOoQt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8TRDkAt6EeiiCrav3vcpBQ" name="init" method="_8VQnqQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8Vc07wt6EeiiCrav3vcpBQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8TRDkQt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UJNUAt6EeiiCrav3vcpBQ" name="ImagePaintStrategy" method="_8VQnpAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8UJNVAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8UJNVQt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_8Vc07gt6EeiiCrav3vcpBQ">
            <body>This is a constructor for Image Paint Strategy that takes an Affine Transform.
	 * @param filename String that is the path to the image file to load.
	 * @param fillFactor A double that is the fill factor
	 * @param at An Affine Transform.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UJNUQt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UJNUgt6EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UJNUwt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UJNVgt6EeiiCrav3vcpBQ" type="_8O-ZcAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UJ0YAt6EeiiCrav3vcpBQ" name="paintXfrm" method="_8VQnqwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8UJ0YQt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UJ0Ygt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UJ0Ywt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PCD0At6EeiiCrav3vcpBQ" name="MultiPaintStrategy">
        <ownedComment xmi:id="_8Vc08Qt6EeiiCrav3vcpBQ">
          <body>This class defines a multi paint strategy which is the composition of other paint strategies.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_8TVVAAt6EeiiCrav3vcpBQ" general="_8No8sAt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8U2_AAt6EeiiCrav3vcpBQ" name="pstrats" visibility="private" type="_8No8sAt6EeiiCrav3vcpBQ" association="_8VxlAQt6EeiiCrav3vcpBQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8U2_AQt6EeiiCrav3vcpBQ" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VROsAt6EeiiCrav3vcpBQ" name="MultiPaintStrategy" specification="_8TS4wAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VROsQt6EeiiCrav3vcpBQ" name="pstrats" type="_8No8sAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8VROsgt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VROswt6EeiiCrav3vcpBQ" type="_8PCD0At6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(new AffineTransform());&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VROtAt6EeiiCrav3vcpBQ" name="MultiPaintStrategy" specification="_8ULCgAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VROtQt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VROtgt6EeiiCrav3vcpBQ" name="pstrats" type="_8No8sAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8VROtwt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VROuAt6EeiiCrav3vcpBQ" type="_8PCD0At6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at);&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VROuQt6EeiiCrav3vcpBQ" name="init" specification="_8TUt8At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VROugt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
		    strategy.init(ball);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VROuwt6EeiiCrav3vcpBQ" name="paintXfrm" specification="_8ULpkAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VROvAt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VROvQt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VROvgt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
			strategy.paintXfrm(g, ball, at);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8TS4wAt6EeiiCrav3vcpBQ" name="MultiPaintStrategy" method="_8VROsAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8TTf0Qt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8TTf0gt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_8Vc08gt6EeiiCrav3vcpBQ">
            <body>This is a constructor that doesn't take in an affine transform.&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_8TTf0At6EeiiCrav3vcpBQ" name="pstrats" type="_8No8sAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8TTf1At6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8TTf0wt6EeiiCrav3vcpBQ" type="_8PCD0At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8TUt8At6EeiiCrav3vcpBQ" name="init" method="_8VROuQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8Vdb8Qt6EeiiCrav3vcpBQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8TUt8Qt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8ULCgAt6EeiiCrav3vcpBQ" name="MultiPaintStrategy" method="_8VROtAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8ULCgwt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8ULChAt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_8Vdb8At6EeiiCrav3vcpBQ">
            <body>This is a constructor that does take in an affine transform.&#xD;
	 * @param at An affine transform&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_8ULCgQt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8ULCggt6EeiiCrav3vcpBQ" name="pstrats" type="_8No8sAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8ULChgt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8ULChQt6EeiiCrav3vcpBQ" type="_8PCD0At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8ULpkAt6EeiiCrav3vcpBQ" name="paintXfrm" method="_8VROuwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8ULpkQt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8ULpkgt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8ULpkwt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PD5AAt6EeiiCrav3vcpBQ" name="MultiStrategy">
        <ownedComment xmi:id="_8Vdb8gt6EeiiCrav3vcpBQ">
          <body>This class defines a Multi Strategy which defines a movement strategy for a ball
is a combination of 2 other strategies.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_8U4NIAt6EeiiCrav3vcpBQ" name="s1" visibility="private" type="_8O9yYQt6EeiiCrav3vcpBQ" association="_8VyMEAt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8Vdb8wt6EeiiCrav3vcpBQ" name="s2" visibility="private" type="_8O9yYQt6EeiiCrav3vcpBQ" association="_8WBcoQt6EeiiCrav3vcpBQ"/>
        <interfaceRealization xmi:id="_8TWjIAt6EeiiCrav3vcpBQ" client="_8PD5AAt6EeiiCrav3vcpBQ" supplier="_8O9yYQt6EeiiCrav3vcpBQ" contract="_8O9yYQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VR1wAt6EeiiCrav3vcpBQ" name="MultiStrategy" specification="_8TWjIQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VR1wQt6EeiiCrav3vcpBQ" name="s1" type="_8O9yYQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VR1wgt6EeiiCrav3vcpBQ" name="s2" type="_8O9yYQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VR1wwt6EeiiCrav3vcpBQ" type="_8PD5AAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.s1 = s1;
		this.s2 = s2;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VR1xAt6EeiiCrav3vcpBQ" name="updateState" specification="_8TXKMQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VR1xQt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VR1xgt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					s1.updateState(ball, disp);
					s2.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8TWjIQt6EeiiCrav3vcpBQ" name="MultiStrategy" method="_8VR1wAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8TWjJAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8TWjJQt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8TWjIgt6EeiiCrav3vcpBQ" name="s1" type="_8O9yYQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8TWjIwt6EeiiCrav3vcpBQ" name="s2" type="_8O9yYQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8TXKMAt6EeiiCrav3vcpBQ" type="_8PD5AAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8TXKMQt6EeiiCrav3vcpBQ" name="updateState" method="_8VR1xAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8TXKMgt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8TXKMwt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PFHIAt6EeiiCrav3vcpBQ" name="PolygonFactory">
        <ownedComment xmi:id="_8Vdb9gt6EeiiCrav3vcpBQ">
          <body>This class defines a polygon factory, which makes polygons.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_8U5bQAt6EeiiCrav3vcpBQ" name="poly" visibility="package" type="_8TXxQgt6EeiiCrav3vcpBQ" association="_8VyMEwt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8U5bQQt6EeiiCrav3vcpBQ" value="new Polygon()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8U6CUQt6EeiiCrav3vcpBQ" name="at" visibility="package" type="_8S3a8At6EeiiCrav3vcpBQ" association="_8VyzIQt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8U6pYQt6EeiiCrav3vcpBQ" name="scaleFactor" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8U6pYgt6EeiiCrav3vcpBQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8U6pZAt6EeiiCrav3vcpBQ" name="pts" visibility="package" type="_8S6eQgt6EeiiCrav3vcpBQ" association="_8VzaMAt6EeiiCrav3vcpBQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8U6pZQt6EeiiCrav3vcpBQ" value="*"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_8TYYUQt6EeiiCrav3vcpBQ" client="_8PFHIAt6EeiiCrav3vcpBQ" supplier="_8O7WIAt6EeiiCrav3vcpBQ" contract="_8O7WIAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VR1xwt6EeiiCrav3vcpBQ" name="PolygonFactory" specification="_8UM3sAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VR1yAt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VR1yQt6EeiiCrav3vcpBQ" name="scaleFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VR1ygt6EeiiCrav3vcpBQ" name="pts" type="_8S6eQgt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8VR1ywt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VR1zAt6EeiiCrav3vcpBQ" type="_8PFHIAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.at = at;
		this.scaleFactor = scaleFactor;
		this.pts = pts;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VR1zQt6EeiiCrav3vcpBQ" name="makeShape" specification="_8PFuMAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VR1zgt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VR1zwt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VR10At6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VR10Qt6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VR10gt6EeiiCrav3vcpBQ" type="_8TKV4At6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>at.setToTranslation(x, y);
		at.scale(xScale*scaleFactor, yScale*scaleFactor);  // optional rotation can be added as well
		return at.createTransformedShape(poly);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8PFuMAt6EeiiCrav3vcpBQ" name="makeShape" method="_8VR1zQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8PFuMQt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PFuMgt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PFuMwt6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PFuNAt6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UNewAt6EeiiCrav3vcpBQ" type="_8TKV4At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UM3sAt6EeiiCrav3vcpBQ" name="PolygonFactory" method="_8VR1xwt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8UM3tAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8UM3tQt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8UM3sQt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UM3sgt6EeiiCrav3vcpBQ" name="scaleFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UM3swt6EeiiCrav3vcpBQ" name="pts" type="_8S6eQgt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8UM3twt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UM3tgt6EeiiCrav3vcpBQ" type="_8PFHIAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PHjYAt6EeiiCrav3vcpBQ" name="RectanglePaintStrategy">
        <ownedComment xmi:id="_8VeDAAt6EeiiCrav3vcpBQ">
          <body>This class defines a Rectangle Paint Strategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_8TZmcAt6EeiiCrav3vcpBQ" general="_8PLNwAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VSc0At6EeiiCrav3vcpBQ" name="RectanglePaintStrategy" specification="_8PHjYQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VSc0Qt6EeiiCrav3vcpBQ" type="_8PHjYAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 3.0, 1.0);
	  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VSc0gt6EeiiCrav3vcpBQ" name="RectanglePaintStrategy" specification="_8UNewQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VSc0wt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VSc1At6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VSc1Qt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VSc1gt6EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VSc1wt6EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VSc2At6EeiiCrav3vcpBQ" type="_8PHjYAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, RectangleShapeFactory.Singleton.makeShape(x,y,width,height));
	  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8PHjYQt6EeiiCrav3vcpBQ" name="RectanglePaintStrategy" method="_8VSc0At6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8PIKcAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8PIKcQt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8PIKcgt6EeiiCrav3vcpBQ" type="_8PHjYAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UNewQt6EeiiCrav3vcpBQ" name="RectanglePaintStrategy" method="_8VSc0gt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8UOF1At6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8UOF1Qt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8UNewgt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UOF0At6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UOF0Qt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UOF0gt6EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UOF0wt6EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UOF1gt6EeiiCrav3vcpBQ" type="_8PHjYAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PIxgAt6EeiiCrav3vcpBQ" name="RectangleShapeFactory">
        <ownedComment xmi:id="_8VeDAQt6EeiiCrav3vcpBQ">
          <body>This class defines a factory that makes rectangles.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_8U7QcAt6EeiiCrav3vcpBQ" name="Singleton" isLeaf="true" isStatic="true" type="_8PIxgAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8VzaMwt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8U7QcQt6EeiiCrav3vcpBQ" value="new RectangleShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_8TaNgAt6EeiiCrav3vcpBQ" client="_8PIxgAt6EeiiCrav3vcpBQ" supplier="_8O7WIAt6EeiiCrav3vcpBQ" contract="_8O7WIAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VSc2Qt6EeiiCrav3vcpBQ" name="makeShape" specification="_8PIxgQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VSc2gt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VSc2wt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VSc3At6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VSc3Qt6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VSc3gt6EeiiCrav3vcpBQ" type="_8TKV4At6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>Shape rec = new Rectangle((int) (x), (int) (y), (int) (xScale), (int) (yScale));
		return rec;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8PIxgQt6EeiiCrav3vcpBQ" name="makeShape" method="_8VSc2Qt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8PJYkAt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PJYkQt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PJYkgt6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PJYkwt6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UOs4At6EeiiCrav3vcpBQ" type="_8TKV4At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PLNwAt6EeiiCrav3vcpBQ" name="ShapePaintStrategy">
        <ownedComment xmi:id="_8VeDAgt6EeiiCrav3vcpBQ">
          <body>This class defines a shape paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_8Ta0kAt6EeiiCrav3vcpBQ" general="_8No8sAt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8U7Qcgt6EeiiCrav3vcpBQ" name="shape" visibility="package" type="_8TKV4At6EeiiCrav3vcpBQ" association="_8V0BQQt6EeiiCrav3vcpBQ"/>
        <interfaceRealization xmi:id="_8TaNgQt6EeiiCrav3vcpBQ" client="_8PLNwAt6EeiiCrav3vcpBQ" supplier="_8O7WIAt6EeiiCrav3vcpBQ" contract="_8O7WIAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VSc3wt6EeiiCrav3vcpBQ" name="ShapePaintStrategy" specification="_8UOs4Qt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VSc4At6EeiiCrav3vcpBQ" name="shape" type="_8TKV4At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VSc4Qt6EeiiCrav3vcpBQ" type="_8PLNwAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VTD4At6EeiiCrav3vcpBQ" name="ShapePaintStrategy" specification="_8UPT8Qt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VTD4Qt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VTD4gt6EeiiCrav3vcpBQ" name="shape" type="_8TKV4At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VTD4wt6EeiiCrav3vcpBQ" type="_8PLNwAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VTD5At6EeiiCrav3vcpBQ" name="paintXfrm" specification="_8UP7AAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VTD5Qt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VTD5gt6EeiiCrav3vcpBQ" name="host" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VTD5wt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>((Graphics2D) g).fill(at.createTransformedShape(shape));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VTD6At6EeiiCrav3vcpBQ" name="makeShape" specification="_8PMb4At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VTD6Qt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VTD6gt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VTD6wt6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VTD7At6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VTD7Qt6EeiiCrav3vcpBQ" type="_8TKV4At6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>at.setToTranslation(x, y);
		at.scale(x * xScale, y * yScale);  // optional rotation can be added as well
		return at.createTransformedShape(shape);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8PMb4At6EeiiCrav3vcpBQ" name="makeShape" method="_8VTD6At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8PMb4Qt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PMb4gt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PMb4wt6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PMb5At6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UQiEAt6EeiiCrav3vcpBQ" type="_8TKV4At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UOs4Qt6EeiiCrav3vcpBQ" name="ShapePaintStrategy" method="_8VSc3wt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8UOs4wt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8UOs5At6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8UOs4gt6EeiiCrav3vcpBQ" name="shape" type="_8TKV4At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UPT8At6EeiiCrav3vcpBQ" type="_8PLNwAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UPT8Qt6EeiiCrav3vcpBQ" name="ShapePaintStrategy" method="_8VTD4At6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8UPT9At6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8UPT9Qt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8UPT8gt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UPT8wt6EeiiCrav3vcpBQ" name="shape" type="_8TKV4At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UPT9gt6EeiiCrav3vcpBQ" type="_8PLNwAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UP7AAt6EeiiCrav3vcpBQ" name="paintXfrm" method="_8VTD5At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8UP7AQt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UP7Agt6EeiiCrav3vcpBQ" name="host" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UP7Awt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PO4IAt6EeiiCrav3vcpBQ" name="SpawnStrategy">
        <ownedComment xmi:id="_8VeDAwt6EeiiCrav3vcpBQ">
          <body>This class defines a spawn strategy that interacts with other balls.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_8U73gQt6EeiiCrav3vcpBQ" name="count" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8U73ggt6EeiiCrav3vcpBQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8U8ekQt6EeiiCrav3vcpBQ" name="delay" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8U8ekgt6EeiiCrav3vcpBQ" value="100"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_8TcCsAt6EeiiCrav3vcpBQ" client="_8PO4IAt6EeiiCrav3vcpBQ" supplier="_8O9yYQt6EeiiCrav3vcpBQ" contract="_8O9yYQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VTD7gt6EeiiCrav3vcpBQ" name="updateState" specification="_8TcCsQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VTD7wt6EeiiCrav3vcpBQ" name="context" type="_8NsnEAt6EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_8VTD8At6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_8VTD8Qt6EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_8VTD8gt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>if (delay &lt; count++) {
			dispatcher.notifyAll(new IBallCmd() {
				/**
				 * This function applies this command to the correct ball using a dispatcher.
				 */
				@Override
				public void apply(Ball other, Dispatcher disp) {
					if (count != 0 &amp;&amp; context != other) {
						if ((context.getRad() + other.getRad()) > 
						    context.getLoc().distance(other.getLoc())) {
							disp.addObserver(new Ball(
									context.getCol(),
									new Point(context.getLoc()), 
									context.getRad(),
									new Point(-context.getVel().x+1,-context.getVel().y+1), 
									context.getCon(), 
									new SpawnStrategy(), 
									context.getPaintStrat()));
							count = 0;
							delay *= 5;
						}
					}
				}
			});
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8TcCsQt6EeiiCrav3vcpBQ" name="updateState" method="_8VTD7gt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8TcCsgt6EeiiCrav3vcpBQ" name="context" type="_8NsnEAt6EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_8TcpwQt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_8Tcpwgt6EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_8TcCswt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PQGQAt6EeiiCrav3vcpBQ" name="SquarePaintStrategy">
        <ownedComment xmi:id="_8VeDBAt6EeiiCrav3vcpBQ">
          <body>This is the square paint strategy that paints a square.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_8TdQ0At6EeiiCrav3vcpBQ" client="_8PQGQAt6EeiiCrav3vcpBQ" supplier="_8O6vEQt6EeiiCrav3vcpBQ" contract="_8O6vEQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VTq8At6EeiiCrav3vcpBQ" name="paint" specification="_8URwMAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VTq8Qt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VTq8gt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>int halfSide = ball.getRad();
		g.setColor(ball.getCol());
		g.fillRect(ball.getLoc().x - halfSide, ball.getLoc().y - halfSide, 2 * halfSide, 2 * halfSide);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8TdQ0Qt6EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_8TdQ0gt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8URwMAt6EeiiCrav3vcpBQ" name="paint" method="_8VTq8At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8URwMQt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8URwMgt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PRUYAt6EeiiCrav3vcpBQ" name="StraightStrategy">
        <ownedComment xmi:id="_8VeDBQt6EeiiCrav3vcpBQ">
          <body>This class defines a Straight Strategy which defines a movement strategy for a ball that just
moves by changing it's location by its velocity components.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_8Td34Qt6EeiiCrav3vcpBQ" client="_8PRUYAt6EeiiCrav3vcpBQ" supplier="_8O9yYQt6EeiiCrav3vcpBQ" contract="_8O9yYQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VTq8wt6EeiiCrav3vcpBQ" name="updateState" specification="_8Tee8At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VTq9At6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VTq9Qt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8Tee8At6EeiiCrav3vcpBQ" name="updateState" method="_8VTq8wt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8Tee8Qt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8Tee8gt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PR7cAt6EeiiCrav3vcpBQ" name="SwellStrategy">
        <ownedComment xmi:id="_8VeDBgt6EeiiCrav3vcpBQ">
          <body>This class defines a Swell Strategy which defines a movement strategy for a ball that grows it
in size, and once it reaches a certain size, it changes colors, and then shrinks slowly and repeats.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_8TfGAQt6EeiiCrav3vcpBQ" client="_8PR7cAt6EeiiCrav3vcpBQ" supplier="_8O9yYQt6EeiiCrav3vcpBQ" contract="_8O9yYQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VTq9gt6EeiiCrav3vcpBQ" name="updateState" specification="_8TfGAgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VTq9wt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VTq-At6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getRad() >= 80) {
						ball.setRadDelta(1);
						ball.setRadDelta(ball.getRadDelta() * -1);
						ball.setCol(rzr.randomColor());
					} else if (ball.getRad() &lt;= 20) {
						ball.setRadDelta(-5);
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8TfGAgt6EeiiCrav3vcpBQ" name="updateState" method="_8VTq9gt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8TfGAwt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8TfGBAt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PSigAt6EeiiCrav3vcpBQ" name="SwitcherStrategy">
        <ownedComment xmi:id="_8VeDBwt6EeiiCrav3vcpBQ">
          <body>This class defines a Switcher Strategy which defines a strategy for a ball that can
change by updating the strategy.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_8U9FoAt6EeiiCrav3vcpBQ" name="strategy" visibility="private" isStatic="true" type="_8O9yYQt6EeiiCrav3vcpBQ" association="_8V0oUQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8U9ssAt6EeiiCrav3vcpBQ" value="new StraightStrategy()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_8TftEwt6EeiiCrav3vcpBQ" client="_8PSigAt6EeiiCrav3vcpBQ" supplier="_8O9yYQt6EeiiCrav3vcpBQ" contract="_8O9yYQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VTq-Qt6EeiiCrav3vcpBQ" name="updateState" specification="_8TgUIAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VTq-gt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VTq-wt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					strategy.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VTq_At6EeiiCrav3vcpBQ" name="setStrat" specification="_8Tg7Mgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VTq_Qt6EeiiCrav3vcpBQ" name="strat" type="_8O9yYQt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>SwitcherStrategy.strategy = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VTq_gt6EeiiCrav3vcpBQ" name="getStrat" specification="_8PTJkAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VTq_wt6EeiiCrav3vcpBQ" type="_8O9yYQt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return SwitcherStrategy.strategy;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8PTJkAt6EeiiCrav3vcpBQ" name="getStrat" isStatic="true" method="_8VTq_gt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VeDCQt6EeiiCrav3vcpBQ">
            <body>This function returns the current strategy of the switcher balls.
	 * @return An IUpdateStrategy which is the current strategy of the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8Tg7NAt6EeiiCrav3vcpBQ" type="_8O9yYQt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8TgUIAt6EeiiCrav3vcpBQ" name="updateState" method="_8VTq-Qt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8TgUIQt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8TgUIgt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8Tg7Mgt6EeiiCrav3vcpBQ" name="setStrat" isStatic="true" method="_8VTq_At6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VeDCAt6EeiiCrav3vcpBQ">
            <body>This function changes the strategy of all switcher balls to that of the parameter.
	 * @param strat An IUpdateStrategy which is the new strategy for all the balls to use</body>
          </ownedComment>
          <ownedParameter xmi:id="_8Tg7Mwt6EeiiCrav3vcpBQ" name="strat" type="_8O9yYQt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PU-wAt6EeiiCrav3vcpBQ" name="TeleportStrategy">
        <ownedComment xmi:id="_8VeDCgt6EeiiCrav3vcpBQ">
          <body>This class defines a Teleport Strategy which defines a movement strategy for a ball that randomly
changes the location of it, so it teleports.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_8ThiQAt6EeiiCrav3vcpBQ" client="_8PU-wAt6EeiiCrav3vcpBQ" supplier="_8O9yYQt6EeiiCrav3vcpBQ" contract="_8O9yYQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VUSAAt6EeiiCrav3vcpBQ" name="updateState" specification="_8ThiQQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VUSAQt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VUSAgt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % 80 == 0) {
						ball.setLoc(rzr.randomLoc(new Rectangle(ball.getCon().getWidth() - ball.getRad(), ball.getCon().getHeight() - ball.getRad())));
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8ThiQQt6EeiiCrav3vcpBQ" name="updateState" method="_8VUSAAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8ThiQgt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8ThiQwt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PWM4At6EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy">
        <ownedComment xmi:id="_8VeDCwt6EeiiCrav3vcpBQ">
          <body>This classd defines an upright composite paint strategy.
@author sn32, ll45
 *</body>
        </ownedComment>
        <generalization xmi:id="_8TjXcAt6EeiiCrav3vcpBQ" general="_8N6pgAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VUSAwt6EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" specification="_8TiwYAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VUSBAt6EeiiCrav3vcpBQ" name="pstrats" type="_8No8sAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8VUSBQt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VUSBgt6EeiiCrav3vcpBQ" type="_8PWM4At6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VUSBwt6EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" specification="_8UTlYAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VUSCAt6EeiiCrav3vcpBQ" name="pstrats" type="_8No8sAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8VUSCQt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VUSCgt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VUSCwt6EeiiCrav3vcpBQ" type="_8PWM4At6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VUSDAt6EeiiCrav3vcpBQ" name="paintCfg" specification="_8UUMcQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VUSDQt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VUSDgt6EeiiCrav3vcpBQ" name="host" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>super.paintCfg(g, host);
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {
			at.scale(1.0, -1.0);
		}        
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8TiwYAt6EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" method="_8VUSAwt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8TiwYgt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8TiwYwt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8TiwYQt6EeiiCrav3vcpBQ" name="pstrats" type="_8No8sAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8TiwZQt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8TiwZAt6EeiiCrav3vcpBQ" type="_8PWM4At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UTlYAt6EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" method="_8VUSBwt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8UTlYwt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8UTlZAt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8UTlYQt6EeiiCrav3vcpBQ" name="pstrats" type="_8No8sAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8UUMcAt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UTlYgt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UTlZQt6EeiiCrav3vcpBQ" type="_8PWM4At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UUMcQt6EeiiCrav3vcpBQ" name="paintCfg" visibility="protected" method="_8VUSDAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8UUMcgt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UUMcwt6EeiiCrav3vcpBQ" name="host" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PYCEAt6EeiiCrav3vcpBQ" name="UprightImageStrategy">
        <ownedComment xmi:id="_8VeDDAt6EeiiCrav3vcpBQ">
          <body>This class defines an upright image.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_8Tj-gAt6EeiiCrav3vcpBQ" general="_8O-ZcAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VUSDwt6EeiiCrav3vcpBQ" name="UprightImageStrategy" specification="_8PYCEQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VUSEAt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VUSEQt6EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VUSEgt6EeiiCrav3vcpBQ" type="_8PYCEAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VU5EAt6EeiiCrav3vcpBQ" name="UprightImageStrategy" specification="_8UUzgAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VU5EQt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VU5Egt6EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VU5Ewt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VU5FAt6EeiiCrav3vcpBQ" type="_8PYCEAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor, at);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VU5FQt6EeiiCrav3vcpBQ" name="paintCfg" specification="_8UVakAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VU5Fgt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VU5Fwt6EeiiCrav3vcpBQ" name="host" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>super.paintCfg(g, host);&#xD;
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {&#xD;
			at.scale(1.0, -1.0);&#xD;
		}       &#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8PYCEQt6EeiiCrav3vcpBQ" name="UprightImageStrategy" method="_8VUSDwt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8PYpIAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8PYpIQt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8PYCEgt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PYCEwt6EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PYpIgt6EeiiCrav3vcpBQ" type="_8PYCEAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UUzgAt6EeiiCrav3vcpBQ" name="UprightImageStrategy" method="_8VU5EAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8UUzhAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8UUzhQt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8UUzgQt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UUzggt6EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UUzgwt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UUzhgt6EeiiCrav3vcpBQ" type="_8PYCEAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UVakAt6EeiiCrav3vcpBQ" name="paintCfg" visibility="protected" method="_8VU5FQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8UVakQt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UVakgt6EeiiCrav3vcpBQ" name="host" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PZQMAt6EeiiCrav3vcpBQ" name="UprightShapePaintStrategy">
        <ownedComment xmi:id="_8VeDDQt6EeiiCrav3vcpBQ">
          <body>This class defines an upright shape paint strategy.
@author sn32, ll45
 *</body>
        </ownedComment>
        <generalization xmi:id="_8TklkAt6EeiiCrav3vcpBQ" general="_8PLNwAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VU5GAt6EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" specification="_8UWBoAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VU5GQt6EeiiCrav3vcpBQ" name="shape" type="_8TKV4At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VU5Ggt6EeiiCrav3vcpBQ" type="_8PZQMAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(shape);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VU5Gwt6EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" specification="_8UWBpQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VU5HAt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VU5HQt6EeiiCrav3vcpBQ" name="shape" type="_8TKV4At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VU5Hgt6EeiiCrav3vcpBQ" type="_8PZQMAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, shape);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8UWBoAt6EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" method="_8VU5GAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8UWBogt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8UWBowt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8UWBoQt6EeiiCrav3vcpBQ" name="shape" type="_8TKV4At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UWBpAt6EeiiCrav3vcpBQ" type="_8PZQMAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UWBpQt6EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" method="_8VU5Gwt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8UWosAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8UWosQt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8UWBpgt6EeiiCrav3vcpBQ" name="at" type="_8S3a8At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UWBpwt6EeiiCrav3vcpBQ" name="shape" type="_8TKV4At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UWosgt6EeiiCrav3vcpBQ" type="_8PZQMAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PaeUAt6EeiiCrav3vcpBQ" name="WiggleStrategy">
        <ownedComment xmi:id="_8VeDDgt6EeiiCrav3vcpBQ">
          <body>This class defines a Wiggle Strategy which defines a movement strategy for a ball that randomly
changes the velocity direction, so it wiggles.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_8TlMoAt6EeiiCrav3vcpBQ" client="_8PaeUAt6EeiiCrav3vcpBQ" supplier="_8O9yYQt6EeiiCrav3vcpBQ" contract="_8O9yYQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VU5Hwt6EeiiCrav3vcpBQ" name="updateState" specification="_8TlMoQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VU5IAt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VU5IQt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % rzr.randomInt(2,  100) == 0) {
						ball.setVel(new Point(ball.getVel().x, ball.getVel().y * -1));
					} else if (ball.getItr() % rzr.randomInt(2, 100) == 0){
						ball.setVel(new Point(ball.getVel().x * -1, ball.getVel().y));
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8TlMoQt6EeiiCrav3vcpBQ" name="updateState" method="_8VU5Hwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8TlzsAt6EeiiCrav3vcpBQ" name="ball" type="_8NsnEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8TlzsQt6EeiiCrav3vcpBQ" name="dispatcher" type="_8PbFYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8Va_tQt6EeiiCrav3vcpBQ" name="" memberEnd="_8UrY0At6EeiiCrav3vcpBQ _8Va_tgt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8Va_tgt6EeiiCrav3vcpBQ" name="" type="_8NsnEAt6EeiiCrav3vcpBQ" association="_8Va_tQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VbmwAt6EeiiCrav3vcpBQ" name="" memberEnd="_8Ur_4At6EeiiCrav3vcpBQ _8VbmwQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VbmwQt6EeiiCrav3vcpBQ" name="" type="_8NsnEAt6EeiiCrav3vcpBQ" association="_8VbmwAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8Vbmwgt6EeiiCrav3vcpBQ" name="" memberEnd="_8Usm8Qt6EeiiCrav3vcpBQ _8Vbmwwt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8Vbmwwt6EeiiCrav3vcpBQ" name="" type="_8NsnEAt6EeiiCrav3vcpBQ" association="_8Vbmwgt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VbmxAt6EeiiCrav3vcpBQ" name="" memberEnd="_8Usm8gt6EeiiCrav3vcpBQ _8VbmxQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VbmxQt6EeiiCrav3vcpBQ" name="" type="_8NsnEAt6EeiiCrav3vcpBQ" association="_8VbmxAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VnM8At6EeiiCrav3vcpBQ" name="" memberEnd="_8VnM8Qt6EeiiCrav3vcpBQ _8O6IAgt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VnM8Qt6EeiiCrav3vcpBQ" name="" type="_8O6IAAt6EeiiCrav3vcpBQ" association="_8VnM8At6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VnM8wt6EeiiCrav3vcpBQ" name="" memberEnd="_8VnM9At6EeiiCrav3vcpBQ _8O6IAwt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VnM9At6EeiiCrav3vcpBQ" name="" type="_8O6IAAt6EeiiCrav3vcpBQ" association="_8VnM8wt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VnM9gt6EeiiCrav3vcpBQ" name="" memberEnd="_8VnM9wt6EeiiCrav3vcpBQ _8O9LUAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VnM9wt6EeiiCrav3vcpBQ" name="" type="_8O8kQAt6EeiiCrav3vcpBQ" association="_8VnM9gt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8Vn0AQt6EeiiCrav3vcpBQ" name="" memberEnd="_8Vn0Agt6EeiiCrav3vcpBQ _8O9LUwt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8Vn0Agt6EeiiCrav3vcpBQ" name="" type="_8O8kQAt6EeiiCrav3vcpBQ" association="_8Vn0AQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VppMQt6EeiiCrav3vcpBQ" name="" memberEnd="_8VppMgt6EeiiCrav3vcpBQ _8Uo8kQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VppMgt6EeiiCrav3vcpBQ" name="" type="_8Nl5YAt6EeiiCrav3vcpBQ" association="_8VppMQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VppNAt6EeiiCrav3vcpBQ" name="" memberEnd="_8VqQQAt6EeiiCrav3vcpBQ _8UqKsAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VqQQAt6EeiiCrav3vcpBQ" name="" type="_8No8sAt6EeiiCrav3vcpBQ" association="_8VppNAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VqQQgt6EeiiCrav3vcpBQ" name="" memberEnd="_8VqQQwt6EeiiCrav3vcpBQ _8Usm8wt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VqQQwt6EeiiCrav3vcpBQ" name="" type="_8NsnEAt6EeiiCrav3vcpBQ" association="_8VqQQgt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8Vq3UQt6EeiiCrav3vcpBQ" name="" memberEnd="_8Vq3Ugt6EeiiCrav3vcpBQ _8UtOAAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8Vq3Ugt6EeiiCrav3vcpBQ" name="" type="_8NsnEAt6EeiiCrav3vcpBQ" association="_8Vq3UQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VreYAt6EeiiCrav3vcpBQ" name="" memberEnd="_8VreYQt6EeiiCrav3vcpBQ _8UucIAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VreYQt6EeiiCrav3vcpBQ" name="" type="_8NzUwAt6EeiiCrav3vcpBQ" association="_8VreYAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VreYwt6EeiiCrav3vcpBQ" name="" memberEnd="_8VreZAt6EeiiCrav3vcpBQ _8UvqQQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VreZAt6EeiiCrav3vcpBQ" name="" type="_8NzUwAt6EeiiCrav3vcpBQ" association="_8VreYwt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VsFcQt6EeiiCrav3vcpBQ" name="" memberEnd="_8VsFcgt6EeiiCrav3vcpBQ _8UxfcAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VsFcgt6EeiiCrav3vcpBQ" name="" type="_8NzUwAt6EeiiCrav3vcpBQ" association="_8VsFcQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VssgQt6EeiiCrav3vcpBQ" name="" memberEnd="_8Vssggt6EeiiCrav3vcpBQ _8UytkAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8Vssggt6EeiiCrav3vcpBQ" name="" type="_8N9s0At6EeiiCrav3vcpBQ" association="_8VssgQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VsshAt6EeiiCrav3vcpBQ" name="" memberEnd="_8VsshQt6EeiiCrav3vcpBQ _8U1J0gt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VsshQt6EeiiCrav3vcpBQ" name="" type="_8O-ZcAt6EeiiCrav3vcpBQ" association="_8VsshAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VtTkQt6EeiiCrav3vcpBQ" name="" memberEnd="_8VtTkgt6EeiiCrav3vcpBQ _8U1w4At6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VtTkgt6EeiiCrav3vcpBQ" name="" type="_8O-ZcAt6EeiiCrav3vcpBQ" association="_8VtTkQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8Vt6oQt6EeiiCrav3vcpBQ" name="" memberEnd="_8Vt6ogt6EeiiCrav3vcpBQ _8U1w4wt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8Vt6ogt6EeiiCrav3vcpBQ" name="" type="_8O-ZcAt6EeiiCrav3vcpBQ" association="_8Vt6oQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8Vw98Qt6EeiiCrav3vcpBQ" name="" memberEnd="_8Vw98gt6EeiiCrav3vcpBQ _8U2X8Qt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8Vw98gt6EeiiCrav3vcpBQ" name="" type="_8O-ZcAt6EeiiCrav3vcpBQ" association="_8Vw98Qt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VxlAQt6EeiiCrav3vcpBQ" name="" memberEnd="_8VxlAgt6EeiiCrav3vcpBQ _8U2_AAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VxlAgt6EeiiCrav3vcpBQ" name="" type="_8PCD0At6EeiiCrav3vcpBQ" association="_8VxlAQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VyMEAt6EeiiCrav3vcpBQ" name="" memberEnd="_8VyMEQt6EeiiCrav3vcpBQ _8U4NIAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VyMEQt6EeiiCrav3vcpBQ" name="" type="_8PD5AAt6EeiiCrav3vcpBQ" association="_8VyMEAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VyMEwt6EeiiCrav3vcpBQ" name="" memberEnd="_8VyMFAt6EeiiCrav3vcpBQ _8U5bQAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VyMFAt6EeiiCrav3vcpBQ" name="" type="_8PFHIAt6EeiiCrav3vcpBQ" association="_8VyMEwt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VyzIQt6EeiiCrav3vcpBQ" name="" memberEnd="_8VyzIgt6EeiiCrav3vcpBQ _8U6CUQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VyzIgt6EeiiCrav3vcpBQ" name="" type="_8PFHIAt6EeiiCrav3vcpBQ" association="_8VyzIQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VzaMAt6EeiiCrav3vcpBQ" name="" memberEnd="_8VzaMQt6EeiiCrav3vcpBQ _8U6pZAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VzaMQt6EeiiCrav3vcpBQ" name="" type="_8PFHIAt6EeiiCrav3vcpBQ" association="_8VzaMAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VzaMwt6EeiiCrav3vcpBQ" name="" memberEnd="_8VzaNAt6EeiiCrav3vcpBQ _8U7QcAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VzaNAt6EeiiCrav3vcpBQ" name="" type="_8PIxgAt6EeiiCrav3vcpBQ" association="_8VzaMwt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V0BQQt6EeiiCrav3vcpBQ" name="" memberEnd="_8V0BQgt6EeiiCrav3vcpBQ _8U7Qcgt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V0BQgt6EeiiCrav3vcpBQ" name="" type="_8PLNwAt6EeiiCrav3vcpBQ" association="_8V0BQQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V0oUQt6EeiiCrav3vcpBQ" name="" memberEnd="_8V0oUgt6EeiiCrav3vcpBQ _8U9FoAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V0oUgt6EeiiCrav3vcpBQ" name="" type="_8PSigAt6EeiiCrav3vcpBQ" association="_8V0oUQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8WBcoQt6EeiiCrav3vcpBQ" name="" memberEnd="_8WBcogt6EeiiCrav3vcpBQ _8Vdb8wt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8WBcogt6EeiiCrav3vcpBQ" name="" type="_8PD5AAt6EeiiCrav3vcpBQ" association="_8WBcoQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_8LyikQt6EeiiCrav3vcpBQ" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_8Pn5sAt6EeiiCrav3vcpBQ" name="BallWorldView">
        <ownedComment xmi:id="_8VeqHwt6EeiiCrav3vcpBQ">
          <body>This is the BallWorldView class, which has the frame on which our BallWorld is displayed.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <generalization xmi:id="_8UgZsgt6EeiiCrav3vcpBQ" general="_8TqFIQt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8U_h4Qt6EeiiCrav3vcpBQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8U_h4gt6EeiiCrav3vcpBQ" value="-7114823923004621639L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8U_h4wt6EeiiCrav3vcpBQ" name="contentPane" visibility="private" type="_8TqsMAt6EeiiCrav3vcpBQ" association="_8V3roQt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8VAI8Qt6EeiiCrav3vcpBQ" name="pnlControl" visibility="private" isLeaf="true" type="_8TqsMAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8V4SsQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VAI8gt6EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VAwAAt6EeiiCrav3vcpBQ" name="tfClassname" visibility="private" isLeaf="true" type="_8TqsMgt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8V4StAt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VAwAQt6EeiiCrav3vcpBQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VAwAwt6EeiiCrav3vcpBQ" name="btnClearBalls" visibility="private" isLeaf="true" type="_8TrTQQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8V45wQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VAwBAt6EeiiCrav3vcpBQ" value="new JButton(&quot;Clear balls&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VBXEQt6EeiiCrav3vcpBQ" name="adapter" visibility="private" type="_8P0uAAt6EeiiCrav3vcpBQ" association="_8V5g0Qt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8VB-Igt6EeiiCrav3vcpBQ" name="pnlCanvas" visibility="private" isLeaf="true" type="_8TqsMAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8V6H4Qt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VClMAt6EeiiCrav3vcpBQ" value="new JPanel() {&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * This is a private variable that gives the class an ID to serialize and deserialize.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;private static final long serialVersionUID = 8303517520311377718L;&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Overridden paintComponent method to paint a shape in the panel.&#xA;&#x9;&#x9; * @param g The Graphics object to paint on.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public void paintComponent(Graphics g) {&#xA;&#x9;&#x9;&#x9;super.paintComponent(g); // Do everything normally done first, e.g. clear the screen.&#xA;&#x9;&#x9;&#x9;adapter.paintBalls(g);&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VDMQAt6EeiiCrav3vcpBQ" name="btnAddToList" visibility="private" isLeaf="true" type="_8TrTQQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8V6H5At6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VDMQQt6EeiiCrav3vcpBQ" value="new JButton(&quot;Add to list&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VDzUAt6EeiiCrav3vcpBQ" name="btnCombine" visibility="private" isLeaf="true" type="_8TrTQQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8V6u8Qt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VDzUQt6EeiiCrav3vcpBQ" value="new JButton(&quot;Combine&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VFBcAt6EeiiCrav3vcpBQ" name="btnMakeSelectedBall" visibility="private" isLeaf="true" type="_8TrTQQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8V7WAQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VFBcQt6EeiiCrav3vcpBQ" value="new JButton(&quot;Make selected ball&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VFogAt6EeiiCrav3vcpBQ" name="btnMakeSwitcher" visibility="private" isLeaf="true" type="_8TrTQQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8V7WBAt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VFogQt6EeiiCrav3vcpBQ" value="new JButton(&quot;Make switcher&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VFogwt6EeiiCrav3vcpBQ" name="btnSwitch" visibility="private" isLeaf="true" type="_8TrTQQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8V79EQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VGPkAt6EeiiCrav3vcpBQ" value="new JButton(&quot;Switch&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VGPkgt6EeiiCrav3vcpBQ" name="comBoxTop" visibility="private" type="_8TshYQt6EeiiCrav3vcpBQ" association="_8V8kIQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VG2oQt6EeiiCrav3vcpBQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VG2owt6EeiiCrav3vcpBQ" name="comBoxBottom" visibility="private" type="_8TshYQt6EeiiCrav3vcpBQ" association="_8V8kJAt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VHdsQt6EeiiCrav3vcpBQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VHdswt6EeiiCrav3vcpBQ" name="pnlChangeList" visibility="private" isLeaf="true" type="_8TqsMAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8V9LMgt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VHdtAt6EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VIEwQt6EeiiCrav3vcpBQ" name="pnlDropDowns" visibility="private" isLeaf="true" type="_8TqsMAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8V9yQQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VIEwgt6EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VIr0At6EeiiCrav3vcpBQ" name="pnlSwitching" visibility="private" isLeaf="true" type="_8TqsMAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8V-ZUQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VIr0Qt6EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VIr0wt6EeiiCrav3vcpBQ" name="pnlPaintStrats" visibility="private" isLeaf="true" type="_8TqsMAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8V-ZVAt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VIr1At6EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VJS4Qt6EeiiCrav3vcpBQ" name="btnAddPaintStrat" visibility="private" isLeaf="true" type="_8TrTQQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8WAOgAt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VJS4gt6EeiiCrav3vcpBQ" value="new JButton(&quot;Add&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VJS5At6EeiiCrav3vcpBQ" name="txtPaintStrat" visibility="private" isLeaf="true" type="_8TqsMgt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8WAOgwt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VJS5Qt6EeiiCrav3vcpBQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8VJ58Qt6EeiiCrav3vcpBQ" name="comBoxStrats" visibility="private" isLeaf="true" type="_8TshYQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8WA1kQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8VJ58wt6EeiiCrav3vcpBQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VXVUAt6EeiiCrav3vcpBQ" name="getPanel" specification="_8PrkEAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VXVUQt6EeiiCrav3vcpBQ" type="_8TqsMAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return pnlCanvas;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VXVUgt6EeiiCrav3vcpBQ" name="BallWorldView" specification="_8TuWkAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VXVUwt6EeiiCrav3vcpBQ" name="adapter" type="_8P0uAAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VXVVAt6EeiiCrav3vcpBQ" type="_8Pn5sAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>txtPaintStrat.setToolTipText(&quot;This is the text field where you can add paint strategies.&quot;);
		pnlPaintStrats.setToolTipText(&quot;This is the panel that holds the components that let you add paint strategies and select them.&quot;);
		pnlPaintStrats.add(txtPaintStrat);
		txtPaintStrat.setColumns(10);
		this.adapter = adapter;
		initGUI();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VXVVQt6EeiiCrav3vcpBQ" name="updateView" specification="_8PvOcAt6EeiiCrav3vcpBQ">
          <language>java</language>
          <body>repaint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VX8YAt6EeiiCrav3vcpBQ" name="getCanvas" specification="_8PvOcQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VX8YQt6EeiiCrav3vcpBQ" type="_8S0-sAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return getPanel();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VX8Ygt6EeiiCrav3vcpBQ" name="initGUI" specification="_8Pv1gAt6EeiiCrav3vcpBQ">
          <language>java</language>
          <body>setTitle(&quot;BallWorld&quot;);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setToolTipText(&quot;This is the content of the frame.&quot;);
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		pnlControl.setBackground(Color.DARK_GRAY);
		pnlControl.setToolTipText(&quot;This is the control panel that lets you create balls and clear them.&quot;);
		
		contentPane.add(pnlControl, BorderLayout.NORTH);
		pnlControl.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		pnlChangeList.setToolTipText(&quot;This panel is where you can add the type of ball you want to make to the drop down lists.&quot;);
		
		pnlControl.add(pnlChangeList);
		pnlChangeList.setLayout(new GridLayout(0, 1, 0, 0));
		
		pnlChangeList.add(tfClassname);
		tfClassname.setToolTipText(&quot;The type of the ball you want to make.&quot;);
		
		tfClassname.setColumns(10);
		btnAddToList.setToolTipText(&quot;This button adds the strategy type in the text field to the drop down boxes.&quot;);
		pnlChangeList.add(btnAddToList);
		btnAddToList.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (tfClassname.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem stratFac = adapter.addStrategy(tfClassname.getText());

             comBoxTop.insertItemAt(stratFac, 0);
             comBoxBottom.insertItemAt(stratFac, 0);
			}
		});
		pnlDropDowns.setToolTipText(&quot;This panel is for the drop down boxes, and buttons to make selected balls and combine strategies.&quot;);
		
		pnlControl.add(pnlDropDowns);
		pnlDropDowns.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSelectedBall.setToolTipText(&quot;This button makes a ball with the update strategy of the factory that's selected on the top drop down box.&quot;);
		pnlDropDowns.add(btnMakeSelectedBall);
		comBoxTop.setToolTipText(&quot;This is the drop down list on the top.&quot;);
		pnlDropDowns.add(comBoxTop);
		comBoxBottom.setToolTipText(&quot;This is the drop down list on the bottom.&quot;);
		pnlDropDowns.add(comBoxBottom);
		btnCombine.setToolTipText(&quot;This button combines the two strategy factories in the combo boxes.&quot;);
		pnlDropDowns.add(btnCombine);
		btnCombine.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem top = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem bottom = comBoxBottom.getItemAt(comBoxBottom.getSelectedIndex());
				
				if (top == null || bottom == null) {
					return;
				}
				
				TDropListItem combo = adapter.combineStrategies(top, bottom);
				comBoxTop.addItem(combo);
				comBoxBottom.addItem(combo);
			}
		});
		btnMakeSelectedBall.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem selected = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem paintFac = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (selected == null || paintFac == null) {
					return;
				}
				
				adapter.makeBall(selected, paintFac);
			}
		});
		pnlSwitching.setToolTipText(&quot;This panel is for the buttons related to making switcher balls and switching their strategies.&quot;);
		
		pnlControl.add(pnlSwitching);
		pnlSwitching.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSwitcher.setToolTipText(&quot;Click this item to make a switcher ball.&quot;);
		pnlSwitching.add(btnMakeSwitcher);
		btnSwitch.setToolTipText(&quot;Click this button to switch the switcher balls to the selected item in the top combo box.&quot;);
		pnlSwitching.add(btnSwitch);
		
		btnSwitch.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switchFac = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				
				if (switchFac == null) {
					return;
				}
				
				adapter.setSwitcherStrategy(switchFac);
			}
		});
		
		btnMakeSwitcher.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switcherStrat = adapter.getSwitcherFac();
				TDropListItem paintStrat = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (paintStrat == null) {
					return;
				}
				
				adapter.makeBall(switcherStrat, paintStrat);
			}
		});
		btnClearBalls.setToolTipText(&quot;Click this to clear the balls on the canvas.&quot;);
		btnClearBalls.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				adapter.clearBalls();
			}
		});
		
		pnlControl.add(btnClearBalls);
		
		pnlControl.add(pnlPaintStrats);
		pnlPaintStrats.setLayout(new GridLayout(0, 1, 0, 0));
		btnAddPaintStrat.setToolTipText(&quot;This is the button that lets you add paint strategies to the combo box below.&quot;);
		btnAddPaintStrat.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (txtPaintStrat.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem paintFac = adapter.addPaintFactory(txtPaintStrat.getText());
             comBoxStrats.insertItemAt(paintFac, 0);
			}
		});
		
		
		pnlPaintStrats.add(btnAddPaintStrat);
		comBoxStrats.setToolTipText(&quot;The is the combo box for the paint strategies that can be implemented.&quot;);
		
		pnlPaintStrats.add(comBoxStrats);
		pnlCanvas.setBackground(Color.LIGHT_GRAY);
		pnlCanvas.setToolTipText(&quot;This is the canvas where the balls move, and stay in.&quot;);
		
		contentPane.add(pnlCanvas, BorderLayout.CENTER);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VX8Ywt6EeiiCrav3vcpBQ" name="start" specification="_8Pv1gQt6EeiiCrav3vcpBQ">
          <language>java</language>
          <body>setExtendedState(JFrame.MAXIMIZED_BOTH);
		setVisible(true);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8PrkEAt6EeiiCrav3vcpBQ" name="getPanel" method="_8VXVUAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VeqIAt6EeiiCrav3vcpBQ">
            <body>This gets the canvas of the frame.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UgZsAt6EeiiCrav3vcpBQ" type="_8TqsMAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8PvOcAt6EeiiCrav3vcpBQ" name="updateView" method="_8VXVVQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VeqIgt6EeiiCrav3vcpBQ">
            <body>Update the view by repainting</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8PvOcQt6EeiiCrav3vcpBQ" name="getCanvas" method="_8VX8YAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VeqIwt6EeiiCrav3vcpBQ">
            <body>This function returns the canvas panel.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UgZsQt6EeiiCrav3vcpBQ" type="_8S0-sAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8Pv1gAt6EeiiCrav3vcpBQ" name="initGUI" visibility="private" method="_8VX8Ygt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VeqJAt6EeiiCrav3vcpBQ">
            <body>This private function initializes the GUI.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8Pv1gQt6EeiiCrav3vcpBQ" name="start" method="_8VX8Ywt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VeqJQt6EeiiCrav3vcpBQ">
            <body>This function makes the frame visible after initializing it.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8TuWkAt6EeiiCrav3vcpBQ" name="BallWorldView" method="_8VXVUgt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8TuWkgt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8TuWkwt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_8VeqIQt6EeiiCrav3vcpBQ">
            <body>Create the frame
	 * @param adapter An IView2ModelAdapter</body>
          </ownedComment>
          <ownedParameter xmi:id="_8TuWkQt6EeiiCrav3vcpBQ" name="adapter" type="_8P0uAAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8TuWlAt6EeiiCrav3vcpBQ" type="_8Pn5sAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_8P0uAAt6EeiiCrav3vcpBQ" name="IView2ModelAdapter">
        <ownedComment xmi:id="_8VeqJgt6EeiiCrav3vcpBQ">
          <body>This is an interface which has the functions that the view wants the model to have.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_8P2jMAt6EeiiCrav3vcpBQ" name="switcherFac" type="_8UiO4gt6EeiiCrav3vcpBQ" isReadOnly="true" association="_8VobEQt6EeiiCrav3vcpBQ"/>
        <ownedOperation xmi:id="_8P18IAt6EeiiCrav3vcpBQ" name="clearBalls">
          <ownedComment xmi:id="_8VeqJwt6EeiiCrav3vcpBQ">
            <body>This is a function that will tell the model to clear the balls.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8P18IQt6EeiiCrav3vcpBQ" name="addStrategy">
          <ownedComment xmi:id="_8VeqKQt6EeiiCrav3vcpBQ">
            <body>This function will take the given short strategy name and return a corresponding
     * something to put onto both drop lists.
     * @param classname The shortened class name of the desired strategy
     * @return Something to put onto both the drop lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8P18Igt6EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8Ui18Qt6EeiiCrav3vcpBQ" type="_8UiO4gt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8P2jMQt6EeiiCrav3vcpBQ" name="addPaintFactory">
          <ownedParameter xmi:id="_8P2jMgt6EeiiCrav3vcpBQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8UkrIAt6EeiiCrav3vcpBQ" type="_8UiO4gt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UiO4At6EeiiCrav3vcpBQ" name="paintBalls">
          <ownedComment xmi:id="_8VeqKAt6EeiiCrav3vcpBQ">
            <body>This is a function that will tell the model to paint the balls.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UiO4Qt6EeiiCrav3vcpBQ" name="g" type="_8S2z4Qt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UjdAAt6EeiiCrav3vcpBQ" name="makeBall">
          <ownedComment xmi:id="_8VeqKgt6EeiiCrav3vcpBQ">
            <body>This function will make a ball with the selected short strategy name.
     * @param selectedItem A shorten class name for the desired strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UjdAQt6EeiiCrav3vcpBQ" name="selectedItem" type="_8UiO4gt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UjdAgt6EeiiCrav3vcpBQ" name="paintStrat" type="_8UiO4gt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UjdAwt6EeiiCrav3vcpBQ" name="combineStrategies">
          <ownedComment xmi:id="_8VeqKwt6EeiiCrav3vcpBQ">
            <body>This function will return a new object to put on both lists, given two items from the lists.
     * @param selectedItem1 An object from one drop list
     * @param selectedItem2 An object from the other drop list
     * @return An object to put back on both lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UkEEAt6EeiiCrav3vcpBQ" name="selectedItem1" type="_8UiO4gt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UkEEQt6EeiiCrav3vcpBQ" name="selectedItem2" type="_8UiO4gt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UkEEgt6EeiiCrav3vcpBQ" type="_8UiO4gt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UkEEwt6EeiiCrav3vcpBQ" name="setSwitcherStrategy">
          <ownedComment xmi:id="_8VfRIAt6EeiiCrav3vcpBQ">
            <body>This function will change the current strategy of the switcher balls to whatever
     * strategy is made by the factory in the parameter.
     * @param switchFac An object from the top drop list.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UkEFAt6EeiiCrav3vcpBQ" name="switchFac" type="_8UiO4gt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8UiO4gt6EeiiCrav3vcpBQ" name="TDropListItem"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VobEQt6EeiiCrav3vcpBQ" name="" memberEnd="_8VobEgt6EeiiCrav3vcpBQ _8P2jMAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VobEgt6EeiiCrav3vcpBQ" name="" type="_8P0uAAt6EeiiCrav3vcpBQ" association="_8VobEQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V3roQt6EeiiCrav3vcpBQ" name="" memberEnd="_8V3rogt6EeiiCrav3vcpBQ _8U_h4wt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V3rogt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V3roQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V4SsQt6EeiiCrav3vcpBQ" name="" memberEnd="_8V4Ssgt6EeiiCrav3vcpBQ _8VAI8Qt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V4Ssgt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V4SsQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V4StAt6EeiiCrav3vcpBQ" name="" memberEnd="_8V4StQt6EeiiCrav3vcpBQ _8VAwAAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V4StQt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V4StAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V45wQt6EeiiCrav3vcpBQ" name="" memberEnd="_8V45wgt6EeiiCrav3vcpBQ _8VAwAwt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V45wgt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V45wQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V5g0Qt6EeiiCrav3vcpBQ" name="" memberEnd="_8V5g0gt6EeiiCrav3vcpBQ _8VBXEQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V5g0gt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V5g0Qt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V6H4Qt6EeiiCrav3vcpBQ" name="" memberEnd="_8V6H4gt6EeiiCrav3vcpBQ _8VB-Igt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V6H4gt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V6H4Qt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V6H5At6EeiiCrav3vcpBQ" name="" memberEnd="_8V6H5Qt6EeiiCrav3vcpBQ _8VDMQAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V6H5Qt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V6H5At6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V6u8Qt6EeiiCrav3vcpBQ" name="" memberEnd="_8V6u8gt6EeiiCrav3vcpBQ _8VDzUAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V6u8gt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V6u8Qt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V7WAQt6EeiiCrav3vcpBQ" name="" memberEnd="_8V7WAgt6EeiiCrav3vcpBQ _8VFBcAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V7WAgt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V7WAQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V7WBAt6EeiiCrav3vcpBQ" name="" memberEnd="_8V7WBQt6EeiiCrav3vcpBQ _8VFogAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V7WBQt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V7WBAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V79EQt6EeiiCrav3vcpBQ" name="" memberEnd="_8V79Egt6EeiiCrav3vcpBQ _8VFogwt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V79Egt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V79EQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V8kIQt6EeiiCrav3vcpBQ" name="" memberEnd="_8V8kIgt6EeiiCrav3vcpBQ _8VGPkgt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V8kIgt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V8kIQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V8kJAt6EeiiCrav3vcpBQ" name="" memberEnd="_8V9LMAt6EeiiCrav3vcpBQ _8VG2owt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V9LMAt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V8kJAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V9LMgt6EeiiCrav3vcpBQ" name="" memberEnd="_8V9LMwt6EeiiCrav3vcpBQ _8VHdswt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V9LMwt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V9LMgt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V9yQQt6EeiiCrav3vcpBQ" name="" memberEnd="_8V9yQgt6EeiiCrav3vcpBQ _8VIEwQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V9yQgt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V9yQQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V-ZUQt6EeiiCrav3vcpBQ" name="" memberEnd="_8V-ZUgt6EeiiCrav3vcpBQ _8VIr0At6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V-ZUgt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V-ZUQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V-ZVAt6EeiiCrav3vcpBQ" name="" memberEnd="_8V-ZVQt6EeiiCrav3vcpBQ _8VIr0wt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V-ZVQt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8V-ZVAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8WAOgAt6EeiiCrav3vcpBQ" name="" memberEnd="_8WAOgQt6EeiiCrav3vcpBQ _8VJS4Qt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8WAOgQt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8WAOgAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8WAOgwt6EeiiCrav3vcpBQ" name="" memberEnd="_8WAOhAt6EeiiCrav3vcpBQ _8VJS5At6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8WAOhAt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8WAOgwt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8WA1kQt6EeiiCrav3vcpBQ" name="" memberEnd="_8WA1kgt6EeiiCrav3vcpBQ _8VJ58Qt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8WA1kgt6EeiiCrav3vcpBQ" name="" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8WA1kQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_8LzwsAt6EeiiCrav3vcpBQ" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_8Ni2EAt6EeiiCrav3vcpBQ" name="BallWorldController">
        <ownedComment xmi:id="_8VaYoAt6EeiiCrav3vcpBQ">
          <body>This is the BallWorldController, that has private variables for model and view,
and is able to interface between them.
@author sn32, kyl3, lka2, swong
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_8UnHYAt6EeiiCrav3vcpBQ" name="model" visibility="private" type="_8NzUwAt6EeiiCrav3vcpBQ" association="_8VpCIAt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_8UnucQt6EeiiCrav3vcpBQ" name="view" visibility="private" type="_8Pn5sAt6EeiiCrav3vcpBQ" association="_8VpCIwt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VLvIAt6EeiiCrav3vcpBQ" name="main" specification="_8NjdIAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VLvIQt6EeiiCrav3vcpBQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8VLvIgt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(() -> {
			try {
				(new BallWorldController()).start();
			} catch (Exception e) {
				e.printStackTrace();
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VLvIwt6EeiiCrav3vcpBQ" name="BallWorldController" specification="_8NkEMgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VLvJAt6EeiiCrav3vcpBQ" type="_8Ni2EAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>model = new BallWorldModel(new IModel2ViewAdapter() {

			/**
			 * This function from the IModel2ViewAdapter allows the controller
			 * to tell the view to update.
			 */
			@Override
			public void update() {
				view.updateView();
			}

			/**
			 * This function from the IModel2ViewAdapter allows the controller to get
			 * the canvas from the view.
			 */
			@Override
			public Container getCanvas() {
				return view.getCanvas();
			}
		});
		
		view = new BallWorldView&lt;IStrategyFac>(new IView2ModelAdapter&lt;IStrategyFac>() {
	        /**
	         * Returns an IStrategyFac that can instantiate the strategy specified
	         * by classname. Returns the error strategy factory if classname is null.
	         * The toString() of the returned factory is the classname.
	         * @param classname Shortened name of desired strategy
	         * @return A factory to make that strategy
	         */
			@Override
	        public IStrategyFac addStrategy(String classname) {
	        		return model.makeStrategyFac(classname);
	        	}

	        /**
	         * Add a ball to the system with a strategy as given by the given IStrategyFac
	         * @param selectedItem The fully qualified name of the desired strategy.
	         */
	        @Override
	        public void makeBall(IStrategyFac selectedItem, IStrategyFac paintStrat) {
	        		if (null != selectedItem &amp;&amp; paintStrat != null) {
	        			model.makeBall(selectedItem.make(), paintStrat.makePaint());
	        		}
	        	}
			
			/**
			 * Returns an IStrategyFac that can instantiate a MultiStrategy with the
			 * two strategies made by the two given IStrategyFac objects. Returns
			 * the error strategy factory if either supplied factory is null. The
			 * toString() of the returned factory is the toString()'s of the two given
			 * factories, concatenated with &quot;-&quot;.
			 * @param selectedItem1 An IStrategyFac for a strategy
			 * @param selectedItem2 An IStrategyFac for a strategy
			 * @return An IStrategyFac for the composition of the two strategies
			 */
	        @Override
			public IStrategyFac combineStrategies(IStrategyFac selectedItem1, IStrategyFac selectedItem2) {
				return model.combineStrategyFacs(selectedItem1, selectedItem2);
			}
			
			/**
			 * This function tells the model to clear all the balls from the canvas.
			 */
			@Override
			public void clearBalls() {
				model.clearBalls();
			}
			
			/**
			 * This function tells the model to paint and update the status of all the balls.
			 */
			@Override 
			public void paintBalls(Graphics g) {
				model.update(g); // see is this is correct or if a paint method is needed
			}

			/**
			 * This function sets the strategy of the switcher balls to whatever is made by
			 * the input's make method.
			 * @param switchFac The new strategy factory whose make method returns the new strategy
			 * for the switcher balls
			 */
			@Override
			public void setSwitcherStrategy(IStrategyFac switchFac) {
				model.setSwitcherStrategy(switchFac);
			}

			/**
			 * This function returns the strategy factory that is making the switcher balls' current strategy.
			 * @return An IStrategyFactory that makes the current switcher balls' strategy.
			 */
			@Override
			public IStrategyFac getSwitcherFac() {
				return model.getSwitcherFac();
			}

			@Override
			public IStrategyFac addPaintFactory(String text) {
				return model.makePaintFactory(text);
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VLvJQt6EeiiCrav3vcpBQ" name="start" specification="_8NkrQQt6EeiiCrav3vcpBQ">
          <language>java</language>
          <body>view.start();
		model.start();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8NjdIAt6EeiiCrav3vcpBQ" name="main" isStatic="true" method="_8VLvIAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VaYoQt6EeiiCrav3vcpBQ">
            <body>This main method starts the BallWorldController.
	 * @param args Command line arguments.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8NjdIQt6EeiiCrav3vcpBQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8NkEMAt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8NkEMgt6EeiiCrav3vcpBQ" name="BallWorldController" method="_8VLvIwt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8NkEMwt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8NkENAt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_8VaYogt6EeiiCrav3vcpBQ">
            <body>This is the constructor for BallWorldController, which
	 * creates anonymous inner classes for the adapters, and defines their functions.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8NkrQAt6EeiiCrav3vcpBQ" type="_8Ni2EAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8NkrQQt6EeiiCrav3vcpBQ" name="start" method="_8VLvJQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VaYowt6EeiiCrav3vcpBQ">
            <body>This function starts the view and model.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VpCIAt6EeiiCrav3vcpBQ" name="" memberEnd="_8VpCIQt6EeiiCrav3vcpBQ _8UnHYAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VpCIQt6EeiiCrav3vcpBQ" name="" type="_8Ni2EAt6EeiiCrav3vcpBQ" association="_8VpCIAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8VpCIwt6EeiiCrav3vcpBQ" name="" memberEnd="_8VpCJAt6EeiiCrav3vcpBQ _8UnucQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8VpCJAt6EeiiCrav3vcpBQ" name="" type="_8Ni2EAt6EeiiCrav3vcpBQ" association="_8VpCIwt6EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_8L6eYQt6EeiiCrav3vcpBQ" name="util">
      <packagedElement xmi:type="uml:Class" xmi:id="_8PbFYAt6EeiiCrav3vcpBQ" name="Dispatcher">
        <ownedComment xmi:id="_8VeqEAt6EeiiCrav3vcpBQ">
          <body>A simplified Observable class that immediately notifies its Observers when its
notifyAll() method is called. The changed state of the Dispatcher does not need
to be separately set.
@author sn32, kyl3</body>
        </ownedComment>
        <generalization xmi:id="_8UXPwAt6EeiiCrav3vcpBQ" general="_8S7FUQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VU5Igt6EeiiCrav3vcpBQ" name="notifyAll" specification="_8UWoswt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VU5Iwt6EeiiCrav3vcpBQ" name="param" type="_8UBRhQt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>setChanged();
     notifyObservers(param);
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8UWoswt6EeiiCrav3vcpBQ" name="notifyAll" method="_8VU5Igt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8UWotAt6EeiiCrav3vcpBQ" name="param" type="_8UBRhQt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_8PcTgAt6EeiiCrav3vcpBQ" name="IRandomizer">
        <ownedOperation xmi:id="_8Pc6kAt6EeiiCrav3vcpBQ" name="randomInt">
          <ownedComment xmi:id="_8VeqEwt6EeiiCrav3vcpBQ">
            <body>Returns a random integer greater than or equal to min and less than or equal to max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return an int subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_8PdhoAt6EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PdhoQt6EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8Pdhogt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8Pdhowt6EeiiCrav3vcpBQ" name="randomDouble">
          <ownedComment xmi:id="_8VeqFAt6EeiiCrav3vcpBQ">
            <body>Returns a random double greater than or equal to min and less than max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return a double subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_8PdhpAt6EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PdhpQt6EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8Pdhpgt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8Pdhpwt6EeiiCrav3vcpBQ" name="randomColor">
          <ownedComment xmi:id="_8VeqGAt6EeiiCrav3vcpBQ">
            <body>Generates a random color
	 * @return a random Color object</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UaTEQt6EeiiCrav3vcpBQ" type="_8S6eQAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UXPwQt6EeiiCrav3vcpBQ" name="randomLoc">
          <ownedComment xmi:id="_8VeqEQt6EeiiCrav3vcpBQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than rect.width
	 * and 0 less than y less than rect.height.
	 * @param rect The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UXPwgt6EeiiCrav3vcpBQ" name="rect" type="_8TCaEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UX20At6EeiiCrav3vcpBQ" type="_8S6eQgt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UYd4Qt6EeiiCrav3vcpBQ" name="randomLoc">
          <ownedComment xmi:id="_8VeqEgt6EeiiCrav3vcpBQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than dim.width
	 * and 0 less than y less than dim.height.
	 * @param dim The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UYd4gt6EeiiCrav3vcpBQ" name="dim" type="_8UX20Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UYd4wt6EeiiCrav3vcpBQ" type="_8S6eQgt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UZE8At6EeiiCrav3vcpBQ" name="randomVel">
          <ownedComment xmi:id="_8VeqFQt6EeiiCrav3vcpBQ">
            <body>Returns a random velocity (as a Point) subject to the constraint that the absolute value
	 * of the velocity (speed) within the bound (inclusive) defined by rect. Thus the resultant
	 * velocity may be negative. The given Rectangle should use all positive values.
	 * @param rect The bounds for the absolute value of the velocity in the x and y directions.  
	 * @return a Point object with x and y subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UZE8Qt6EeiiCrav3vcpBQ" name="rect" type="_8TCaEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UZE8gt6EeiiCrav3vcpBQ" type="_8S6eQgt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UZE8wt6EeiiCrav3vcpBQ" name="randomDim">
          <ownedComment xmi:id="_8VeqFgt6EeiiCrav3vcpBQ">
            <body>Returns a random square Dimension, whose width is maxDim.width/2 less than width less than maxDim.width
	 * @param maxDim  The bounds on the side of the created Dimension.
	 * @return A random square Dimension subject to the given bound</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UZsAAt6EeiiCrav3vcpBQ" name="maxDim" type="_8UX20Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UZsAQt6EeiiCrav3vcpBQ" type="_8UX20Qt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UZsAgt6EeiiCrav3vcpBQ" name="randomBounds">
          <ownedComment xmi:id="_8VeqFwt6EeiiCrav3vcpBQ">
            <body>Generates a randomly located and sized rectangle
	 * @param rect  The bounds for the location of the created rectangle
	 * @param maxDim  The bounds for the dimensions of the create rectangle
	 * @return A Rectangle with location and dimensions subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UZsAwt6EeiiCrav3vcpBQ" name="rect" type="_8TCaEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UZsBAt6EeiiCrav3vcpBQ" name="maxDim" type="_8UX20Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UaTEAt6EeiiCrav3vcpBQ" type="_8TCaEAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UaTEgt6EeiiCrav3vcpBQ" name="randomChoice">
          <ownedComment xmi:id="_8VeqGQt6EeiiCrav3vcpBQ">
            <body>Returns a random choice of one of two objects, x and y, where probX is the probability 
	 * that x will be picked (0 less than x less than 1).
	 * @param x The first of two choices
	 * @param y The second of two choices
	 * @param probX  The probability of the first choice
	 * @return Either x or y as per the probability of choosing them.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8UaTEwt6EeiiCrav3vcpBQ" name="x" type="_8UBRhQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8Ua6IAt6EeiiCrav3vcpBQ" name="y" type="_8UBRhQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8Ua6IQt6EeiiCrav3vcpBQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8Ua6Igt6EeiiCrav3vcpBQ" type="_8UBRhQt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PfW0At6EeiiCrav3vcpBQ" name="Randomizer">
        <ownedComment xmi:id="_8VeqGgt6EeiiCrav3vcpBQ">
          <body>Utility class that supplies  class routines for generating various random values</body>
        </ownedComment>
        <ownedAttribute xmi:id="_8U9ssgt6EeiiCrav3vcpBQ" name="Singleton" isStatic="true" type="_8PfW0At6EeiiCrav3vcpBQ" association="_8V3EkQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8U9sswt6EeiiCrav3vcpBQ" value="new Randomizer()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_8Tno4At6EeiiCrav3vcpBQ" client="_8PfW0At6EeiiCrav3vcpBQ" supplier="_8PcTgAt6EeiiCrav3vcpBQ" contract="_8PcTgAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VVgIAt6EeiiCrav3vcpBQ" name="randomLoc" specification="_8Ua6Iwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VVgIQt6EeiiCrav3vcpBQ" name="rect" type="_8TCaEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VVgIgt6EeiiCrav3vcpBQ" type="_8S6eQgt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, rect.width), randomInt(0, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VVgIwt6EeiiCrav3vcpBQ" name="randomLoc" specification="_8UbhMgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VVgJAt6EeiiCrav3vcpBQ" name="dim" type="_8UX20Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VVgJQt6EeiiCrav3vcpBQ" type="_8S6eQgt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, dim.width), randomInt(0, dim.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VVgJgt6EeiiCrav3vcpBQ" name="randomInt" specification="_8Pgk8gt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VVgJwt6EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VVgKAt6EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VVgKQt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int)Math.floor((Math.random()*(1+max-min))+min);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VVgKgt6EeiiCrav3vcpBQ" name="randomDouble" specification="_8PhMAwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VVgKwt6EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VVgLAt6EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VVgLQt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return (Math.random()*(max-min))+min;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VVgLgt6EeiiCrav3vcpBQ" name="randomVel" specification="_8UcIQQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VVgLwt6EeiiCrav3vcpBQ" name="rect" type="_8TCaEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VVgMAt6EeiiCrav3vcpBQ" type="_8S6eQgt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (new Point (randomInt(-rect.width, rect.width), randomInt(-rect.height, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VVgMQt6EeiiCrav3vcpBQ" name="randomDim" specification="_8UcvUAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VVgMgt6EeiiCrav3vcpBQ" name="maxDim" type="_8UX20Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VVgMwt6EeiiCrav3vcpBQ" type="_8UX20Qt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>int x =  randomInt(maxDim.width/2,maxDim.width);
		return new Dimension(x,x);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VWHMAt6EeiiCrav3vcpBQ" name="randomBounds" specification="_8UdWYAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VWHMQt6EeiiCrav3vcpBQ" name="rect" type="_8TCaEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VWHMgt6EeiiCrav3vcpBQ" name="maxDim" type="_8UX20Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VWHMwt6EeiiCrav3vcpBQ" type="_8TCaEAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return new Rectangle(randomLoc(rect), randomDim(maxDim));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VWHNAt6EeiiCrav3vcpBQ" name="randomColor" specification="_8PhzEwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VWHNQt6EeiiCrav3vcpBQ" type="_8S6eQAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return new Color( randomInt(0,255),randomInt(0,255),randomInt(0,255));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VWHNgt6EeiiCrav3vcpBQ" name="randomChoice" specification="_8Ud9cAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VWHNwt6EeiiCrav3vcpBQ" name="x" type="_8UBRhQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VWHOAt6EeiiCrav3vcpBQ" name="y" type="_8UBRhQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8VWHOQt6EeiiCrav3vcpBQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VWHOgt6EeiiCrav3vcpBQ" type="_8UBRhQt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (Math.random() &lt; probX) ? x: y;

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8Pf94At6EeiiCrav3vcpBQ" name="Randomizer" visibility="private">
          <eAnnotations xmi:id="_8Pf94Qt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8Pf94gt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8Pgk8Qt6EeiiCrav3vcpBQ" type="_8PfW0At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8Pgk8gt6EeiiCrav3vcpBQ" name="randomInt" method="_8VVgJgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8PhMAAt6EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PhMAQt6EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PhMAgt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8PhMAwt6EeiiCrav3vcpBQ" name="randomDouble" method="_8VVgKgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8PhzEAt6EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PhzEQt6EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PhzEgt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8PhzEwt6EeiiCrav3vcpBQ" name="randomColor" method="_8VWHNAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8UdWZAt6EeiiCrav3vcpBQ" type="_8S6eQAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8Ua6Iwt6EeiiCrav3vcpBQ" name="randomLoc" method="_8VVgIAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8UbhMAt6EeiiCrav3vcpBQ" name="rect" type="_8TCaEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UbhMQt6EeiiCrav3vcpBQ" type="_8S6eQgt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UbhMgt6EeiiCrav3vcpBQ" name="randomLoc" method="_8VVgIwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8UbhMwt6EeiiCrav3vcpBQ" name="dim" type="_8UX20Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UcIQAt6EeiiCrav3vcpBQ" type="_8S6eQgt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UcIQQt6EeiiCrav3vcpBQ" name="randomVel" method="_8VVgLgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8UcIQgt6EeiiCrav3vcpBQ" name="rect" type="_8TCaEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UcIQwt6EeiiCrav3vcpBQ" type="_8S6eQgt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UcvUAt6EeiiCrav3vcpBQ" name="randomDim" method="_8VVgMQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8UcvUQt6EeiiCrav3vcpBQ" name="maxDim" type="_8UX20Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UcvUgt6EeiiCrav3vcpBQ" type="_8UX20Qt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8UdWYAt6EeiiCrav3vcpBQ" name="randomBounds" method="_8VWHMAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8UdWYQt6EeiiCrav3vcpBQ" name="rect" type="_8TCaEAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UdWYgt6EeiiCrav3vcpBQ" name="maxDim" type="_8UX20Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8UdWYwt6EeiiCrav3vcpBQ" type="_8TCaEAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8Ud9cAt6EeiiCrav3vcpBQ" name="randomChoice" method="_8VWHNgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8Ud9cQt6EeiiCrav3vcpBQ" name="x" type="_8UBRhQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8Ud9cgt6EeiiCrav3vcpBQ" name="y" type="_8UBRhQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_8Ud9cwt6EeiiCrav3vcpBQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8Ud9dAt6EeiiCrav3vcpBQ" type="_8UBRhQt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8PmrkAt6EeiiCrav3vcpBQ" name="SineMaker">
        <ownedComment xmi:id="_8VeqGwt6EeiiCrav3vcpBQ">
          <body>A utility class that can be used to create smoothly varying sinusoidal
numerical data.
Note that this is not a singleton class nor does it have static methods as
its behavior depends on the minimum, maximum and delta values given to 
its constructor.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_8U-TwQt6EeiiCrav3vcpBQ" name="_mid" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8U-60At6EeiiCrav3vcpBQ" name="_ampl" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8U-60gt6EeiiCrav3vcpBQ" name="_delta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_8U-61At6EeiiCrav3vcpBQ" name="_theta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_8U-61Qt6EeiiCrav3vcpBQ" value="-Math.PI/2.0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VWHOwt6EeiiCrav3vcpBQ" name="SineMaker" specification="_8PmrkQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VWHPAt6EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VWHPQt6EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VWHPgt6EeiiCrav3vcpBQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8VWHPwt6EeiiCrav3vcpBQ" type="_8PmrkAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>_mid = (max+min)/2.0;
		_ampl = (max-min)/2.0;
		_delta = delta;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VWuQAt6EeiiCrav3vcpBQ" name="getDblVal" specification="_8PnSpgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VWuQQt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double result = _mid + _ampl*Math.sin(_theta);
		_theta += _delta; // shorthand for _theta = _theta + _delta
		return result;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8VWuQgt6EeiiCrav3vcpBQ" name="getIntVal" specification="_8PnSqAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_8VWuQwt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int) Math.round(getDblVal());
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8PmrkQt6EeiiCrav3vcpBQ" name="SineMaker" method="_8VWHOwt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_8PnSowt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8PnSpAt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_8VeqHAt6EeiiCrav3vcpBQ">
            <body>The constructor takes several values to control the object's behavior.
	 * @param min The minimum and initial value to produce.
	 * @param max The maximum value to produce.
	 * @param delta The amount in radians that the generating angle is incremented each time
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_8PnSoAt6EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PnSoQt6EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PnSogt6EeiiCrav3vcpBQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8PnSpQt6EeiiCrav3vcpBQ" type="_8PmrkAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8PnSpgt6EeiiCrav3vcpBQ" name="getDblVal" method="_8VWuQAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VeqHQt6EeiiCrav3vcpBQ">
            <body>Returns a different value each time it is called.  The value varies smoothly in a 
	 * sinusoidal fashion, incrementing each time as per the above specified delta 
	 * angle increase.
	 * @return the next value as a double</body>
          </ownedComment>
          <ownedParameter xmi:id="_8PnSpwt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8PnSqAt6EeiiCrav3vcpBQ" name="getIntVal" method="_8VWuQgt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_8VeqHgt6EeiiCrav3vcpBQ">
            <body>Same as getDblVal, but returns the result rounded to the nearest integer.
	 * Note that getDblVal and getIntVal are not independent as getIntVal merely calls
	 * getDblVal.
	 * @return the next value as an int</body>
          </ownedComment>
          <ownedParameter xmi:id="_8PnSqQt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8V3EkQt6EeiiCrav3vcpBQ" name="" memberEnd="_8V3Ekgt6EeiiCrav3vcpBQ _8U9ssgt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_8V3Ekgt6EeiiCrav3vcpBQ" name="" type="_8PfW0At6EeiiCrav3vcpBQ" association="_8V3EkQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_8MEPYAt6EeiiCrav3vcpBQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_8MEPYQt6EeiiCrav3vcpBQ" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_8TDBIQt6EeiiCrav3vcpBQ" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8TqFIQt6EeiiCrav3vcpBQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8TqsMAt6EeiiCrav3vcpBQ" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8TqsMgt6EeiiCrav3vcpBQ" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8TrTQQt6EeiiCrav3vcpBQ" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8TshYQt6EeiiCrav3vcpBQ" name="JComboBox"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_7tLT8At6EeiiCrav3vcpBQ">
      <eAnnotations xmi:id="_7tLT8Qt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_7tL7AAt6EeiiCrav3vcpBQ" base_Package="_7iCa8At6EeiiCrav3vcpBQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Array xmi:id="_8NkEMQt6EeiiCrav3vcpBQ" base_Element="_8NjdIQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8NqK0gt6EeiiCrav3vcpBQ" base_Element="_8NpjwAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8NytsQt6EeiiCrav3vcpBQ" base_Element="_8NyGoQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8N-68At6EeiiCrav3vcpBQ" base_Element="_8N-T4At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8N-68Qt6EeiiCrav3vcpBQ" base_Element="_8N-T4At6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8N-68gt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8O5g8At6EeiiCrav3vcpBQ" base_Element="_8O454At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8O9LUgt6EeiiCrav3vcpBQ" base_Element="_8O9LUAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8O9yYAt6EeiiCrav3vcpBQ" base_Element="_8O9LUwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8PFuNQt6EeiiCrav3vcpBQ" base_Element="_8PFuMAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8PGVQAt6EeiiCrav3vcpBQ" base_Element="_8PFuMAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8PGVQQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8PJYlAt6EeiiCrav3vcpBQ" base_Element="_8PIxgQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8PJ_oAt6EeiiCrav3vcpBQ" base_Element="_8PIxgQt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8PJ_oQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8PNC8At6EeiiCrav3vcpBQ" base_Element="_8PMb4At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8PNqAAt6EeiiCrav3vcpBQ" base_Element="_8PMb4At6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8PNqAQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8Pgk8At6EeiiCrav3vcpBQ" base_Element="_8Pf94At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_8PogwAt6EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_8Pn5sAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_8P1VEAt6EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_8P0uAAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8S1lwAt6EeiiCrav3vcpBQ" base_Element="_8S0-sAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8S2z4At6EeiiCrav3vcpBQ" base_Element="_8S1lwQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8S2z4gt6EeiiCrav3vcpBQ" base_Element="_8S2z4Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8S3a8Qt6EeiiCrav3vcpBQ" base_Element="_8S3a8At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8S4CBQt6EeiiCrav3vcpBQ" base_Element="_8S4CAwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8S4CBgt6EeiiCrav3vcpBQ" base_Element="_8S4CAwt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8S4CBwt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8S53Mgt6EeiiCrav3vcpBQ" base_Element="_8S53MAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8S6eQQt6EeiiCrav3vcpBQ" base_Element="_8S6eQAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8S7FUAt6EeiiCrav3vcpBQ" base_Element="_8S6eQgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8S7FUgt6EeiiCrav3vcpBQ" base_Element="_8S7FUQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8S7FVAt6EeiiCrav3vcpBQ" base_Element="_8S7FUwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8TBL8At6EeiiCrav3vcpBQ" base_Element="_8TAk4At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8TBzAAt6EeiiCrav3vcpBQ" base_Element="_8TAk4At6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8TBzAQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_8TDBIAt6EeiiCrav3vcpBQ" base_Element="_8TCaEAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8TDBIgt6EeiiCrav3vcpBQ" base_Element="_8TDBIQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8TGEcwt6EeiiCrav3vcpBQ" base_Element="_8TGEcAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8TGEdAt6EeiiCrav3vcpBQ" base_Element="_8TGEcAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8TGEdQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8TGrgwt6EeiiCrav3vcpBQ" base_Element="_8TGrgAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8TGrhAt6EeiiCrav3vcpBQ" base_Element="_8TGrgAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8TGrhQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8TJHwQt6EeiiCrav3vcpBQ" base_Element="_8TIgsgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8TJu0At6EeiiCrav3vcpBQ" base_Element="_8TIgsgt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8TJu0Qt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_8TK88At6EeiiCrav3vcpBQ" base_Element="_8TKV4At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8TK88gt6EeiiCrav3vcpBQ" base_Element="_8TK88Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8TMyIgt6EeiiCrav3vcpBQ" base_Element="_8TMLEAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8TMyIwt6EeiiCrav3vcpBQ" base_Element="_8TMLEAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8TMyJAt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_8TNZMQt6EeiiCrav3vcpBQ" base_Element="_8TMyJQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8TP1cAt6EeiiCrav3vcpBQ" base_Element="_8TOnUgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8TP1cgt6EeiiCrav3vcpBQ" base_Element="_8TP1cQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8TQcgAt6EeiiCrav3vcpBQ" base_Element="_8TP1cwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8TQcggt6EeiiCrav3vcpBQ" base_Element="_8TQcgQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Array xmi:id="_8TUG4At6EeiiCrav3vcpBQ" base_Element="_8TTf0At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8TXKNAt6EeiiCrav3vcpBQ" base_Element="_8TXKMQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8TXxQAt6EeiiCrav3vcpBQ" base_Element="_8TXKMQt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8TXxQQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_8TYYUAt6EeiiCrav3vcpBQ" base_Element="_8TXxQgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8TcpwAt6EeiiCrav3vcpBQ" base_Element="_8TcCsQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8Tcpwwt6EeiiCrav3vcpBQ" base_Element="_8TcCsQt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8TcpxAt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8Td34At6EeiiCrav3vcpBQ" base_Element="_8TdQ0Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8Tee8wt6EeiiCrav3vcpBQ" base_Element="_8Tee8At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8Tee9At6EeiiCrav3vcpBQ" base_Element="_8Tee8At6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8TfGAAt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8TftEAt6EeiiCrav3vcpBQ" base_Element="_8TfGAgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8TftEQt6EeiiCrav3vcpBQ" base_Element="_8TfGAgt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8TftEgt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8TgUIwt6EeiiCrav3vcpBQ" base_Element="_8TgUIAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8Tg7MAt6EeiiCrav3vcpBQ" base_Element="_8TgUIAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8Tg7MQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8TiJUAt6EeiiCrav3vcpBQ" base_Element="_8ThiQQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8TiJUQt6EeiiCrav3vcpBQ" base_Element="_8ThiQQt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8TiJUgt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8Tlzsgt6EeiiCrav3vcpBQ" base_Element="_8TlMoQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8TmawAt6EeiiCrav3vcpBQ" base_Element="_8TlMoQt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8TmawQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_8TqFIAt6EeiiCrav3vcpBQ" base_Element="_8TpeEAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8TqFIgt6EeiiCrav3vcpBQ" base_Element="_8TqFIQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8TqsMQt6EeiiCrav3vcpBQ" base_Element="_8TqsMAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8TrTQAt6EeiiCrav3vcpBQ" base_Element="_8TqsMgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8Tr6UAt6EeiiCrav3vcpBQ" base_Element="_8TrTQQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8Tr6Ugt6EeiiCrav3vcpBQ" base_Element="_8Tr6UQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8TshYAt6EeiiCrav3vcpBQ" base_Element="_8Tr6Uwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8TtIcAt6EeiiCrav3vcpBQ" base_Element="_8TshYQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8TtIcgt6EeiiCrav3vcpBQ" base_Element="_8TtIcQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8TtvgAt6EeiiCrav3vcpBQ" base_Element="_8TtIcwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_8Tu9oAt6EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_8TuWkQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8T7x8At6EeiiCrav3vcpBQ" base_Element="_8T6j0At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8T7x8Qt6EeiiCrav3vcpBQ" base_Element="_8T6j0At6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8T7x8gt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8T8ZAwt6EeiiCrav3vcpBQ" base_Element="_8T8ZAAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8T9AEAt6EeiiCrav3vcpBQ" base_Element="_8T8ZAAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8T9AEQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8T-1QAt6EeiiCrav3vcpBQ" base_Element="_8T-OMwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8UB4kAt6EeiiCrav3vcpBQ" base_Element="_8UBRhQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8UEU0Qt6EeiiCrav3vcpBQ" base_Element="_8UDtwAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8UE74At6EeiiCrav3vcpBQ" base_Element="_8UDtwAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8UE74Qt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8UJ0ZAt6EeiiCrav3vcpBQ" base_Element="_8UJ0YAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8UJ0ZQt6EeiiCrav3vcpBQ" base_Element="_8UJ0YAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8UKbcAt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8ULplAt6EeiiCrav3vcpBQ" base_Element="_8ULpkAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8ULplQt6EeiiCrav3vcpBQ" base_Element="_8ULpkAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8UMQoAt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8USXQAt6EeiiCrav3vcpBQ" base_Element="_8URwMAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_8US-UAt6EeiiCrav3vcpBQ" base_Element="_8URwMAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_8US-UQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_8UYd4At6EeiiCrav3vcpBQ" base_Element="_8UX20Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8Ui18At6EeiiCrav3vcpBQ" base_Element="_8UiO4gt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8UnucAt6EeiiCrav3vcpBQ" base_Element="_8UnHYAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_8UoVgAt6EeiiCrav3vcpBQ" genericsValue="?" base_Element="_8UnucQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8Uo8kAt6EeiiCrav3vcpBQ" base_Element="_8UnucQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8UpjoAt6EeiiCrav3vcpBQ" base_Element="_8Uo8kQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8UqxwAt6EeiiCrav3vcpBQ" base_Element="_8UqKsAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8Usm8At6EeiiCrav3vcpBQ" base_Element="_8Ur_4Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8Usm9At6EeiiCrav3vcpBQ" base_Element="_8Usm8wt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8UtOAwt6EeiiCrav3vcpBQ" base_Element="_8UtOAQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8UvDMAt6EeiiCrav3vcpBQ" base_Element="_8UucIAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8UvqQAt6EeiiCrav3vcpBQ" base_Element="_8UvDMQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8Uw4YAt6EeiiCrav3vcpBQ" base_Element="_8UvqQQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8Uxfcgt6EeiiCrav3vcpBQ" base_Element="_8UxfcAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U0iwAt6EeiiCrav3vcpBQ" base_Element="_8UzUoQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U1J0Qt6EeiiCrav3vcpBQ" base_Element="_8U0iwQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U1J1At6EeiiCrav3vcpBQ" base_Element="_8U1J0gt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U2X8At6EeiiCrav3vcpBQ" base_Element="_8U1w4wt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U2X8gt6EeiiCrav3vcpBQ" base_Element="_8U2X8Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Array xmi:id="_8U2_Agt6EeiiCrav3vcpBQ" base_Element="_8U2_AAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U3mEAt6EeiiCrav3vcpBQ" base_Element="_8U2_AAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_8U40MAt6EeiiCrav3vcpBQ" base_Property="_8U4NIAt6EeiiCrav3vcpBQ" siblings="_8Vdb8wt6EeiiCrav3vcpBQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U40MQt6EeiiCrav3vcpBQ" base_Element="_8U4NIAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U6CUAt6EeiiCrav3vcpBQ" base_Element="_8U5bQAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U6pYAt6EeiiCrav3vcpBQ" base_Element="_8U6CUQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U6pYwt6EeiiCrav3vcpBQ" base_Element="_8U6pYQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Array xmi:id="_8U6pZgt6EeiiCrav3vcpBQ" base_Element="_8U6pZAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U6pZwt6EeiiCrav3vcpBQ" base_Element="_8U6pZAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U73gAt6EeiiCrav3vcpBQ" base_Element="_8U7Qcgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U8ekAt6EeiiCrav3vcpBQ" base_Element="_8U73gQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U8ekwt6EeiiCrav3vcpBQ" base_Element="_8U8ekQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U9ssQt6EeiiCrav3vcpBQ" base_Element="_8U9FoAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U-TwAt6EeiiCrav3vcpBQ" base_Element="_8U9ssgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U-Twgt6EeiiCrav3vcpBQ" base_Element="_8U-TwQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U-60Qt6EeiiCrav3vcpBQ" base_Element="_8U-60At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U-60wt6EeiiCrav3vcpBQ" base_Element="_8U-60gt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8U_h4At6EeiiCrav3vcpBQ" base_Element="_8U-61At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VAI8At6EeiiCrav3vcpBQ" base_Element="_8U_h4wt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VAI8wt6EeiiCrav3vcpBQ" base_Element="_8VAI8Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VAwAgt6EeiiCrav3vcpBQ" base_Element="_8VAwAAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VBXEAt6EeiiCrav3vcpBQ" base_Element="_8VAwAwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_8VB-IAt6EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_8VBXEQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VB-IQt6EeiiCrav3vcpBQ" base_Element="_8VBXEQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VClMQt6EeiiCrav3vcpBQ" base_Element="_8VB-Igt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VDMQgt6EeiiCrav3vcpBQ" base_Element="_8VDMQAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VEaYAt6EeiiCrav3vcpBQ" base_Element="_8VDzUAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VFBcgt6EeiiCrav3vcpBQ" base_Element="_8VFBcAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VFoggt6EeiiCrav3vcpBQ" base_Element="_8VFogAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VGPkQt6EeiiCrav3vcpBQ" base_Element="_8VFogwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_8VG2oAt6EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_8VGPkgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VG2ogt6EeiiCrav3vcpBQ" base_Element="_8VGPkgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_8VHdsAt6EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_8VG2owt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VHdsgt6EeiiCrav3vcpBQ" base_Element="_8VG2owt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VIEwAt6EeiiCrav3vcpBQ" base_Element="_8VHdswt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VIEwwt6EeiiCrav3vcpBQ" base_Element="_8VIEwQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VIr0gt6EeiiCrav3vcpBQ" base_Element="_8VIr0At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VJS4At6EeiiCrav3vcpBQ" base_Element="_8VIr0wt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VJS4wt6EeiiCrav3vcpBQ" base_Element="_8VJS4Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VJ58At6EeiiCrav3vcpBQ" base_Element="_8VJS5At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_8VJ58gt6EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_8VJ58Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8VJ59At6EeiiCrav3vcpBQ" base_Element="_8VJ58Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_8Vdb9At6EeiiCrav3vcpBQ" base_Property="_8Vdb8wt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8Vdb9Qt6EeiiCrav3vcpBQ" base_Element="_8Vdb8wt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VnM8gt6EeiiCrav3vcpBQ" base_Element="_8VnM8At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VnM9Qt6EeiiCrav3vcpBQ" base_Element="_8VnM8wt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8Vn0AAt6EeiiCrav3vcpBQ" base_Element="_8VnM9gt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VobEAt6EeiiCrav3vcpBQ" base_Element="_8Vn0AQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VobEwt6EeiiCrav3vcpBQ" base_Element="_8VobEQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VpCIgt6EeiiCrav3vcpBQ" base_Element="_8VpCIAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VppMAt6EeiiCrav3vcpBQ" base_Element="_8VpCIwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VppMwt6EeiiCrav3vcpBQ" base_Element="_8VppMQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VqQQQt6EeiiCrav3vcpBQ" base_Element="_8VppNAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8Vq3UAt6EeiiCrav3vcpBQ" base_Element="_8VqQQgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8Vq3Uwt6EeiiCrav3vcpBQ" base_Element="_8Vq3UQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VreYgt6EeiiCrav3vcpBQ" base_Element="_8VreYAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VsFcAt6EeiiCrav3vcpBQ" base_Element="_8VreYwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VssgAt6EeiiCrav3vcpBQ" base_Element="_8VsFcQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8Vssgwt6EeiiCrav3vcpBQ" base_Element="_8VssgQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VtTkAt6EeiiCrav3vcpBQ" base_Element="_8VsshAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8Vt6oAt6EeiiCrav3vcpBQ" base_Element="_8VtTkQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8Vw98At6EeiiCrav3vcpBQ" base_Element="_8Vt6oQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VxlAAt6EeiiCrav3vcpBQ" base_Element="_8Vw98Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VxlAwt6EeiiCrav3vcpBQ" base_Element="_8VxlAQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VyMEgt6EeiiCrav3vcpBQ" base_Element="_8VyMEAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VyzIAt6EeiiCrav3vcpBQ" base_Element="_8VyMEwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VyzIwt6EeiiCrav3vcpBQ" base_Element="_8VyzIQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8VzaMgt6EeiiCrav3vcpBQ" base_Element="_8VzaMAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V0BQAt6EeiiCrav3vcpBQ" base_Element="_8VzaMwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V0oUAt6EeiiCrav3vcpBQ" base_Element="_8V0BQQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V3EkAt6EeiiCrav3vcpBQ" base_Element="_8V0oUQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V3roAt6EeiiCrav3vcpBQ" base_Element="_8V3EkQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V4SsAt6EeiiCrav3vcpBQ" base_Element="_8V3roQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V4Sswt6EeiiCrav3vcpBQ" base_Element="_8V4SsQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V45wAt6EeiiCrav3vcpBQ" base_Element="_8V4StAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V5g0At6EeiiCrav3vcpBQ" base_Element="_8V45wQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V6H4At6EeiiCrav3vcpBQ" base_Element="_8V5g0Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V6H4wt6EeiiCrav3vcpBQ" base_Element="_8V6H4Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V6u8At6EeiiCrav3vcpBQ" base_Element="_8V6H5At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V7WAAt6EeiiCrav3vcpBQ" base_Element="_8V6u8Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V7WAwt6EeiiCrav3vcpBQ" base_Element="_8V7WAQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V79EAt6EeiiCrav3vcpBQ" base_Element="_8V7WBAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V8kIAt6EeiiCrav3vcpBQ" base_Element="_8V79EQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V8kIwt6EeiiCrav3vcpBQ" base_Element="_8V8kIQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V9LMQt6EeiiCrav3vcpBQ" base_Element="_8V8kJAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V9yQAt6EeiiCrav3vcpBQ" base_Element="_8V9LMgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V-ZUAt6EeiiCrav3vcpBQ" base_Element="_8V9yQQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V-ZUwt6EeiiCrav3vcpBQ" base_Element="_8V-ZUQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8V_ncAt6EeiiCrav3vcpBQ" base_Element="_8V-ZVAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8WAOggt6EeiiCrav3vcpBQ" base_Element="_8WAOgAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8WA1kAt6EeiiCrav3vcpBQ" base_Element="_8WAOgwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8WBcoAt6EeiiCrav3vcpBQ" base_Element="_8WA1kQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_8WCDsAt6EeiiCrav3vcpBQ" base_Element="_8WBcoQt6EeiiCrav3vcpBQ"/>
</xmi:XMI>
