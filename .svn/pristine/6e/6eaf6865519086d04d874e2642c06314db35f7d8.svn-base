<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_9w0-AAuLEei-6eSvavMBRQ" name="Updating">
    <eAnnotations xmi:id="_9zpBcAuLEei-6eSvavMBRQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_9zpBcQuLEei-6eSvavMBRQ" source="codegen">
        <details xmi:id="_9zpBcguLEei-6eSvavMBRQ" key="codegenDirectory" value="/HW04/src"/>
        <details xmi:id="_-cM2QAuLEei-6eSvavMBRQ" key="AssociatedSourceCode" value="/HW04/src/controller/BallWorldController.java;133705207/1;/HW04/src/model/APaintStrategy.java;1740869287/1;/HW04/src/model/Ball.java;544139014/1;/HW04/src/model/BallPaintStrategy.java;538568874/1;/HW04/src/model/BallWorldModel.java;3314949356/1;/HW04/src/model/BreathingStrategy.java;569949667/1;/HW04/src/model/ColorStrategy.java;783269627/1;/HW04/src/model/CrashStrategy.java;4279759508/1;/HW04/src/model/EarthImagePaintStrategy.java;2510652715/1;/HW04/src/model/EllipsePaintStrategy.java;292774861/1;/HW04/src/model/EllipseShapeFactory.java;1636135608/1;/HW04/src/model/FastStrategy.java;3009224450/1;/HW04/src/model/HumbirdImagePaintStrategy.java;809236240/1;/HW04/src/model/IBallCmd.java;2100560540/1;/HW04/src/model/IModel2ViewAdapter.java;715642539/1;/HW04/src/model/IPaintStrategy.java;556726924/1;/HW04/src/model/IShapeFactory.java;810833796/1;/HW04/src/model/IStrategyFac.java;3581042476/1;/HW04/src/model/IUpdateStrategy.java;1651050839/1;/HW04/src/model/ImagePaintStrategy.java;2009657845/1;/HW04/src/model/JupiterImagePaintStrategy.java;1009556515/1;/HW04/src/model/MarioImagePaintStrategy.java;3709244018/1;/HW04/src/model/MarioMarsImagePaintStrategy.java;418883682/1;/HW04/src/model/MarsImagePaintStrategy.java;165975352/1;/HW04/src/model/MultiPaintStrategy.java;695036297/1;/HW04/src/model/MultiStrategy.java;1636671415/1;/HW04/src/model/ReefImagePaintStrategy.java;4190647735/1;/HW04/src/model/SaturnImagePaintStrategy.java;2198019520/1;/HW04/src/model/ShapePaintStrategy.java;851889235/1;/HW04/src/model/SheepImagePaintStrategy.java;3440385665/1;/HW04/src/model/SoccerImagePaintStrategy.java;2105681093/1;/HW04/src/model/SonicImagePaintStrategy.java;867235411/1;/HW04/src/model/SpawnStrategy.java;3065061180/1;/HW04/src/model/SquarePaintStrategy.java;3526266484/1;/HW04/src/model/StraightStrategy.java;3914615527/1;/HW04/src/model/SwellStrategy.java;1352457759/1;/HW04/src/model/SwitcherStrategy.java;2480375116/1;/HW04/src/model/TeleportStrategy.java;2565727986/1;/HW04/src/model/UprightImagePaintStrategy.java;3704479299/1;/HW04/src/model/VenusImagePaintStrategy.java;2287123255/1;/HW04/src/model/WiggleStrategy.java;4246409471/1;/HW04/src/util/Dispatcher.java;77051068/1;/HW04/src/util/IRandomizer.java;4224991458/1;/HW04/src/util/Randomizer.java;1541548940/1;/HW04/src/util/SineMaker.java;1378225368/1;/HW04/src/view/BallWorldView.java;1506153628/1;/HW04/src/view/IView2ModelAdapter.java;637323524/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_-Nd2sAuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_-Nd2sQuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_-Nd2sguLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_-Nd2swuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_-Nd2tAuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_-Nd2tQuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_-Nd2tguLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_-NedwAuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_-NedwQuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_-NedwguLEei-6eSvavMBRQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_-NedwwuLEei-6eSvavMBRQ" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_-NgS8AuLEei-6eSvavMBRQ" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_-UIfYAuLEei-6eSvavMBRQ" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_-UXv8QuLEei-6eSvavMBRQ" name="Ellipse2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_-OJMIAuLEei-6eSvavMBRQ" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_-UwKdQuLEei-6eSvavMBRQ" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_-UwxgQuLEei-6eSvavMBRQ" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_-UGDIAuLEei-6eSvavMBRQ" name="Container"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-UGqMQuLEei-6eSvavMBRQ" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-UHRQQuLEei-6eSvavMBRQ" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-UN-8AuLEei-6eSvavMBRQ" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-UOmAAuLEei-6eSvavMBRQ" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-US3cQuLEei-6eSvavMBRQ" name="Rectangle"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_-UXI4QuLEei-6eSvavMBRQ" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-UcBZAuLEei-6eSvavMBRQ" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-UcocQuLEei-6eSvavMBRQ" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-UdPgQuLEei-6eSvavMBRQ" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-Ud2kQuLEei-6eSvavMBRQ" name="Toolkit"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-Uu8UAuLEei-6eSvavMBRQ" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-UxYkQuLEei-6eSvavMBRQ" name="FlowLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-UxYkwuLEei-6eSvavMBRQ" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-VNdcAuLEei-6eSvavMBRQ" name="Dimension"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_-NiIIAuLEei-6eSvavMBRQ" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_-UOmAguLEei-6eSvavMBRQ" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_-UPNEQuLEei-6eSvavMBRQ" name="Observer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_-U-M4AuLEei-6eSvavMBRQ" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_-U-M4QuLEei-6eSvavMBRQ" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_-NedxAuLEei-6eSvavMBRQ" name="model">
      <packagedElement xmi:type="uml:Class" xmi:id="_-PbllAuLEei-6eSvavMBRQ" name="APaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_-V6BBAuLEei-6eSvavMBRQ">
          <body>This is an abstract class that defines the top level affine transform based
paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_-VX1gguLEei-6eSvavMBRQ" name="at" visibility="package" type="_-UIfYAuLEei-6eSvavMBRQ" association="_-WIqgQuLEei-6eSvavMBRQ"/>
        <interfaceRealization xmi:id="_-UK7oQuLEei-6eSvavMBRQ" client="_-PbllAuLEei-6eSvavMBRQ" supplier="_-QLzgguLEei-6eSvavMBRQ" contract="_-QLzgguLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VvB4wuLEei-6eSvavMBRQ" name="APaintStrategy" specification="_-U57cAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VvB5AuLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VvB5QuLEei-6eSvavMBRQ" type="_-PbllAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this.at = at;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VvB5guLEei-6eSvavMBRQ" name="paint" specification="_-U6igwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VvB5wuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VvB6AuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>double scale = ball.getRad();
		at.setToTranslation(ball.getLoc().x, ball.getLoc().y);
		at.scale(scale, scale);
		at.rotate(ball.getVel().x, ball.getVel().y);
		g.setColor(ball.getCol());    
		paintCfg(g, ball);
		paintXfrm(g, ball, at);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VvB6QuLEei-6eSvavMBRQ" name="getAT" specification="_-PczsAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VvB6guLEei-6eSvavMBRQ" type="_-UIfYAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return this.at;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-PcMoAuLEei-6eSvavMBRQ" name="APaintStrategy">
          <eAnnotations xmi:id="_-PcMoQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-PcMoguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-PcMpAuLEei-6eSvavMBRQ" type="_-PbllAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-PczsAuLEei-6eSvavMBRQ" name="getAT" method="_-VvB6QuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V6BBwuLEei-6eSvavMBRQ">
            <body>This is a getter that returns the Affine Transform
	 * @return An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_-U7woAuLEei-6eSvavMBRQ" type="_-UIfYAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-UMJwAuLEei-6eSvavMBRQ" name="init">
          <ownedParameter xmi:id="_-UMJwQuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-U57cAuLEei-6eSvavMBRQ" name="APaintStrategy" method="_-VvB4wuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-U6igAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-U6igQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_-V6BBQuLEei-6eSvavMBRQ">
            <body>This is the constructor that takes in Affine Transform.
	 * @param at</body>
          </ownedComment>
          <ownedParameter xmi:id="_-U57cQuLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-U6igguLEei-6eSvavMBRQ" type="_-PbllAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-U6igwuLEei-6eSvavMBRQ" name="paint" method="_-VvB5guLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V6BBguLEei-6eSvavMBRQ">
            <body>This function paints the ball on the passed in Graphics object.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-U6ihAuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-U6ihQuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-U7JkAuLEei-6eSvavMBRQ" name="paintCfg" visibility="protected">
          <ownedParameter xmi:id="_-U7JkQuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-U7JkguLEei-6eSvavMBRQ" name="host" type="_-PdawAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-U7woQuLEei-6eSvavMBRQ" name="paintXfrm" isAbstract="true">
          <ownedComment xmi:id="_-V6BCAuLEei-6eSvavMBRQ">
            <body>This function is a secondary paint operation that is the last step of the above
	 * paint method, which does not calculate its own affine transform, but instead,
	 * uses a supplied affine transform.
	 * @param g A graphics object
	 * @param host The host ball
	 * @param at An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_-U7woguLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-U7wowuLEei-6eSvavMBRQ" name="host" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-U7wpAuLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-PdawAuLEei-6eSvavMBRQ" name="Ball">
        <ownedComment xmi:id="_-V6BCQuLEei-6eSvavMBRQ">
          <body>This is the Ball class, which is what is drawn on the screen, and implements
Observer to use dispatching.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_-VYckAuLEei-6eSvavMBRQ" name="col" type="_-UN-8AuLEei-6eSvavMBRQ" association="_-V6oEAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_-VYckQuLEei-6eSvavMBRQ" name="loc" type="_-UOmAAuLEei-6eSvavMBRQ" association="_-V6oEguLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_-VYckguLEei-6eSvavMBRQ" name="rad" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VYclAuLEei-6eSvavMBRQ" name="vel" type="_-UOmAAuLEei-6eSvavMBRQ" association="_-V6oFAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_-VYclQuLEei-6eSvavMBRQ" name="con" type="_-UGDIAuLEei-6eSvavMBRQ" association="_-V7PIAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_-VZDoAuLEei-6eSvavMBRQ" name="strat" visibility="private" type="_-QQE8AuLEei-6eSvavMBRQ" association="_-WJRkAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_-VZDoguLEei-6eSvavMBRQ" name="paintStrat" type="_-QLzgguLEei-6eSvavMBRQ" isReadOnly="true" association="_-WJRkwuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_-VZDowuLEei-6eSvavMBRQ" name="itr" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VZDpAuLEei-6eSvavMBRQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VZDpguLEei-6eSvavMBRQ" name="radDelta">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_-U8XsAuLEei-6eSvavMBRQ" client="_-PdawAuLEei-6eSvavMBRQ" supplier="_-UPNEQuLEei-6eSvavMBRQ" contract="_-UPNEQuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-Vvo8AuLEei-6eSvavMBRQ" name="Ball" specification="_-U8-wAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Vvo8QuLEei-6eSvavMBRQ" name="col" type="_-UN-8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Vvo8guLEei-6eSvavMBRQ" name="loc" type="_-UOmAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Vvo8wuLEei-6eSvavMBRQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-Vvo9AuLEei-6eSvavMBRQ" name="vel" type="_-UOmAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Vvo9QuLEei-6eSvavMBRQ" name="con" type="_-UGDIAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Vvo9guLEei-6eSvavMBRQ" name="updateStrat" type="_-QQE8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Vvo9wuLEei-6eSvavMBRQ" name="paintStrat" type="_-QLzgguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Vvo-AuLEei-6eSvavMBRQ" type="_-PdawAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>setCol(col);
		setLoc(loc);
		setRad(rad);
		setVel(vel);
		setCon(con);
		setStrat(updateStrat);
		setRadDelta(5);
		setPaintStrat(paintStrat);
		paintStrat.init(this);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-Vvo-QuLEei-6eSvavMBRQ" name="getRad" specification="_-Peo4AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Vvo-guLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-Vvo-wuLEei-6eSvavMBRQ" name="setRad" specification="_-Peo4guLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Vvo_AuLEei-6eSvavMBRQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.rad = rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-Vvo_QuLEei-6eSvavMBRQ" name="move" specification="_-Peo5AuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>setLoc(new Point(getLoc().x + getVel().x, getLoc().y + getVel().y));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-Vvo_guLEei-6eSvavMBRQ" name="update" specification="_-U-z8QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Vvo_wuLEei-6eSvavMBRQ" name="o" type="_-UOmAguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VvpAAuLEei-6eSvavMBRQ" name="cmd" type="_-U-M4QuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>((IBallCmd) cmd).apply(this, (Dispatcher) o);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VwQAAuLEei-6eSvavMBRQ" name="paint" specification="_-U-z9AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VwQAQuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>getPaintStrat().paint(g, this);
//		g.setColor(this.getCol());
//		g.fillOval(this.getLoc().x - getRad(), this.getLoc().y - getRad(), getRad() * 2, getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VwQAguLEei-6eSvavMBRQ" name="getStrat" specification="_-PfP8AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VwQAwuLEei-6eSvavMBRQ" type="_-QQE8AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VwQBAuLEei-6eSvavMBRQ" name="setStrat" specification="_-UQbMQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VwQBQuLEei-6eSvavMBRQ" name="strat" type="_-QQE8AuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>this.strat = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VwQBguLEei-6eSvavMBRQ" name="getItr" specification="_-PfP8QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VwQBwuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VwQCAuLEei-6eSvavMBRQ" name="setItr" specification="_-PfP8wuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VwQCQuLEei-6eSvavMBRQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.itr = itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VwQCguLEei-6eSvavMBRQ" name="bounce" specification="_-PfP9QuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>// Boundaries of the window
		int rightWall = getCon().getWidth();
		int bottomWall = getCon().getHeight();
		int leftWall = 0;
		int topWall = 0;
		
		int leftX = getLoc().x - getRad();
		int rightX = getLoc().x + getRad();
		
		int bottomY = getLoc().y + getRad();
		int topY = getLoc().y - getRad();
		
		int maxX = rightWall - getRad();
		int minX = getRad();
		
		int maxY = bottomWall - getRad();
		int minY = getRad();

		// Collision detected with left or right wall.
		if (leftX == leftWall || rightX == rightWall) {
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond right wall.
		else if (rightX > rightWall) {
			int diff = getLoc().x - maxX;
			setLoc(new Point(maxX - diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond left wall.
		else if (leftX &lt; leftWall) {
			int diff = minX - getLoc().x;
			setLoc(new Point(minX + diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Collision detected with top or bottom wall.
		else if (topY == topWall || bottomY == bottomWall) {
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond bottom wall.
		else if (bottomY > bottomWall) {
			int diff = getLoc().y - maxY;
			setLoc(new Point(getLoc().x, maxY - diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond top wall.
		else if (topY &lt; topWall) {
			int diff = minY - getLoc().y;
			setLoc(new Point(getLoc().x, minY + diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VwQCwuLEei-6eSvavMBRQ" name="setPaintStrat" specification="_-URCQAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VwQDAuLEei-6eSvavMBRQ" name="paintStrat" type="_-QLzgguLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>this.paintStrat = paintStrat;
		getPaintStrat().init(this);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-Peo4AuLEei-6eSvavMBRQ" name="getRad" method="_-Vvo-QuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V7PIwuLEei-6eSvavMBRQ">
            <body>This returns the radius of the ball.
	 * @return the rad</body>
          </ownedComment>
          <ownedParameter xmi:id="_-Peo4QuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_-Peo4guLEei-6eSvavMBRQ" name="setRad" method="_-Vvo-wuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V7PJAuLEei-6eSvavMBRQ">
            <body>This sets the radius of the ball.
	 * @param rad the rad to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_-Peo4wuLEei-6eSvavMBRQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_-Peo5AuLEei-6eSvavMBRQ" name="move" method="_-Vvo_QuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V7PJQuLEei-6eSvavMBRQ">
            <body>This function tells the ball to update its current location by the respective velocity
	 * component.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_-PfP8AuLEei-6eSvavMBRQ" name="getStrat" method="_-VwQAguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V7PKAuLEei-6eSvavMBRQ">
            <body>This function returns the ball's movement strategy.
	 * @return the strat</body>
          </ownedComment>
          <ownedParameter xmi:id="_-UQbMAuLEei-6eSvavMBRQ" type="_-QQE8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-PfP8QuLEei-6eSvavMBRQ" name="getItr" method="_-VwQBguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V7PKguLEei-6eSvavMBRQ">
            <body>This function returns the current iteration of the ball.
	 * @return the itr</body>
          </ownedComment>
          <ownedParameter xmi:id="_-PfP8guLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_-PfP8wuLEei-6eSvavMBRQ" name="setItr" method="_-VwQCAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V7PKwuLEei-6eSvavMBRQ">
            <body>This function sets the current iteration of the ball.
	 * @param itr the itr to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_-PfP9AuLEei-6eSvavMBRQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_-PfP9QuLEei-6eSvavMBRQ" name="bounce" method="_-VwQCguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V7PLAuLEei-6eSvavMBRQ">
            <body>This function checks to see if the ball has come into contact with one of the boundaries of the 
	 *  panel. If it has, this function reverses the velocity of the ball, simulating a rebound off
	 *  of the wall. If, due to the delay of the GUI thread, the ball has passed one of the panel
	 *  boundaries, this function moves the ball to the location it would be at if it had properly 
	 *  bounced off of the wall, and sets the velocity to its appropriate value.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_-UQbMQuLEei-6eSvavMBRQ" name="setStrat" method="_-VwQBAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V7PKQuLEei-6eSvavMBRQ">
            <body>This function sets the ball's movement strategy.
	 * @param strat the strat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_-UQbMguLEei-6eSvavMBRQ" name="strat" type="_-QQE8AuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-URCQAuLEei-6eSvavMBRQ" name="setPaintStrat" method="_-VwQCwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V7PLQuLEei-6eSvavMBRQ">
            <body>This function sets the paint strategy.
	 * @param paintStrat the paintStrat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_-URCQQuLEei-6eSvavMBRQ" name="paintStrat" type="_-QLzgguLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-U8-wAuLEei-6eSvavMBRQ" name="Ball" method="_-Vvo8AuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-U9l1wuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-U9l2AuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_-V7PIguLEei-6eSvavMBRQ">
            <body>This is the Ball constructor, which sets its initial values.
	 * @param col The color of the ball
	 * @param loc The initial location of the ball.
	 * @param rad The radius of the ball.
	 * @param vel The initial velocity of the ball.
	 * @param con The container (component) on which the ball is drawn.
	 * @param updateStrat The IUpdateStrategy that decides how to update the ball.
	 * @param paintStrat The IPaintStrategy that decides how to paint the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-U9l0AuLEei-6eSvavMBRQ" name="col" type="_-UN-8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-U9l0QuLEei-6eSvavMBRQ" name="loc" type="_-UOmAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-U9l0guLEei-6eSvavMBRQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-U9l0wuLEei-6eSvavMBRQ" name="vel" type="_-UOmAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-U9l1AuLEei-6eSvavMBRQ" name="con" type="_-UGDIAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-U9l1QuLEei-6eSvavMBRQ" name="updateStrat" type="_-QQE8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-U9l1guLEei-6eSvavMBRQ" name="paintStrat" type="_-QLzgguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-U9l2QuLEei-6eSvavMBRQ" type="_-PdawAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-U-z8QuLEei-6eSvavMBRQ" name="update" method="_-Vvo_guLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V7PJguLEei-6eSvavMBRQ">
            <body>This function is required when implementing Observer, that tells the ball what to
	 * do when it is notified by the dispatcher.
	 * @param o An observable
	 * @param g An Object, which should be an IBallCmd</body>
          </ownedComment>
          <ownedParameter xmi:id="_-U-z8guLEei-6eSvavMBRQ" name="o" type="_-UOmAguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-U-z8wuLEei-6eSvavMBRQ" name="cmd" type="_-U-M4QuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-U-z9AuLEei-6eSvavMBRQ" name="paint" method="_-VwQAAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V7PJwuLEei-6eSvavMBRQ">
            <body>This function determines how to paint the ball, and it delegates
	 * to the paint strategy's paint.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-U-z9QuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-PiTQAuLEei-6eSvavMBRQ" name="BallPaintStrategy">
        <ownedComment xmi:id="_-V72MAuLEei-6eSvavMBRQ">
          <body>This is the ball paint strategy, which implements a paint strategy for a ball.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_-USQYAuLEei-6eSvavMBRQ" client="_-PiTQAuLEei-6eSvavMBRQ" supplier="_-QLzgguLEei-6eSvavMBRQ" contract="_-QLzgguLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-Vw3EAuLEei-6eSvavMBRQ" name="paint" specification="_-VApIAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Vw3EQuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Vw3EguLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>g.setColor(ball.getCol());
		g.fillOval(ball.getLoc().x - ball.getRad(), ball.getLoc().y - ball.getRad(),
				ball.getRad() * 2, ball.getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-Pi6UAuLEei-6eSvavMBRQ" name="BallPaintStrategy">
          <eAnnotations xmi:id="_-Pi6UQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-Pi6UguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-Pi6VAuLEei-6eSvavMBRQ" type="_-PiTQAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-USQYQuLEei-6eSvavMBRQ" name="init">
          <ownedParameter xmi:id="_-USQYguLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VApIAuLEei-6eSvavMBRQ" name="paint" method="_-Vw3EAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VApIQuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VApIguLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-PjhYAuLEei-6eSvavMBRQ" name="BallWorldModel">
        <ownedComment xmi:id="_-V72MQuLEei-6eSvavMBRQ">
          <body>This is the BallWorldModel class, which makes balls, clears balls, and updates the balls.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_-VZqsAuLEei-6eSvavMBRQ" name="adapter" visibility="private" type="_-QKlYQuLEei-6eSvavMBRQ" association="_-WJRlguLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VZqsQuLEei-6eSvavMBRQ" value="IModel2ViewAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VZqswuLEei-6eSvavMBRQ" name="timeSlice" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VZqtAuLEei-6eSvavMBRQ" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VaRwQuLEei-6eSvavMBRQ" name="dispatcher" visibility="private" type="_-QpGgAuLEei-6eSvavMBRQ" association="_-WJ4oQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VaRwguLEei-6eSvavMBRQ" value="new Dispatcher()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VaRxAuLEei-6eSvavMBRQ" name="timer" visibility="private" type="_-US3cwuLEei-6eSvavMBRQ" association="_-WJ4pAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VaRxQuLEei-6eSvavMBRQ" value="new Timer(timeSlice, (e) -> adapter.update())"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-Vw3EwuLEei-6eSvavMBRQ" name="BallWorldModel" specification="_-UTegQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Vw3FAuLEei-6eSvavMBRQ" name="adapter" type="_-QKlYQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Vw3FQuLEei-6eSvavMBRQ" type="_-PjhYAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this.adapter = adapter;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-Vw3FguLEei-6eSvavMBRQ" name="clearBalls" specification="_-PkvgAuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>dispatcher.deleteObservers();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-Vw3FwuLEei-6eSvavMBRQ" name="start" specification="_-PkvgQuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>timer.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-Vw3GAuLEei-6eSvavMBRQ" name="update" specification="_-VB3QAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Vw3GQuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll((IBallCmd) (ball, disp)->{
         // Whatever you want to do with the context Ball!
			ball.setItr(ball.getItr() + 1);
			ball.getStrat().updateState(ball, disp);
			ball.move();
			ball.bounce();
			ball.paint((Graphics) g);
		});
//        dispatcher.notifyAll(g);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-Vw3GguLEei-6eSvavMBRQ" name="loadStrategy" specification="_-PkvgguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Vw3GwuLEei-6eSvavMBRQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-Vw3HAuLEei-6eSvavMBRQ" type="_-QQE8AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>Object[] args =  new Object[]{};
		java.lang.reflect.Constructor&lt;?> cons[];
		try {
			cons = Class.forName(strat).getConstructors();
			return (IUpdateStrategy) cons[0].newInstance(args);
		} catch (Exception e) {
			return IStrategyFac._errorStrategyFac.make();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VxeIAuLEei-6eSvavMBRQ" name="fixName" specification="_-PlWkAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VxeIQuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VxeIguLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;model.&quot; + classname.substring(0, 1).toUpperCase() + classname.substring(1).toLowerCase() + &quot;Strategy&quot;;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VxeIwuLEei-6eSvavMBRQ" name="makeStrategyFac" specification="_-PlWkwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VxeJAuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VxeJQuLEei-6eSvavMBRQ" type="_-QNoswuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>if (null == classname) {
			return IStrategyFac._errorStrategyFac;
		}
	    return new IStrategyFac() {
	        /**
	         * Instantiate a strategy corresponding to the given class name.
	         * @return An IUpdateStrategy instance
	         */
	        public IUpdateStrategy make() {
	        		return loadStrategy(fixName(classname));
	        }

	        /**
	         * Return the given class name string
	         */
	        public String toString() {
	            return classname;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VxeJguLEei-6eSvavMBRQ" name="makeBall" specification="_-UUFkguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VxeJwuLEei-6eSvavMBRQ" name="make" type="_-QQE8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VxeKAuLEei-6eSvavMBRQ" name="paintStrat" type="_-QLzgguLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>Container con = adapter.getCanvas();
		Randomizer rzr = Randomizer.Singleton;
		
		int startRad = rzr.randomInt(10, 45);
		Point randLoc = rzr.randomLoc(new Rectangle(con.getWidth() - startRad, con.getHeight() - startRad));
		Point startLoc = new Point(randLoc.x + startRad, randLoc.y + startRad);
		Point startVel = new Point(0, 0);

		// Handles case where both x- and y-components of velocity are 0 to prevent ball from starting stationary.
		while (startVel.x == 0 &amp;&amp; startVel.y == 0) {
			startVel = new Point(rzr.randomInt(-20, 20), rzr.randomInt(-20, 20));
		}
		Color startCol = rzr.randomColor();
		
		Ball loaded = new Ball(startCol, startLoc, startRad, startVel, con, make, paintStrat);
		dispatcher.addObserver(loaded);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VxeKQuLEei-6eSvavMBRQ" name="combineStrategyFacs" specification="_-UUFlQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VxeKguLEei-6eSvavMBRQ" name="stratFac1" type="_-QNoswuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_-VxeKwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_-VxeLAuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_-VxeLQuLEei-6eSvavMBRQ" name="stratFac2" type="_-QNoswuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_-VxeLguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_-VxeLwuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_-VxeMAuLEei-6eSvavMBRQ" type="_-QNoswuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>if (null == stratFac1 || null == stratFac2) {
	    		return IStrategyFac._errorStrategyFac;
	    	}
	    
	    return new IStrategyFac() {
	        /**
	         * Instantiate a new MultiStrategy with the strategies from the given strategy factories
	         * @return A MultiStrategy instance
	         */
	        public IUpdateStrategy make() {
	            return new MultiStrategy(stratFac1.make(), stratFac2.make());
	        }

	        /**
	         * Return a string that is the toString()'s of the given strategy factories concatenated with a &quot;-&quot;
	         */
	        public String toString() {
	            return stratFac1.toString() + &quot;-&quot; + stratFac2.toString();
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VxeMQuLEei-6eSvavMBRQ" name="setSwitcherStrategy" specification="_-UUFnQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VxeMguLEei-6eSvavMBRQ" name="switchFac" type="_-QNoswuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>SwitcherStrategy.setStrat(switchFac.make());
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VxeMwuLEei-6eSvavMBRQ" name="getSwitcherFac" specification="_-Pl9oAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VxeNAuLEei-6eSvavMBRQ" type="_-QNoswuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return IStrategyFac.switcherStrat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VxeNQuLEei-6eSvavMBRQ" name="makePaintFactory" specification="_-Pl9oQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VxeNguLEei-6eSvavMBRQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VxeNwuLEei-6eSvavMBRQ" type="_-QNoswuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return new IStrategyFac() {
	        public IUpdateStrategy make() {
	        		return new StraightStrategy();
	        }
 
	        public String toString() {
	            return text;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return loadPaintStrat(fixPaintName(text));
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VxeOAuLEei-6eSvavMBRQ" name="loadPaintStrat" specification="_-PmksAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VxeOQuLEei-6eSvavMBRQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VxeOguLEei-6eSvavMBRQ" type="_-QLzgguLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>Object[] args =  new Object[]{};
		java.lang.reflect.Constructor&lt;?> cons[];
		try {
			cons = Class.forName(strat).getConstructors();
			return (IPaintStrategy) cons[0].newInstance(args);
		} catch (Exception e) {
			return IStrategyFac._errorStrategyFac.makePaint();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VyFMAuLEei-6eSvavMBRQ" name="fixPaintName" specification="_-PmksguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VyFMQuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VyFMguLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;model.&quot; + classname + &quot;PaintStrategy&quot;;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-PkvgAuLEei-6eSvavMBRQ" name="clearBalls" method="_-Vw3FguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V72MwuLEei-6eSvavMBRQ">
            <body>This function clears all the balls from the canvas, by removing them as observers.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_-PkvgQuLEei-6eSvavMBRQ" name="start" method="_-Vw3FwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V72NAuLEei-6eSvavMBRQ">
            <body>This function starts the timer.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_-PkvgguLEei-6eSvavMBRQ" name="loadStrategy" method="_-Vw3GguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V72NguLEei-6eSvavMBRQ">
            <body>This function takes an input string and loads the associated IUpdateStrategy,
	 * and returns the error strategy if the strategy isn't available.
	 * @param strat A string of the strategy to be created.
	 * @return The IUpdateStrategy associated with the string, or the error strategy if
	 * there is no associated strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-PkvgwuLEei-6eSvavMBRQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-UUFkAuLEei-6eSvavMBRQ" type="_-QQE8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-PlWkAuLEei-6eSvavMBRQ" name="fixName" method="_-VxeIAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V72NwuLEei-6eSvavMBRQ">
            <body>This function takes the input and confirms it to the required model.ClassStrategy format for
	 * dynamic class loading.
	 * @param classname The string that should be modified to conform to the model.ClassStrategy format.
	 * @return The class string in a model.ClassStrategy format.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-PlWkQuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-PlWkguLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_-PlWkwuLEei-6eSvavMBRQ" name="makeStrategyFac" method="_-VxeIwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V72OAuLEei-6eSvavMBRQ">
            <body>This takes a class name, and creates a strategy factory for it, by loading the strategy and returning it
	 * in the make method.
	 * @param classname The class of strategy to make.
	 * @return An IStrategyFac whose make function calls the associated model.ClassStrategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-PlWlAuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-UUFkQuLEei-6eSvavMBRQ" type="_-QNoswuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-Pl9oAuLEei-6eSvavMBRQ" name="getSwitcherFac" method="_-VxeMwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V72PAuLEei-6eSvavMBRQ">
            <body>This function returns a strategy factory, which makes the current switcher balls' update
	 * strategy
	 * @return An IStrategyFac, which makes the current strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-UUsoAuLEei-6eSvavMBRQ" type="_-QNoswuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-Pl9oQuLEei-6eSvavMBRQ" name="makePaintFactory" method="_-VxeNQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V72PQuLEei-6eSvavMBRQ">
            <body>This function returns an IStrategyFac to allow the Paint Strategies to be made later on.
	 * @param text The type of paint strategy.
	 * @return An IStrategyFac</body>
          </ownedComment>
          <ownedParameter xmi:id="_-Pl9oguLEei-6eSvavMBRQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-UUsoQuLEei-6eSvavMBRQ" type="_-QNoswuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-PmksAuLEei-6eSvavMBRQ" name="loadPaintStrat" method="_-VxeOAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V72PguLEei-6eSvavMBRQ">
            <body>This function loads an instance of an IPaintStrategy, given a classname.
	 * @param strat The type of paint strategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_-PmksQuLEei-6eSvavMBRQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-UUsoguLEei-6eSvavMBRQ" type="_-QLzgguLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-PmksguLEei-6eSvavMBRQ" name="fixPaintName" method="_-VyFMAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V72PwuLEei-6eSvavMBRQ">
            <body>This function &quot;fixes&quot; the type passed in to create an IPaintStrategy.
	 * @param classname The type of paint strategy to create.
	 * @return The fixed paint strategy information as a string.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-PmkswuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-PmktAuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_-UTegQuLEei-6eSvavMBRQ" name="BallWorldModel" method="_-Vw3EwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-UTegwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-UTehAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_-V72MguLEei-6eSvavMBRQ">
            <body>This is the BallWorldModel constructor, which creates a model for the controller to interact with.
	 * @param adapter An IModel2ViewAdapter.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-UTegguLEei-6eSvavMBRQ" name="adapter" type="_-QKlYQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-UTehQuLEei-6eSvavMBRQ" type="_-PjhYAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-UUFkguLEei-6eSvavMBRQ" name="makeBall" method="_-VxeJguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V72OQuLEei-6eSvavMBRQ">
            <body>This function randomizes parameters for the ball, and makes a ball with the parameter's update strategy.
	 * @param make The IUpdateStrategy that determines how the ball updates.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-UUFkwuLEei-6eSvavMBRQ" name="make" type="_-QQE8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-UUFlAuLEei-6eSvavMBRQ" name="paintStrat" type="_-QLzgguLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-UUFlQuLEei-6eSvavMBRQ" name="combineStrategyFacs" method="_-VxeKQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V72OguLEei-6eSvavMBRQ">
            <body>Returns an IStrategyFac that can instantiate a MultiStrategy with the two
	 * strategies made by the two given IStrategyFac objects. Returns null if
	 * either supplied factory is null. The toString() of the returned factory
	 * is the toString()'s of the two given factories, concatenated with &quot;-&quot;. 
	 * If either factory is null, then a factory for a beeping error strategy is returned.
	 * 
	 * @param stratFac1 An IStrategyFac for a strategy
	 * @param stratFac2 An IStrategyFac for a strategy
	 * @return An IStrategyFac for the composition of the two strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_-UUFlguLEei-6eSvavMBRQ" name="stratFac1" type="_-QNoswuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_-UUFmQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_-UUFmguLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_-UUFlwuLEei-6eSvavMBRQ" name="stratFac2" type="_-QNoswuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_-UUFmwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_-UUFnAuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_-UUFmAuLEei-6eSvavMBRQ" type="_-QNoswuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-UUFnQuLEei-6eSvavMBRQ" name="setSwitcherStrategy" method="_-VxeMQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V72OwuLEei-6eSvavMBRQ">
            <body>This function sets the switcher balls strategy to the one made by the input.
	 * @param switchFac IStrategyFac which makes the new update strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-UUFnguLEei-6eSvavMBRQ" name="switchFac" type="_-QNoswuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VB3QAuLEei-6eSvavMBRQ" name="update" method="_-Vw3GAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V72NQuLEei-6eSvavMBRQ">
            <body>This function updates all the balls by notifying them using the dispatcher
	 * and an IBallCmd
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-VB3QQuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-Pny0AuLEei-6eSvavMBRQ" name="BreathingStrategy">
        <ownedComment xmi:id="_-V8dQAuLEei-6eSvavMBRQ">
          <body>This class defines a Breathing Strategy, which grows and shrinks the ball's radius.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_-UUsowuLEei-6eSvavMBRQ" client="_-Pny0AuLEei-6eSvavMBRQ" supplier="_-QQE8AuLEei-6eSvavMBRQ" contract="_-QQE8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VyFMwuLEei-6eSvavMBRQ" name="updateState" specification="_-UVTsAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VyFNAuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VyFNQuLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getItr() % 5 == 0) {
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-UVTsAuLEei-6eSvavMBRQ" name="updateState" method="_-VyFMwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-UVTsQuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-UVTsguLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-PoZ4AuLEei-6eSvavMBRQ" name="ColorStrategy">
        <ownedComment xmi:id="_-V8dQQuLEei-6eSvavMBRQ">
          <body>This class defines a Color Strategy, which changes the ball's color.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_-UVTtguLEei-6eSvavMBRQ" client="_-PoZ4AuLEei-6eSvavMBRQ" supplier="_-QQE8AuLEei-6eSvavMBRQ" contract="_-QQE8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VyFNguLEei-6eSvavMBRQ" name="updateState" specification="_-UV6wAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VyFNwuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VyFOAuLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (ball.getItr() % 10 == 0) {
						Color newColor = Randomizer.Singleton.randomColor();
						ball.setCol(newColor);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-UV6wAuLEei-6eSvavMBRQ" name="updateState" method="_-VyFNguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-UV6wQuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-UV6wguLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-PpA8AuLEei-6eSvavMBRQ" name="CrashStrategy">
        <ownedComment xmi:id="_-V8dQguLEei-6eSvavMBRQ">
          <body>This class defines a Crash Strategy which makes the ball
change color when it bounces from the boundaries of the canvas.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_-UV6xguLEei-6eSvavMBRQ" client="_-PpA8AuLEei-6eSvavMBRQ" supplier="_-QQE8AuLEei-6eSvavMBRQ" contract="_-QQE8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VyFOQuLEei-6eSvavMBRQ" name="updateState" specification="_-UWh0AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VyFOguLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VyFOwuLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					
					if ((ball.getLoc().x + ball.getRad() + 8 >= ball.getCon().getWidth()) ||
							(ball.getLoc().x - ball.getRad() &lt;= 8) ||
							(ball.getLoc().y + ball.getRad() >= ball.getCon().getHeight() - 8) ||
							(ball.getLoc().y - ball.getRad() &lt;= 8)) {
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-UWh0AuLEei-6eSvavMBRQ" name="updateState" method="_-VyFOQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-UWh0QuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-UWh0guLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-PpoAAuLEei-6eSvavMBRQ" name="EarthImagePaintStrategy">
        <generalization xmi:id="_-UWh1guLEei-6eSvavMBRQ" general="_-QQsAAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VyFPAuLEei-6eSvavMBRQ" name="EarthImagePaintStrategy" specification="_-PpoAQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VyFPQuLEei-6eSvavMBRQ" type="_-PpoAAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Earth.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-PpoAQuLEei-6eSvavMBRQ" name="EarthImagePaintStrategy" method="_-VyFPAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-PpoAguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-PpoAwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-PpoBAuLEei-6eSvavMBRQ" type="_-PpoAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-PpoBQuLEei-6eSvavMBRQ" name="EllipsePaintStrategy">
        <ownedComment xmi:id="_-V8dQwuLEei-6eSvavMBRQ">
          <body>This class defines a paint strategy to paint an ellipse shape.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_-UXI4AuLEei-6eSvavMBRQ" general="_-QcSMQuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VyFPguLEei-6eSvavMBRQ" name="EllipsePaintStrategy" specification="_-PqPEAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VyFPwuLEei-6eSvavMBRQ" type="_-PpoBQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 4.0/3.0, 2.0/3.0);
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VyFQAuLEei-6eSvavMBRQ" name="EllipsePaintStrategy" specification="_-VCeUAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VyFQQuLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VyFQguLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VyFQwuLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VyFRAuLEei-6eSvavMBRQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VyFRQuLEei-6eSvavMBRQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VyFRguLEei-6eSvavMBRQ" type="_-PpoBQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(at, EllipseShapeFactory.Singleton.makeShape(x, y, width, height));
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-PqPEAuLEei-6eSvavMBRQ" name="EllipsePaintStrategy" method="_-VyFPguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-PqPEQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-PqPEguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-PqPEwuLEei-6eSvavMBRQ" type="_-PpoBQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VCeUAuLEei-6eSvavMBRQ" name="EllipsePaintStrategy" method="_-VyFQAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-VDFYQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-VDFYguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-VCeUQuLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VCeUguLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VCeUwuLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VCeVAuLEei-6eSvavMBRQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VDFYAuLEei-6eSvavMBRQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VDFYwuLEei-6eSvavMBRQ" type="_-PpoBQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-Pq2IAuLEei-6eSvavMBRQ" name="EllipseShapeFactory">
        <ownedComment xmi:id="_-V8dRAuLEei-6eSvavMBRQ">
          <body>This class defines a shape factory to make Ellipses.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_-Va40AuLEei-6eSvavMBRQ" name="Singleton" isLeaf="true" isStatic="true" type="_-Pq2IAuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WKfsQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-Va40QuLEei-6eSvavMBRQ" value="new EllipseShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_-UYXAQuLEei-6eSvavMBRQ" client="_-Pq2IAuLEei-6eSvavMBRQ" supplier="_-QNBoAuLEei-6eSvavMBRQ" contract="_-QNBoAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VysQAuLEei-6eSvavMBRQ" name="makeShape" specification="_-Pq2IQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VysQQuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VysQguLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VysQwuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VysRAuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VysRQuLEei-6eSvavMBRQ" type="_-UXI4QuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>Shape ellipse = new Ellipse2D.Double(x, y, xScale, yScale);
		return ellipse;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-Pq2IQuLEei-6eSvavMBRQ" name="makeShape" method="_-VysQAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Pq2IguLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-Pq2IwuLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-Pq2JAuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-PrdMAuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VDFZAuLEei-6eSvavMBRQ" type="_-UXI4QuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QIwMAuLEei-6eSvavMBRQ" name="FastStrategy">
        <ownedComment xmi:id="_-V8dRQuLEei-6eSvavMBRQ">
          <body>This class defines a Fast Strategy that makes the ball's velocity increase and stop once it reaches
a pre defined max speed.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_-UY-EAuLEei-6eSvavMBRQ" client="_-QIwMAuLEei-6eSvavMBRQ" supplier="_-QQE8AuLEei-6eSvavMBRQ" contract="_-QQE8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VysRguLEei-6eSvavMBRQ" name="updateState" specification="_-UY-EQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VysRwuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VysSAuLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (Math.abs(ball.getVel().x) &lt; 100 &amp;&amp; Math.abs(ball.getVel().y) &lt; 100) {
						if (ball.getItr() % 10 == 0) {
							if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y + 2));
							} else if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y - 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y + 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y - 2));
							}
						}
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-UY-EQuLEei-6eSvavMBRQ" name="updateState" method="_-VysRguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-UY-EguLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-UY-EwuLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QJXQAuLEei-6eSvavMBRQ" name="HumbirdImagePaintStrategy">
        <generalization xmi:id="_-UZlIguLEei-6eSvavMBRQ" general="_-QmDMAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VysSQuLEei-6eSvavMBRQ" name="HumbirdImagePaintStrategy" specification="_-QJXQQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VysSguLEei-6eSvavMBRQ" type="_-QJXQAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Humbird.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-QJXQQuLEei-6eSvavMBRQ" name="HumbirdImagePaintStrategy" method="_-VysSQuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-QJ-UAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-QJ-UQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-QJ-UguLEei-6eSvavMBRQ" type="_-QJXQAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_-QJ-UwuLEei-6eSvavMBRQ" name="IBallCmd" isAbstract="true">
        <ownedOperation xmi:id="_-UaMMAuLEei-6eSvavMBRQ" name="apply" isAbstract="true">
          <ownedParameter xmi:id="_-UaMMQuLEei-6eSvavMBRQ" name="context" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-UaMMguLEei-6eSvavMBRQ" name="disp" type="_-QpGgAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_-QKlYQuLEei-6eSvavMBRQ" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_-V8dRguLEei-6eSvavMBRQ">
          <body>This is an interface which defines the functions that the model wants the view to have/do.
@author sn32, kyl3</body>
        </ownedComment>
        <ownedAttribute xmi:id="_-QLMcQuLEei-6eSvavMBRQ" name="canvas" type="_-UGDIAuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WFnMAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_-QLzgAuLEei-6eSvavMBRQ" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_-QKlYQuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WGOQQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-QLzgQuLEei-6eSvavMBRQ" value="new IModel2ViewAdapter() {&#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is an update function that we want the view to have.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public void update() {&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9; &#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is a function that gets the canvas from the view.&#xA;&#x9;&#x9;  * @return A container that is initially null.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public Container getCanvas() {&#xA;&#x9;&#x9;&#x9; return null;&#xA;&#x9;&#x9; }&#xA;&#x9; }"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_-QLMcAuLEei-6eSvavMBRQ" name="update">
          <ownedComment xmi:id="_-V8dRwuLEei-6eSvavMBRQ">
            <body>This is an update function that we want the view to have.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_-QLzgguLEei-6eSvavMBRQ" name="IPaintStrategy">
        <ownedComment xmi:id="_-V8dSAuLEei-6eSvavMBRQ">
          <body>This is an interface for an IPaintStrategy that defines the methods we want it to have.
@author sn32, ll45</body>
        </ownedComment>
        <ownedOperation xmi:id="_-UazQAuLEei-6eSvavMBRQ" name="init">
          <ownedParameter xmi:id="_-UazQQuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VDscAuLEei-6eSvavMBRQ" name="paint">
          <ownedParameter xmi:id="_-VDscQuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VDscguLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_-QNBoAuLEei-6eSvavMBRQ" name="IShapeFactory">
        <ownedComment xmi:id="_-V8dSQuLEei-6eSvavMBRQ">
          <body>This interface defines the methods we want a shape factory to have.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_-QNBoQuLEei-6eSvavMBRQ" name="makeShape">
          <ownedParameter xmi:id="_-QNBoguLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-QNosAuLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-QNosQuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-QNosguLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VDscwuLEei-6eSvavMBRQ" type="_-UXI4QuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_-QNoswuLEei-6eSvavMBRQ" name="IStrategyFac">
        <ownedComment xmi:id="_-V8dSguLEei-6eSvavMBRQ">
          <body>This interface defines the functions we want IStrategyFac to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_-QO20AuLEei-6eSvavMBRQ" name="_errorStrategyFac" type="_-QNoswuLEei-6eSvavMBRQ" association="_-WG1UQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-QO20QuLEei-6eSvavMBRQ" value="new IStrategyFac(){&#xA;        /**&#xA;         * Make the beeping error strategy&#xA;         * @return  An instance of a beeping error strategy&#xA;         */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;            return new IUpdateStrategy() {&#xA;                private int count = 0; // update counter&#xA;                &#xA;                /**&#xA;                 * Beep the speaker every 25 updates&#xA;                 */&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void updateState(Ball ball, Dispatcher dispatcher) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(25 &lt; count++){&#xA;                        java.awt.Toolkit.getDefaultToolkit().beep(); &#xA;                        count = 0;&#xA;                    }&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;            };&#xA;        }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;}&#xA;    }"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-QO20wuLEei-6eSvavMBRQ" name="switcherStrat" type="_-QNoswuLEei-6eSvavMBRQ" association="_-WG1VAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-QPd4AuLEei-6eSvavMBRQ" value="new IStrategyFac() {&#xA;    &#x9;&#x9;/**&#xA;    &#x9;&#x9; * This function makes the switcher strategy.&#xA;    &#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;&#x9;&#x9;&#x9;return new SwitcherStrategy();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_-QOPwAuLEei-6eSvavMBRQ" name="make">
          <ownedComment xmi:id="_-V8dSwuLEei-6eSvavMBRQ">
            <body>This function allows IStrategyFac to make an IUpdateStrategy.
	 * @return An IUpdateStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_-UbaUAuLEei-6eSvavMBRQ" type="_-QQE8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-QOPwQuLEei-6eSvavMBRQ" name="makePaint">
          <ownedComment xmi:id="_-V8dTAuLEei-6eSvavMBRQ">
            <body>This function allows IStrategyFac to make an IPaintStrategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_-UcBYAuLEei-6eSvavMBRQ" type="_-QLzgguLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_-QQE8AuLEei-6eSvavMBRQ" name="IUpdateStrategy">
        <ownedComment xmi:id="_-V8dTQuLEei-6eSvavMBRQ">
          <body>This interface defines the functions we want IUpdateStrategies to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedOperation xmi:id="_-UcBYQuLEei-6eSvavMBRQ" name="updateState">
          <ownedParameter xmi:id="_-UcBYguLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-UcBYwuLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QQsAAuLEei-6eSvavMBRQ" name="ImagePaintStrategy">
        <ownedComment xmi:id="_-V8dTguLEei-6eSvavMBRQ">
          <body>This class defines a paint strategy for an image that extends APaintStrategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_-UfEsAuLEei-6eSvavMBRQ" general="_-PbllAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_-Vbf4AuLEei-6eSvavMBRQ" name="scaleFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-Vbf4QuLEei-6eSvavMBRQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VcG8QuLEei-6eSvavMBRQ" name="fillFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VcG8guLEei-6eSvavMBRQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VcG9AuLEei-6eSvavMBRQ" name="localAT" visibility="private" type="_-UIfYAuLEei-6eSvavMBRQ" association="_-WKftAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VcuAAuLEei-6eSvavMBRQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VcuAguLEei-6eSvavMBRQ" name="tempAT" type="_-UIfYAuLEei-6eSvavMBRQ" association="_-WLGwQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VcuAwuLEei-6eSvavMBRQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VcuBAuLEei-6eSvavMBRQ" name="filename" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VcuBQuLEei-6eSvavMBRQ" name="image" visibility="private" type="_-UcocQuLEei-6eSvavMBRQ" association="_-WLGxAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_-VdVEQuLEei-6eSvavMBRQ" name="imageObs" visibility="private" type="_-UGDIAuLEei-6eSvavMBRQ" association="_-WLt0AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VysSwuLEei-6eSvavMBRQ" name="ImagePaintStrategy" specification="_-QRTEAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VysTAuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VysTQuLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VysTguLEei-6eSvavMBRQ" type="_-QQsAAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super (new AffineTransform());
		this.fillFactor = fillFactor;
		this.setFilename(filename);
				
		try {
			image =  Toolkit.getDefaultToolkit().getImage(filename);	
			
		} catch (Exception e) {
			System.out.println(&quot;failed&quot;);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VysTwuLEei-6eSvavMBRQ" name="ImagePaintStrategy" specification="_-VETgAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VysUAuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VysUQuLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VysUguLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VysUwuLEei-6eSvavMBRQ" type="_-QQsAAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.fillFactor = fillFactor;
		this.setFilename(filename);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VzTUAuLEei-6eSvavMBRQ" name="init" specification="_-UedoAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VzTUQuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>imageObs = ball.getCon();
		MediaTracker mt = new MediaTracker(ball.getCon());
		mt.addImage(image, 1);
		try {
			mt.waitForAll();
		} catch(Exception e){
			System.out.println(&quot;ImagePaintStrategy.init(): Error waiting for image.  Exception = &quot;+e);
		}
		scaleFactor = 2.0/(fillFactor*(image.getWidth(imageObs)+image.getHeight(imageObs))/2.0); // this line is described below
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VzTUguLEei-6eSvavMBRQ" name="paintXfrm" specification="_-VE6lguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VzTUwuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VzTVAuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VzTVQuLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>localAT.setToScale(scaleFactor, scaleFactor);
		localAT.translate(-image.getWidth(imageObs)/2.0, -image.getHeight(imageObs)/2.0);
		localAT.preConcatenate(at);
		((Graphics2D)g).drawImage(image, localAT, imageObs); 
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VzTVguLEei-6eSvavMBRQ" name="setFilename" specification="_-QR6IAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VzTVwuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.filename = filename;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-QRTEAuLEei-6eSvavMBRQ" name="ImagePaintStrategy" method="_-VysSwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-QRTEwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-QRTFAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_-V9EUAuLEei-6eSvavMBRQ">
            <body>This is a constructor for the Image Paint Strategy that doesn't take an Affine Transform.
	 * @param filename String that is the path to the image file to load
	 * @param fillFactor A double that is the fill factor</body>
          </ownedComment>
          <ownedParameter xmi:id="_-QRTEQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-QRTEguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-QRTFQuLEei-6eSvavMBRQ" type="_-QQsAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-QR6IAuLEei-6eSvavMBRQ" name="setFilename" method="_-VzTVguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V9EUwuLEei-6eSvavMBRQ">
            <body>This function sets the filename.
	 * @param filename the filename to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_-QR6IQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_-UedoAuLEei-6eSvavMBRQ" name="init" method="_-VzTUAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V9EUguLEei-6eSvavMBRQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-UedoQuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VETgAuLEei-6eSvavMBRQ" name="ImagePaintStrategy" method="_-VysTwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-VE6kwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-VE6lAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_-V9EUQuLEei-6eSvavMBRQ">
            <body>This is a constructor for Image Paint Strategy that takes an Affine Transform.
	 * @param filename String that is the path to the image file to load.
	 * @param fillFactor A double that is the fill factor
	 * @param at An Affine Transform.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-VE6kAuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VE6kQuLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VE6kguLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VE6lQuLEei-6eSvavMBRQ" type="_-QQsAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VE6lguLEei-6eSvavMBRQ" name="paintXfrm" method="_-VzTUguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VFhoAuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VFhoQuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VFhoguLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QUWYAuLEei-6eSvavMBRQ" name="JupiterImagePaintStrategy">
        <generalization xmi:id="_-Ug54AuLEei-6eSvavMBRQ" general="_-QQsAAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VzTWAuLEei-6eSvavMBRQ" name="JupiterImagePaintStrategy" specification="_-QU9cAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VzTWQuLEei-6eSvavMBRQ" type="_-QUWYAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Jupiter.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-QU9cAuLEei-6eSvavMBRQ" name="JupiterImagePaintStrategy" method="_-VzTWAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-QU9cQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-QU9cguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-QU9cwuLEei-6eSvavMBRQ" type="_-QUWYAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QU9dAuLEei-6eSvavMBRQ" name="MarioImagePaintStrategy">
        <generalization xmi:id="_-Uhg8AuLEei-6eSvavMBRQ" general="_-QmDMAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VzTWguLEei-6eSvavMBRQ" name="MarioImagePaintStrategy" specification="_-QVkgAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VzTWwuLEei-6eSvavMBRQ" type="_-QU9dAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Mario.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-QVkgAuLEei-6eSvavMBRQ" name="MarioImagePaintStrategy" method="_-VzTWguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-QVkgQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-QVkgguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-QVkgwuLEei-6eSvavMBRQ" type="_-QU9dAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QWLkAuLEei-6eSvavMBRQ" name="MarioMarsImagePaintStrategy">
        <generalization xmi:id="_-Uhg8QuLEei-6eSvavMBRQ" general="_-QXZsAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VzTXAuLEei-6eSvavMBRQ" name="MarioMarsImagePaintStrategy" specification="_-QWLkQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VzTXQuLEei-6eSvavMBRQ" type="_-QWLkAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(new APaintStrategy[]{new UprightImagePaintStrategy(&quot;images/Mars.gif&quot;, 1.0),
				new UprightImagePaintStrategy(&quot;images/Mario.gif&quot;, 1.0)});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-QWLkQuLEei-6eSvavMBRQ" name="MarioMarsImagePaintStrategy" method="_-VzTXAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-QWLkguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-QWLkwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-QWLlAuLEei-6eSvavMBRQ" type="_-QWLkAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QWyoAuLEei-6eSvavMBRQ" name="MarsImagePaintStrategy">
        <generalization xmi:id="_-Uhg8guLEei-6eSvavMBRQ" general="_-QQsAAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VzTXguLEei-6eSvavMBRQ" name="MarsImagePaintStrategy" specification="_-QWyoQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VzTXwuLEei-6eSvavMBRQ" type="_-QWyoAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Mars.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-QWyoQuLEei-6eSvavMBRQ" name="MarsImagePaintStrategy" method="_-VzTXguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-QWyoguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-QWyowuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-QWypAuLEei-6eSvavMBRQ" type="_-QWyoAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QXZsAuLEei-6eSvavMBRQ" name="MultiPaintStrategy">
        <ownedComment xmi:id="_-V9EVAuLEei-6eSvavMBRQ">
          <body>This class defines a multi paint strategy which is the composition of other paint strategies.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_-UivEguLEei-6eSvavMBRQ" general="_-PbllAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_-Vd8IAuLEei-6eSvavMBRQ" name="pstrats" visibility="private" type="_-PbllAuLEei-6eSvavMBRQ" association="_-WLt0wuLEei-6eSvavMBRQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-Vd8IQuLEei-6eSvavMBRQ" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VzTYAuLEei-6eSvavMBRQ" name="MultiPaintStrategy" specification="_-UiIAAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VzTYQuLEei-6eSvavMBRQ" name="pstrats" type="_-PbllAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-VzTYguLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VzTYwuLEei-6eSvavMBRQ" type="_-QXZsAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(new AffineTransform());&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-Vz6YAuLEei-6eSvavMBRQ" name="MultiPaintStrategy" specification="_-VGvwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Vz6YQuLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Vz6YguLEei-6eSvavMBRQ" name="pstrats" type="_-PbllAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-Vz6YwuLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-Vz6ZAuLEei-6eSvavMBRQ" type="_-QXZsAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(at);&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-Vz6ZQuLEei-6eSvavMBRQ" name="init" specification="_-UivEAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Vz6ZguLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
		    strategy.init(ball);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-Vz6ZwuLEei-6eSvavMBRQ" name="paintXfrm" specification="_-VHW0AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Vz6aAuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Vz6aQuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Vz6aguLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
			strategy.paintXfrm(g, ball, at);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-QYAwAuLEei-6eSvavMBRQ" name="MultiPaintStrategy">
          <eAnnotations xmi:id="_-QYAwQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-QYAwguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-QYAxAuLEei-6eSvavMBRQ" type="_-QXZsAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-UiIAAuLEei-6eSvavMBRQ" name="MultiPaintStrategy" method="_-VzTYAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-UiIAguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-UiIAwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_-V9EVQuLEei-6eSvavMBRQ">
            <body>This is a constructor that doesn't take in an affine transform.&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_-UiIAQuLEei-6eSvavMBRQ" name="pstrats" type="_-PbllAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-UiIBQuLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-UiIBAuLEei-6eSvavMBRQ" type="_-QXZsAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-UivEAuLEei-6eSvavMBRQ" name="init" method="_-Vz6ZQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V9EVwuLEei-6eSvavMBRQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-UivEQuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VGvwAuLEei-6eSvavMBRQ" name="MultiPaintStrategy" method="_-Vz6YAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-VGvwwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-VGvxAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_-V9EVguLEei-6eSvavMBRQ">
            <body>This is a constructor that does take in an affine transform.&#xD;
	 * @param at An affine transform&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_-VGvwQuLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VGvwguLEei-6eSvavMBRQ" name="pstrats" type="_-PbllAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-VGvxguLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VGvxQuLEei-6eSvavMBRQ" type="_-QXZsAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VHW0AuLEei-6eSvavMBRQ" name="paintXfrm" method="_-Vz6ZwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VHW0QuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VHW0guLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VHW0wuLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QZ18AuLEei-6eSvavMBRQ" name="MultiStrategy">
        <ownedComment xmi:id="_-V9EWAuLEei-6eSvavMBRQ">
          <body>This class defines a Multi Strategy which defines a movement strategy for a ball
is a combination of 2 other strategies.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_-VejMAuLEei-6eSvavMBRQ" name="s1" visibility="private" type="_-QQE8AuLEei-6eSvavMBRQ" association="_-WLt1guLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_-V9EWQuLEei-6eSvavMBRQ" name="s2" visibility="private" type="_-QQE8AuLEei-6eSvavMBRQ" association="_-WU3xAuLEei-6eSvavMBRQ"/>
        <interfaceRealization xmi:id="_-UjWIAuLEei-6eSvavMBRQ" client="_-QZ18AuLEei-6eSvavMBRQ" supplier="_-QQE8AuLEei-6eSvavMBRQ" contract="_-QQE8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-Vz6awuLEei-6eSvavMBRQ" name="MultiStrategy" specification="_-Uj9MAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Vz6bAuLEei-6eSvavMBRQ" name="s1" type="_-QQE8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Vz6bQuLEei-6eSvavMBRQ" name="s2" type="_-QQE8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Vz6bguLEei-6eSvavMBRQ" type="_-QZ18AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this.s1 = s1;
		this.s2 = s2;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V0hcAuLEei-6eSvavMBRQ" name="updateState" specification="_-UkkQAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V0hcQuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V0hcguLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					s1.updateState(ball, disp);
					s2.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-Uj9MAuLEei-6eSvavMBRQ" name="MultiStrategy" method="_-Vz6awuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-Uj9MwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-Uj9NAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-Uj9MQuLEei-6eSvavMBRQ" name="s1" type="_-QQE8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Uj9MguLEei-6eSvavMBRQ" name="s2" type="_-QQE8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Uj9NQuLEei-6eSvavMBRQ" type="_-QZ18AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-UkkQAuLEei-6eSvavMBRQ" name="updateState" method="_-V0hcAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-UkkQQuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-UkkQguLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QbEEAuLEei-6eSvavMBRQ" name="ReefImagePaintStrategy">
        <generalization xmi:id="_-UlLUguLEei-6eSvavMBRQ" general="_-QmDMAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V0hcwuLEei-6eSvavMBRQ" name="ReefImagePaintStrategy" specification="_-QbEEQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V0hdAuLEei-6eSvavMBRQ" type="_-QbEEAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Reef.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-QbEEQuLEei-6eSvavMBRQ" name="ReefImagePaintStrategy" method="_-V0hcwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-QbrIAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-QbrIQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-QbrIguLEei-6eSvavMBRQ" type="_-QbEEAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QbrIwuLEei-6eSvavMBRQ" name="SaturnImagePaintStrategy">
        <generalization xmi:id="_-UlLUwuLEei-6eSvavMBRQ" general="_-QQsAAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V0hdQuLEei-6eSvavMBRQ" name="SaturnImagePaintStrategy" specification="_-QbrJAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V0hdguLEei-6eSvavMBRQ" type="_-QbrIwuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Saturn.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-QbrJAuLEei-6eSvavMBRQ" name="SaturnImagePaintStrategy" method="_-V0hdQuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-QbrJQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-QbrJguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-QcSMAuLEei-6eSvavMBRQ" type="_-QbrIwuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QcSMQuLEei-6eSvavMBRQ" name="ShapePaintStrategy">
        <ownedComment xmi:id="_-V9rYguLEei-6eSvavMBRQ">
          <body>This class defines a shape paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_-UlyYQuLEei-6eSvavMBRQ" general="_-PbllAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_-VfKQAuLEei-6eSvavMBRQ" name="shape" visibility="package" type="_-UXI4QuLEei-6eSvavMBRQ" association="_-WMU4QuLEei-6eSvavMBRQ"/>
        <interfaceRealization xmi:id="_-UlyYAuLEei-6eSvavMBRQ" client="_-QcSMQuLEei-6eSvavMBRQ" supplier="_-QNBoAuLEei-6eSvavMBRQ" contract="_-QNBoAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V0hdwuLEei-6eSvavMBRQ" name="ShapePaintStrategy" specification="_-VIk8AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V0heAuLEei-6eSvavMBRQ" name="shape" type="_-UXI4QuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V0heQuLEei-6eSvavMBRQ" type="_-QcSMQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V0heguLEei-6eSvavMBRQ" name="ShapePaintStrategy" specification="_-VJMAwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V0hewuLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V0hfAuLEei-6eSvavMBRQ" name="shape" type="_-UXI4QuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V0hfQuLEei-6eSvavMBRQ" type="_-QcSMQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V1IgAuLEei-6eSvavMBRQ" name="paintXfrm" specification="_-VJzEwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V1IgQuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V1IgguLEei-6eSvavMBRQ" name="host" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V1IgwuLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>((Graphics2D) g).fill(at.createTransformedShape(shape));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V1IhAuLEei-6eSvavMBRQ" name="makeShape" specification="_-Qc5QAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V1IhQuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-V1IhguLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-V1IhwuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-V1IiAuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-V1IiQuLEei-6eSvavMBRQ" type="_-UXI4QuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>at.setToTranslation(x, y);
		at.scale(x * xScale, y * yScale);  // optional rotation can be added as well
		return at.createTransformedShape(shape);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-Qc5QAuLEei-6eSvavMBRQ" name="makeShape" method="_-V1IhAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Qc5QQuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-Qc5QguLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-Qc5QwuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-Qc5RAuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VKaIAuLEei-6eSvavMBRQ" type="_-UXI4QuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VIk8AuLEei-6eSvavMBRQ" name="ShapePaintStrategy" method="_-V0hdwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-VJMAAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-VJMAQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-VIk8QuLEei-6eSvavMBRQ" name="shape" type="_-UXI4QuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VJMAguLEei-6eSvavMBRQ" type="_-QcSMQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VJMAwuLEei-6eSvavMBRQ" name="ShapePaintStrategy" method="_-V0heguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-VJzEAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-VJzEQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-VJMBAuLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VJMBQuLEei-6eSvavMBRQ" name="shape" type="_-UXI4QuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VJzEguLEei-6eSvavMBRQ" type="_-QcSMQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VJzEwuLEei-6eSvavMBRQ" name="paintXfrm" method="_-V1IgAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VJzFAuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VJzFQuLEei-6eSvavMBRQ" name="host" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VJzFguLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QeucAuLEei-6eSvavMBRQ" name="SheepImagePaintStrategy">
        <generalization xmi:id="_-UnAgAuLEei-6eSvavMBRQ" general="_-QmDMAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V1IiguLEei-6eSvavMBRQ" name="SheepImagePaintStrategy" specification="_-QfVgAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V1IiwuLEei-6eSvavMBRQ" type="_-QeucAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Sheep.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-QfVgAuLEei-6eSvavMBRQ" name="SheepImagePaintStrategy" method="_-V1IiguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-QfVgQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-QfVgguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-QfVgwuLEei-6eSvavMBRQ" type="_-QeucAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-Qf8kAuLEei-6eSvavMBRQ" name="SoccerImagePaintStrategy">
        <generalization xmi:id="_-UnAgQuLEei-6eSvavMBRQ" general="_-QQsAAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V1IjAuLEei-6eSvavMBRQ" name="SoccerImagePaintStrategy" specification="_-Qf8kQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V1IjQuLEei-6eSvavMBRQ" type="_-Qf8kAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Soccer.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-Qf8kQuLEei-6eSvavMBRQ" name="SoccerImagePaintStrategy" method="_-V1IjAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-Qf8kguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-Qf8kwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-QgjoAuLEei-6eSvavMBRQ" type="_-Qf8kAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QgjoQuLEei-6eSvavMBRQ" name="SonicImagePaintStrategy">
        <generalization xmi:id="_-UnAgguLEei-6eSvavMBRQ" general="_-QmDMAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V1IjguLEei-6eSvavMBRQ" name="SonicImagePaintStrategy" specification="_-QgjoguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V1IjwuLEei-6eSvavMBRQ" type="_-QgjoQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Sonic.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-QgjoguLEei-6eSvavMBRQ" name="SonicImagePaintStrategy" method="_-V1IjguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-QgjowuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-QhKsAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-QhKsQuLEei-6eSvavMBRQ" type="_-QgjoQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QhKsguLEei-6eSvavMBRQ" name="SpawnStrategy">
        <ownedComment xmi:id="_-V9rYwuLEei-6eSvavMBRQ">
          <body>This class defines a spawn strategy that interacts with other balls.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_-VfxUAuLEei-6eSvavMBRQ" name="count" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VfxUQuLEei-6eSvavMBRQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VfxUwuLEei-6eSvavMBRQ" name="delay" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VfxVAuLEei-6eSvavMBRQ" value="100"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_-UnAgwuLEei-6eSvavMBRQ" client="_-QhKsguLEei-6eSvavMBRQ" supplier="_-QQE8AuLEei-6eSvavMBRQ" contract="_-QQE8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V1IkAuLEei-6eSvavMBRQ" name="updateState" specification="_-UnnkAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V1IkQuLEei-6eSvavMBRQ" name="context" type="_-PdawAuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_-V1IkguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_-V1IkwuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_-V1IlAuLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>if (delay &lt; count++) {
			dispatcher.notifyAll(new IBallCmd() {
				/**
				 * This function applies this command to the correct ball using a dispatcher.
				 */
				@Override
				public void apply(Ball other, Dispatcher disp) {
					if (count != 0 &amp;&amp; context != other) {
						if ((context.getRad() + other.getRad()) > 
						    context.getLoc().distance(other.getLoc())) {
							disp.addObserver(new Ball(
									context.getCol(),
									new Point(context.getLoc()), 
									context.getRad(),
									new Point(-context.getVel().x+1,-context.getVel().y+1), 
									context.getCon(), 
									new SpawnStrategy(), 
									context.getPaintStrat()));
							count = 0;
							delay *= 5;
						}
					}
				}
			});
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-UnnkAuLEei-6eSvavMBRQ" name="updateState" method="_-V1IkAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-UnnkQuLEei-6eSvavMBRQ" name="context" type="_-PdawAuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_-UnnlAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_-UnnlQuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_-UnnkguLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QiY0AuLEei-6eSvavMBRQ" name="SquarePaintStrategy">
        <ownedComment xmi:id="_-V9rZAuLEei-6eSvavMBRQ">
          <body>This is the square paint strategy that paints a square.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_-UoOoguLEei-6eSvavMBRQ" client="_-QiY0AuLEei-6eSvavMBRQ" supplier="_-QLzgguLEei-6eSvavMBRQ" contract="_-QLzgguLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V1IlQuLEei-6eSvavMBRQ" name="paint" specification="_-VLBMAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V1IlguLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V1IlwuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>int halfSide = ball.getRad();
		g.setColor(ball.getCol());
		g.fillRect(ball.getLoc().x - halfSide, ball.getLoc().y - halfSide, 2 * halfSide, 2 * halfSide);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-UoOowuLEei-6eSvavMBRQ" name="init">
          <ownedParameter xmi:id="_-UoOpAuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VLBMAuLEei-6eSvavMBRQ" name="paint" method="_-V1IlQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VLBMQuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VLBMguLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-Qi_4AuLEei-6eSvavMBRQ" name="StraightStrategy">
        <ownedComment xmi:id="_-V9rZQuLEei-6eSvavMBRQ">
          <body>This class defines a Straight Strategy which defines a movement strategy for a ball that just
moves by changing it's location by its velocity components.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_-Uo1sQuLEei-6eSvavMBRQ" client="_-Qi_4AuLEei-6eSvavMBRQ" supplier="_-QQE8AuLEei-6eSvavMBRQ" contract="_-QQE8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V1vkAuLEei-6eSvavMBRQ" name="updateState" specification="_-UpcwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V1vkQuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V1vkguLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-UpcwAuLEei-6eSvavMBRQ" name="updateState" method="_-V1vkAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-UpcwQuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-UpcwguLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-Qjm8AuLEei-6eSvavMBRQ" name="SwellStrategy">
        <ownedComment xmi:id="_-V9rZguLEei-6eSvavMBRQ">
          <body>This class defines a Swell Strategy which defines a movement strategy for a ball that grows it
in size, and once it reaches a certain size, it changes colors, and then shrinks slowly and repeats.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_-UqD0AuLEei-6eSvavMBRQ" client="_-Qjm8AuLEei-6eSvavMBRQ" supplier="_-QQE8AuLEei-6eSvavMBRQ" contract="_-QQE8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V1vkwuLEei-6eSvavMBRQ" name="updateState" specification="_-UqD0QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V1vlAuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V1vlQuLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getRad() >= 80) {
						ball.setRadDelta(1);
						ball.setRadDelta(ball.getRadDelta() * -1);
						ball.setCol(rzr.randomColor());
					} else if (ball.getRad() &lt;= 20) {
						ball.setRadDelta(-5);
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-UqD0QuLEei-6eSvavMBRQ" name="updateState" method="_-V1vkwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-UqD0guLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-UqD0wuLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QkOAAuLEei-6eSvavMBRQ" name="SwitcherStrategy">
        <ownedComment xmi:id="_-V-ScAuLEei-6eSvavMBRQ">
          <body>This class defines a Switcher Strategy which defines a strategy for a ball that can
change by updating the strategy.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_-VgYYAuLEei-6eSvavMBRQ" name="strategy" visibility="private" isStatic="true" type="_-QQE8AuLEei-6eSvavMBRQ" association="_-WM78AuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VgYYQuLEei-6eSvavMBRQ" value="new StraightStrategy()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_-Uqq4QuLEei-6eSvavMBRQ" client="_-QkOAAuLEei-6eSvavMBRQ" supplier="_-QQE8AuLEei-6eSvavMBRQ" contract="_-QQE8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V1vlguLEei-6eSvavMBRQ" name="updateState" specification="_-Uqq4guLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V1vlwuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V1vmAuLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					strategy.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V1vmQuLEei-6eSvavMBRQ" name="setStrat" specification="_-UrR8wuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V1vmguLEei-6eSvavMBRQ" name="strat" type="_-QQE8AuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>SwitcherStrategy.strategy = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V1vmwuLEei-6eSvavMBRQ" name="getStrat" specification="_-Qk1EAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V1vnAuLEei-6eSvavMBRQ" type="_-QQE8AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return SwitcherStrategy.strategy;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-Qk1EAuLEei-6eSvavMBRQ" name="getStrat" isStatic="true" method="_-V1vmwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V-ScguLEei-6eSvavMBRQ">
            <body>This function returns the current strategy of the switcher balls.
	 * @return An IUpdateStrategy which is the current strategy of the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-UrR9QuLEei-6eSvavMBRQ" type="_-QQE8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-Uqq4guLEei-6eSvavMBRQ" name="updateState" method="_-V1vlguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Uqq4wuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Uqq5AuLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-UrR8wuLEei-6eSvavMBRQ" name="setStrat" isStatic="true" method="_-V1vmQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V-ScQuLEei-6eSvavMBRQ">
            <body>This function changes the strategy of all switcher balls to that of the parameter.
	 * @param strat An IUpdateStrategy which is the new strategy for all the balls to use</body>
          </ownedComment>
          <ownedParameter xmi:id="_-UrR9AuLEei-6eSvavMBRQ" name="strat" type="_-QQE8AuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QlcIAuLEei-6eSvavMBRQ" name="TeleportStrategy">
        <ownedComment xmi:id="_-V-ScwuLEei-6eSvavMBRQ">
          <body>This class defines a Teleport Strategy which defines a movement strategy for a ball that randomly
changes the location of it, so it teleports.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_-Ur5AAuLEei-6eSvavMBRQ" client="_-QlcIAuLEei-6eSvavMBRQ" supplier="_-QQE8AuLEei-6eSvavMBRQ" contract="_-QQE8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V1vnQuLEei-6eSvavMBRQ" name="updateState" specification="_-Ur5AQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V1vnguLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V1vnwuLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % 80 == 0) {
						ball.setLoc(rzr.randomLoc(new Rectangle(ball.getCon().getWidth() - ball.getRad(), ball.getCon().getHeight() - ball.getRad())));
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-Ur5AQuLEei-6eSvavMBRQ" name="updateState" method="_-V1vnQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Ur5AguLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-Ur5AwuLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QmDMAuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy">
        <ownedComment xmi:id="_-V-SdAuLEei-6eSvavMBRQ">
          <body>This class defines an upright image.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_-UsgEAuLEei-6eSvavMBRQ" general="_-QQsAAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V2WoAuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy" specification="_-QmqQAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V2WoQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-V2WoguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-V2WowuLEei-6eSvavMBRQ" type="_-QmDMAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V2WpAuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy" specification="_-VLoQAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V2WpQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-V2WpguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-V2WpwuLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V2WqAuLEei-6eSvavMBRQ" type="_-QmDMAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor, at);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V2WqQuLEei-6eSvavMBRQ" name="paintCfg" specification="_-VMPUwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V2WqguLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V2WqwuLEei-6eSvavMBRQ" name="host" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>super.paintCfg(g, host);&#xD;
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {&#xD;
			at.scale(1.0, -1.0);&#xD;
		}       &#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-QmqQAuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy" method="_-V2WoAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-QmqQwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-QmqRAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-QmqQQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-QmqQguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-QmqRQuLEei-6eSvavMBRQ" type="_-QmDMAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VLoQAuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy" method="_-V2WpAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-VMPUAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-VMPUQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-VLoQQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VLoQguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VLoQwuLEei-6eSvavMBRQ" name="at" type="_-UIfYAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VMPUguLEei-6eSvavMBRQ" type="_-QmDMAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VMPUwuLEei-6eSvavMBRQ" name="paintCfg" visibility="protected" method="_-V2WqQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VMPVAuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VMPVQuLEei-6eSvavMBRQ" name="host" type="_-PdawAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-Qn4YAuLEei-6eSvavMBRQ" name="VenusImagePaintStrategy">
        <generalization xmi:id="_-UsgEQuLEei-6eSvavMBRQ" general="_-QQsAAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V2WrAuLEei-6eSvavMBRQ" name="VenusImagePaintStrategy" specification="_-Qn4YQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V2WrQuLEei-6eSvavMBRQ" type="_-Qn4YAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Venus.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-Qn4YQuLEei-6eSvavMBRQ" name="VenusImagePaintStrategy" method="_-V2WrAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-Qn4YguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-Qn4YwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-Qn4ZAuLEei-6eSvavMBRQ" type="_-Qn4YAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QofcAuLEei-6eSvavMBRQ" name="WiggleStrategy">
        <ownedComment xmi:id="_-V-SdQuLEei-6eSvavMBRQ">
          <body>This class defines a Wiggle Strategy which defines a movement strategy for a ball that randomly
changes the velocity direction, so it wiggles.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_-UsgEguLEei-6eSvavMBRQ" client="_-QofcAuLEei-6eSvavMBRQ" supplier="_-QQE8AuLEei-6eSvavMBRQ" contract="_-QQE8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V2WrguLEei-6eSvavMBRQ" name="updateState" specification="_-UsgEwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V2WrwuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V2WsAuLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % rzr.randomInt(2,  100) == 0) {
						ball.setVel(new Point(ball.getVel().x, ball.getVel().y * -1));
					} else if (ball.getItr() % rzr.randomInt(2, 100) == 0){
						ball.setVel(new Point(ball.getVel().x * -1, ball.getVel().y));
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-UsgEwuLEei-6eSvavMBRQ" name="updateState" method="_-V2WrguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-UsgFAuLEei-6eSvavMBRQ" name="ball" type="_-PdawAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-UtHIAuLEei-6eSvavMBRQ" name="dispatcher" type="_-QpGgAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-V6oEAuLEei-6eSvavMBRQ" name="" memberEnd="_-VYckAuLEei-6eSvavMBRQ _-V6oEQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-V6oEQuLEei-6eSvavMBRQ" name="" type="_-PdawAuLEei-6eSvavMBRQ" association="_-V6oEAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-V6oEguLEei-6eSvavMBRQ" name="" memberEnd="_-VYckQuLEei-6eSvavMBRQ _-V6oEwuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-V6oEwuLEei-6eSvavMBRQ" name="" type="_-PdawAuLEei-6eSvavMBRQ" association="_-V6oEguLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-V6oFAuLEei-6eSvavMBRQ" name="" memberEnd="_-VYclAuLEei-6eSvavMBRQ _-V6oFQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-V6oFQuLEei-6eSvavMBRQ" name="" type="_-PdawAuLEei-6eSvavMBRQ" association="_-V6oFAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-V7PIAuLEei-6eSvavMBRQ" name="" memberEnd="_-VYclQuLEei-6eSvavMBRQ _-V7PIQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-V7PIQuLEei-6eSvavMBRQ" name="" type="_-PdawAuLEei-6eSvavMBRQ" association="_-V7PIAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WFnMAuLEei-6eSvavMBRQ" name="" memberEnd="_-WFnMQuLEei-6eSvavMBRQ _-QLMcQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WFnMQuLEei-6eSvavMBRQ" name="" type="_-QKlYQuLEei-6eSvavMBRQ" association="_-WFnMAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WGOQQuLEei-6eSvavMBRQ" name="" memberEnd="_-WGOQguLEei-6eSvavMBRQ _-QLzgAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WGOQguLEei-6eSvavMBRQ" name="" type="_-QKlYQuLEei-6eSvavMBRQ" association="_-WGOQQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WG1UQuLEei-6eSvavMBRQ" name="" memberEnd="_-WG1UguLEei-6eSvavMBRQ _-QO20AuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WG1UguLEei-6eSvavMBRQ" name="" type="_-QNoswuLEei-6eSvavMBRQ" association="_-WG1UQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WG1VAuLEei-6eSvavMBRQ" name="" memberEnd="_-WG1VQuLEei-6eSvavMBRQ _-QO20wuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WG1VQuLEei-6eSvavMBRQ" name="" type="_-QNoswuLEei-6eSvavMBRQ" association="_-WG1VAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WIqgQuLEei-6eSvavMBRQ" name="" memberEnd="_-WIqgguLEei-6eSvavMBRQ _-VX1gguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WIqgguLEei-6eSvavMBRQ" name="" type="_-PbllAuLEei-6eSvavMBRQ" association="_-WIqgQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WJRkAuLEei-6eSvavMBRQ" name="" memberEnd="_-WJRkQuLEei-6eSvavMBRQ _-VZDoAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WJRkQuLEei-6eSvavMBRQ" name="" type="_-PdawAuLEei-6eSvavMBRQ" association="_-WJRkAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WJRkwuLEei-6eSvavMBRQ" name="" memberEnd="_-WJRlAuLEei-6eSvavMBRQ _-VZDoguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WJRlAuLEei-6eSvavMBRQ" name="" type="_-PdawAuLEei-6eSvavMBRQ" association="_-WJRkwuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WJRlguLEei-6eSvavMBRQ" name="" memberEnd="_-WJRlwuLEei-6eSvavMBRQ _-VZqsAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WJRlwuLEei-6eSvavMBRQ" name="" type="_-PjhYAuLEei-6eSvavMBRQ" association="_-WJRlguLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WJ4oQuLEei-6eSvavMBRQ" name="" memberEnd="_-WJ4oguLEei-6eSvavMBRQ _-VaRwQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WJ4oguLEei-6eSvavMBRQ" name="" type="_-PjhYAuLEei-6eSvavMBRQ" association="_-WJ4oQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WJ4pAuLEei-6eSvavMBRQ" name="" memberEnd="_-WJ4pQuLEei-6eSvavMBRQ _-VaRxAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WJ4pQuLEei-6eSvavMBRQ" name="" type="_-PjhYAuLEei-6eSvavMBRQ" association="_-WJ4pAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WKfsQuLEei-6eSvavMBRQ" name="" memberEnd="_-WKfsguLEei-6eSvavMBRQ _-Va40AuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WKfsguLEei-6eSvavMBRQ" name="" type="_-Pq2IAuLEei-6eSvavMBRQ" association="_-WKfsQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WKftAuLEei-6eSvavMBRQ" name="" memberEnd="_-WKftQuLEei-6eSvavMBRQ _-VcG9AuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WKftQuLEei-6eSvavMBRQ" name="" type="_-QQsAAuLEei-6eSvavMBRQ" association="_-WKftAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WLGwQuLEei-6eSvavMBRQ" name="" memberEnd="_-WLGwguLEei-6eSvavMBRQ _-VcuAguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WLGwguLEei-6eSvavMBRQ" name="" type="_-QQsAAuLEei-6eSvavMBRQ" association="_-WLGwQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WLGxAuLEei-6eSvavMBRQ" name="" memberEnd="_-WLGxQuLEei-6eSvavMBRQ _-VcuBQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WLGxQuLEei-6eSvavMBRQ" name="" type="_-QQsAAuLEei-6eSvavMBRQ" association="_-WLGxAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WLt0AuLEei-6eSvavMBRQ" name="" memberEnd="_-WLt0QuLEei-6eSvavMBRQ _-VdVEQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WLt0QuLEei-6eSvavMBRQ" name="" type="_-QQsAAuLEei-6eSvavMBRQ" association="_-WLt0AuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WLt0wuLEei-6eSvavMBRQ" name="" memberEnd="_-WLt1AuLEei-6eSvavMBRQ _-Vd8IAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WLt1AuLEei-6eSvavMBRQ" name="" type="_-QXZsAuLEei-6eSvavMBRQ" association="_-WLt0wuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WLt1guLEei-6eSvavMBRQ" name="" memberEnd="_-WLt1wuLEei-6eSvavMBRQ _-VejMAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WLt1wuLEei-6eSvavMBRQ" name="" type="_-QZ18AuLEei-6eSvavMBRQ" association="_-WLt1guLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WMU4QuLEei-6eSvavMBRQ" name="" memberEnd="_-WMU4guLEei-6eSvavMBRQ _-VfKQAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WMU4guLEei-6eSvavMBRQ" name="" type="_-QcSMQuLEei-6eSvavMBRQ" association="_-WMU4QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WM78AuLEei-6eSvavMBRQ" name="" memberEnd="_-WM78QuLEei-6eSvavMBRQ _-VgYYAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WM78QuLEei-6eSvavMBRQ" name="" type="_-QkOAAuLEei-6eSvavMBRQ" association="_-WM78AuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WU3xAuLEei-6eSvavMBRQ" name="" memberEnd="_-WU3xQuLEei-6eSvavMBRQ _-V9EWQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WU3xQuLEei-6eSvavMBRQ" name="" type="_-QZ18AuLEei-6eSvavMBRQ" association="_-WU3xAuLEei-6eSvavMBRQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_-NfE0AuLEei-6eSvavMBRQ" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_-QyQcAuLEei-6eSvavMBRQ" name="BallWorldView">
        <ownedComment xmi:id="_-V-5hAuLEei-6eSvavMBRQ">
          <body>This is the BallWorldView class, which has the frame on which our BallWorld is displayed.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <generalization xmi:id="_-VS9AguLEei-6eSvavMBRQ" general="_-UvjYQuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_-VjbsQuLEei-6eSvavMBRQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VjbsguLEei-6eSvavMBRQ" value="-7114823923004621639L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VkCwAuLEei-6eSvavMBRQ" name="contentPane" visibility="private" type="_-UvjYwuLEei-6eSvavMBRQ" association="_-WNjAQuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_-VkCwguLEei-6eSvavMBRQ" name="pnlControl" visibility="private" isLeaf="true" type="_-UvjYwuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WOKEQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-Vkp0AuLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-Vkp0guLEei-6eSvavMBRQ" name="tfClassname" visibility="private" isLeaf="true" type="_-UwKcQuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WOKFAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-Vkp0wuLEei-6eSvavMBRQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VlQ4AuLEei-6eSvavMBRQ" name="btnClearBalls" visibility="private" isLeaf="true" type="_-UwKcwuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WOxIQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VlQ4QuLEei-6eSvavMBRQ" value="new JButton(&quot;Clear balls&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VlQ4wuLEei-6eSvavMBRQ" name="adapter" visibility="private" type="_-Q3I8AuLEei-6eSvavMBRQ" association="_-WOxJAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_-Vl38guLEei-6eSvavMBRQ" name="pnlCanvas" visibility="private" isLeaf="true" type="_-UvjYwuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WPYMQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-Vl38wuLEei-6eSvavMBRQ" value="new JPanel() {&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * This is a private variable that gives the class an ID to serialize and deserialize.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;private static final long serialVersionUID = 8303517520311377718L;&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Overridden paintComponent method to paint a shape in the panel.&#xA;&#x9;&#x9; * @param g The Graphics object to paint on.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public void paintComponent(Graphics g) {&#xA;&#x9;&#x9;&#x9;super.paintComponent(g); // Do everything normally done first, e.g. clear the screen.&#xA;&#x9;&#x9;&#x9;adapter.paintBalls(g);&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VmfAAuLEei-6eSvavMBRQ" name="btnAddToList" visibility="private" isLeaf="true" type="_-UwKcwuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WPYNAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VmfAQuLEei-6eSvavMBRQ" value="new JButton(&quot;Add to list&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VmfAwuLEei-6eSvavMBRQ" name="btnCombine" visibility="private" isLeaf="true" type="_-UwKcwuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WP_QQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VmfBAuLEei-6eSvavMBRQ" value="new JButton(&quot;Combine&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VnGEAuLEei-6eSvavMBRQ" name="btnMakeSelectedBall" visibility="private" isLeaf="true" type="_-UwKcwuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WQmUQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VnGEQuLEei-6eSvavMBRQ" value="new JButton(&quot;Make selected ball&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VntIQuLEei-6eSvavMBRQ" name="btnMakeSwitcher" visibility="private" isLeaf="true" type="_-UwKcwuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WRNYQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VntIguLEei-6eSvavMBRQ" value="new JButton(&quot;Make switcher&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VoUMQuLEei-6eSvavMBRQ" name="btnSwitch" visibility="private" isLeaf="true" type="_-UwKcwuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WR0cQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VoUMguLEei-6eSvavMBRQ" value="new JButton(&quot;Switch&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-Vo7QAuLEei-6eSvavMBRQ" name="comBoxTop" visibility="private" type="_-UwxgwuLEei-6eSvavMBRQ" association="_-WR0dAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-Vo7QguLEei-6eSvavMBRQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VpiUQuLEei-6eSvavMBRQ" name="comBoxBottom" visibility="private" type="_-UwxgwuLEei-6eSvavMBRQ" association="_-WSbgQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VqJYAuLEei-6eSvavMBRQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VqJYguLEei-6eSvavMBRQ" name="pnlChangeList" visibility="private" isLeaf="true" type="_-UvjYwuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WTCkQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VqJYwuLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VqJZQuLEei-6eSvavMBRQ" name="pnlDropDowns" visibility="private" isLeaf="true" type="_-UvjYwuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WTClAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VqwcAuLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VqwcguLEei-6eSvavMBRQ" name="pnlSwitching" visibility="private" isLeaf="true" type="_-UvjYwuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WTpoQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VqwcwuLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VrXgAuLEei-6eSvavMBRQ" name="pnlPaintStrats" visibility="private" isLeaf="true" type="_-UvjYwuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WTppAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VrXgQuLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-VrXgwuLEei-6eSvavMBRQ" name="btnAddPaintStrat" visibility="private" isLeaf="true" type="_-UwKcwuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WUQsQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VrXhAuLEei-6eSvavMBRQ" value="new JButton(&quot;Add&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-Vr-kAuLEei-6eSvavMBRQ" name="txtPaintStrat" visibility="private" isLeaf="true" type="_-UwKcQuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WUQtAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-Vr-kQuLEei-6eSvavMBRQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-Vr-kwuLEei-6eSvavMBRQ" name="comBoxStrats" visibility="private" isLeaf="true" type="_-UwxgwuLEei-6eSvavMBRQ" isReadOnly="true" association="_-WU3wQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-VsloQuLEei-6eSvavMBRQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V4L0AuLEei-6eSvavMBRQ" name="getPanel" specification="_-QzekAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V4L0QuLEei-6eSvavMBRQ" type="_-UvjYwuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return pnlCanvas;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V4L0guLEei-6eSvavMBRQ" name="BallWorldView" specification="_-UymsAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V4L0wuLEei-6eSvavMBRQ" name="adapter" type="_-Q3I8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V4L1AuLEei-6eSvavMBRQ" type="_-QyQcAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>txtPaintStrat.setToolTipText(&quot;This is the text field where you can add paint strategies.&quot;);
		pnlPaintStrats.setToolTipText(&quot;This is the panel that holds the components that let you add paint strategies and select them.&quot;);
		pnlPaintStrats.add(txtPaintStrat);
		txtPaintStrat.setColumns(10);
		this.adapter = adapter;
		initGUI();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V4L1QuLEei-6eSvavMBRQ" name="updateView" specification="_-Q0FoAuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>repaint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V4L1guLEei-6eSvavMBRQ" name="getCanvas" specification="_-Q0FoQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V4L1wuLEei-6eSvavMBRQ" type="_-UGDIAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return getPanel();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V4L2AuLEei-6eSvavMBRQ" name="initGUI" specification="_-Q0FoguLEei-6eSvavMBRQ">
          <language>java</language>
          <body>setTitle(&quot;BallWorld&quot;);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setToolTipText(&quot;This is the content of the frame.&quot;);
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		pnlControl.setBackground(Color.DARK_GRAY);
		pnlControl.setToolTipText(&quot;This is the control panel that lets you create balls and clear them.&quot;);
		
		contentPane.add(pnlControl, BorderLayout.NORTH);
		pnlControl.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		pnlChangeList.setToolTipText(&quot;This panel is where you can add the type of ball you want to make to the drop down lists.&quot;);
		
		pnlControl.add(pnlChangeList);
		pnlChangeList.setLayout(new GridLayout(0, 1, 0, 0));
		
		pnlChangeList.add(tfClassname);
		tfClassname.setToolTipText(&quot;The type of the ball you want to make.&quot;);
		
		tfClassname.setColumns(10);
		btnAddToList.setToolTipText(&quot;This button adds the strategy type in the text field to the drop down boxes.&quot;);
		pnlChangeList.add(btnAddToList);
		btnAddToList.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (tfClassname.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem stratFac = adapter.addStrategy(tfClassname.getText());

             comBoxTop.insertItemAt(stratFac, 0);
             comBoxBottom.insertItemAt(stratFac, 0);
			}
		});
		pnlDropDowns.setToolTipText(&quot;This panel is for the drop down boxes, and buttons to make selected balls and combine strategies.&quot;);
		
		pnlControl.add(pnlDropDowns);
		pnlDropDowns.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSelectedBall.setToolTipText(&quot;This button makes a ball with the update strategy of the factory that's selected on the top drop down box.&quot;);
		pnlDropDowns.add(btnMakeSelectedBall);
		comBoxTop.setToolTipText(&quot;This is the drop down list on the top.&quot;);
		pnlDropDowns.add(comBoxTop);
		comBoxBottom.setToolTipText(&quot;This is the drop down list on the bottom.&quot;);
		pnlDropDowns.add(comBoxBottom);
		btnCombine.setToolTipText(&quot;This button combines the two strategy factories in the combo boxes.&quot;);
		pnlDropDowns.add(btnCombine);
		btnCombine.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem top = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem bottom = comBoxBottom.getItemAt(comBoxBottom.getSelectedIndex());
				
				if (top == null || bottom == null) {
					return;
				}
				
				TDropListItem combo = adapter.combineStrategies(top, bottom);
				comBoxTop.addItem(combo);
				comBoxBottom.addItem(combo);
			}
		});
		btnMakeSelectedBall.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem selected = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem paintFac = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (selected == null || paintFac == null) {
					return;
				}
				
				adapter.makeBall(selected, paintFac);
			}
		});
		pnlSwitching.setToolTipText(&quot;This panel is for the buttons related to making switcher balls and switching their strategies.&quot;);
		
		pnlControl.add(pnlSwitching);
		pnlSwitching.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSwitcher.setToolTipText(&quot;Click this item to make a switcher ball.&quot;);
		pnlSwitching.add(btnMakeSwitcher);
		btnSwitch.setToolTipText(&quot;Click this button to switch the switcher balls to the selected item in the top combo box.&quot;);
		pnlSwitching.add(btnSwitch);
		
		btnSwitch.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switchFac = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				
				if (switchFac == null) {
					return;
				}
				
				adapter.setSwitcherStrategy(switchFac);
			}
		});
		
		btnMakeSwitcher.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switcherStrat = adapter.getSwitcherFac();
				TDropListItem paintStrat = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (paintStrat == null) {
					return;
				}
				
				adapter.makeBall(switcherStrat, paintStrat);
			}
		});
		btnClearBalls.setToolTipText(&quot;Click this to clear the balls on the canvas.&quot;);
		btnClearBalls.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				adapter.clearBalls();
			}
		});
		
		pnlControl.add(btnClearBalls);
		
		pnlControl.add(pnlPaintStrats);
		pnlPaintStrats.setLayout(new GridLayout(0, 1, 0, 0));
		btnAddPaintStrat.setToolTipText(&quot;This is the button that lets you add paint strategies to the combo box below.&quot;);
		btnAddPaintStrat.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (txtPaintStrat.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem paintFac = adapter.addPaintFactory(txtPaintStrat.getText());
             comBoxStrats.insertItemAt(paintFac, 0);
			}
		});
		
		
		pnlPaintStrats.add(btnAddPaintStrat);
		comBoxStrats.setToolTipText(&quot;The is the combo box for the paint strategies that can be implemented.&quot;);
		
		pnlPaintStrats.add(comBoxStrats);
		pnlCanvas.setBackground(Color.LIGHT_GRAY);
		pnlCanvas.setToolTipText(&quot;This is the canvas where the balls move, and stay in.&quot;);
		
		contentPane.add(pnlCanvas, BorderLayout.CENTER);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V4L2QuLEei-6eSvavMBRQ" name="start" specification="_-Q0FowuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>setExtendedState(JFrame.MAXIMIZED_BOTH);
		setVisible(true);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-QzekAuLEei-6eSvavMBRQ" name="getPanel" method="_-V4L0AuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V-5hQuLEei-6eSvavMBRQ">
            <body>This gets the canvas of the frame.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_-VS9AAuLEei-6eSvavMBRQ" type="_-UvjYwuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-Q0FoAuLEei-6eSvavMBRQ" name="updateView" method="_-V4L1QuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V-5hwuLEei-6eSvavMBRQ">
            <body>Update the view by repainting</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_-Q0FoQuLEei-6eSvavMBRQ" name="getCanvas" method="_-V4L1guLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V-5iAuLEei-6eSvavMBRQ">
            <body>This function returns the canvas panel.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_-VS9AQuLEei-6eSvavMBRQ" type="_-UGDIAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-Q0FoguLEei-6eSvavMBRQ" name="initGUI" visibility="private" method="_-V4L2AuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V-5iQuLEei-6eSvavMBRQ">
            <body>This private function initializes the GUI.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_-Q0FowuLEei-6eSvavMBRQ" name="start" method="_-V4L2QuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V-5iguLEei-6eSvavMBRQ">
            <body>This function makes the frame visible after initializing it.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_-UymsAuLEei-6eSvavMBRQ" name="BallWorldView" method="_-V4L0guLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-UymsguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-UymswuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_-V-5hguLEei-6eSvavMBRQ">
            <body>Create the frame
	 * @param adapter An IView2ModelAdapter</body>
          </ownedComment>
          <ownedParameter xmi:id="_-UymsQuLEei-6eSvavMBRQ" name="adapter" type="_-Q3I8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-UymtAuLEei-6eSvavMBRQ" type="_-QyQcAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_-Q3I8AuLEei-6eSvavMBRQ" name="IView2ModelAdapter">
        <ownedComment xmi:id="_-V-5iwuLEei-6eSvavMBRQ">
          <body>This is an interface which has the functions that the view wants the model to have.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_-Q4-IAuLEei-6eSvavMBRQ" name="switcherFac" type="_-VULIguLEei-6eSvavMBRQ" isReadOnly="true" association="_-WHcYQuLEei-6eSvavMBRQ"/>
        <ownedOperation xmi:id="_-Q3wAQuLEei-6eSvavMBRQ" name="clearBalls">
          <ownedComment xmi:id="_-V-5jAuLEei-6eSvavMBRQ">
            <body>This is a function that will tell the model to clear the balls.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_-Q4XEAuLEei-6eSvavMBRQ" name="addStrategy">
          <ownedComment xmi:id="_-V-5jguLEei-6eSvavMBRQ">
            <body>This function will take the given short strategy name and return a corresponding
     * something to put onto both drop lists.
     * @param classname The shortened class name of the desired strategy
     * @return Something to put onto both the drop lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-Q4XEQuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VUyMAuLEei-6eSvavMBRQ" type="_-VULIguLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-Q4-IQuLEei-6eSvavMBRQ" name="addPaintFactory">
          <ownedParameter xmi:id="_-Q4-IguLEei-6eSvavMBRQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VVZQAuLEei-6eSvavMBRQ" type="_-VULIguLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VULIAuLEei-6eSvavMBRQ" name="paintBalls">
          <ownedComment xmi:id="_-V-5jQuLEei-6eSvavMBRQ">
            <body>This is a function that will tell the model to paint the balls.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-VULIQuLEei-6eSvavMBRQ" name="g" type="_-UHRQQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VUyMQuLEei-6eSvavMBRQ" name="makeBall">
          <ownedComment xmi:id="_-V_gkAuLEei-6eSvavMBRQ">
            <body>This function will make a ball with the selected short strategy name.
     * @param selectedItem A shorten class name for the desired strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_-VUyMguLEei-6eSvavMBRQ" name="selectedItem" type="_-VULIguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VUyMwuLEei-6eSvavMBRQ" name="paintStrat" type="_-VULIguLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VUyNAuLEei-6eSvavMBRQ" name="combineStrategies">
          <ownedComment xmi:id="_-V_gkQuLEei-6eSvavMBRQ">
            <body>This function will return a new object to put on both lists, given two items from the lists.
     * @param selectedItem1 An object from one drop list
     * @param selectedItem2 An object from the other drop list
     * @return An object to put back on both lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-VUyNQuLEei-6eSvavMBRQ" name="selectedItem1" type="_-VULIguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VUyNguLEei-6eSvavMBRQ" name="selectedItem2" type="_-VULIguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VUyNwuLEei-6eSvavMBRQ" type="_-VULIguLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VUyOAuLEei-6eSvavMBRQ" name="setSwitcherStrategy">
          <ownedComment xmi:id="_-V_gkguLEei-6eSvavMBRQ">
            <body>This function will change the current strategy of the switcher balls to whatever
     * strategy is made by the factory in the parameter.
     * @param switchFac An object from the top drop list.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-VUyOQuLEei-6eSvavMBRQ" name="switchFac" type="_-VULIguLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-VULIguLEei-6eSvavMBRQ" name="TDropListItem"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WHcYQuLEei-6eSvavMBRQ" name="" memberEnd="_-WHcYguLEei-6eSvavMBRQ _-Q4-IAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WHcYguLEei-6eSvavMBRQ" name="" type="_-Q3I8AuLEei-6eSvavMBRQ" association="_-WHcYQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WNjAQuLEei-6eSvavMBRQ" name="" memberEnd="_-WNjAguLEei-6eSvavMBRQ _-VkCwAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WNjAguLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WNjAQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WOKEQuLEei-6eSvavMBRQ" name="" memberEnd="_-WOKEguLEei-6eSvavMBRQ _-VkCwguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WOKEguLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WOKEQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WOKFAuLEei-6eSvavMBRQ" name="" memberEnd="_-WOKFQuLEei-6eSvavMBRQ _-Vkp0guLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WOKFQuLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WOKFAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WOxIQuLEei-6eSvavMBRQ" name="" memberEnd="_-WOxIguLEei-6eSvavMBRQ _-VlQ4AuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WOxIguLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WOxIQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WOxJAuLEei-6eSvavMBRQ" name="" memberEnd="_-WOxJQuLEei-6eSvavMBRQ _-VlQ4wuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WOxJQuLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WOxJAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WPYMQuLEei-6eSvavMBRQ" name="" memberEnd="_-WPYMguLEei-6eSvavMBRQ _-Vl38guLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WPYMguLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WPYMQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WPYNAuLEei-6eSvavMBRQ" name="" memberEnd="_-WPYNQuLEei-6eSvavMBRQ _-VmfAAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WPYNQuLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WPYNAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WP_QQuLEei-6eSvavMBRQ" name="" memberEnd="_-WP_QguLEei-6eSvavMBRQ _-VmfAwuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WP_QguLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WP_QQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WQmUQuLEei-6eSvavMBRQ" name="" memberEnd="_-WQmUguLEei-6eSvavMBRQ _-VnGEAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WQmUguLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WQmUQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WRNYQuLEei-6eSvavMBRQ" name="" memberEnd="_-WRNYguLEei-6eSvavMBRQ _-VntIQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WRNYguLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WRNYQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WR0cQuLEei-6eSvavMBRQ" name="" memberEnd="_-WR0cguLEei-6eSvavMBRQ _-VoUMQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WR0cguLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WR0cQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WR0dAuLEei-6eSvavMBRQ" name="" memberEnd="_-WR0dQuLEei-6eSvavMBRQ _-Vo7QAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WR0dQuLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WR0dAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WSbgQuLEei-6eSvavMBRQ" name="" memberEnd="_-WSbgguLEei-6eSvavMBRQ _-VpiUQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WSbgguLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WSbgQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WTCkQuLEei-6eSvavMBRQ" name="" memberEnd="_-WTCkguLEei-6eSvavMBRQ _-VqJYguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WTCkguLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WTCkQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WTClAuLEei-6eSvavMBRQ" name="" memberEnd="_-WTClQuLEei-6eSvavMBRQ _-VqJZQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WTClQuLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WTClAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WTpoQuLEei-6eSvavMBRQ" name="" memberEnd="_-WTpoguLEei-6eSvavMBRQ _-VqwcguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WTpoguLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WTpoQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WTppAuLEei-6eSvavMBRQ" name="" memberEnd="_-WTppQuLEei-6eSvavMBRQ _-VrXgAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WTppQuLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WTppAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WUQsQuLEei-6eSvavMBRQ" name="" memberEnd="_-WUQsguLEei-6eSvavMBRQ _-VrXgwuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WUQsguLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WUQsQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WUQtAuLEei-6eSvavMBRQ" name="" memberEnd="_-WUQtQuLEei-6eSvavMBRQ _-Vr-kAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WUQtQuLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WUQtAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WU3wQuLEei-6eSvavMBRQ" name="" memberEnd="_-WU3wguLEei-6eSvavMBRQ _-Vr-kwuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WU3wguLEei-6eSvavMBRQ" name="" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WU3wQuLEei-6eSvavMBRQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_-Nfr4AuLEei-6eSvavMBRQ" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_-PaXcAuLEei-6eSvavMBRQ" name="BallWorldController">
        <ownedComment xmi:id="_-V6BAAuLEei-6eSvavMBRQ">
          <body>This is the BallWorldController, that has private variables for model and view,
and is able to interface between them.
@author sn32, kyl3, lka2, swong
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_-VXOcAuLEei-6eSvavMBRQ" name="model" visibility="private" type="_-PjhYAuLEei-6eSvavMBRQ" association="_-WIDcAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_-VXOcguLEei-6eSvavMBRQ" name="view" visibility="private" type="_-QyQcAuLEei-6eSvavMBRQ" association="_-WIDcwuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-Vua0AuLEei-6eSvavMBRQ" name="main" specification="_-Pa-gAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Vua0QuLEei-6eSvavMBRQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-Vua0guLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(() -> {
			try {
				(new BallWorldController()).start();
			} catch (Exception e) {
				e.printStackTrace();
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VvB4AuLEei-6eSvavMBRQ" name="BallWorldController" specification="_-Pa-hAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VvB4QuLEei-6eSvavMBRQ" type="_-PaXcAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>model = new BallWorldModel(new IModel2ViewAdapter() {

			/**
			 * This function from the IModel2ViewAdapter allows the controller
			 * to tell the view to update.
			 */
			@Override
			public void update() {
				view.updateView();
			}

			/**
			 * This function from the IModel2ViewAdapter allows the controller to get
			 * the canvas from the view.
			 */
			@Override
			public Container getCanvas() {
				return view.getCanvas();
			}
		});
		
		view = new BallWorldView&lt;IStrategyFac>(new IView2ModelAdapter&lt;IStrategyFac>() {
	        /**
	         * Returns an IStrategyFac that can instantiate the strategy specified
	         * by classname. Returns the error strategy factory if classname is null.
	         * The toString() of the returned factory is the classname.
	         * @param classname Shortened name of desired strategy
	         * @return A factory to make that strategy
	         */
			@Override
	        public IStrategyFac addStrategy(String classname) {
	        		return model.makeStrategyFac(classname);
	        	}

	        /**
	         * Add a ball to the system with a strategy as given by the given IStrategyFac
	         * @param selectedItem The fully qualified name of the desired strategy.
	         */
	        @Override
	        public void makeBall(IStrategyFac selectedItem, IStrategyFac paintStrat) {
	        		if (null != selectedItem &amp;&amp; paintStrat != null) {
	        			model.makeBall(selectedItem.make(), paintStrat.makePaint());
	        		}
	        	}
			
			/**
			 * Returns an IStrategyFac that can instantiate a MultiStrategy with the
			 * two strategies made by the two given IStrategyFac objects. Returns
			 * the error strategy factory if either supplied factory is null. The
			 * toString() of the returned factory is the toString()'s of the two given
			 * factories, concatenated with &quot;-&quot;.
			 * @param selectedItem1 An IStrategyFac for a strategy
			 * @param selectedItem2 An IStrategyFac for a strategy
			 * @return An IStrategyFac for the composition of the two strategies
			 */
	        @Override
			public IStrategyFac combineStrategies(IStrategyFac selectedItem1, IStrategyFac selectedItem2) {
				return model.combineStrategyFacs(selectedItem1, selectedItem2);
			}
			
			/**
			 * This function tells the model to clear all the balls from the canvas.
			 */
			@Override
			public void clearBalls() {
				model.clearBalls();
			}
			
			/**
			 * This function tells the model to paint and update the status of all the balls.
			 */
			@Override 
			public void paintBalls(Graphics g) {
				model.update(g); // see is this is correct or if a paint method is needed
			}

			/**
			 * This function sets the strategy of the switcher balls to whatever is made by
			 * the input's make method.
			 * @param switchFac The new strategy factory whose make method returns the new strategy
			 * for the switcher balls
			 */
			@Override
			public void setSwitcherStrategy(IStrategyFac switchFac) {
				model.setSwitcherStrategy(switchFac);
			}

			/**
			 * This function returns the strategy factory that is making the switcher balls' current strategy.
			 * @return An IStrategyFactory that makes the current switcher balls' strategy.
			 */
			@Override
			public IStrategyFac getSwitcherFac() {
				return model.getSwitcherFac();
			}

			@Override
			public IStrategyFac addPaintFactory(String text) {
				return model.makePaintFactory(text);
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-VvB4guLEei-6eSvavMBRQ" name="start" specification="_-PblkwuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>view.start();
		model.start();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-Pa-gAuLEei-6eSvavMBRQ" name="main" isStatic="true" method="_-Vua0AuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V6BAQuLEei-6eSvavMBRQ">
            <body>This main method starts the BallWorldController.
	 * @param args Command line arguments.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-Pa-gQuLEei-6eSvavMBRQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-Pa-gguLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_-Pa-hAuLEei-6eSvavMBRQ" name="BallWorldController" method="_-VvB4AuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-PblkAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-PblkQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_-V6BAguLEei-6eSvavMBRQ">
            <body>This is the constructor for BallWorldController, which
	 * creates anonymous inner classes for the adapters, and defines their functions.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-PblkguLEei-6eSvavMBRQ" type="_-PaXcAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-PblkwuLEei-6eSvavMBRQ" name="start" method="_-VvB4guLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V6BAwuLEei-6eSvavMBRQ">
            <body>This function starts the view and model.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WIDcAuLEei-6eSvavMBRQ" name="" memberEnd="_-WIDcQuLEei-6eSvavMBRQ _-VXOcAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WIDcQuLEei-6eSvavMBRQ" name="" type="_-PaXcAuLEei-6eSvavMBRQ" association="_-WIDcAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WIDcwuLEei-6eSvavMBRQ" name="" memberEnd="_-WIDdAuLEei-6eSvavMBRQ _-VXOcguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WIDdAuLEei-6eSvavMBRQ" name="" type="_-PaXcAuLEei-6eSvavMBRQ" association="_-WIDcwuLEei-6eSvavMBRQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_-NiIIQuLEei-6eSvavMBRQ" name="util">
      <packagedElement xmi:type="uml:Class" xmi:id="_-QpGgAuLEei-6eSvavMBRQ" name="Dispatcher">
        <ownedComment xmi:id="_-V-SdguLEei-6eSvavMBRQ">
          <body>A simplified Observable class that immediately notifies its Observers when its
notifyAll() method is called. The changed state of the Dispatcher does not need
to be separately set.
@author sn32, kyl3</body>
        </ownedComment>
        <generalization xmi:id="_-VM2YguLEei-6eSvavMBRQ" general="_-UOmAguLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V2WsQuLEei-6eSvavMBRQ" name="notifyAll" specification="_-VM2YAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V2WsguLEei-6eSvavMBRQ" name="param" type="_-U-M4QuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>setChanged();
     notifyObservers(param);
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-VM2YAuLEei-6eSvavMBRQ" name="notifyAll" method="_-V2WsQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VM2YQuLEei-6eSvavMBRQ" name="param" type="_-U-M4QuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_-QptkAuLEei-6eSvavMBRQ" name="IRandomizer">
        <ownedOperation xmi:id="_-QqUoAuLEei-6eSvavMBRQ" name="randomInt">
          <ownedComment xmi:id="_-V-SeQuLEei-6eSvavMBRQ">
            <body>Returns a random integer greater than or equal to min and less than or equal to max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return an int subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_-QqUoQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-QqUoguLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-QqUowuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_-QqUpAuLEei-6eSvavMBRQ" name="randomDouble">
          <ownedComment xmi:id="_-V-SeguLEei-6eSvavMBRQ">
            <body>Returns a random double greater than or equal to min and less than max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return a double subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_-QqUpQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-QqUpguLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-QqUpwuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_-Qq7sAuLEei-6eSvavMBRQ" name="randomColor">
          <ownedComment xmi:id="_-V-SfguLEei-6eSvavMBRQ">
            <body>Generates a random color
	 * @return a random Color object</body>
          </ownedComment>
          <ownedParameter xmi:id="_-VOrlQuLEei-6eSvavMBRQ" type="_-UN-8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VM2YwuLEei-6eSvavMBRQ" name="randomLoc">
          <ownedComment xmi:id="_-V-SdwuLEei-6eSvavMBRQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than rect.width
	 * and 0 less than y less than rect.height.
	 * @param rect The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_-VM2ZAuLEei-6eSvavMBRQ" name="rect" type="_-US3cQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VM2ZQuLEei-6eSvavMBRQ" type="_-UOmAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VNdcguLEei-6eSvavMBRQ" name="randomLoc">
          <ownedComment xmi:id="_-V-SeAuLEei-6eSvavMBRQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than dim.width
	 * and 0 less than y less than dim.height.
	 * @param dim The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_-VNdcwuLEei-6eSvavMBRQ" name="dim" type="_-VNdcAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VOEgAuLEei-6eSvavMBRQ" type="_-UOmAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VOEgQuLEei-6eSvavMBRQ" name="randomVel">
          <ownedComment xmi:id="_-V-SewuLEei-6eSvavMBRQ">
            <body>Returns a random velocity (as a Point) subject to the constraint that the absolute value
	 * of the velocity (speed) within the bound (inclusive) defined by rect. Thus the resultant
	 * velocity may be negative. The given Rectangle should use all positive values.
	 * @param rect The bounds for the absolute value of the velocity in the x and y directions.  
	 * @return a Point object with x and y subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-VOEgguLEei-6eSvavMBRQ" name="rect" type="_-US3cQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VOEgwuLEei-6eSvavMBRQ" type="_-UOmAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VOEhAuLEei-6eSvavMBRQ" name="randomDim">
          <ownedComment xmi:id="_-V-SfAuLEei-6eSvavMBRQ">
            <body>Returns a random square Dimension, whose width is maxDim.width/2 less than width less than maxDim.width
	 * @param maxDim  The bounds on the side of the created Dimension.
	 * @return A random square Dimension subject to the given bound</body>
          </ownedComment>
          <ownedParameter xmi:id="_-VOEhQuLEei-6eSvavMBRQ" name="maxDim" type="_-VNdcAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VOrkAuLEei-6eSvavMBRQ" type="_-VNdcAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VOrkQuLEei-6eSvavMBRQ" name="randomBounds">
          <ownedComment xmi:id="_-V-SfQuLEei-6eSvavMBRQ">
            <body>Generates a randomly located and sized rectangle
	 * @param rect  The bounds for the location of the created rectangle
	 * @param maxDim  The bounds for the dimensions of the create rectangle
	 * @return A Rectangle with location and dimensions subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-VOrkguLEei-6eSvavMBRQ" name="rect" type="_-US3cQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VOrkwuLEei-6eSvavMBRQ" name="maxDim" type="_-VNdcAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VOrlAuLEei-6eSvavMBRQ" type="_-US3cQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VPSoAuLEei-6eSvavMBRQ" name="randomChoice">
          <ownedComment xmi:id="_-V-SfwuLEei-6eSvavMBRQ">
            <body>Returns a random choice of one of two objects, x and y, where probX is the probability 
	 * that x will be picked (0 less than x less than 1).
	 * @param x The first of two choices
	 * @param y The second of two choices
	 * @param probX  The probability of the first choice
	 * @return Either x or y as per the probability of choosing them.</body>
          </ownedComment>
          <ownedParameter xmi:id="_-VPSoQuLEei-6eSvavMBRQ" name="x" type="_-U-M4QuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VPSoguLEei-6eSvavMBRQ" name="y" type="_-U-M4QuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VPSowuLEei-6eSvavMBRQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VPSpAuLEei-6eSvavMBRQ" type="_-U-M4QuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-Qsw4AuLEei-6eSvavMBRQ" name="Randomizer">
        <ownedComment xmi:id="_-V-SgAuLEei-6eSvavMBRQ">
          <body>Utility class that supplies  class routines for generating various random values</body>
        </ownedComment>
        <ownedAttribute xmi:id="_-Vg_cQuLEei-6eSvavMBRQ" name="Singleton" isStatic="true" type="_-Qsw4AuLEei-6eSvavMBRQ" association="_-WM78wuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-Vg_cguLEei-6eSvavMBRQ" value="new Randomizer()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_-UtuMAuLEei-6eSvavMBRQ" client="_-Qsw4AuLEei-6eSvavMBRQ" supplier="_-QptkAuLEei-6eSvavMBRQ" contract="_-QptkAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V29sAuLEei-6eSvavMBRQ" name="randomLoc" specification="_-VPSpQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V29sQuLEei-6eSvavMBRQ" name="rect" type="_-US3cQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V29sguLEei-6eSvavMBRQ" type="_-UOmAAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, rect.width), randomInt(0, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V29swuLEei-6eSvavMBRQ" name="randomLoc" specification="_-VP5sAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V29tAuLEei-6eSvavMBRQ" name="dim" type="_-VNdcAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V29tQuLEei-6eSvavMBRQ" type="_-UOmAAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, dim.width), randomInt(0, dim.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V29tguLEei-6eSvavMBRQ" name="randomInt" specification="_-QtX8wuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V29twuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-V29uAuLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-V29uQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int)Math.floor((Math.random()*(1+max-min))+min);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V29uguLEei-6eSvavMBRQ" name="randomDouble" specification="_-Qt_AAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V29uwuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-V29vAuLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-V29vQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return (Math.random()*(max-min))+min;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V29vguLEei-6eSvavMBRQ" name="randomVel" specification="_-VP5swuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V29vwuLEei-6eSvavMBRQ" name="rect" type="_-US3cQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V29wAuLEei-6eSvavMBRQ" type="_-UOmAAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return (new Point (randomInt(-rect.width, rect.width), randomInt(-rect.height, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V29wQuLEei-6eSvavMBRQ" name="randomDim" specification="_-VP5tguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V29wguLEei-6eSvavMBRQ" name="maxDim" type="_-VNdcAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V29wwuLEei-6eSvavMBRQ" type="_-VNdcAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>int x =  randomInt(maxDim.width/2,maxDim.width);
		return new Dimension(x,x);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V3kwAuLEei-6eSvavMBRQ" name="randomBounds" specification="_-VQgwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V3kwQuLEei-6eSvavMBRQ" name="rect" type="_-US3cQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V3kwguLEei-6eSvavMBRQ" name="maxDim" type="_-VNdcAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V3kwwuLEei-6eSvavMBRQ" type="_-US3cQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return new Rectangle(randomLoc(rect), randomDim(maxDim));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V3kxAuLEei-6eSvavMBRQ" name="randomColor" specification="_-QumEAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V3kxQuLEei-6eSvavMBRQ" type="_-UN-8AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return new Color( randomInt(0,255),randomInt(0,255),randomInt(0,255));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V3kxguLEei-6eSvavMBRQ" name="randomChoice" specification="_-VQgxQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V3kxwuLEei-6eSvavMBRQ" name="x" type="_-U-M4QuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V3kyAuLEei-6eSvavMBRQ" name="y" type="_-U-M4QuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-V3kyQuLEei-6eSvavMBRQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-V3kyguLEei-6eSvavMBRQ" type="_-U-M4QuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return (Math.random() &lt; probX) ? x: y;

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-Qsw4QuLEei-6eSvavMBRQ" name="Randomizer" visibility="private">
          <eAnnotations xmi:id="_-Qsw4guLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-QtX8AuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_-QtX8guLEei-6eSvavMBRQ" type="_-Qsw4AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-QtX8wuLEei-6eSvavMBRQ" name="randomInt" method="_-V29tguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-QtX9AuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-QtX9QuLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-QtX9guLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_-Qt_AAuLEei-6eSvavMBRQ" name="randomDouble" method="_-V29uguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-Qt_AQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-Qt_AguLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-Qt_AwuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_-QumEAuLEei-6eSvavMBRQ" name="randomColor" method="_-V3kxAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VQgxAuLEei-6eSvavMBRQ" type="_-UN-8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VPSpQuLEei-6eSvavMBRQ" name="randomLoc" method="_-V29sAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VPSpguLEei-6eSvavMBRQ" name="rect" type="_-US3cQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VPSpwuLEei-6eSvavMBRQ" type="_-UOmAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VP5sAuLEei-6eSvavMBRQ" name="randomLoc" method="_-V29swuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VP5sQuLEei-6eSvavMBRQ" name="dim" type="_-VNdcAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VP5sguLEei-6eSvavMBRQ" type="_-UOmAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VP5swuLEei-6eSvavMBRQ" name="randomVel" method="_-V29vguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VP5tAuLEei-6eSvavMBRQ" name="rect" type="_-US3cQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VP5tQuLEei-6eSvavMBRQ" type="_-UOmAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VP5tguLEei-6eSvavMBRQ" name="randomDim" method="_-V29wQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VP5twuLEei-6eSvavMBRQ" name="maxDim" type="_-VNdcAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VP5uAuLEei-6eSvavMBRQ" type="_-VNdcAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VQgwAuLEei-6eSvavMBRQ" name="randomBounds" method="_-V3kwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VQgwQuLEei-6eSvavMBRQ" name="rect" type="_-US3cQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VQgwguLEei-6eSvavMBRQ" name="maxDim" type="_-VNdcAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VQgwwuLEei-6eSvavMBRQ" type="_-US3cQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-VQgxQuLEei-6eSvavMBRQ" name="randomChoice" method="_-V3kxguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-VQgxguLEei-6eSvavMBRQ" name="x" type="_-U-M4QuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VQgxwuLEei-6eSvavMBRQ" name="y" type="_-U-M4QuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_-VQgyAuLEei-6eSvavMBRQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-VRH0AuLEei-6eSvavMBRQ" type="_-U-M4QuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_-QwbQAuLEei-6eSvavMBRQ" name="SineMaker">
        <ownedComment xmi:id="_-V-5gAuLEei-6eSvavMBRQ">
          <body>A utility class that can be used to create smoothly varying sinusoidal
numerical data.
Note that this is not a singleton class nor does it have static methods as
its behavior depends on the minimum, maximum and delta values given to 
its constructor.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_-VhmgQuLEei-6eSvavMBRQ" name="_mid" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-ViNkQuLEei-6eSvavMBRQ" name="_ampl" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-ViNkwuLEei-6eSvavMBRQ" name="_delta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_-Vi0oQuLEei-6eSvavMBRQ" name="_theta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_-Vi0oguLEei-6eSvavMBRQ" value="-Math.PI/2.0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V3kywuLEei-6eSvavMBRQ" name="SineMaker" specification="_-QxCUAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V3kzAuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-V3kzQuLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-V3kzguLEei-6eSvavMBRQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-V3kzwuLEei-6eSvavMBRQ" type="_-QwbQAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>_mid = (max+min)/2.0;
		_ampl = (max-min)/2.0;
		_delta = delta;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V3k0AuLEei-6eSvavMBRQ" name="getDblVal" specification="_-QxCVwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V3k0QuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double result = _mid + _ampl*Math.sin(_theta);
		_theta += _delta; // shorthand for _theta = _theta + _delta
		return result;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-V3k0guLEei-6eSvavMBRQ" name="getIntVal" specification="_-QxpYQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_-V3k0wuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int) Math.round(getDblVal());
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_-QxCUAuLEei-6eSvavMBRQ" name="SineMaker" method="_-V3kywuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_-QxCVAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_-QxCVQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_-V-5gQuLEei-6eSvavMBRQ">
            <body>The constructor takes several values to control the object's behavior.
	 * @param min The minimum and initial value to produce.
	 * @param max The maximum value to produce.
	 * @param delta The amount in radians that the generating angle is incremented each time
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_-QxCUQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-QxCUguLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-QxCUwuLEei-6eSvavMBRQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_-QxCVguLEei-6eSvavMBRQ" type="_-QwbQAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_-QxCVwuLEei-6eSvavMBRQ" name="getDblVal" method="_-V3k0AuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V-5gguLEei-6eSvavMBRQ">
            <body>Returns a different value each time it is called.  The value varies smoothly in a 
	 * sinusoidal fashion, incrementing each time as per the above specified delta 
	 * angle increase.
	 * @return the next value as a double</body>
          </ownedComment>
          <ownedParameter xmi:id="_-QxpYAuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_-QxpYQuLEei-6eSvavMBRQ" name="getIntVal" method="_-V3k0guLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_-V-5gwuLEei-6eSvavMBRQ">
            <body>Same as getDblVal, but returns the result rounded to the nearest integer.
	 * Note that getDblVal and getIntVal are not independent as getIntVal merely calls
	 * getDblVal.
	 * @return the next value as an int</body>
          </ownedComment>
          <ownedParameter xmi:id="_-QxpYguLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_-WM78wuLEei-6eSvavMBRQ" name="" memberEnd="_-WM79AuLEei-6eSvavMBRQ _-Vg_cQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_-WM79AuLEei-6eSvavMBRQ" name="" type="_-Qsw4AuLEei-6eSvavMBRQ" association="_-WM78wuLEei-6eSvavMBRQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_-NnAoAuLEei-6eSvavMBRQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_-NnAoQuLEei-6eSvavMBRQ" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_-US3cwuLEei-6eSvavMBRQ" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-UvjYQuLEei-6eSvavMBRQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-UvjYwuLEei-6eSvavMBRQ" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-UwKcQuLEei-6eSvavMBRQ" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-UwKcwuLEei-6eSvavMBRQ" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_-UwxgwuLEei-6eSvavMBRQ" name="JComboBox"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_9zpogAuLEei-6eSvavMBRQ">
      <eAnnotations xmi:id="_9zpogQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_9zpogguLEei-6eSvavMBRQ" base_Package="_9w0-AAuLEei-6eSvavMBRQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Array xmi:id="_-Pa-gwuLEei-6eSvavMBRQ" base_Element="_-Pa-gQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-PcMowuLEei-6eSvavMBRQ" base_Element="_-PcMoAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-Pi6UwuLEei-6eSvavMBRQ" base_Element="_-Pi6UAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-QHiEAuLEei-6eSvavMBRQ" base_Element="_-Pq2IQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-QHiEQuLEei-6eSvavMBRQ" base_Element="_-Pq2IQuLEei-6eSvavMBRQ">
    <annotations xmi:id="_-QHiEguLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-QKlYAuLEei-6eSvavMBRQ" base_Element="_-QJ-UwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-QO20guLEei-6eSvavMBRQ" base_Element="_-QO20AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-QPd4QuLEei-6eSvavMBRQ" base_Element="_-QO20wuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-QYAwwuLEei-6eSvavMBRQ" base_Element="_-QYAwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-Qc5RQuLEei-6eSvavMBRQ" base_Element="_-Qc5QAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-QdgUAuLEei-6eSvavMBRQ" base_Element="_-Qc5QAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_-QdgUQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-QtX8QuLEei-6eSvavMBRQ" base_Element="_-Qsw4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_-Qy3gAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_-QyQcAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_-Q3wAAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_-Q3I8AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UGqMAuLEei-6eSvavMBRQ" base_Element="_-UGDIAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UHRQAuLEei-6eSvavMBRQ" base_Element="_-UGqMQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UH4UAuLEei-6eSvavMBRQ" base_Element="_-UHRQQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UK7oAuLEei-6eSvavMBRQ" base_Element="_-UIfYAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-UMJwguLEei-6eSvavMBRQ" base_Element="_-UMJwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UN-8QuLEei-6eSvavMBRQ" base_Element="_-UN-8AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UOmAQuLEei-6eSvavMBRQ" base_Element="_-UOmAAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UPNEAuLEei-6eSvavMBRQ" base_Element="_-UOmAguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UP0IAuLEei-6eSvavMBRQ" base_Element="_-UPNEQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-USQYwuLEei-6eSvavMBRQ" base_Element="_-USQYQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-USQZAuLEei-6eSvavMBRQ" base_Element="_-USQYQuLEei-6eSvavMBRQ">
    <annotations xmi:id="_-US3cAuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_-US3cguLEei-6eSvavMBRQ" base_Element="_-US3cQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UTegAuLEei-6eSvavMBRQ" base_Element="_-US3cwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-UVTswuLEei-6eSvavMBRQ" base_Element="_-UVTsAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-UVTtAuLEei-6eSvavMBRQ" base_Element="_-UVTsAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_-UVTtQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-UV6wwuLEei-6eSvavMBRQ" base_Element="_-UV6wAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-UV6xAuLEei-6eSvavMBRQ" base_Element="_-UV6wAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_-UV6xQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-UWh0wuLEei-6eSvavMBRQ" base_Element="_-UWh0AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-UWh1AuLEei-6eSvavMBRQ" base_Element="_-UWh0AuLEei-6eSvavMBRQ">
    <annotations xmi:id="_-UWh1QuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_-UXv8AuLEei-6eSvavMBRQ" base_Element="_-UXI4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UYXAAuLEei-6eSvavMBRQ" base_Element="_-UXv8QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-UY-FAuLEei-6eSvavMBRQ" base_Element="_-UY-EQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-UZlIAuLEei-6eSvavMBRQ" base_Element="_-UY-EQuLEei-6eSvavMBRQ">
    <annotations xmi:id="_-UZlIQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_-UaMMwuLEei-6eSvavMBRQ" base_Element="_-UaMMAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UcocAuLEei-6eSvavMBRQ" base_Element="_-UcBZAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UdPgAuLEei-6eSvavMBRQ" base_Element="_-UcocQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-Ud2kAuLEei-6eSvavMBRQ" base_Element="_-UdPgQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-Ud2kguLEei-6eSvavMBRQ" base_Element="_-Ud2kQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-UkkQwuLEei-6eSvavMBRQ" base_Element="_-UkkQAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-UlLUAuLEei-6eSvavMBRQ" base_Element="_-UkkQAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_-UlLUQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-UnnkwuLEei-6eSvavMBRQ" base_Element="_-UnnkAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-UoOoAuLEei-6eSvavMBRQ" base_Element="_-UnnkAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_-UoOoQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-Uo1sAuLEei-6eSvavMBRQ" base_Element="_-UoOowuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-UpcwwuLEei-6eSvavMBRQ" base_Element="_-UpcwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-UpcxAuLEei-6eSvavMBRQ" base_Element="_-UpcwAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_-UpcxQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-UqD1AuLEei-6eSvavMBRQ" base_Element="_-UqD0QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-UqD1QuLEei-6eSvavMBRQ" base_Element="_-UqD0QuLEei-6eSvavMBRQ">
    <annotations xmi:id="_-Uqq4AuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-UrR8AuLEei-6eSvavMBRQ" base_Element="_-Uqq4guLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-UrR8QuLEei-6eSvavMBRQ" base_Element="_-Uqq4guLEei-6eSvavMBRQ">
    <annotations xmi:id="_-UrR8guLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-Ur5BAuLEei-6eSvavMBRQ" base_Element="_-Ur5AQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-Ur5BQuLEei-6eSvavMBRQ" base_Element="_-Ur5AQuLEei-6eSvavMBRQ">
    <annotations xmi:id="_-Ur5BguLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-UtHIQuLEei-6eSvavMBRQ" base_Element="_-UsgEwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-UtHIguLEei-6eSvavMBRQ" base_Element="_-UsgEwuLEei-6eSvavMBRQ">
    <annotations xmi:id="_-UtHIwuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_-UvjYAuLEei-6eSvavMBRQ" base_Element="_-Uu8UAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UvjYguLEei-6eSvavMBRQ" base_Element="_-UvjYQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UwKcAuLEei-6eSvavMBRQ" base_Element="_-UvjYwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UwKcguLEei-6eSvavMBRQ" base_Element="_-UwKcQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UwKdAuLEei-6eSvavMBRQ" base_Element="_-UwKcwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UwxgAuLEei-6eSvavMBRQ" base_Element="_-UwKdQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UwxgguLEei-6eSvavMBRQ" base_Element="_-UwxgQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UxYkAuLEei-6eSvavMBRQ" base_Element="_-UwxgwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-UxYkguLEei-6eSvavMBRQ" base_Element="_-UxYkQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-Ux_oAuLEei-6eSvavMBRQ" base_Element="_-UxYkwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_-UzNwAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_-UymsQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-U7JkwuLEei-6eSvavMBRQ" base_Element="_-U7JkAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-U-z8AuLEei-6eSvavMBRQ" base_Element="_-U-M4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VApIwuLEei-6eSvavMBRQ" base_Element="_-VApIAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-VBQMAuLEei-6eSvavMBRQ" base_Element="_-VApIAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_-VBQMQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VFhowuLEei-6eSvavMBRQ" base_Element="_-VE6lguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-VFhpAuLEei-6eSvavMBRQ" base_Element="_-VE6lguLEei-6eSvavMBRQ">
    <annotations xmi:id="_-VFhpQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VHW1AuLEei-6eSvavMBRQ" base_Element="_-VHW0AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-VH94AuLEei-6eSvavMBRQ" base_Element="_-VHW0AuLEei-6eSvavMBRQ">
    <annotations xmi:id="_-VH94QuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VLBMwuLEei-6eSvavMBRQ" base_Element="_-VLBMAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_-VLBNAuLEei-6eSvavMBRQ" base_Element="_-VLBMAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_-VLBNQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_-VNdcQuLEei-6eSvavMBRQ" base_Element="_-VNdcAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-VULIwuLEei-6eSvavMBRQ" base_Element="_-VULIguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VXOcQuLEei-6eSvavMBRQ" base_Element="_-VXOcAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_-VX1gAuLEei-6eSvavMBRQ" genericsValue="?" base_Element="_-VXOcguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VX1gQuLEei-6eSvavMBRQ" base_Element="_-VXOcguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VX1gwuLEei-6eSvavMBRQ" base_Element="_-VX1gguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VYckwuLEei-6eSvavMBRQ" base_Element="_-VYckguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VZDoQuLEei-6eSvavMBRQ" base_Element="_-VZDoAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VZDpQuLEei-6eSvavMBRQ" base_Element="_-VZDowuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VZqsguLEei-6eSvavMBRQ" base_Element="_-VZqsAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VaRwAuLEei-6eSvavMBRQ" base_Element="_-VZqswuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VaRwwuLEei-6eSvavMBRQ" base_Element="_-VaRwQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VaRxguLEei-6eSvavMBRQ" base_Element="_-VaRxAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VcG8AuLEei-6eSvavMBRQ" base_Element="_-Vbf4AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VcG8wuLEei-6eSvavMBRQ" base_Element="_-VcG8QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VcuAQuLEei-6eSvavMBRQ" base_Element="_-VcG9AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VdVEAuLEei-6eSvavMBRQ" base_Element="_-VcuBQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VdVEguLEei-6eSvavMBRQ" base_Element="_-VdVEQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Array xmi:id="_-Vd8IguLEei-6eSvavMBRQ" base_Element="_-Vd8IAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-Vd8IwuLEei-6eSvavMBRQ" base_Element="_-Vd8IAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_-VejMQuLEei-6eSvavMBRQ" base_Property="_-VejMAuLEei-6eSvavMBRQ" siblings="_-V9EWQuLEei-6eSvavMBRQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VejMguLEei-6eSvavMBRQ" base_Element="_-VejMAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VfKQQuLEei-6eSvavMBRQ" base_Element="_-VfKQAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VfxUguLEei-6eSvavMBRQ" base_Element="_-VfxUAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VfxVQuLEei-6eSvavMBRQ" base_Element="_-VfxUwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-Vg_cAuLEei-6eSvavMBRQ" base_Element="_-VgYYAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VhmgAuLEei-6eSvavMBRQ" base_Element="_-Vg_cQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-ViNkAuLEei-6eSvavMBRQ" base_Element="_-VhmgQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-ViNkguLEei-6eSvavMBRQ" base_Element="_-ViNkQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-Vi0oAuLEei-6eSvavMBRQ" base_Element="_-ViNkwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VjbsAuLEei-6eSvavMBRQ" base_Element="_-Vi0oQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VkCwQuLEei-6eSvavMBRQ" base_Element="_-VkCwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-Vkp0QuLEei-6eSvavMBRQ" base_Element="_-VkCwguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-Vkp1AuLEei-6eSvavMBRQ" base_Element="_-Vkp0guLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VlQ4guLEei-6eSvavMBRQ" base_Element="_-VlQ4AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_-Vl38AuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_-VlQ4wuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-Vl38QuLEei-6eSvavMBRQ" base_Element="_-VlQ4wuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-Vl39AuLEei-6eSvavMBRQ" base_Element="_-Vl38guLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VmfAguLEei-6eSvavMBRQ" base_Element="_-VmfAAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VmfBQuLEei-6eSvavMBRQ" base_Element="_-VmfAwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VntIAuLEei-6eSvavMBRQ" base_Element="_-VnGEAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VoUMAuLEei-6eSvavMBRQ" base_Element="_-VntIQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VoUMwuLEei-6eSvavMBRQ" base_Element="_-VoUMQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_-Vo7QQuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_-Vo7QAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VpiUAuLEei-6eSvavMBRQ" base_Element="_-Vo7QAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_-VpiUguLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_-VpiUQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VqJYQuLEei-6eSvavMBRQ" base_Element="_-VpiUQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VqJZAuLEei-6eSvavMBRQ" base_Element="_-VqJYguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VqwcQuLEei-6eSvavMBRQ" base_Element="_-VqJZQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VqwdAuLEei-6eSvavMBRQ" base_Element="_-VqwcguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VrXgguLEei-6eSvavMBRQ" base_Element="_-VrXgAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VrXhQuLEei-6eSvavMBRQ" base_Element="_-VrXgwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-Vr-kguLEei-6eSvavMBRQ" base_Element="_-Vr-kAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_-VsloAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_-Vr-kwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-VsloguLEei-6eSvavMBRQ" base_Element="_-Vr-kwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_-V9rYAuLEei-6eSvavMBRQ" base_Property="_-V9EWQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_-V9rYQuLEei-6eSvavMBRQ" base_Element="_-V9EWQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WGOQAuLEei-6eSvavMBRQ" base_Element="_-WFnMAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WG1UAuLEei-6eSvavMBRQ" base_Element="_-WGOQQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WG1UwuLEei-6eSvavMBRQ" base_Element="_-WG1UQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WHcYAuLEei-6eSvavMBRQ" base_Element="_-WG1VAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WHcYwuLEei-6eSvavMBRQ" base_Element="_-WHcYQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WIDcguLEei-6eSvavMBRQ" base_Element="_-WIDcAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WIqgAuLEei-6eSvavMBRQ" base_Element="_-WIDcwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WIqgwuLEei-6eSvavMBRQ" base_Element="_-WIqgQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WJRkguLEei-6eSvavMBRQ" base_Element="_-WJRkAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WJRlQuLEei-6eSvavMBRQ" base_Element="_-WJRkwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WJ4oAuLEei-6eSvavMBRQ" base_Element="_-WJRlguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WJ4owuLEei-6eSvavMBRQ" base_Element="_-WJ4oQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WKfsAuLEei-6eSvavMBRQ" base_Element="_-WJ4pAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WKfswuLEei-6eSvavMBRQ" base_Element="_-WKfsQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WLGwAuLEei-6eSvavMBRQ" base_Element="_-WKftAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WLGwwuLEei-6eSvavMBRQ" base_Element="_-WLGwQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WLGxguLEei-6eSvavMBRQ" base_Element="_-WLGxAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WLt0guLEei-6eSvavMBRQ" base_Element="_-WLt0AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WLt1QuLEei-6eSvavMBRQ" base_Element="_-WLt0wuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WMU4AuLEei-6eSvavMBRQ" base_Element="_-WLt1guLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WMU4wuLEei-6eSvavMBRQ" base_Element="_-WMU4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WM78guLEei-6eSvavMBRQ" base_Element="_-WM78AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WNjAAuLEei-6eSvavMBRQ" base_Element="_-WM78wuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WOKEAuLEei-6eSvavMBRQ" base_Element="_-WNjAQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WOKEwuLEei-6eSvavMBRQ" base_Element="_-WOKEQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WOxIAuLEei-6eSvavMBRQ" base_Element="_-WOKFAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WOxIwuLEei-6eSvavMBRQ" base_Element="_-WOxIQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WPYMAuLEei-6eSvavMBRQ" base_Element="_-WOxJAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WPYMwuLEei-6eSvavMBRQ" base_Element="_-WPYMQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WP_QAuLEei-6eSvavMBRQ" base_Element="_-WPYNAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WQmUAuLEei-6eSvavMBRQ" base_Element="_-WP_QQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WRNYAuLEei-6eSvavMBRQ" base_Element="_-WQmUQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WR0cAuLEei-6eSvavMBRQ" base_Element="_-WRNYQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WR0cwuLEei-6eSvavMBRQ" base_Element="_-WR0cQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WSbgAuLEei-6eSvavMBRQ" base_Element="_-WR0dAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WTCkAuLEei-6eSvavMBRQ" base_Element="_-WSbgQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WTCkwuLEei-6eSvavMBRQ" base_Element="_-WTCkQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WTpoAuLEei-6eSvavMBRQ" base_Element="_-WTClAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WTpowuLEei-6eSvavMBRQ" base_Element="_-WTpoQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WUQsAuLEei-6eSvavMBRQ" base_Element="_-WTppAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WUQswuLEei-6eSvavMBRQ" base_Element="_-WUQsQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WU3wAuLEei-6eSvavMBRQ" base_Element="_-WUQtAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WU3wwuLEei-6eSvavMBRQ" base_Element="_-WU3wQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_-WVe0AuLEei-6eSvavMBRQ" base_Element="_-WU3xAuLEei-6eSvavMBRQ"/>
</xmi:XMI>
