<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="__cU7sAt5EeiiCrav3vcpBQ" name="PaintStrategies">
    <eAnnotations xmi:id="__qPb4At5EeiiCrav3vcpBQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="__qPb4Qt5EeiiCrav3vcpBQ" source="codegen">
        <details xmi:id="__qPb4gt5EeiiCrav3vcpBQ" key="codegenDirectory" value="/HW04/src"/>
        <details xmi:id="_AZDpsAt6EeiiCrav3vcpBQ" key="AssociatedSourceCode" value="/HW04/src/controller/BallWorldController.java;133705207/1;/HW04/src/model/ADecoratorPaintStrategy.java;3522512554/1;/HW04/src/model/APaintStrategy.java;1740869287/1;/HW04/src/model/Ball.java;544139014/1;/HW04/src/model/BallPaintStrategy.java;538568874/1;/HW04/src/model/BallWorldModel.java;3438198808/1;/HW04/src/model/BreathingStrategy.java;569949667/1;/HW04/src/model/ColorStrategy.java;783269627/1;/HW04/src/model/CompositePaintStrategy.java;2517148635/1;/HW04/src/model/CrashStrategy.java;4279759508/1;/HW04/src/model/EllipsePaintStrategy.java;292774861/1;/HW04/src/model/EllipseShapeFactory.java;1636135608/1;/HW04/src/model/FastStrategy.java;3009224450/1;/HW04/src/model/IBallCmd.java;2100560540/1;/HW04/src/model/IModel2ViewAdapter.java;715642539/1;/HW04/src/model/IPaintStrategy.java;556726924/1;/HW04/src/model/IShapeFactory.java;810833796/1;/HW04/src/model/IStrategyFac.java;3581042476/1;/HW04/src/model/IUpdateStrategy.java;1651050839/1;/HW04/src/model/ImagePaintStrategy.java;2009657845/1;/HW04/src/model/MultiPaintStrategy.java;843652504/1;/HW04/src/model/MultiStrategy.java;1636671415/1;/HW04/src/model/PolygonFactory.java;352231935/1;/HW04/src/model/RectanglePaintStrategy.java;952260073/1;/HW04/src/model/RectangleShapeFactory.java;3860937959/1;/HW04/src/model/ShapePaintStrategy.java;851889235/1;/HW04/src/model/SpawnStrategy.java;3065061180/1;/HW04/src/model/SquarePaintStrategy.java;3526266484/1;/HW04/src/model/StraightStrategy.java;3914615527/1;/HW04/src/model/SwellStrategy.java;1352457759/1;/HW04/src/model/SwitcherStrategy.java;2480375116/1;/HW04/src/model/TeleportStrategy.java;2565727986/1;/HW04/src/model/UprightCompositePaintStrategy.java;585067317/1;/HW04/src/model/UprightImageStrategy.java;3761235521/1;/HW04/src/model/UprightShapePaintStrategy.java;35762995/1;/HW04/src/model/WiggleStrategy.java;4246409471/1;/HW04/src/util/Dispatcher.java;77051068/1;/HW04/src/util/IRandomizer.java;4224991458/1;/HW04/src/util/Randomizer.java;1541548940/1;/HW04/src/util/SineMaker.java;1378225368/1;/HW04/src/view/BallWorldView.java;1506153628/1;/HW04/src/view/IView2ModelAdapter.java;637323524/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_AEcEkAt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_AEcEkQt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_AEcEkgt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_AEcEkwt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_AEcElAt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_AEcElQt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_AEcElgt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_AEcroAt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_AEcroQt6EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_AEcrogt6EeiiCrav3vcpBQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_AEdSsAt6EeiiCrav3vcpBQ" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_AEgWAAt6EeiiCrav3vcpBQ" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_AMWqcAt6EeiiCrav3vcpBQ" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_AMrakQt6EeiiCrav3vcpBQ" name="Ellipse2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_AFxhUAt6EeiiCrav3vcpBQ" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_ANSekgt6EeiiCrav3vcpBQ" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_ANTFoQt6EeiiCrav3vcpBQ" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_AMU1QAt6EeiiCrav3vcpBQ" name="Container"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AMVcUAt6EeiiCrav3vcpBQ" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AMVcUgt6EeiiCrav3vcpBQ" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AMa74At6EeiiCrav3vcpBQ" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AMbi8Qt6EeiiCrav3vcpBQ" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AMiQogt6EeiiCrav3vcpBQ" name="Rectangle"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AMqzgQt6EeiiCrav3vcpBQ" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AMyIQAt6EeiiCrav3vcpBQ" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AMyvUQt6EeiiCrav3vcpBQ" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AM0kgQt6EeiiCrav3vcpBQ" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AM2ZsAt6EeiiCrav3vcpBQ" name="Toolkit"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AM_joAt6EeiiCrav3vcpBQ" name="Polygon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ANQCUAt6EeiiCrav3vcpBQ" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ANUTwQt6EeiiCrav3vcpBQ" name="FlowLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ANU60Qt6EeiiCrav3vcpBQ" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AONEkwt6EeiiCrav3vcpBQ" name="Dimension"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_AEo44At6EeiiCrav3vcpBQ" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_AMcKAQt6EeiiCrav3vcpBQ" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AMcxEQt6EeiiCrav3vcpBQ" name="Observer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ANujcAt6EeiiCrav3vcpBQ" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_ANujcQt6EeiiCrav3vcpBQ" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_AEdSsQt6EeiiCrav3vcpBQ" name="model">
      <packagedElement xmi:type="uml:Class" xmi:id="_AGTFwAt6EeiiCrav3vcpBQ" name="ADecoratorPaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_APKt5At6EeiiCrav3vcpBQ">
          <body>This is the ADecoratePaintStrategy class that is abstract. It has the basic functionality&#xD;
of a paint strategy, and the methods simply delegate to the decoree.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_AMZGsAt6EeiiCrav3vcpBQ" general="_AGViAAt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AOeKUgt6EeiiCrav3vcpBQ" name="decoree" visibility="private" type="_AGViAAt6EeiiCrav3vcpBQ" association="_APbMkQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO9Sgwt6EeiiCrav3vcpBQ" name="ADecoratorPaintStrategy" specification="_AMXRgQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO9ShAt6EeiiCrav3vcpBQ" name="decoree" type="_AGViAAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AO9ShQt6EeiiCrav3vcpBQ" type="_AGTFwAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(new AffineTransform());&#xD;
		this.decoree = decoree;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO9Shgt6EeiiCrav3vcpBQ" name="init" specification="_AMX4kwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO9Shwt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>decoree.init(ball);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO9SiAt6EeiiCrav3vcpBQ" name="paintXfrm" specification="_ANjkUAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO9SiQt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AO9Sigt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AO9Siwt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>decoree.paintXfrm(g, ball, at);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO95kAt6EeiiCrav3vcpBQ" name="paint" specification="_ANlZgQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO95kQt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AO95kgt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>decoree.paint(g, ball);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AMXRgQt6EeiiCrav3vcpBQ" name="ADecoratorPaintStrategy" method="_AO9Sgwt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AMX4kAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AMX4kQt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_APLU8At6EeiiCrav3vcpBQ">
            <body>This is the constructor for ADecoratorPaintStrategy, that calls the&#xD;
	 * super constructor with an affine transform, and sets the decoree.&#xD;
	 * @param decoree An APaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_AMXRggt6EeiiCrav3vcpBQ" name="decoree" type="_AGViAAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AMX4kgt6EeiiCrav3vcpBQ" type="_AGTFwAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AMX4kwt6EeiiCrav3vcpBQ" name="init" method="_AO9Shgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AMX4lAt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ANjkUAt6EeiiCrav3vcpBQ" name="paintXfrm" method="_AO9SiAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_ANjkUQt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANkLYAt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANkLYQt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ANlZgQt6EeiiCrav3vcpBQ" name="paint" method="_AO95kAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_ANmAkAt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANmAkQt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AGViAAt6EeiiCrav3vcpBQ" name="APaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_APLU8Qt6EeiiCrav3vcpBQ">
          <body>This is an abstract class that defines the top level affine transform based
paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_AOexYAt6EeiiCrav3vcpBQ" name="at" visibility="package" type="_AMWqcAt6EeiiCrav3vcpBQ" association="_APbMlAt6EeiiCrav3vcpBQ"/>
        <interfaceRealization xmi:id="_AMZGsQt6EeiiCrav3vcpBQ" client="_AGViAAt6EeiiCrav3vcpBQ" supplier="_AHOS0At6EeiiCrav3vcpBQ" contract="_AHOS0At6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO-goAt6EeiiCrav3vcpBQ" name="APaintStrategy" specification="_ANmnoAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO-goQt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AO-gogt6EeiiCrav3vcpBQ" type="_AGViAAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.at = at;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO-gowt6EeiiCrav3vcpBQ" name="paint" specification="_ANnOsAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO-gpAt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AO-gpQt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>double scale = ball.getRad();
		at.setToTranslation(ball.getLoc().x, ball.getLoc().y);
		at.scale(scale, scale);
		at.rotate(ball.getVel().x, ball.getVel().y);
		g.setColor(ball.getCol());    
		paintCfg(g, ball);
		paintXfrm(g, ball, at);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO-gpgt6EeiiCrav3vcpBQ" name="getAT" specification="_AGWwIAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO-gpwt6EeiiCrav3vcpBQ" type="_AMWqcAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return this.at;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AGViAQt6EeiiCrav3vcpBQ" name="APaintStrategy">
          <eAnnotations xmi:id="_AGWJEAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AGWJEQt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AGWJEwt6EeiiCrav3vcpBQ" type="_AGViAAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AGWwIAt6EeiiCrav3vcpBQ" name="getAT" method="_AO-gpgt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APLU9At6EeiiCrav3vcpBQ">
            <body>This is a getter that returns the Affine Transform
	 * @return An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_ANpD4At6EeiiCrav3vcpBQ" type="_AMWqcAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AMZtwAt6EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_AMZtwQt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ANmnoAt6EeiiCrav3vcpBQ" name="APaintStrategy" method="_AO-goAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_ANmnogt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_ANmnowt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_APLU8gt6EeiiCrav3vcpBQ">
            <body>This is the constructor that takes in Affine Transform.
	 * @param at</body>
          </ownedComment>
          <ownedParameter xmi:id="_ANmnoQt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANmnpAt6EeiiCrav3vcpBQ" type="_AGViAAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ANnOsAt6EeiiCrav3vcpBQ" name="paint" method="_AO-gowt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APLU8wt6EeiiCrav3vcpBQ">
            <body>This function paints the ball on the passed in Graphics object.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ANnOsQt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANnOsgt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ANn1wAt6EeiiCrav3vcpBQ" name="paintCfg" visibility="protected">
          <ownedParameter xmi:id="_ANn1wQt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANn1wgt6EeiiCrav3vcpBQ" name="host" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ANpq8At6EeiiCrav3vcpBQ" name="paintXfrm" isAbstract="true">
          <ownedComment xmi:id="_APLU9Qt6EeiiCrav3vcpBQ">
            <body>This function is a secondary paint operation that is the last step of the above
	 * paint method, which does not calculate its own affine transform, but instead,
	 * uses a supplied affine transform.
	 * @param g A graphics object
	 * @param host The host ball
	 * @param at An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_ANpq8Qt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANpq8gt6EeiiCrav3vcpBQ" name="host" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANpq8wt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AGZMYAt6EeiiCrav3vcpBQ" name="Ball">
        <ownedComment xmi:id="_APLU9gt6EeiiCrav3vcpBQ">
          <body>This is the Ball class, which is what is drawn on the screen, and implements
Observer to use dispatching.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_AOfYcQt6EeiiCrav3vcpBQ" name="col" type="_AMa74At6EeiiCrav3vcpBQ" association="_APLU9wt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AOgmkAt6EeiiCrav3vcpBQ" name="loc" type="_AMbi8Qt6EeiiCrav3vcpBQ" association="_APLU-Qt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AOgmkQt6EeiiCrav3vcpBQ" name="rad" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOgmkwt6EeiiCrav3vcpBQ" name="vel" type="_AMbi8Qt6EeiiCrav3vcpBQ" association="_APL8AAt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AOgmlAt6EeiiCrav3vcpBQ" name="con" type="_AMU1QAt6EeiiCrav3vcpBQ" association="_APL8Agt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AOgmlQt6EeiiCrav3vcpBQ" name="strat" visibility="private" type="_AHSkQAt6EeiiCrav3vcpBQ" association="_APbzoQt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AOgmlwt6EeiiCrav3vcpBQ" name="paintStrat" type="_AHOS0At6EeiiCrav3vcpBQ" isReadOnly="true" association="_APbzpAt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AOgmmAt6EeiiCrav3vcpBQ" name="itr" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOhNoAt6EeiiCrav3vcpBQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOhNogt6EeiiCrav3vcpBQ" name="radDelta">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_ANq5EAt6EeiiCrav3vcpBQ" client="_AGZMYAt6EeiiCrav3vcpBQ" supplier="_AMcxEQt6EeiiCrav3vcpBQ" contract="_AMcxEQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO-gqAt6EeiiCrav3vcpBQ" name="Ball" specification="_ANtVUAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO-gqQt6EeiiCrav3vcpBQ" name="col" type="_AMa74At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AO-gqgt6EeiiCrav3vcpBQ" name="loc" type="_AMbi8Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AO-gqwt6EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AO-grAt6EeiiCrav3vcpBQ" name="vel" type="_AMbi8Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AO-grQt6EeiiCrav3vcpBQ" name="con" type="_AMU1QAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AO-grgt6EeiiCrav3vcpBQ" name="updateStrat" type="_AHSkQAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AO-grwt6EeiiCrav3vcpBQ" name="paintStrat" type="_AHOS0At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AO-gsAt6EeiiCrav3vcpBQ" type="_AGZMYAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>setCol(col);
		setLoc(loc);
		setRad(rad);
		setVel(vel);
		setCon(con);
		setStrat(updateStrat);
		setRadDelta(5);
		setPaintStrat(paintStrat);
		paintStrat.init(this);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO_HsAt6EeiiCrav3vcpBQ" name="getRad" specification="_AGaagAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO_HsQt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO_Hsgt6EeiiCrav3vcpBQ" name="setRad" specification="_AGbooAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO_Hswt6EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.rad = rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO_HtAt6EeiiCrav3vcpBQ" name="move" specification="_AGcPsAt6EeiiCrav3vcpBQ">
          <language>java</language>
          <body>setLoc(new Point(getLoc().x + getVel().x, getLoc().y + getVel().y));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO_HtQt6EeiiCrav3vcpBQ" name="update" specification="_ANvKgAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO_Htgt6EeiiCrav3vcpBQ" name="o" type="_AMcKAQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AO_Htwt6EeiiCrav3vcpBQ" name="cmd" type="_ANujcQt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>((IBallCmd) cmd).apply(this, (Dispatcher) o);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO_HuAt6EeiiCrav3vcpBQ" name="paint" specification="_ANvKgwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO_HuQt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>getPaintStrat().paint(g, this);
//		g.setColor(this.getCol());
//		g.fillOval(this.getLoc().x - getRad(), this.getLoc().y - getRad(), getRad() * 2, getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO_Hugt6EeiiCrav3vcpBQ" name="getStrat" specification="_AGcPsQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO_Huwt6EeiiCrav3vcpBQ" type="_AHSkQAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO_HvAt6EeiiCrav3vcpBQ" name="setStrat" specification="_AMemQAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO_HvQt6EeiiCrav3vcpBQ" name="strat" type="_AHSkQAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>this.strat = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO_uwAt6EeiiCrav3vcpBQ" name="getItr" specification="_AGc2wAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO_uwQt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO_uwgt6EeiiCrav3vcpBQ" name="setItr" specification="_AGc2wgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO_uwwt6EeiiCrav3vcpBQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.itr = itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO_uxAt6EeiiCrav3vcpBQ" name="bounce" specification="_AGc2xAt6EeiiCrav3vcpBQ">
          <language>java</language>
          <body>// Boundaries of the window
		int rightWall = getCon().getWidth();
		int bottomWall = getCon().getHeight();
		int leftWall = 0;
		int topWall = 0;
		
		int leftX = getLoc().x - getRad();
		int rightX = getLoc().x + getRad();
		
		int bottomY = getLoc().y + getRad();
		int topY = getLoc().y - getRad();
		
		int maxX = rightWall - getRad();
		int minX = getRad();
		
		int maxY = bottomWall - getRad();
		int minY = getRad();

		// Collision detected with left or right wall.
		if (leftX == leftWall || rightX == rightWall) {
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond right wall.
		else if (rightX > rightWall) {
			int diff = getLoc().x - maxX;
			setLoc(new Point(maxX - diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond left wall.
		else if (leftX &lt; leftWall) {
			int diff = minX - getLoc().x;
			setLoc(new Point(minX + diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Collision detected with top or bottom wall.
		else if (topY == topWall || bottomY == bottomWall) {
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond bottom wall.
		else if (bottomY > bottomWall) {
			int diff = getLoc().y - maxY;
			setLoc(new Point(getLoc().x, maxY - diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond top wall.
		else if (topY &lt; topWall) {
			int diff = minY - getLoc().y;
			setLoc(new Point(getLoc().x, minY + diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO_uxQt6EeiiCrav3vcpBQ" name="setPaintStrat" specification="_AMemQgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO_uxgt6EeiiCrav3vcpBQ" name="paintStrat" type="_AHOS0At6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>this.paintStrat = paintStrat;
		getPaintStrat().init(this);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AGaagAt6EeiiCrav3vcpBQ" name="getRad" method="_AO_HsAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APL8BQt6EeiiCrav3vcpBQ">
            <body>This returns the radius of the ball.
	 * @return the rad</body>
          </ownedComment>
          <ownedParameter xmi:id="_AGbBkAt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AGbooAt6EeiiCrav3vcpBQ" name="setRad" method="_AO_Hsgt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APL8Bgt6EeiiCrav3vcpBQ">
            <body>This sets the radius of the ball.
	 * @param rad the rad to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_AGbooQt6EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AGcPsAt6EeiiCrav3vcpBQ" name="move" method="_AO_HtAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APL8Bwt6EeiiCrav3vcpBQ">
            <body>This function tells the ball to update its current location by the respective velocity
	 * component.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_AGcPsQt6EeiiCrav3vcpBQ" name="getStrat" method="_AO_Hugt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APL8Cgt6EeiiCrav3vcpBQ">
            <body>This function returns the ball's movement strategy.
	 * @return the strat</body>
          </ownedComment>
          <ownedParameter xmi:id="_AMd_MAt6EeiiCrav3vcpBQ" type="_AHSkQAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AGc2wAt6EeiiCrav3vcpBQ" name="getItr" method="_AO_uwAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APL8DAt6EeiiCrav3vcpBQ">
            <body>This function returns the current iteration of the ball.
	 * @return the itr</body>
          </ownedComment>
          <ownedParameter xmi:id="_AGc2wQt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AGc2wgt6EeiiCrav3vcpBQ" name="setItr" method="_AO_uwgt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APL8DQt6EeiiCrav3vcpBQ">
            <body>This function sets the current iteration of the ball.
	 * @param itr the itr to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_AGc2wwt6EeiiCrav3vcpBQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AGc2xAt6EeiiCrav3vcpBQ" name="bounce" method="_AO_uxAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APMjEAt6EeiiCrav3vcpBQ">
            <body>This function checks to see if the ball has come into contact with one of the boundaries of the 
	 *  panel. If it has, this function reverses the velocity of the ball, simulating a rebound off
	 *  of the wall. If, due to the delay of the GUI thread, the ball has passed one of the panel
	 *  boundaries, this function moves the ball to the location it would be at if it had properly 
	 *  bounced off of the wall, and sets the velocity to its appropriate value.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_AMemQAt6EeiiCrav3vcpBQ" name="setStrat" method="_AO_HvAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APL8Cwt6EeiiCrav3vcpBQ">
            <body>This function sets the ball's movement strategy.
	 * @param strat the strat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_AMemQQt6EeiiCrav3vcpBQ" name="strat" type="_AHSkQAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AMemQgt6EeiiCrav3vcpBQ" name="setPaintStrat" method="_AO_uxQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APMjEQt6EeiiCrav3vcpBQ">
            <body>This function sets the paint strategy.
	 * @param paintStrat the paintStrat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_AMemQwt6EeiiCrav3vcpBQ" name="paintStrat" type="_AHOS0At6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ANtVUAt6EeiiCrav3vcpBQ" name="Ball" method="_AO-gqAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_ANt8YAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_ANt8YQt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_APL8BAt6EeiiCrav3vcpBQ">
            <body>This is the Ball constructor, which sets its initial values.
	 * @param col The color of the ball
	 * @param loc The initial location of the ball.
	 * @param rad The radius of the ball.
	 * @param vel The initial velocity of the ball.
	 * @param con The container (component) on which the ball is drawn.
	 * @param updateStrat The IUpdateStrategy that decides how to update the ball.
	 * @param paintStrat The IPaintStrategy that decides how to paint the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ANtVUQt6EeiiCrav3vcpBQ" name="col" type="_AMa74At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANtVUgt6EeiiCrav3vcpBQ" name="loc" type="_AMbi8Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANtVUwt6EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ANtVVAt6EeiiCrav3vcpBQ" name="vel" type="_AMbi8Qt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANtVVQt6EeiiCrav3vcpBQ" name="con" type="_AMU1QAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANtVVgt6EeiiCrav3vcpBQ" name="updateStrat" type="_AHSkQAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANtVVwt6EeiiCrav3vcpBQ" name="paintStrat" type="_AHOS0At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANt8Ygt6EeiiCrav3vcpBQ" type="_AGZMYAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ANvKgAt6EeiiCrav3vcpBQ" name="update" method="_AO_HtQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APL8CAt6EeiiCrav3vcpBQ">
            <body>This function is required when implementing Observer, that tells the ball what to
	 * do when it is notified by the dispatcher.
	 * @param o An observable
	 * @param g An Object, which should be an IBallCmd</body>
          </ownedComment>
          <ownedParameter xmi:id="_ANvKgQt6EeiiCrav3vcpBQ" name="o" type="_AMcKAQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANvKggt6EeiiCrav3vcpBQ" name="cmd" type="_ANujcQt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ANvKgwt6EeiiCrav3vcpBQ" name="paint" method="_AO_HuAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APL8CQt6EeiiCrav3vcpBQ">
            <body>This function determines how to paint the ball, and it delegates
	 * to the paint strategy's paint.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ANvxkAt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AGjkcAt6EeiiCrav3vcpBQ" name="BallPaintStrategy">
        <ownedComment xmi:id="_APMjEgt6EeiiCrav3vcpBQ">
          <body>This is the ball paint strategy, which implements a paint strategy for a ball.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_AMhCgAt6EeiiCrav3vcpBQ" client="_AGjkcAt6EeiiCrav3vcpBQ" supplier="_AHOS0At6EeiiCrav3vcpBQ" contract="_AHOS0At6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO_uxwt6EeiiCrav3vcpBQ" name="paint" specification="_ANy04At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO_uyAt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AO_uyQt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>g.setColor(ball.getCol());
		g.fillOval(ball.getLoc().x - ball.getRad(), ball.getLoc().y - ball.getRad(),
				ball.getRad() * 2, ball.getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AGkLgAt6EeiiCrav3vcpBQ" name="BallPaintStrategy">
          <eAnnotations xmi:id="_AGkLgQt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AGkLggt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AGkykAt6EeiiCrav3vcpBQ" type="_AGjkcAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AMhpkAt6EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_AMhpkQt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ANy04At6EeiiCrav3vcpBQ" name="paint" method="_AO_uxwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_ANy04Qt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANy04gt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AGlZoAt6EeiiCrav3vcpBQ" name="BallWorldModel">
        <ownedComment xmi:id="_APMjEwt6EeiiCrav3vcpBQ">
          <body>This is the BallWorldModel class, which makes balls, clears balls, and updates the balls.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_AOh0sAt6EeiiCrav3vcpBQ" name="adapter" visibility="private" type="_AHNEsQt6EeiiCrav3vcpBQ" association="_APdBwQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOibwAt6EeiiCrav3vcpBQ" value="IModel2ViewAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOibwgt6EeiiCrav3vcpBQ" name="timeSlice" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOibwwt6EeiiCrav3vcpBQ" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOibxQt6EeiiCrav3vcpBQ" name="dispatcher" visibility="private" type="_AINxUAt6EeiiCrav3vcpBQ" association="_APdBxAt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOjC0At6EeiiCrav3vcpBQ" value="new Dispatcher()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOjC0gt6EeiiCrav3vcpBQ" name="timer" visibility="private" type="_AMi3sQt6EeiiCrav3vcpBQ" association="_APdo0Qt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOjC0wt6EeiiCrav3vcpBQ" value="new Timer(timeSlice, (e) -> adapter.update())"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO_uygt6EeiiCrav3vcpBQ" name="BallWorldModel" specification="_AMjewAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO_uywt6EeiiCrav3vcpBQ" name="adapter" type="_AHNEsQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AO_uzAt6EeiiCrav3vcpBQ" type="_AGlZoAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.adapter = adapter;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APAV0At6EeiiCrav3vcpBQ" name="clearBalls" specification="_AGmAsAt6EeiiCrav3vcpBQ">
          <language>java</language>
          <body>dispatcher.deleteObservers();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APAV0Qt6EeiiCrav3vcpBQ" name="start" specification="_AGmnwAt6EeiiCrav3vcpBQ">
          <language>java</language>
          <body>timer.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APAV0gt6EeiiCrav3vcpBQ" name="update" specification="_AN0DAAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APAV0wt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll((IBallCmd) (ball, disp)->{
         // Whatever you want to do with the context Ball!
			ball.setItr(ball.getItr() + 1);
			ball.getStrat().updateState(ball, disp);
			ball.move();
			ball.bounce();
			ball.paint((Graphics) g);
		});
//        dispatcher.notifyAll(g);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APAV1At6EeiiCrav3vcpBQ" name="loadStrategy" specification="_AGmnwQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APAV1Qt6EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APAV1gt6EeiiCrav3vcpBQ" type="_AHSkQAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>Object[] args =  new Object[]{};
		java.lang.reflect.Constructor&lt;?> cons[];
		try {
			cons = Class.forName(strat).getConstructors();
			return (IUpdateStrategy) cons[0].newInstance(args);
		} catch (Exception e) {
			return IStrategyFac._errorStrategyFac.make();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APAV1wt6EeiiCrav3vcpBQ" name="fixName" specification="_AGnO0At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APAV2At6EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APAV2Qt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;model.&quot; + classname.substring(0, 1).toUpperCase() + classname.substring(1).toLowerCase() + &quot;Strategy&quot;;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APAV2gt6EeiiCrav3vcpBQ" name="makeStrategyFac" specification="_AGn14At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APAV2wt6EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APAV3At6EeiiCrav3vcpBQ" type="_AHQIAAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>if (null == classname) {
			return IStrategyFac._errorStrategyFac;
		}
	    return new IStrategyFac() {
	        /**
	         * Instantiate a strategy corresponding to the given class name.
	         * @return An IUpdateStrategy instance
	         */
	        public IUpdateStrategy make() {
	        		return loadStrategy(fixName(classname));
	        }

	        /**
	         * Return the given class name string
	         */
	        public String toString() {
	            return classname;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APAV3Qt6EeiiCrav3vcpBQ" name="makeBall" specification="_AMkF0At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APAV3gt6EeiiCrav3vcpBQ" name="make" type="_AHSkQAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APAV3wt6EeiiCrav3vcpBQ" name="paintStrat" type="_AHOS0At6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>Container con = adapter.getCanvas();
		Randomizer rzr = Randomizer.Singleton;
		
		int startRad = rzr.randomInt(10, 45);
		Point randLoc = rzr.randomLoc(new Rectangle(con.getWidth() - startRad, con.getHeight() - startRad));
		Point startLoc = new Point(randLoc.x + startRad, randLoc.y + startRad);
		Point startVel = new Point(0, 0);

		// Handles case where both x- and y-components of velocity are 0 to prevent ball from starting stationary.
		while (startVel.x == 0 &amp;&amp; startVel.y == 0) {
			startVel = new Point(rzr.randomInt(-20, 20), rzr.randomInt(-20, 20));
		}
		Color startCol = rzr.randomColor();
		
		Ball loaded = new Ball(startCol, startLoc, startRad, startVel, con, make, paintStrat);
		dispatcher.addObserver(loaded);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APA84At6EeiiCrav3vcpBQ" name="combineStrategyFacs" specification="_AMkF0wt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APA84Qt6EeiiCrav3vcpBQ" name="stratFac1" type="_AHQIAAt6EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_APA84gt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_APA84wt6EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_APA85At6EeiiCrav3vcpBQ" name="stratFac2" type="_AHQIAAt6EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_APA85Qt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_APA85gt6EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_APA85wt6EeiiCrav3vcpBQ" type="_AHQIAAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>if (null == stratFac1 || null == stratFac2) {
	    		return IStrategyFac._errorStrategyFac;
	    	}
	    
	    return new IStrategyFac() {
	        /**
	         * Instantiate a new MultiStrategy with the strategies from the given strategy factories
	         * @return A MultiStrategy instance
	         */
	        public IUpdateStrategy make() {
	            return new MultiStrategy(stratFac1.make(), stratFac2.make());
	        }

	        /**
	         * Return a string that is the toString()'s of the given strategy factories concatenated with a &quot;-&quot;
	         */
	        public String toString() {
	            return stratFac1.toString() + &quot;-&quot; + stratFac2.toString();
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APA86At6EeiiCrav3vcpBQ" name="setSwitcherStrategy" specification="_AMlT8At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APA86Qt6EeiiCrav3vcpBQ" name="switchFac" type="_AHQIAAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>SwitcherStrategy.setStrat(switchFac.make());
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APA86gt6EeiiCrav3vcpBQ" name="getSwitcherFac" specification="_AGoc8At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APA86wt6EeiiCrav3vcpBQ" type="_AHQIAAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return IStrategyFac.switcherStrat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APA87At6EeiiCrav3vcpBQ" name="makePaintFactory" specification="_AGoc8Qt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APA87Qt6EeiiCrav3vcpBQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APA87gt6EeiiCrav3vcpBQ" type="_AHQIAAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return new IStrategyFac() {
	        public IUpdateStrategy make() {
	        		return new StraightStrategy();
	        }
 
	        public String toString() {
	            return text;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return loadPaintStrat(fixPaintName(text));
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APA87wt6EeiiCrav3vcpBQ" name="loadPaintStrat" specification="_AGpEAQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APA88At6EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APA88Qt6EeiiCrav3vcpBQ" type="_AHOS0At6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>if (strat.endsWith(&quot;ImagePaintStrategy&quot;)) {
			int imgInd = strat.indexOf(&quot;ImagePaintStrategy&quot;);
			String nameFile = strat.substring(6, imgInd);
			
			String filename = &quot;images/&quot; + nameFile + &quot;.gif&quot;;
			
			Object[] args =  new Object[]{filename, 1.0};
			java.lang.reflect.Constructor&lt;?> cons[];
			try {
				cons = Class.forName(&quot;model.ImagePaintStrategy&quot;).getConstructors();
				if (cons[0].getParameterCount() == 2) {
					return (IPaintStrategy) cons[0].newInstance(args);
				} else {
					return (IPaintStrategy) cons[1].newInstance(args);
				}
				
			} catch (Exception e) {
				System.out.println(e);
				return IStrategyFac._errorStrategyFac.makePaint();
			}
		} else if (strat.endsWith(&quot;CompositePaintStrategy&quot;)) {
			APaintStrategy[] pstrats = {new ImagePaintStrategy(&quot;images/Mars.gif&quot;, 1.0), new ImagePaintStrategy(&quot;images/Mario.gif&quot;, 1.0)};
			return new UprightCompositePaintStrategy(pstrats);
		} else {
			Object[] args =  new Object[]{};
			java.lang.reflect.Constructor&lt;?> cons[];
			try {
				cons = Class.forName(strat).getConstructors();
				return (IPaintStrategy) cons[0].newInstance(args);
			} catch (Exception e) {
				return IStrategyFac._errorStrategyFac.makePaint();
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APA88gt6EeiiCrav3vcpBQ" name="fixPaintName" specification="_AGprEAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APA88wt6EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APA89At6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String classnameLower = classname.toLowerCase();
		if (classnameLower.endsWith(&quot;image&quot;)) {
			int indImg = classnameLower.indexOf(&quot;image&quot;);
			String imgType = classnameLower.substring(0, indImg);
			return &quot;model.&quot; + imgType.substring(0, 1).toUpperCase() + imgType.substring(1).toLowerCase() + &quot;ImagePaintStrategy&quot;;
		}
		return &quot;model.&quot; + classname.substring(0, 1).toUpperCase() + classname.substring(1).toLowerCase() + &quot;PaintStrategy&quot;;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AGmAsAt6EeiiCrav3vcpBQ" name="clearBalls" method="_APAV0At6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APMjFQt6EeiiCrav3vcpBQ">
            <body>This function clears all the balls from the canvas, by removing them as observers.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_AGmnwAt6EeiiCrav3vcpBQ" name="start" method="_APAV0Qt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APMjFgt6EeiiCrav3vcpBQ">
            <body>This function starts the timer.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_AGmnwQt6EeiiCrav3vcpBQ" name="loadStrategy" method="_APAV1At6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APMjGAt6EeiiCrav3vcpBQ">
            <body>This function takes an input string and loads the associated IUpdateStrategy,
	 * and returns the error strategy if the strategy isn't available.
	 * @param strat A string of the strategy to be created.
	 * @return The IUpdateStrategy associated with the string, or the error strategy if
	 * there is no associated strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AGmnwgt6EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AMjexQt6EeiiCrav3vcpBQ" type="_AHSkQAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AGnO0At6EeiiCrav3vcpBQ" name="fixName" method="_APAV1wt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APMjGQt6EeiiCrav3vcpBQ">
            <body>This function takes the input and confirms it to the required model.ClassStrategy format for
	 * dynamic class loading.
	 * @param classname The string that should be modified to conform to the model.ClassStrategy format.
	 * @return The class string in a model.ClassStrategy format.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AGnO0Qt6EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AGnO0gt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AGn14At6EeiiCrav3vcpBQ" name="makeStrategyFac" method="_APAV2gt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APMjGgt6EeiiCrav3vcpBQ">
            <body>This takes a class name, and creates a strategy factory for it, by loading the strategy and returning it
	 * in the make method.
	 * @param classname The class of strategy to make.
	 * @return An IStrategyFac whose make function calls the associated model.ClassStrategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AGn14Qt6EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AMjexgt6EeiiCrav3vcpBQ" type="_AHQIAAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AGoc8At6EeiiCrav3vcpBQ" name="getSwitcherFac" method="_APA86gt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APMjHgt6EeiiCrav3vcpBQ">
            <body>This function returns a strategy factory, which makes the current switcher balls' update
	 * strategy
	 * @return An IStrategyFac, which makes the current strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AMlT8gt6EeiiCrav3vcpBQ" type="_AHQIAAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AGoc8Qt6EeiiCrav3vcpBQ" name="makePaintFactory" method="_APA87At6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APMjHwt6EeiiCrav3vcpBQ">
            <body>This function returns an IStrategyFac to allow the Paint Strategies to be made later on.
	 * @param text The type of paint strategy.
	 * @return An IStrategyFac</body>
          </ownedComment>
          <ownedParameter xmi:id="_AGpEAAt6EeiiCrav3vcpBQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AMlT8wt6EeiiCrav3vcpBQ" type="_AHQIAAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AGpEAQt6EeiiCrav3vcpBQ" name="loadPaintStrat" method="_APA87wt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APMjIAt6EeiiCrav3vcpBQ">
            <body>This function loads an instance of an IPaintStrategy, given a classname.
	 * @param strat The type of paint strategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_AGpEAgt6EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AMl7AAt6EeiiCrav3vcpBQ" type="_AHOS0At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AGprEAt6EeiiCrav3vcpBQ" name="fixPaintName" method="_APA88gt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APMjIQt6EeiiCrav3vcpBQ">
            <body>This function &quot;fixes&quot; the type passed in to create an IPaintStrategy.
	 * @param classname The type of paint strategy to create.
	 * @return The fixed paint strategy information as a string.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AGprEQt6EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AGprEgt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AMjewAt6EeiiCrav3vcpBQ" name="BallWorldModel" method="_AO_uygt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AMjewgt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AMjewwt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_APMjFAt6EeiiCrav3vcpBQ">
            <body>This is the BallWorldModel constructor, which creates a model for the controller to interact with.
	 * @param adapter An IModel2ViewAdapter.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AMjewQt6EeiiCrav3vcpBQ" name="adapter" type="_AHNEsQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AMjexAt6EeiiCrav3vcpBQ" type="_AGlZoAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AMkF0At6EeiiCrav3vcpBQ" name="makeBall" method="_APAV3Qt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APMjGwt6EeiiCrav3vcpBQ">
            <body>This function randomizes parameters for the ball, and makes a ball with the parameter's update strategy.
	 * @param make The IUpdateStrategy that determines how the ball updates.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AMkF0Qt6EeiiCrav3vcpBQ" name="make" type="_AHSkQAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AMkF0gt6EeiiCrav3vcpBQ" name="paintStrat" type="_AHOS0At6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AMkF0wt6EeiiCrav3vcpBQ" name="combineStrategyFacs" method="_APA84At6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APMjHAt6EeiiCrav3vcpBQ">
            <body>Returns an IStrategyFac that can instantiate a MultiStrategy with the two
	 * strategies made by the two given IStrategyFac objects. Returns null if
	 * either supplied factory is null. The toString() of the returned factory
	 * is the toString()'s of the two given factories, concatenated with &quot;-&quot;. 
	 * If either factory is null, then a factory for a beeping error strategy is returned.
	 * 
	 * @param stratFac1 An IStrategyFac for a strategy
	 * @param stratFac2 An IStrategyFac for a strategy
	 * @return An IStrategyFac for the composition of the two strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_AMkF1At6EeiiCrav3vcpBQ" name="stratFac1" type="_AHQIAAt6EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_AMks4gt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_AMks4wt6EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_AMks4At6EeiiCrav3vcpBQ" name="stratFac2" type="_AHQIAAt6EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_AMks5At6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_AMks5Qt6EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_AMks4Qt6EeiiCrav3vcpBQ" type="_AHQIAAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AMlT8At6EeiiCrav3vcpBQ" name="setSwitcherStrategy" method="_APA86At6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APMjHQt6EeiiCrav3vcpBQ">
            <body>This function sets the switcher balls strategy to the one made by the input.
	 * @param switchFac IStrategyFac which makes the new update strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AMlT8Qt6EeiiCrav3vcpBQ" name="switchFac" type="_AHQIAAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AN0DAAt6EeiiCrav3vcpBQ" name="update" method="_APAV0gt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APMjFwt6EeiiCrav3vcpBQ">
            <body>This function updates all the balls by notifying them using the dispatcher
	 * and an IBallCmd
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AN0DAQt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AGsuYAt6EeiiCrav3vcpBQ" name="BreathingStrategy">
        <ownedComment xmi:id="_APMjIgt6EeiiCrav3vcpBQ">
          <body>This class defines a Breathing Strategy, which grows and shrinks the ball's radius.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_AMmiEAt6EeiiCrav3vcpBQ" client="_AGsuYAt6EeiiCrav3vcpBQ" supplier="_AHSkQAt6EeiiCrav3vcpBQ" contract="_AHSkQAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APBj8At6EeiiCrav3vcpBQ" name="updateState" specification="_AMmiEQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APBj8Qt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APBj8gt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getItr() % 5 == 0) {
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AMmiEQt6EeiiCrav3vcpBQ" name="updateState" method="_APBj8At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AMmiEgt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AMmiEwt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AGt8gAt6EeiiCrav3vcpBQ" name="ColorStrategy">
        <ownedComment xmi:id="_APMjIwt6EeiiCrav3vcpBQ">
          <body>This class defines a Color Strategy, which changes the ball's color.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_AMnJIgt6EeiiCrav3vcpBQ" client="_AGt8gAt6EeiiCrav3vcpBQ" supplier="_AHSkQAt6EeiiCrav3vcpBQ" contract="_AHSkQAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APBj8wt6EeiiCrav3vcpBQ" name="updateState" specification="_AMnJIwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APBj9At6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APBj9Qt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (ball.getItr() % 10 == 0) {
						Color newColor = Randomizer.Singleton.randomColor();
						ball.setCol(newColor);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AMnJIwt6EeiiCrav3vcpBQ" name="updateState" method="_APBj8wt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AMnJJAt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AMnJJQt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AGvKoAt6EeiiCrav3vcpBQ" name="CompositePaintStrategy">
        <ownedComment xmi:id="_APMjJAt6EeiiCrav3vcpBQ">
          <body>This class defines a CompositePaintStrategy, which is a concrete class of MultiPaintStrategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_AMo-UAt6EeiiCrav3vcpBQ" general="_AHXcwAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APBj9gt6EeiiCrav3vcpBQ" name="CompositePaintStrategy" specification="_AMnwMwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APBj9wt6EeiiCrav3vcpBQ" name="pstrats" type="_AGViAAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_APBj-At6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APBj-Qt6EeiiCrav3vcpBQ" type="_AGvKoAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APBj-gt6EeiiCrav3vcpBQ" name="CompositePaintStrategy" specification="_AN0qEAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APBj-wt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APBj_At6EeiiCrav3vcpBQ" name="pstrats" type="_AGViAAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_APBj_Qt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APBj_gt6EeiiCrav3vcpBQ" type="_AGvKoAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, pstrats);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AMnwMwt6EeiiCrav3vcpBQ" name="CompositePaintStrategy" method="_APBj9gt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AMnwNQt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AMnwNgt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AMnwNAt6EeiiCrav3vcpBQ" name="pstrats" type="_AGViAAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AMoXQAt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AMnwNwt6EeiiCrav3vcpBQ" type="_AGvKoAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AN0qEAt6EeiiCrav3vcpBQ" name="CompositePaintStrategy" method="_APBj-gt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AN1RIgt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AN1RIwt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AN1RIAt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AN1RIQt6EeiiCrav3vcpBQ" name="pstrats" type="_AGViAAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AN1RJQt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AN1RJAt6EeiiCrav3vcpBQ" type="_AGvKoAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AGwYwAt6EeiiCrav3vcpBQ" name="CrashStrategy">
        <ownedComment xmi:id="_APMjJQt6EeiiCrav3vcpBQ">
          <body>This class defines a Crash Strategy which makes the ball
change color when it bounces from the boundaries of the canvas.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_AMplYAt6EeiiCrav3vcpBQ" client="_AGwYwAt6EeiiCrav3vcpBQ" supplier="_AHSkQAt6EeiiCrav3vcpBQ" contract="_AHSkQAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APBj_wt6EeiiCrav3vcpBQ" name="updateState" specification="_AMplYQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APBkAAt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APBkAQt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					
					if ((ball.getLoc().x + ball.getRad() + 8 >= ball.getCon().getWidth()) ||
							(ball.getLoc().x - ball.getRad() &lt;= 8) ||
							(ball.getLoc().y + ball.getRad() >= ball.getCon().getHeight() - 8) ||
							(ball.getLoc().y - ball.getRad() &lt;= 8)) {
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AMplYQt6EeiiCrav3vcpBQ" name="updateState" method="_APBj_wt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AMqMcAt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AMqMcQt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AGxm4At6EeiiCrav3vcpBQ" name="EllipsePaintStrategy">
        <ownedComment xmi:id="_APMjJgt6EeiiCrav3vcpBQ">
          <body>This class defines a paint strategy to paint an ellipse shape.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_AMqzgAt6EeiiCrav3vcpBQ" general="_AH4aIAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APCLAAt6EeiiCrav3vcpBQ" name="EllipsePaintStrategy" specification="_AGxm4Qt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APCLAQt6EeiiCrav3vcpBQ" type="_AGxm4At6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 4.0/3.0, 2.0/3.0);
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APCLAgt6EeiiCrav3vcpBQ" name="EllipsePaintStrategy" specification="_AN14MAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APCLAwt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APCLBAt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APCLBQt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APCLBgt6EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APCLBwt6EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APCLCAt6EeiiCrav3vcpBQ" type="_AGxm4At6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, EllipseShapeFactory.Singleton.makeShape(x, y, width, height));
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AGxm4Qt6EeiiCrav3vcpBQ" name="EllipsePaintStrategy" method="_APCLAAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AGxm4gt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AGyN8At6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AGyN8Qt6EeiiCrav3vcpBQ" type="_AGxm4At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AN14MAt6EeiiCrav3vcpBQ" name="EllipsePaintStrategy" method="_APCLAgt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AN2fQgt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AN2fQwt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AN14MQt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AN14Mgt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AN14Mwt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AN2fQAt6EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AN2fQQt6EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AN3GUAt6EeiiCrav3vcpBQ" type="_AGxm4At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AGy1AAt6EeiiCrav3vcpBQ" name="EllipseShapeFactory">
        <ownedComment xmi:id="_APMjJwt6EeiiCrav3vcpBQ">
          <body>This class defines a shape factory to make Ellipses.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_AOkQ8Qt6EeiiCrav3vcpBQ" name="Singleton" isLeaf="true" isStatic="true" type="_AGy1AAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APdo1At6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOkQ8gt6EeiiCrav3vcpBQ" value="new EllipseShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_AMsBoQt6EeiiCrav3vcpBQ" client="_AGy1AAt6EeiiCrav3vcpBQ" supplier="_AHO54At6EeiiCrav3vcpBQ" contract="_AHO54At6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APCLCQt6EeiiCrav3vcpBQ" name="makeShape" specification="_AGzcEAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APCLCgt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APCLCwt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APCLDAt6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APCLDQt6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APCLDgt6EeiiCrav3vcpBQ" type="_AMqzgQt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>Shape ellipse = new Ellipse2D.Double(x, y, xScale, yScale);
		return ellipse;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AGzcEAt6EeiiCrav3vcpBQ" name="makeShape" method="_APCLCQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AGzcEQt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AGzcEgt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AGzcEwt6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AGzcFAt6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AN4UcAt6EeiiCrav3vcpBQ" type="_AMqzgQt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AHLPgAt6EeiiCrav3vcpBQ" name="FastStrategy">
        <ownedComment xmi:id="_APNKIAt6EeiiCrav3vcpBQ">
          <body>This class defines a Fast Strategy that makes the ball's velocity increase and stop once it reaches
a pre defined max speed.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_AMsosAt6EeiiCrav3vcpBQ" client="_AHLPgAt6EeiiCrav3vcpBQ" supplier="_AHSkQAt6EeiiCrav3vcpBQ" contract="_AHSkQAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APCLDwt6EeiiCrav3vcpBQ" name="updateState" specification="_AMtPwAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APCLEAt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APCLEQt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (Math.abs(ball.getVel().x) &lt; 100 &amp;&amp; Math.abs(ball.getVel().y) &lt; 100) {
						if (ball.getItr() % 10 == 0) {
							if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y + 2));
							} else if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y - 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y + 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y - 2));
							}
						}
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AMtPwAt6EeiiCrav3vcpBQ" name="updateState" method="_APCLDwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AMtPwQt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AMtPwgt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_AHMdoAt6EeiiCrav3vcpBQ" name="IBallCmd" isAbstract="true">
        <ownedOperation xmi:id="_AMt20gt6EeiiCrav3vcpBQ" name="apply" isAbstract="true">
          <ownedParameter xmi:id="_AMt20wt6EeiiCrav3vcpBQ" name="context" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AMt21At6EeiiCrav3vcpBQ" name="disp" type="_AINxUAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_AHNEsQt6EeiiCrav3vcpBQ" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_APNKIQt6EeiiCrav3vcpBQ">
          <body>This is an interface which defines the functions that the model wants the view to have/do.
@author sn32, kyl3</body>
        </ownedComment>
        <ownedAttribute xmi:id="_AHNrwAt6EeiiCrav3vcpBQ" name="canvas" type="_AMU1QAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APW7IAt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AHNrwQt6EeiiCrav3vcpBQ" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_AHNEsQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APXiMQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AHNrwgt6EeiiCrav3vcpBQ" value="new IModel2ViewAdapter() {&#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is an update function that we want the view to have.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public void update() {&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9; &#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is a function that gets the canvas from the view.&#xA;&#x9;&#x9;  * @return A container that is initially null.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public Container getCanvas() {&#xA;&#x9;&#x9;&#x9; return null;&#xA;&#x9;&#x9; }&#xA;&#x9; }"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_AHNEsgt6EeiiCrav3vcpBQ" name="update">
          <ownedComment xmi:id="_APNKIgt6EeiiCrav3vcpBQ">
            <body>This is an update function that we want the view to have.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_AHOS0At6EeiiCrav3vcpBQ" name="IPaintStrategy">
        <ownedComment xmi:id="_APNKIwt6EeiiCrav3vcpBQ">
          <body>This is an interface for an IPaintStrategy that defines the methods we want it to have.
@author sn32, ll45</body>
        </ownedComment>
        <ownedOperation xmi:id="_AMud4At6EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_AMud4Qt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AN5ikAt6EeiiCrav3vcpBQ" name="paint">
          <ownedParameter xmi:id="_AN5ikQt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AN5ikgt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_AHO54At6EeiiCrav3vcpBQ" name="IShapeFactory">
        <ownedComment xmi:id="_APNKJAt6EeiiCrav3vcpBQ">
          <body>This interface defines the methods we want a shape factory to have.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_AHPg8At6EeiiCrav3vcpBQ" name="makeShape">
          <ownedParameter xmi:id="_AHPg8Qt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AHPg8gt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AHPg8wt6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AHPg9At6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AN6JoAt6EeiiCrav3vcpBQ" type="_AMqzgQt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_AHQIAAt6EeiiCrav3vcpBQ" name="IStrategyFac">
        <ownedComment xmi:id="_APNKJQt6EeiiCrav3vcpBQ">
          <body>This interface defines the functions we want IStrategyFac to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_AHRWIQt6EeiiCrav3vcpBQ" name="_errorStrategyFac" type="_AHQIAAt6EeiiCrav3vcpBQ" association="_APYJQQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AHRWIgt6EeiiCrav3vcpBQ" value="new IStrategyFac(){&#xA;        /**&#xA;         * Make the beeping error strategy&#xA;         * @return  An instance of a beeping error strategy&#xA;         */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;            return new IUpdateStrategy() {&#xA;                private int count = 0; // update counter&#xA;                &#xA;                /**&#xA;                 * Beep the speaker every 25 updates&#xA;                 */&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void updateState(Ball ball, Dispatcher dispatcher) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(25 &lt; count++){&#xA;                        java.awt.Toolkit.getDefaultToolkit().beep(); &#xA;                        count = 0;&#xA;                    }&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;            };&#xA;        }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;}&#xA;    }"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AHR9MAt6EeiiCrav3vcpBQ" name="switcherStrat" type="_AHQIAAt6EeiiCrav3vcpBQ" association="_APYwUAt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AHR9MQt6EeiiCrav3vcpBQ" value="new IStrategyFac() {&#xA;    &#x9;&#x9;/**&#xA;    &#x9;&#x9; * This function makes the switcher strategy.&#xA;    &#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;&#x9;&#x9;&#x9;return new SwitcherStrategy();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_AHQvEAt6EeiiCrav3vcpBQ" name="make">
          <ownedComment xmi:id="_APNKJgt6EeiiCrav3vcpBQ">
            <body>This function allows IStrategyFac to make an IUpdateStrategy.
	 * @return An IUpdateStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_AMud4gt6EeiiCrav3vcpBQ" type="_AHSkQAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AHRWIAt6EeiiCrav3vcpBQ" name="makePaint">
          <ownedComment xmi:id="_APNKJwt6EeiiCrav3vcpBQ">
            <body>This function allows IStrategyFac to make an IPaintStrategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_AMud4wt6EeiiCrav3vcpBQ" type="_AHOS0At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_AHSkQAt6EeiiCrav3vcpBQ" name="IUpdateStrategy">
        <ownedComment xmi:id="_APNKKAt6EeiiCrav3vcpBQ">
          <body>This interface defines the functions we want IUpdateStrategies to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedOperation xmi:id="_AMvE8At6EeiiCrav3vcpBQ" name="updateState">
          <ownedParameter xmi:id="_AMvE8Qt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AMvE8gt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AHTLUAt6EeiiCrav3vcpBQ" name="ImagePaintStrategy">
        <ownedComment xmi:id="_APNKKQt6EeiiCrav3vcpBQ">
          <body>This class defines a paint strategy for an image that extends APaintStrategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_AM3n0gt6EeiiCrav3vcpBQ" general="_AGViAAt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AOk4AAt6EeiiCrav3vcpBQ" name="scaleFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOk4AQt6EeiiCrav3vcpBQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOlfEAt6EeiiCrav3vcpBQ" name="fillFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOlfEQt6EeiiCrav3vcpBQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOlfEwt6EeiiCrav3vcpBQ" name="localAT" visibility="private" type="_AMWqcAt6EeiiCrav3vcpBQ" association="_APeP4Qt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOmGIAt6EeiiCrav3vcpBQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOmtMQt6EeiiCrav3vcpBQ" name="tempAT" type="_AMWqcAt6EeiiCrav3vcpBQ" association="_APeP5At6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOmtMgt6EeiiCrav3vcpBQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOmtMwt6EeiiCrav3vcpBQ" name="filename" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOmtNAt6EeiiCrav3vcpBQ" name="image" visibility="private" type="_AMyvUQt6EeiiCrav3vcpBQ" association="_APe28Qt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AOmtNgt6EeiiCrav3vcpBQ" name="imageObs" visibility="private" type="_AMU1QAt6EeiiCrav3vcpBQ" association="_APe29At6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APCyEAt6EeiiCrav3vcpBQ" name="ImagePaintStrategy" specification="_AHTyYAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APCyEQt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APCyEgt6EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APCyEwt6EeiiCrav3vcpBQ" type="_AHTLUAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super (new AffineTransform());
		this.fillFactor = fillFactor;
		this.setFilename(filename);
				
		try {
			image =  Toolkit.getDefaultToolkit().getImage(filename);	
			
		} catch (Exception e) {
			System.out.println(&quot;failed&quot;);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APCyFAt6EeiiCrav3vcpBQ" name="ImagePaintStrategy" specification="_AN7XwAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APCyFQt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APCyFgt6EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APCyFwt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APCyGAt6EeiiCrav3vcpBQ" type="_AHTLUAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.fillFactor = fillFactor;
		this.setFilename(filename);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APCyGQt6EeiiCrav3vcpBQ" name="init" specification="_AM3n0At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APCyGgt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>imageObs = ball.getCon();
		MediaTracker mt = new MediaTracker(ball.getCon());
		mt.addImage(image, 1);
		try {
			mt.waitForAll();
		} catch(Exception e){
			System.out.println(&quot;ImagePaintStrategy.init(): Error waiting for image.  Exception = &quot;+e);
		}
		scaleFactor = 2.0/(fillFactor*(image.getWidth(imageObs)+image.getHeight(imageObs))/2.0); // this line is described below
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APCyGwt6EeiiCrav3vcpBQ" name="paintXfrm" specification="_AN7-0At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APCyHAt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APCyHQt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APCyHgt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>localAT.setToScale(scaleFactor, scaleFactor);
		localAT.translate(-image.getWidth(imageObs)/2.0, -image.getHeight(imageObs)/2.0);
		localAT.preConcatenate(at);
		((Graphics2D)g).drawImage(image, localAT, imageObs); 
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APCyHwt6EeiiCrav3vcpBQ" name="setFilename" specification="_AHVAgAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APCyIAt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.filename = filename;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AHTyYAt6EeiiCrav3vcpBQ" name="ImagePaintStrategy" method="_APCyEAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AHUZcQt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AHUZcgt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_APNKKgt6EeiiCrav3vcpBQ">
            <body>This is a constructor for the Image Paint Strategy that doesn't take an Affine Transform.
	 * @param filename String that is the path to the image file to load
	 * @param fillFactor A double that is the fill factor</body>
          </ownedComment>
          <ownedParameter xmi:id="_AHTyYQt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AHUZcAt6EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AHUZcwt6EeiiCrav3vcpBQ" type="_AHTLUAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AHVAgAt6EeiiCrav3vcpBQ" name="setFilename" method="_APCyHwt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APNKLQt6EeiiCrav3vcpBQ">
            <body>This function sets the filename.
	 * @param filename the filename to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_AHVAgQt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AM3n0At6EeiiCrav3vcpBQ" name="init" method="_APCyGQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APNKLAt6EeiiCrav3vcpBQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AM3n0Qt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AN7XwAt6EeiiCrav3vcpBQ" name="ImagePaintStrategy" method="_APCyFAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AN7XxAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AN7XxQt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_APNKKwt6EeiiCrav3vcpBQ">
            <body>This is a constructor for Image Paint Strategy that takes an Affine Transform.
	 * @param filename String that is the path to the image file to load.
	 * @param fillFactor A double that is the fill factor
	 * @param at An Affine Transform.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AN7XwQt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AN7Xwgt6EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AN7Xwwt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AN7Xxgt6EeiiCrav3vcpBQ" type="_AHTLUAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AN7-0At6EeiiCrav3vcpBQ" name="paintXfrm" method="_APCyGwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AN7-0Qt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AN7-0gt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AN7-0wt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AHXcwAt6EeiiCrav3vcpBQ" name="MultiPaintStrategy">
        <ownedComment xmi:id="_APNKLgt6EeiiCrav3vcpBQ">
          <body>This class defines a multi paint strategy which is the composition of other paint strategies.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_AM9HYAt6EeiiCrav3vcpBQ" general="_AGViAAt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AOnUQAt6EeiiCrav3vcpBQ" name="pstrats" visibility="private" type="_AGViAAt6EeiiCrav3vcpBQ" association="_APe29wt6EeiiCrav3vcpBQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AOnUQQt6EeiiCrav3vcpBQ" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APDZIAt6EeiiCrav3vcpBQ" name="MultiPaintStrategy" specification="_AM7SMAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APDZIQt6EeiiCrav3vcpBQ" name="pstrats" type="_AGViAAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_APDZIgt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APDZIwt6EeiiCrav3vcpBQ" type="_AHXcwAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(new AffineTransform());&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APDZJAt6EeiiCrav3vcpBQ" name="MultiPaintStrategy" specification="_AN8l4Qt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APDZJQt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APDZJgt6EeiiCrav3vcpBQ" name="pstrats" type="_AGViAAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_APDZJwt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APDZKAt6EeiiCrav3vcpBQ" type="_AHXcwAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at);&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APDZKQt6EeiiCrav3vcpBQ" name="init" specification="_AM8gUQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APDZKgt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
		    strategy.init(ball);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APDZKwt6EeiiCrav3vcpBQ" name="paintXfrm" specification="_AN90AAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APDZLAt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APDZLQt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APDZLgt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
			strategy.paintXfrm(g, ball, at);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AM7SMAt6EeiiCrav3vcpBQ" name="MultiPaintStrategy" method="_APDZIAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AM7SMgt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AM7SMwt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_APNKLwt6EeiiCrav3vcpBQ">
            <body>This is a constructor that doesn't take in an affine transform.&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_AM7SMQt6EeiiCrav3vcpBQ" name="pstrats" type="_AGViAAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AM75QQt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AM75QAt6EeiiCrav3vcpBQ" type="_AHXcwAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AM8gUQt6EeiiCrav3vcpBQ" name="init" method="_APDZKQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APNKMQt6EeiiCrav3vcpBQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AM8gUgt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AN8l4Qt6EeiiCrav3vcpBQ" name="MultiPaintStrategy" method="_APDZJAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AN9M8gt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AN9M8wt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_APNKMAt6EeiiCrav3vcpBQ">
            <body>This is a constructor that does take in an affine transform.&#xD;
	 * @param at An affine transform&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_AN9M8At6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AN9M8Qt6EeiiCrav3vcpBQ" name="pstrats" type="_AGViAAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AN9M9Qt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AN9M9At6EeiiCrav3vcpBQ" type="_AHXcwAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AN90AAt6EeiiCrav3vcpBQ" name="paintXfrm" method="_APDZKwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AN90AQt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AN90Agt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AN90Awt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AHZ5AAt6EeiiCrav3vcpBQ" name="MultiStrategy">
        <ownedComment xmi:id="_APNKMgt6EeiiCrav3vcpBQ">
          <body>This class defines a Multi Strategy which defines a movement strategy for a ball
is a combination of 2 other strategies.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_AOn7UAt6EeiiCrav3vcpBQ" name="s1" visibility="private" type="_AHSkQAt6EeiiCrav3vcpBQ" association="_APfeAQt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_APNKMwt6EeiiCrav3vcpBQ" name="s2" visibility="private" type="_AHSkQAt6EeiiCrav3vcpBQ" association="_APoA5At6EeiiCrav3vcpBQ"/>
        <interfaceRealization xmi:id="_AM9ucAt6EeiiCrav3vcpBQ" client="_AHZ5AAt6EeiiCrav3vcpBQ" supplier="_AHSkQAt6EeiiCrav3vcpBQ" contract="_AHSkQAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APEAMAt6EeiiCrav3vcpBQ" name="MultiStrategy" specification="_AM-VgAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APEAMQt6EeiiCrav3vcpBQ" name="s1" type="_AHSkQAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APEAMgt6EeiiCrav3vcpBQ" name="s2" type="_AHSkQAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APEAMwt6EeiiCrav3vcpBQ" type="_AHZ5AAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.s1 = s1;
		this.s2 = s2;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APEANAt6EeiiCrav3vcpBQ" name="updateState" specification="_AM-Vhgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APEANQt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APEANgt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					s1.updateState(ball, disp);
					s2.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AM-VgAt6EeiiCrav3vcpBQ" name="MultiStrategy" method="_APEAMAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AM-Vgwt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AM-VhAt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AM-VgQt6EeiiCrav3vcpBQ" name="s1" type="_AHSkQAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AM-Vggt6EeiiCrav3vcpBQ" name="s2" type="_AHSkQAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AM-VhQt6EeiiCrav3vcpBQ" type="_AHZ5AAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AM-Vhgt6EeiiCrav3vcpBQ" name="updateState" method="_APEANAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AM-Vhwt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AM-ViAt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AHbHIAt6EeiiCrav3vcpBQ" name="PolygonFactory">
        <ownedComment xmi:id="_APNxMgt6EeiiCrav3vcpBQ">
          <body>This class defines a polygon factory, which makes polygons.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_AOoiYAt6EeiiCrav3vcpBQ" name="poly" visibility="package" type="_AM_joAt6EeiiCrav3vcpBQ" association="_APfeBAt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOoiYQt6EeiiCrav3vcpBQ" value="new Polygon()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOpJcQt6EeiiCrav3vcpBQ" name="at" visibility="package" type="_AMWqcAt6EeiiCrav3vcpBQ" association="_APgFEQt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AOqXkQt6EeiiCrav3vcpBQ" name="scaleFactor" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOqXkgt6EeiiCrav3vcpBQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOqXlAt6EeiiCrav3vcpBQ" name="pts" visibility="package" type="_AMbi8Qt6EeiiCrav3vcpBQ" association="_APgFFAt6EeiiCrav3vcpBQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AOqXlQt6EeiiCrav3vcpBQ" value="*"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_AM_jogt6EeiiCrav3vcpBQ" client="_AHbHIAt6EeiiCrav3vcpBQ" supplier="_AHO54At6EeiiCrav3vcpBQ" contract="_AHO54At6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APEANwt6EeiiCrav3vcpBQ" name="PolygonFactory" specification="_AN_pMAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APEAOAt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APEAOQt6EeiiCrav3vcpBQ" name="scaleFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APEAOgt6EeiiCrav3vcpBQ" name="pts" type="_AMbi8Qt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_APEAOwt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APEAPAt6EeiiCrav3vcpBQ" type="_AHbHIAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.at = at;
		this.scaleFactor = scaleFactor;
		this.pts = pts;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APEnQAt6EeiiCrav3vcpBQ" name="makeShape" specification="_AHuCEAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APEnQQt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APEnQgt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APEnQwt6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APEnRAt6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APEnRQt6EeiiCrav3vcpBQ" type="_AMqzgQt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>at.setToTranslation(x, y);
		at.scale(xScale*scaleFactor, yScale*scaleFactor);  // optional rotation can be added as well
		return at.createTransformedShape(poly);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AHuCEAt6EeiiCrav3vcpBQ" name="makeShape" method="_APEnQAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AHuCEQt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AHupIAt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AHupIQt6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AHupIgt6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AOBeYAt6EeiiCrav3vcpBQ" type="_AMqzgQt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AN_pMAt6EeiiCrav3vcpBQ" name="PolygonFactory" method="_APEANwt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AOAQQgt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AOAQQwt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AN_pMQt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOAQQAt6EeiiCrav3vcpBQ" name="scaleFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AOAQQQt6EeiiCrav3vcpBQ" name="pts" type="_AMbi8Qt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AOA3UAt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AOAQRAt6EeiiCrav3vcpBQ" type="_AHbHIAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AHxscAt6EeiiCrav3vcpBQ" name="RectanglePaintStrategy">
        <ownedComment xmi:id="_APNxMwt6EeiiCrav3vcpBQ">
          <body>This class defines a Rectangle Paint Strategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_ANAKsAt6EeiiCrav3vcpBQ" general="_AH4aIAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APEnRgt6EeiiCrav3vcpBQ" name="RectanglePaintStrategy" specification="_AHy6kAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APEnRwt6EeiiCrav3vcpBQ" type="_AHxscAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 3.0, 1.0);
	  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APEnSAt6EeiiCrav3vcpBQ" name="RectanglePaintStrategy" specification="_AOCsgAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APEnSQt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APEnSgt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APEnSwt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APEnTAt6EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APEnTQt6EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APEnTgt6EeiiCrav3vcpBQ" type="_AHxscAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, RectangleShapeFactory.Singleton.makeShape(x,y,width,height));
	  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AHy6kAt6EeiiCrav3vcpBQ" name="RectanglePaintStrategy" method="_APEnRgt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AHy6kQt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AHy6kgt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AHy6kwt6EeiiCrav3vcpBQ" type="_AHxscAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOCsgAt6EeiiCrav3vcpBQ" name="RectanglePaintStrategy" method="_APEnSAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AOCshgt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AOCshwt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AOCsgQt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOCsggt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AOCsgwt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AOCshAt6EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AOCshQt6EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AOCsiAt6EeiiCrav3vcpBQ" type="_AHxscAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AH1W0At6EeiiCrav3vcpBQ" name="RectangleShapeFactory">
        <ownedComment xmi:id="_APNxNAt6EeiiCrav3vcpBQ">
          <body>This class defines a factory that makes rectangles.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_AOq-oQt6EeiiCrav3vcpBQ" name="Singleton" isLeaf="true" isStatic="true" type="_AH1W0At6EeiiCrav3vcpBQ" isReadOnly="true" association="_APgsIQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOq-ogt6EeiiCrav3vcpBQ" value="new RectangleShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_ANAxwAt6EeiiCrav3vcpBQ" client="_AH1W0At6EeiiCrav3vcpBQ" supplier="_AHO54At6EeiiCrav3vcpBQ" contract="_AHO54At6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APEnTwt6EeiiCrav3vcpBQ" name="makeShape" specification="_AH3MAAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APEnUAt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APEnUQt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APEnUgt6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APEnUwt6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APEnVAt6EeiiCrav3vcpBQ" type="_AMqzgQt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>Shape rec = new Rectangle((int) (x), (int) (y), (int) (xScale), (int) (yScale));
		return rec;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AH3MAAt6EeiiCrav3vcpBQ" name="makeShape" method="_APEnTwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AH3MAQt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AH3MAgt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AH3MAwt6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AH3MBAt6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AODTkAt6EeiiCrav3vcpBQ" type="_AMqzgQt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AH4aIAt6EeiiCrav3vcpBQ" name="ShapePaintStrategy">
        <ownedComment xmi:id="_APNxNQt6EeiiCrav3vcpBQ">
          <body>This class defines a shape paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_ANBY0Qt6EeiiCrav3vcpBQ" general="_AGViAAt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AOq-owt6EeiiCrav3vcpBQ" name="shape" visibility="package" type="_AMqzgQt6EeiiCrav3vcpBQ" association="_APgsJAt6EeiiCrav3vcpBQ"/>
        <interfaceRealization xmi:id="_ANBY0At6EeiiCrav3vcpBQ" client="_AH4aIAt6EeiiCrav3vcpBQ" supplier="_AHO54At6EeiiCrav3vcpBQ" contract="_AHO54At6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APFOUAt6EeiiCrav3vcpBQ" name="ShapePaintStrategy" specification="_AOD6oAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APFOUQt6EeiiCrav3vcpBQ" name="shape" type="_AMqzgQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APFOUgt6EeiiCrav3vcpBQ" type="_AH4aIAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APFOUwt6EeiiCrav3vcpBQ" name="ShapePaintStrategy" specification="_AOEhsAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APFOVAt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APFOVQt6EeiiCrav3vcpBQ" name="shape" type="_AMqzgQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APFOVgt6EeiiCrav3vcpBQ" type="_AH4aIAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APFOVwt6EeiiCrav3vcpBQ" name="paintXfrm" specification="_AOFIwAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APFOWAt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APFOWQt6EeiiCrav3vcpBQ" name="host" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APFOWgt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>((Graphics2D) g).fill(at.createTransformedShape(shape));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APFOWwt6EeiiCrav3vcpBQ" name="makeShape" specification="_AH6PUAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APFOXAt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APFOXQt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APFOXgt6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APFOXwt6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APFOYAt6EeiiCrav3vcpBQ" type="_AMqzgQt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>at.setToTranslation(x, y);
		at.scale(x * xScale, y * yScale);  // optional rotation can be added as well
		return at.createTransformedShape(shape);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AH6PUAt6EeiiCrav3vcpBQ" name="makeShape" method="_APFOWwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AH6PUQt6EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AH6PUgt6EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AH6PUwt6EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AH6PVAt6EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AOFIxAt6EeiiCrav3vcpBQ" type="_AMqzgQt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOD6oAt6EeiiCrav3vcpBQ" name="ShapePaintStrategy" method="_APFOUAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AOD6ogt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AOD6owt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AOD6oQt6EeiiCrav3vcpBQ" name="shape" type="_AMqzgQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOD6pAt6EeiiCrav3vcpBQ" type="_AH4aIAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOEhsAt6EeiiCrav3vcpBQ" name="ShapePaintStrategy" method="_APFOUwt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AOEhswt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AOEhtAt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AOEhsQt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOEhsgt6EeiiCrav3vcpBQ" name="shape" type="_AMqzgQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOEhtQt6EeiiCrav3vcpBQ" type="_AH4aIAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOFIwAt6EeiiCrav3vcpBQ" name="paintXfrm" method="_APFOVwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AOFIwQt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOFIwgt6EeiiCrav3vcpBQ" name="host" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOFIwwt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AH95sAt6EeiiCrav3vcpBQ" name="SpawnStrategy">
        <ownedComment xmi:id="_APNxNgt6EeiiCrav3vcpBQ">
          <body>This class defines a spawn strategy that interacts with other balls.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_AOrlsAt6EeiiCrav3vcpBQ" name="count" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOrlsQt6EeiiCrav3vcpBQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOrlswt6EeiiCrav3vcpBQ" name="delay" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOrltAt6EeiiCrav3vcpBQ" value="100"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_ANEcIAt6EeiiCrav3vcpBQ" client="_AH95sAt6EeiiCrav3vcpBQ" supplier="_AHSkQAt6EeiiCrav3vcpBQ" contract="_AHSkQAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APFOYQt6EeiiCrav3vcpBQ" name="updateState" specification="_ANFDMAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APFOYgt6EeiiCrav3vcpBQ" name="context" type="_AGZMYAt6EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_APFOYwt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_APFOZAt6EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_APFOZQt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>if (delay &lt; count++) {
			dispatcher.notifyAll(new IBallCmd() {
				/**
				 * This function applies this command to the correct ball using a dispatcher.
				 */
				@Override
				public void apply(Ball other, Dispatcher disp) {
					if (count != 0 &amp;&amp; context != other) {
						if ((context.getRad() + other.getRad()) > 
						    context.getLoc().distance(other.getLoc())) {
							disp.addObserver(new Ball(
									context.getCol(),
									new Point(context.getLoc()), 
									context.getRad(),
									new Point(-context.getVel().x+1,-context.getVel().y+1), 
									context.getCon(), 
									new SpawnStrategy(), 
									context.getPaintStrat()));
							count = 0;
							delay *= 5;
						}
					}
				}
			});
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_ANFDMAt6EeiiCrav3vcpBQ" name="updateState" method="_APFOYQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_ANFDMQt6EeiiCrav3vcpBQ" name="context" type="_AGZMYAt6EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_ANFDNAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ANFqQAt6EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_ANFDMgt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AH_u4At6EeiiCrav3vcpBQ" name="SquarePaintStrategy">
        <ownedComment xmi:id="_APNxNwt6EeiiCrav3vcpBQ">
          <body>This is the square paint strategy that paints a square.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_ANFqQwt6EeiiCrav3vcpBQ" client="_AH_u4At6EeiiCrav3vcpBQ" supplier="_AHOS0At6EeiiCrav3vcpBQ" contract="_AHOS0At6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APF1YAt6EeiiCrav3vcpBQ" name="paint" specification="_AOFv0At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APF1YQt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APF1Ygt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>int halfSide = ball.getRad();
		g.setColor(ball.getCol());
		g.fillRect(ball.getLoc().x - halfSide, ball.getLoc().y - halfSide, 2 * halfSide, 2 * halfSide);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_ANGRUAt6EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_ANGRUQt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOFv0At6EeiiCrav3vcpBQ" name="paint" method="_APF1YAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AOFv0Qt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOGW4At6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AIA9AAt6EeiiCrav3vcpBQ" name="StraightStrategy">
        <ownedComment xmi:id="_APOYQAt6EeiiCrav3vcpBQ">
          <body>This class defines a Straight Strategy which defines a movement strategy for a ball that just
moves by changing it's location by its velocity components.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_ANHfcAt6EeiiCrav3vcpBQ" client="_AIA9AAt6EeiiCrav3vcpBQ" supplier="_AHSkQAt6EeiiCrav3vcpBQ" contract="_AHSkQAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APF1Ywt6EeiiCrav3vcpBQ" name="updateState" specification="_ANHfcQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APF1ZAt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APF1ZQt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_ANHfcQt6EeiiCrav3vcpBQ" name="updateState" method="_APF1Ywt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_ANHfcgt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANHfcwt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AIBkEAt6EeiiCrav3vcpBQ" name="SwellStrategy">
        <ownedComment xmi:id="_APOYQQt6EeiiCrav3vcpBQ">
          <body>This class defines a Swell Strategy which defines a movement strategy for a ball that grows it
in size, and once it reaches a certain size, it changes colors, and then shrinks slowly and repeats.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_ANIGggt6EeiiCrav3vcpBQ" client="_AIBkEAt6EeiiCrav3vcpBQ" supplier="_AHSkQAt6EeiiCrav3vcpBQ" contract="_AHSkQAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APF1Zgt6EeiiCrav3vcpBQ" name="updateState" specification="_ANIGgwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APF1Zwt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APF1aAt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getRad() >= 80) {
						ball.setRadDelta(1);
						ball.setRadDelta(ball.getRadDelta() * -1);
						ball.setCol(rzr.randomColor());
					} else if (ball.getRad() &lt;= 20) {
						ball.setRadDelta(-5);
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_ANIGgwt6EeiiCrav3vcpBQ" name="updateState" method="_APF1Zgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_ANIGhAt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANIGhQt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AICyMAt6EeiiCrav3vcpBQ" name="SwitcherStrategy">
        <ownedComment xmi:id="_APOYQgt6EeiiCrav3vcpBQ">
          <body>This class defines a Switcher Strategy which defines a strategy for a ball that can
change by updating the strategy.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_AOsMwQt6EeiiCrav3vcpBQ" name="strategy" visibility="private" isStatic="true" type="_AHSkQAt6EeiiCrav3vcpBQ" association="_APhTMQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOsz0At6EeiiCrav3vcpBQ" value="new StraightStrategy()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_ANJUoAt6EeiiCrav3vcpBQ" client="_AICyMAt6EeiiCrav3vcpBQ" supplier="_AHSkQAt6EeiiCrav3vcpBQ" contract="_AHSkQAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APF1aQt6EeiiCrav3vcpBQ" name="updateState" specification="_ANJUoQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APF1agt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APF1awt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					strategy.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APF1bAt6EeiiCrav3vcpBQ" name="setStrat" specification="_ANJ7swt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APF1bQt6EeiiCrav3vcpBQ" name="strat" type="_AHSkQAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>SwitcherStrategy.strategy = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APF1bgt6EeiiCrav3vcpBQ" name="getStrat" specification="_AIDZQAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APF1bwt6EeiiCrav3vcpBQ" type="_AHSkQAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return SwitcherStrategy.strategy;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AIDZQAt6EeiiCrav3vcpBQ" name="getStrat" isStatic="true" method="_APF1bgt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APOYRAt6EeiiCrav3vcpBQ">
            <body>This function returns the current strategy of the switcher balls.
	 * @return An IUpdateStrategy which is the current strategy of the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ANKiwAt6EeiiCrav3vcpBQ" type="_AHSkQAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ANJUoQt6EeiiCrav3vcpBQ" name="updateState" method="_APF1aQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_ANJUogt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANJUowt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ANJ7swt6EeiiCrav3vcpBQ" name="setStrat" isStatic="true" method="_APF1bAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APOYQwt6EeiiCrav3vcpBQ">
            <body>This function changes the strategy of all switcher balls to that of the parameter.
	 * @param strat An IUpdateStrategy which is the new strategy for all the balls to use</body>
          </ownedComment>
          <ownedParameter xmi:id="_ANJ7tAt6EeiiCrav3vcpBQ" name="strat" type="_AHSkQAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AIF1gAt6EeiiCrav3vcpBQ" name="TeleportStrategy">
        <ownedComment xmi:id="_APOYRQt6EeiiCrav3vcpBQ">
          <body>This class defines a Teleport Strategy which defines a movement strategy for a ball that randomly
changes the location of it, so it teleports.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_ANKiwQt6EeiiCrav3vcpBQ" client="_AIF1gAt6EeiiCrav3vcpBQ" supplier="_AHSkQAt6EeiiCrav3vcpBQ" contract="_AHSkQAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APGccAt6EeiiCrav3vcpBQ" name="updateState" specification="_ANKiwgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APGccQt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APGccgt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % 80 == 0) {
						ball.setLoc(rzr.randomLoc(new Rectangle(ball.getCon().getWidth() - ball.getRad(), ball.getCon().getHeight() - ball.getRad())));
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_ANKiwgt6EeiiCrav3vcpBQ" name="updateState" method="_APGccAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_ANKiwwt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANLJ0At6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AIIRwAt6EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy">
        <ownedComment xmi:id="_APOYRgt6EeiiCrav3vcpBQ">
          <body>This classd defines an upright composite paint strategy.
@author sn32, ll45
 *</body>
        </ownedComment>
        <generalization xmi:id="_ANLw5At6EeiiCrav3vcpBQ" general="_AGvKoAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APGccwt6EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" specification="_ANLJ1At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APGcdAt6EeiiCrav3vcpBQ" name="pstrats" type="_AGViAAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_APGcdQt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APGcdgt6EeiiCrav3vcpBQ" type="_AIIRwAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APGcdwt6EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" specification="_AOIMEAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APGceAt6EeiiCrav3vcpBQ" name="pstrats" type="_AGViAAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_APGceQt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APGcegt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APGcewt6EeiiCrav3vcpBQ" type="_AIIRwAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APGcfAt6EeiiCrav3vcpBQ" name="paintCfg" specification="_AOIzIAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APGcfQt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APGcfgt6EeiiCrav3vcpBQ" name="host" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>super.paintCfg(g, host);
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {
			at.scale(1.0, -1.0);
		}        
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_ANLJ1At6EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" method="_APGccwt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_ANLw4At6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_ANLw4Qt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_ANLJ1Qt6EeiiCrav3vcpBQ" name="pstrats" type="_AGViAAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ANLw4wt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ANLw4gt6EeiiCrav3vcpBQ" type="_AIIRwAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOIMEAt6EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" method="_APGcdwt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AOIMEwt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AOIMFAt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AOIMEQt6EeiiCrav3vcpBQ" name="pstrats" type="_AGViAAt6EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AOIMFgt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AOIMEgt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOIMFQt6EeiiCrav3vcpBQ" type="_AIIRwAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOIzIAt6EeiiCrav3vcpBQ" name="paintCfg" visibility="protected" method="_APGcfAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AOIzIQt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOIzIgt6EeiiCrav3vcpBQ" name="host" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AIJf4At6EeiiCrav3vcpBQ" name="UprightImageStrategy">
        <ownedComment xmi:id="_APOYRwt6EeiiCrav3vcpBQ">
          <body>This class defines an upright image.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_ANMX8At6EeiiCrav3vcpBQ" general="_AHTLUAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APGcfwt6EeiiCrav3vcpBQ" name="UprightImageStrategy" specification="_AIKG8At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APGcgAt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APGcgQt6EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APGcggt6EeiiCrav3vcpBQ" type="_AIJf4At6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APHDgAt6EeiiCrav3vcpBQ" name="UprightImageStrategy" specification="_AOIzIwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APHDgQt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APHDggt6EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APHDgwt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APHDhAt6EeiiCrav3vcpBQ" type="_AIJf4At6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor, at);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APHDhQt6EeiiCrav3vcpBQ" name="paintCfg" specification="_AOJaMwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APHDhgt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APHDhwt6EeiiCrav3vcpBQ" name="host" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>super.paintCfg(g, host);&#xD;
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {&#xD;
			at.scale(1.0, -1.0);&#xD;
		}       &#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AIKG8At6EeiiCrav3vcpBQ" name="UprightImageStrategy" method="_APGcfwt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AIKuAgt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AIKuAwt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AIKuAAt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AIKuAQt6EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AIKuBAt6EeiiCrav3vcpBQ" type="_AIJf4At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOIzIwt6EeiiCrav3vcpBQ" name="UprightImageStrategy" method="_APHDgAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AOJaMAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AOJaMQt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AOIzJAt6EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AOIzJQt6EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AOIzJgt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOJaMgt6EeiiCrav3vcpBQ" type="_AIJf4At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOJaMwt6EeiiCrav3vcpBQ" name="paintCfg" visibility="protected" method="_APHDhQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AOJaNAt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOJaNQt6EeiiCrav3vcpBQ" name="host" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AIL8IAt6EeiiCrav3vcpBQ" name="UprightShapePaintStrategy">
        <ownedComment xmi:id="_APOYSAt6EeiiCrav3vcpBQ">
          <body>This class defines an upright shape paint strategy.
@author sn32, ll45
 *</body>
        </ownedComment>
        <generalization xmi:id="_ANMX8Qt6EeiiCrav3vcpBQ" general="_AH4aIAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APHDiAt6EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" specification="_AOJaNgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APHDiQt6EeiiCrav3vcpBQ" name="shape" type="_AMqzgQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APHDigt6EeiiCrav3vcpBQ" type="_AIL8IAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(shape);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APHDiwt6EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" specification="_AOKBRAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APHDjAt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APHDjQt6EeiiCrav3vcpBQ" name="shape" type="_AMqzgQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APHDjgt6EeiiCrav3vcpBQ" type="_AIL8IAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, shape);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AOJaNgt6EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" method="_APHDiAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AOKBQQt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AOKBQgt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AOKBQAt6EeiiCrav3vcpBQ" name="shape" type="_AMqzgQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOKBQwt6EeiiCrav3vcpBQ" type="_AIL8IAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOKBRAt6EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" method="_APHDiwt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AOMdgAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AOMdgQt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AOKBRQt6EeiiCrav3vcpBQ" name="at" type="_AMWqcAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOKBRgt6EeiiCrav3vcpBQ" name="shape" type="_AMqzgQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOMdggt6EeiiCrav3vcpBQ" type="_AIL8IAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AIMjMAt6EeiiCrav3vcpBQ" name="WiggleStrategy">
        <ownedComment xmi:id="_APOYSQt6EeiiCrav3vcpBQ">
          <body>This class defines a Wiggle Strategy which defines a movement strategy for a ball that randomly
changes the velocity direction, so it wiggles.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_ANMX8gt6EeiiCrav3vcpBQ" client="_AIMjMAt6EeiiCrav3vcpBQ" supplier="_AHSkQAt6EeiiCrav3vcpBQ" contract="_AHSkQAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APHDjwt6EeiiCrav3vcpBQ" name="updateState" specification="_ANM_AAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APHDkAt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APHDkQt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % rzr.randomInt(2,  100) == 0) {
						ball.setVel(new Point(ball.getVel().x, ball.getVel().y * -1));
					} else if (ball.getItr() % rzr.randomInt(2, 100) == 0){
						ball.setVel(new Point(ball.getVel().x * -1, ball.getVel().y));
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_ANM_AAt6EeiiCrav3vcpBQ" name="updateState" method="_APHDjwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_ANM_AQt6EeiiCrav3vcpBQ" name="ball" type="_AGZMYAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANM_Agt6EeiiCrav3vcpBQ" name="dispatcher" type="_AINxUAt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APLU9wt6EeiiCrav3vcpBQ" name="" memberEnd="_AOfYcQt6EeiiCrav3vcpBQ _APLU-At6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APLU-At6EeiiCrav3vcpBQ" name="" type="_AGZMYAt6EeiiCrav3vcpBQ" association="_APLU9wt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APLU-Qt6EeiiCrav3vcpBQ" name="" memberEnd="_AOgmkAt6EeiiCrav3vcpBQ _APLU-gt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APLU-gt6EeiiCrav3vcpBQ" name="" type="_AGZMYAt6EeiiCrav3vcpBQ" association="_APLU-Qt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APL8AAt6EeiiCrav3vcpBQ" name="" memberEnd="_AOgmkwt6EeiiCrav3vcpBQ _APL8AQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APL8AQt6EeiiCrav3vcpBQ" name="" type="_AGZMYAt6EeiiCrav3vcpBQ" association="_APL8AAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APL8Agt6EeiiCrav3vcpBQ" name="" memberEnd="_AOgmlAt6EeiiCrav3vcpBQ _APL8Awt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APL8Awt6EeiiCrav3vcpBQ" name="" type="_AGZMYAt6EeiiCrav3vcpBQ" association="_APL8Agt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APW7IAt6EeiiCrav3vcpBQ" name="" memberEnd="_APW7IQt6EeiiCrav3vcpBQ _AHNrwAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APW7IQt6EeiiCrav3vcpBQ" name="" type="_AHNEsQt6EeiiCrav3vcpBQ" association="_APW7IAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APXiMQt6EeiiCrav3vcpBQ" name="" memberEnd="_APXiMgt6EeiiCrav3vcpBQ _AHNrwQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APXiMgt6EeiiCrav3vcpBQ" name="" type="_AHNEsQt6EeiiCrav3vcpBQ" association="_APXiMQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APYJQQt6EeiiCrav3vcpBQ" name="" memberEnd="_APYJQgt6EeiiCrav3vcpBQ _AHRWIQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APYJQgt6EeiiCrav3vcpBQ" name="" type="_AHQIAAt6EeiiCrav3vcpBQ" association="_APYJQQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APYwUAt6EeiiCrav3vcpBQ" name="" memberEnd="_APYwUQt6EeiiCrav3vcpBQ _AHR9MAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APYwUQt6EeiiCrav3vcpBQ" name="" type="_AHQIAAt6EeiiCrav3vcpBQ" association="_APYwUAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APbMkQt6EeiiCrav3vcpBQ" name="" memberEnd="_APbMkgt6EeiiCrav3vcpBQ _AOeKUgt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APbMkgt6EeiiCrav3vcpBQ" name="" type="_AGTFwAt6EeiiCrav3vcpBQ" association="_APbMkQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APbMlAt6EeiiCrav3vcpBQ" name="" memberEnd="_APbMlQt6EeiiCrav3vcpBQ _AOexYAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APbMlQt6EeiiCrav3vcpBQ" name="" type="_AGViAAt6EeiiCrav3vcpBQ" association="_APbMlAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APbzoQt6EeiiCrav3vcpBQ" name="" memberEnd="_APbzogt6EeiiCrav3vcpBQ _AOgmlQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APbzogt6EeiiCrav3vcpBQ" name="" type="_AGZMYAt6EeiiCrav3vcpBQ" association="_APbzoQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APbzpAt6EeiiCrav3vcpBQ" name="" memberEnd="_APbzpQt6EeiiCrav3vcpBQ _AOgmlwt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APbzpQt6EeiiCrav3vcpBQ" name="" type="_AGZMYAt6EeiiCrav3vcpBQ" association="_APbzpAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APdBwQt6EeiiCrav3vcpBQ" name="" memberEnd="_APdBwgt6EeiiCrav3vcpBQ _AOh0sAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APdBwgt6EeiiCrav3vcpBQ" name="" type="_AGlZoAt6EeiiCrav3vcpBQ" association="_APdBwQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APdBxAt6EeiiCrav3vcpBQ" name="" memberEnd="_APdBxQt6EeiiCrav3vcpBQ _AOibxQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APdBxQt6EeiiCrav3vcpBQ" name="" type="_AGlZoAt6EeiiCrav3vcpBQ" association="_APdBxAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APdo0Qt6EeiiCrav3vcpBQ" name="" memberEnd="_APdo0gt6EeiiCrav3vcpBQ _AOjC0gt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APdo0gt6EeiiCrav3vcpBQ" name="" type="_AGlZoAt6EeiiCrav3vcpBQ" association="_APdo0Qt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APdo1At6EeiiCrav3vcpBQ" name="" memberEnd="_APdo1Qt6EeiiCrav3vcpBQ _AOkQ8Qt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APdo1Qt6EeiiCrav3vcpBQ" name="" type="_AGy1AAt6EeiiCrav3vcpBQ" association="_APdo1At6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APeP4Qt6EeiiCrav3vcpBQ" name="" memberEnd="_APeP4gt6EeiiCrav3vcpBQ _AOlfEwt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APeP4gt6EeiiCrav3vcpBQ" name="" type="_AHTLUAt6EeiiCrav3vcpBQ" association="_APeP4Qt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APeP5At6EeiiCrav3vcpBQ" name="" memberEnd="_APeP5Qt6EeiiCrav3vcpBQ _AOmtMQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APeP5Qt6EeiiCrav3vcpBQ" name="" type="_AHTLUAt6EeiiCrav3vcpBQ" association="_APeP5At6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APe28Qt6EeiiCrav3vcpBQ" name="" memberEnd="_APe28gt6EeiiCrav3vcpBQ _AOmtNAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APe28gt6EeiiCrav3vcpBQ" name="" type="_AHTLUAt6EeiiCrav3vcpBQ" association="_APe28Qt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APe29At6EeiiCrav3vcpBQ" name="" memberEnd="_APe29Qt6EeiiCrav3vcpBQ _AOmtNgt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APe29Qt6EeiiCrav3vcpBQ" name="" type="_AHTLUAt6EeiiCrav3vcpBQ" association="_APe29At6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APe29wt6EeiiCrav3vcpBQ" name="" memberEnd="_APe2-At6EeiiCrav3vcpBQ _AOnUQAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APe2-At6EeiiCrav3vcpBQ" name="" type="_AHXcwAt6EeiiCrav3vcpBQ" association="_APe29wt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APfeAQt6EeiiCrav3vcpBQ" name="" memberEnd="_APfeAgt6EeiiCrav3vcpBQ _AOn7UAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APfeAgt6EeiiCrav3vcpBQ" name="" type="_AHZ5AAt6EeiiCrav3vcpBQ" association="_APfeAQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APfeBAt6EeiiCrav3vcpBQ" name="" memberEnd="_APfeBQt6EeiiCrav3vcpBQ _AOoiYAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APfeBQt6EeiiCrav3vcpBQ" name="" type="_AHbHIAt6EeiiCrav3vcpBQ" association="_APfeBAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APgFEQt6EeiiCrav3vcpBQ" name="" memberEnd="_APgFEgt6EeiiCrav3vcpBQ _AOpJcQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APgFEgt6EeiiCrav3vcpBQ" name="" type="_AHbHIAt6EeiiCrav3vcpBQ" association="_APgFEQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APgFFAt6EeiiCrav3vcpBQ" name="" memberEnd="_APgFFQt6EeiiCrav3vcpBQ _AOqXlAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APgFFQt6EeiiCrav3vcpBQ" name="" type="_AHbHIAt6EeiiCrav3vcpBQ" association="_APgFFAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APgsIQt6EeiiCrav3vcpBQ" name="" memberEnd="_APgsIgt6EeiiCrav3vcpBQ _AOq-oQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APgsIgt6EeiiCrav3vcpBQ" name="" type="_AH1W0At6EeiiCrav3vcpBQ" association="_APgsIQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APgsJAt6EeiiCrav3vcpBQ" name="" memberEnd="_APgsJQt6EeiiCrav3vcpBQ _AOq-owt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APgsJQt6EeiiCrav3vcpBQ" name="" type="_AH4aIAt6EeiiCrav3vcpBQ" association="_APgsJAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APhTMQt6EeiiCrav3vcpBQ" name="" memberEnd="_APhTMgt6EeiiCrav3vcpBQ _AOsMwQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APhTMgt6EeiiCrav3vcpBQ" name="" type="_AICyMAt6EeiiCrav3vcpBQ" association="_APhTMQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APoA5At6EeiiCrav3vcpBQ" name="" memberEnd="_APoA5Qt6EeiiCrav3vcpBQ _APNKMwt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APoA5Qt6EeiiCrav3vcpBQ" name="" type="_AHZ5AAt6EeiiCrav3vcpBQ" association="_APoA5At6EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_AEdSsgt6EeiiCrav3vcpBQ" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_AIxyAAt6EeiiCrav3vcpBQ" name="BallWorldView">
        <ownedComment xmi:id="_APO_VQt6EeiiCrav3vcpBQ">
          <body>This is the BallWorldView class, which has the frame on which our BallWorld is displayed.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <generalization xmi:id="_AOVAYgt6EeiiCrav3vcpBQ" general="_ANQpYQt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AOupAgt6EeiiCrav3vcpBQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOupAwt6EeiiCrav3vcpBQ" value="-7114823923004621639L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOupBAt6EeiiCrav3vcpBQ" name="contentPane" visibility="private" type="_ANRQcQt6EeiiCrav3vcpBQ" association="_APhTNwt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AOvQEQt6EeiiCrav3vcpBQ" name="pnlControl" visibility="private" isLeaf="true" type="_ANRQcQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APh6QQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOvQEgt6EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOvQFAt6EeiiCrav3vcpBQ" name="tfClassname" visibility="private" isLeaf="true" type="_ANR3gQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APh6RAt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOvQFQt6EeiiCrav3vcpBQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOweMAt6EeiiCrav3vcpBQ" name="btnClearBalls" visibility="private" isLeaf="true" type="_ANSekAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APihUQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOweMQt6EeiiCrav3vcpBQ" value="new JButton(&quot;Clear balls&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOweMwt6EeiiCrav3vcpBQ" name="adapter" visibility="private" type="_AI9_QAt6EeiiCrav3vcpBQ" association="_APihVAt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AOweNgt6EeiiCrav3vcpBQ" name="pnlCanvas" visibility="private" isLeaf="true" type="_ANRQcQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APihVwt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOweNwt6EeiiCrav3vcpBQ" value="new JPanel() {&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * This is a private variable that gives the class an ID to serialize and deserialize.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;private static final long serialVersionUID = 8303517520311377718L;&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Overridden paintComponent method to paint a shape in the panel.&#xA;&#x9;&#x9; * @param g The Graphics object to paint on.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public void paintComponent(Graphics g) {&#xA;&#x9;&#x9;&#x9;super.paintComponent(g); // Do everything normally done first, e.g. clear the screen.&#xA;&#x9;&#x9;&#x9;adapter.paintBalls(g);&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOweOQt6EeiiCrav3vcpBQ" name="btnAddToList" visibility="private" isLeaf="true" type="_ANSekAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APjIYQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOxFQAt6EeiiCrav3vcpBQ" value="new JButton(&quot;Add to list&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOxFQgt6EeiiCrav3vcpBQ" name="btnCombine" visibility="private" isLeaf="true" type="_ANSekAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APjIZAt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOxFQwt6EeiiCrav3vcpBQ" value="new JButton(&quot;Combine&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOxFRQt6EeiiCrav3vcpBQ" name="btnMakeSelectedBall" visibility="private" isLeaf="true" type="_ANSekAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APjvcQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOxFRgt6EeiiCrav3vcpBQ" value="new JButton(&quot;Make selected ball&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOyTYQt6EeiiCrav3vcpBQ" name="btnMakeSwitcher" visibility="private" isLeaf="true" type="_ANSekAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APjvdAt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOyTYgt6EeiiCrav3vcpBQ" value="new JButton(&quot;Make switcher&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOyTZAt6EeiiCrav3vcpBQ" name="btnSwitch" visibility="private" isLeaf="true" type="_ANSekAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APkWgQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOyTZQt6EeiiCrav3vcpBQ" value="new JButton(&quot;Switch&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOyTZwt6EeiiCrav3vcpBQ" name="comBoxTop" visibility="private" type="_ANTssQt6EeiiCrav3vcpBQ" association="_APk9kQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AO0voAt6EeiiCrav3vcpBQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AO1WsQt6EeiiCrav3vcpBQ" name="comBoxBottom" visibility="private" type="_ANTssQt6EeiiCrav3vcpBQ" association="_APlkoAt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AO1Wswt6EeiiCrav3vcpBQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AO19wQt6EeiiCrav3vcpBQ" name="pnlChangeList" visibility="private" isLeaf="true" type="_ANRQcQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APlkowt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AO19wgt6EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AO2k0Qt6EeiiCrav3vcpBQ" name="pnlDropDowns" visibility="private" isLeaf="true" type="_ANRQcQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APmLsQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AO2k0gt6EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AO3y8At6EeiiCrav3vcpBQ" name="pnlSwitching" visibility="private" isLeaf="true" type="_ANRQcQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APmywQt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AO3y8Qt6EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AO4aAAt6EeiiCrav3vcpBQ" name="pnlPaintStrats" visibility="private" isLeaf="true" type="_ANRQcQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APnZ0At6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AO4aAQt6EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AO5BEAt6EeiiCrav3vcpBQ" name="btnAddPaintStrat" visibility="private" isLeaf="true" type="_ANSekAt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APnZ0wt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AO5BEQt6EeiiCrav3vcpBQ" value="new JButton(&quot;Add&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AO5oIAt6EeiiCrav3vcpBQ" name="txtPaintStrat" visibility="private" isLeaf="true" type="_ANR3gQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APnZ1gt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AO5oIQt6EeiiCrav3vcpBQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AO5oIwt6EeiiCrav3vcpBQ" name="comBoxStrats" visibility="private" isLeaf="true" type="_ANTssQt6EeiiCrav3vcpBQ" isReadOnly="true" association="_APoA4Qt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AO6PMQt6EeiiCrav3vcpBQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APJfyQt6EeiiCrav3vcpBQ" name="getPanel" specification="_AIznMAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APJfygt6EeiiCrav3vcpBQ" type="_ANRQcQt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return pnlCanvas;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APJfywt6EeiiCrav3vcpBQ" name="BallWorldView" specification="_ANWI8At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APJfzAt6EeiiCrav3vcpBQ" name="adapter" type="_AI9_QAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APJfzQt6EeiiCrav3vcpBQ" type="_AIxyAAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>txtPaintStrat.setToolTipText(&quot;This is the text field where you can add paint strategies.&quot;);
		pnlPaintStrats.setToolTipText(&quot;This is the panel that holds the components that let you add paint strategies and select them.&quot;);
		pnlPaintStrats.add(txtPaintStrat);
		txtPaintStrat.setColumns(10);
		this.adapter = adapter;
		initGUI();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APJfzgt6EeiiCrav3vcpBQ" name="updateView" specification="_AI0OQAt6EeiiCrav3vcpBQ">
          <language>java</language>
          <body>repaint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APJfzwt6EeiiCrav3vcpBQ" name="getCanvas" specification="_AI0OQQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APJf0At6EeiiCrav3vcpBQ" type="_AMU1QAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return getPanel();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APJf0Qt6EeiiCrav3vcpBQ" name="initGUI" specification="_AI0OQgt6EeiiCrav3vcpBQ">
          <language>java</language>
          <body>setTitle(&quot;BallWorld&quot;);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setToolTipText(&quot;This is the content of the frame.&quot;);
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		pnlControl.setBackground(Color.DARK_GRAY);
		pnlControl.setToolTipText(&quot;This is the control panel that lets you create balls and clear them.&quot;);
		
		contentPane.add(pnlControl, BorderLayout.NORTH);
		pnlControl.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		pnlChangeList.setToolTipText(&quot;This panel is where you can add the type of ball you want to make to the drop down lists.&quot;);
		
		pnlControl.add(pnlChangeList);
		pnlChangeList.setLayout(new GridLayout(0, 1, 0, 0));
		
		pnlChangeList.add(tfClassname);
		tfClassname.setToolTipText(&quot;The type of the ball you want to make.&quot;);
		
		tfClassname.setColumns(10);
		btnAddToList.setToolTipText(&quot;This button adds the strategy type in the text field to the drop down boxes.&quot;);
		pnlChangeList.add(btnAddToList);
		btnAddToList.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (tfClassname.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem stratFac = adapter.addStrategy(tfClassname.getText());

             comBoxTop.insertItemAt(stratFac, 0);
             comBoxBottom.insertItemAt(stratFac, 0);
			}
		});
		pnlDropDowns.setToolTipText(&quot;This panel is for the drop down boxes, and buttons to make selected balls and combine strategies.&quot;);
		
		pnlControl.add(pnlDropDowns);
		pnlDropDowns.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSelectedBall.setToolTipText(&quot;This button makes a ball with the update strategy of the factory that's selected on the top drop down box.&quot;);
		pnlDropDowns.add(btnMakeSelectedBall);
		comBoxTop.setToolTipText(&quot;This is the drop down list on the top.&quot;);
		pnlDropDowns.add(comBoxTop);
		comBoxBottom.setToolTipText(&quot;This is the drop down list on the bottom.&quot;);
		pnlDropDowns.add(comBoxBottom);
		btnCombine.setToolTipText(&quot;This button combines the two strategy factories in the combo boxes.&quot;);
		pnlDropDowns.add(btnCombine);
		btnCombine.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem top = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem bottom = comBoxBottom.getItemAt(comBoxBottom.getSelectedIndex());
				
				if (top == null || bottom == null) {
					return;
				}
				
				TDropListItem combo = adapter.combineStrategies(top, bottom);
				comBoxTop.addItem(combo);
				comBoxBottom.addItem(combo);
			}
		});
		btnMakeSelectedBall.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem selected = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem paintFac = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (selected == null || paintFac == null) {
					return;
				}
				
				adapter.makeBall(selected, paintFac);
			}
		});
		pnlSwitching.setToolTipText(&quot;This panel is for the buttons related to making switcher balls and switching their strategies.&quot;);
		
		pnlControl.add(pnlSwitching);
		pnlSwitching.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSwitcher.setToolTipText(&quot;Click this item to make a switcher ball.&quot;);
		pnlSwitching.add(btnMakeSwitcher);
		btnSwitch.setToolTipText(&quot;Click this button to switch the switcher balls to the selected item in the top combo box.&quot;);
		pnlSwitching.add(btnSwitch);
		
		btnSwitch.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switchFac = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				
				if (switchFac == null) {
					return;
				}
				
				adapter.setSwitcherStrategy(switchFac);
			}
		});
		
		btnMakeSwitcher.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switcherStrat = adapter.getSwitcherFac();
				TDropListItem paintStrat = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (paintStrat == null) {
					return;
				}
				
				adapter.makeBall(switcherStrat, paintStrat);
			}
		});
		btnClearBalls.setToolTipText(&quot;Click this to clear the balls on the canvas.&quot;);
		btnClearBalls.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				adapter.clearBalls();
			}
		});
		
		pnlControl.add(btnClearBalls);
		
		pnlControl.add(pnlPaintStrats);
		pnlPaintStrats.setLayout(new GridLayout(0, 1, 0, 0));
		btnAddPaintStrat.setToolTipText(&quot;This is the button that lets you add paint strategies to the combo box below.&quot;);
		btnAddPaintStrat.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (txtPaintStrat.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem paintFac = adapter.addPaintFactory(txtPaintStrat.getText());
             comBoxStrats.insertItemAt(paintFac, 0);
			}
		});
		
		
		pnlPaintStrats.add(btnAddPaintStrat);
		comBoxStrats.setToolTipText(&quot;The is the combo box for the paint strategies that can be implemented.&quot;);
		
		pnlPaintStrats.add(comBoxStrats);
		pnlCanvas.setBackground(Color.LIGHT_GRAY);
		pnlCanvas.setToolTipText(&quot;This is the canvas where the balls move, and stay in.&quot;);
		
		contentPane.add(pnlCanvas, BorderLayout.CENTER);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APJf0gt6EeiiCrav3vcpBQ" name="start" specification="_AI01UAt6EeiiCrav3vcpBQ">
          <language>java</language>
          <body>setExtendedState(JFrame.MAXIMIZED_BOTH);
		setVisible(true);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AIznMAt6EeiiCrav3vcpBQ" name="getPanel" method="_APJfyQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APO_Vgt6EeiiCrav3vcpBQ">
            <body>This gets the canvas of the frame.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_AOVAYAt6EeiiCrav3vcpBQ" type="_ANRQcQt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AI0OQAt6EeiiCrav3vcpBQ" name="updateView" method="_APJfzgt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APO_WAt6EeiiCrav3vcpBQ">
            <body>Update the view by repainting</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_AI0OQQt6EeiiCrav3vcpBQ" name="getCanvas" method="_APJfzwt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APO_WQt6EeiiCrav3vcpBQ">
            <body>This function returns the canvas panel.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_AOVAYQt6EeiiCrav3vcpBQ" type="_AMU1QAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AI0OQgt6EeiiCrav3vcpBQ" name="initGUI" visibility="private" method="_APJf0Qt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APO_Wgt6EeiiCrav3vcpBQ">
            <body>This private function initializes the GUI.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_AI01UAt6EeiiCrav3vcpBQ" name="start" method="_APJf0gt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APO_Wwt6EeiiCrav3vcpBQ">
            <body>This function makes the frame visible after initializing it.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_ANWI8At6EeiiCrav3vcpBQ" name="BallWorldView" method="_APJfywt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_ANWwAAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_ANWwAQt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_APO_Vwt6EeiiCrav3vcpBQ">
            <body>Create the frame
	 * @param adapter An IView2ModelAdapter</body>
          </ownedComment>
          <ownedParameter xmi:id="_ANWI8Qt6EeiiCrav3vcpBQ" name="adapter" type="_AI9_QAt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_ANWwAgt6EeiiCrav3vcpBQ" type="_AIxyAAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_AI9_QAt6EeiiCrav3vcpBQ" name="IView2ModelAdapter">
        <ownedComment xmi:id="_APO_XAt6EeiiCrav3vcpBQ">
          <body>This is an interface which has the functions that the view wants the model to have.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_AJAbgAt6EeiiCrav3vcpBQ" name="switcherFac" type="_AOZR0At6EeiiCrav3vcpBQ" isReadOnly="true" association="_APZXYAt6EeiiCrav3vcpBQ"/>
        <ownedOperation xmi:id="_AI_NYQt6EeiiCrav3vcpBQ" name="clearBalls">
          <ownedComment xmi:id="_APO_XQt6EeiiCrav3vcpBQ">
            <body>This is a function that will tell the model to clear the balls.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_AI_0cAt6EeiiCrav3vcpBQ" name="addStrategy">
          <ownedComment xmi:id="_APO_Xwt6EeiiCrav3vcpBQ">
            <body>This function will take the given short strategy name and return a corresponding
     * something to put onto both drop lists.
     * @param classname The shortened class name of the desired strategy
     * @return Something to put onto both the drop lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AI_0cQt6EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AOZ44Qt6EeiiCrav3vcpBQ" type="_AOZR0At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AJAbgQt6EeiiCrav3vcpBQ" name="addPaintFactory">
          <ownedParameter xmi:id="_AJAbggt6EeiiCrav3vcpBQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AOaf9Qt6EeiiCrav3vcpBQ" type="_AOZR0At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOYDsAt6EeiiCrav3vcpBQ" name="paintBalls">
          <ownedComment xmi:id="_APO_Xgt6EeiiCrav3vcpBQ">
            <body>This is a function that will tell the model to paint the balls.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AOYqwAt6EeiiCrav3vcpBQ" name="g" type="_AMVcUgt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOZ44gt6EeiiCrav3vcpBQ" name="makeBall">
          <ownedComment xmi:id="_APO_YAt6EeiiCrav3vcpBQ">
            <body>This function will make a ball with the selected short strategy name.
     * @param selectedItem A shorten class name for the desired strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_AOZ44wt6EeiiCrav3vcpBQ" name="selectedItem" type="_AOZR0At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOZ45At6EeiiCrav3vcpBQ" name="paintStrat" type="_AOZR0At6EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOZ45Qt6EeiiCrav3vcpBQ" name="combineStrategies">
          <ownedComment xmi:id="_APO_YQt6EeiiCrav3vcpBQ">
            <body>This function will return a new object to put on both lists, given two items from the lists.
     * @param selectedItem1 An object from one drop list
     * @param selectedItem2 An object from the other drop list
     * @return An object to put back on both lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AOaf8At6EeiiCrav3vcpBQ" name="selectedItem1" type="_AOZR0At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOaf8Qt6EeiiCrav3vcpBQ" name="selectedItem2" type="_AOZR0At6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOaf8gt6EeiiCrav3vcpBQ" type="_AOZR0At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOaf8wt6EeiiCrav3vcpBQ" name="setSwitcherStrategy">
          <ownedComment xmi:id="_APO_Ygt6EeiiCrav3vcpBQ">
            <body>This function will change the current strategy of the switcher balls to whatever
     * strategy is made by the factory in the parameter.
     * @param switchFac An object from the top drop list.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AOaf9At6EeiiCrav3vcpBQ" name="switchFac" type="_AOZR0At6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AOZR0At6EeiiCrav3vcpBQ" name="TDropListItem"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_APZXYAt6EeiiCrav3vcpBQ" name="" memberEnd="_APZXYQt6EeiiCrav3vcpBQ _AJAbgAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APZXYQt6EeiiCrav3vcpBQ" name="" type="_AI9_QAt6EeiiCrav3vcpBQ" association="_APZXYAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APhTNwt6EeiiCrav3vcpBQ" name="" memberEnd="_APhTOAt6EeiiCrav3vcpBQ _AOupBAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APhTOAt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APhTNwt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APh6QQt6EeiiCrav3vcpBQ" name="" memberEnd="_APh6Qgt6EeiiCrav3vcpBQ _AOvQEQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APh6Qgt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APh6QQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APh6RAt6EeiiCrav3vcpBQ" name="" memberEnd="_APh6RQt6EeiiCrav3vcpBQ _AOvQFAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APh6RQt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APh6RAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APihUQt6EeiiCrav3vcpBQ" name="" memberEnd="_APihUgt6EeiiCrav3vcpBQ _AOweMAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APihUgt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APihUQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APihVAt6EeiiCrav3vcpBQ" name="" memberEnd="_APihVQt6EeiiCrav3vcpBQ _AOweMwt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APihVQt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APihVAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APihVwt6EeiiCrav3vcpBQ" name="" memberEnd="_APihWAt6EeiiCrav3vcpBQ _AOweNgt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APihWAt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APihVwt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APjIYQt6EeiiCrav3vcpBQ" name="" memberEnd="_APjIYgt6EeiiCrav3vcpBQ _AOweOQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APjIYgt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APjIYQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APjIZAt6EeiiCrav3vcpBQ" name="" memberEnd="_APjIZQt6EeiiCrav3vcpBQ _AOxFQgt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APjIZQt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APjIZAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APjvcQt6EeiiCrav3vcpBQ" name="" memberEnd="_APjvcgt6EeiiCrav3vcpBQ _AOxFRQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APjvcgt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APjvcQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APjvdAt6EeiiCrav3vcpBQ" name="" memberEnd="_APjvdQt6EeiiCrav3vcpBQ _AOyTYQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APjvdQt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APjvdAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APkWgQt6EeiiCrav3vcpBQ" name="" memberEnd="_APkWggt6EeiiCrav3vcpBQ _AOyTZAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APkWggt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APkWgQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APk9kQt6EeiiCrav3vcpBQ" name="" memberEnd="_APk9kgt6EeiiCrav3vcpBQ _AOyTZwt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APk9kgt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APk9kQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APlkoAt6EeiiCrav3vcpBQ" name="" memberEnd="_APlkoQt6EeiiCrav3vcpBQ _AO1WsQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APlkoQt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APlkoAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APlkowt6EeiiCrav3vcpBQ" name="" memberEnd="_APlkpAt6EeiiCrav3vcpBQ _AO19wQt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APlkpAt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APlkowt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APmLsQt6EeiiCrav3vcpBQ" name="" memberEnd="_APmLsgt6EeiiCrav3vcpBQ _AO2k0Qt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APmLsgt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APmLsQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APmywQt6EeiiCrav3vcpBQ" name="" memberEnd="_APmywgt6EeiiCrav3vcpBQ _AO3y8At6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APmywgt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APmywQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APnZ0At6EeiiCrav3vcpBQ" name="" memberEnd="_APnZ0Qt6EeiiCrav3vcpBQ _AO4aAAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APnZ0Qt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APnZ0At6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APnZ0wt6EeiiCrav3vcpBQ" name="" memberEnd="_APnZ1At6EeiiCrav3vcpBQ _AO5BEAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APnZ1At6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APnZ0wt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APnZ1gt6EeiiCrav3vcpBQ" name="" memberEnd="_APnZ1wt6EeiiCrav3vcpBQ _AO5oIAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APnZ1wt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APnZ1gt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APoA4Qt6EeiiCrav3vcpBQ" name="" memberEnd="_APoA4gt6EeiiCrav3vcpBQ _AO5oIwt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APoA4gt6EeiiCrav3vcpBQ" name="" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APoA4Qt6EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_AEeg0At6EeiiCrav3vcpBQ" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_AGQCcAt6EeiiCrav3vcpBQ" name="BallWorldController">
        <ownedComment xmi:id="_APKt4At6EeiiCrav3vcpBQ">
          <body>This is the BallWorldController, that has private variables for model and view,
and is able to interface between them.
@author sn32, kyl3, lka2, swong
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_AOdjQAt6EeiiCrav3vcpBQ" name="model" visibility="private" type="_AGlZoAt6EeiiCrav3vcpBQ" association="_APZXYwt6EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_AOdjQgt6EeiiCrav3vcpBQ" name="view" visibility="private" type="_AIxyAAt6EeiiCrav3vcpBQ" association="_APZ-cQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO8rcAt6EeiiCrav3vcpBQ" name="main" specification="_AGRQkAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO8rcQt6EeiiCrav3vcpBQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AO8rcgt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(() -> {
			try {
				(new BallWorldController()).start();
			} catch (Exception e) {
				e.printStackTrace();
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO9SgAt6EeiiCrav3vcpBQ" name="BallWorldController" specification="_AGR3oAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AO9SgQt6EeiiCrav3vcpBQ" type="_AGQCcAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>model = new BallWorldModel(new IModel2ViewAdapter() {

			/**
			 * This function from the IModel2ViewAdapter allows the controller
			 * to tell the view to update.
			 */
			@Override
			public void update() {
				view.updateView();
			}

			/**
			 * This function from the IModel2ViewAdapter allows the controller to get
			 * the canvas from the view.
			 */
			@Override
			public Container getCanvas() {
				return view.getCanvas();
			}
		});
		
		view = new BallWorldView&lt;IStrategyFac>(new IView2ModelAdapter&lt;IStrategyFac>() {
	        /**
	         * Returns an IStrategyFac that can instantiate the strategy specified
	         * by classname. Returns the error strategy factory if classname is null.
	         * The toString() of the returned factory is the classname.
	         * @param classname Shortened name of desired strategy
	         * @return A factory to make that strategy
	         */
			@Override
	        public IStrategyFac addStrategy(String classname) {
	        		return model.makeStrategyFac(classname);
	        	}

	        /**
	         * Add a ball to the system with a strategy as given by the given IStrategyFac
	         * @param selectedItem The fully qualified name of the desired strategy.
	         */
	        @Override
	        public void makeBall(IStrategyFac selectedItem, IStrategyFac paintStrat) {
	        		if (null != selectedItem &amp;&amp; paintStrat != null) {
	        			model.makeBall(selectedItem.make(), paintStrat.makePaint());
	        		}
	        	}
			
			/**
			 * Returns an IStrategyFac that can instantiate a MultiStrategy with the
			 * two strategies made by the two given IStrategyFac objects. Returns
			 * the error strategy factory if either supplied factory is null. The
			 * toString() of the returned factory is the toString()'s of the two given
			 * factories, concatenated with &quot;-&quot;.
			 * @param selectedItem1 An IStrategyFac for a strategy
			 * @param selectedItem2 An IStrategyFac for a strategy
			 * @return An IStrategyFac for the composition of the two strategies
			 */
	        @Override
			public IStrategyFac combineStrategies(IStrategyFac selectedItem1, IStrategyFac selectedItem2) {
				return model.combineStrategyFacs(selectedItem1, selectedItem2);
			}
			
			/**
			 * This function tells the model to clear all the balls from the canvas.
			 */
			@Override
			public void clearBalls() {
				model.clearBalls();
			}
			
			/**
			 * This function tells the model to paint and update the status of all the balls.
			 */
			@Override 
			public void paintBalls(Graphics g) {
				model.update(g); // see is this is correct or if a paint method is needed
			}

			/**
			 * This function sets the strategy of the switcher balls to whatever is made by
			 * the input's make method.
			 * @param switchFac The new strategy factory whose make method returns the new strategy
			 * for the switcher balls
			 */
			@Override
			public void setSwitcherStrategy(IStrategyFac switchFac) {
				model.setSwitcherStrategy(switchFac);
			}

			/**
			 * This function returns the strategy factory that is making the switcher balls' current strategy.
			 * @return An IStrategyFactory that makes the current switcher balls' strategy.
			 */
			@Override
			public IStrategyFac getSwitcherFac() {
				return model.getSwitcherFac();
			}

			@Override
			public IStrategyFac addPaintFactory(String text) {
				return model.makePaintFactory(text);
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AO9Sggt6EeiiCrav3vcpBQ" name="start" specification="_AGSeswt6EeiiCrav3vcpBQ">
          <language>java</language>
          <body>view.start();
		model.start();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AGRQkAt6EeiiCrav3vcpBQ" name="main" isStatic="true" method="_AO8rcAt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APKt4Qt6EeiiCrav3vcpBQ">
            <body>This main method starts the BallWorldController.
	 * @param args Command line arguments.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AGRQkQt6EeiiCrav3vcpBQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AGRQkgt6EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AGR3oAt6EeiiCrav3vcpBQ" name="BallWorldController" method="_AO9SgAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AGSesAt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AGSesQt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_APKt4gt6EeiiCrav3vcpBQ">
            <body>This is the constructor for BallWorldController, which
	 * creates anonymous inner classes for the adapters, and defines their functions.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AGSesgt6EeiiCrav3vcpBQ" type="_AGQCcAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AGSeswt6EeiiCrav3vcpBQ" name="start" method="_AO9Sggt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APKt4wt6EeiiCrav3vcpBQ">
            <body>This function starts the view and model.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APZXYwt6EeiiCrav3vcpBQ" name="" memberEnd="_APZXZAt6EeiiCrav3vcpBQ _AOdjQAt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APZXZAt6EeiiCrav3vcpBQ" name="" type="_AGQCcAt6EeiiCrav3vcpBQ" association="_APZXYwt6EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APZ-cQt6EeiiCrav3vcpBQ" name="" memberEnd="_APZ-cgt6EeiiCrav3vcpBQ _AOdjQgt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APZ-cgt6EeiiCrav3vcpBQ" name="" type="_AGQCcAt6EeiiCrav3vcpBQ" association="_APZ-cQt6EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_AEo44Qt6EeiiCrav3vcpBQ" name="util">
      <packagedElement xmi:type="uml:Class" xmi:id="_AINxUAt6EeiiCrav3vcpBQ" name="Dispatcher">
        <ownedComment xmi:id="_APOYSgt6EeiiCrav3vcpBQ">
          <body>A simplified Observable class that immediately notifies its Observers when its
notifyAll() method is called. The changed state of the Dispatcher does not need
to be separately set.
@author sn32, kyl3</body>
        </ownedComment>
        <generalization xmi:id="_AOMdhQt6EeiiCrav3vcpBQ" general="_AMcKAQt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APHDkgt6EeiiCrav3vcpBQ" name="notifyAll" specification="_AOMdgwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APHDkwt6EeiiCrav3vcpBQ" name="param" type="_ANujcQt6EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>setChanged();
     notifyObservers(param);
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AOMdgwt6EeiiCrav3vcpBQ" name="notifyAll" method="_APHDkgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AOMdhAt6EeiiCrav3vcpBQ" name="param" type="_ANujcQt6EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_AIOYYAt6EeiiCrav3vcpBQ" name="IRandomizer">
        <ownedOperation xmi:id="_AIO_cAt6EeiiCrav3vcpBQ" name="randomInt">
          <ownedComment xmi:id="_APOYTQt6EeiiCrav3vcpBQ">
            <body>Returns a random integer greater than or equal to min and less than or equal to max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return an int subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_AIO_cQt6EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AIO_cgt6EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AIO_cwt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AIPmgAt6EeiiCrav3vcpBQ" name="randomDouble">
          <ownedComment xmi:id="_APOYTgt6EeiiCrav3vcpBQ">
            <body>Returns a random double greater than or equal to min and less than max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return a double subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_AIPmgQt6EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AIPmggt6EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AIPmgwt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AIQNkAt6EeiiCrav3vcpBQ" name="randomColor">
          <ownedComment xmi:id="_APOYUgt6EeiiCrav3vcpBQ">
            <body>Generates a random color
	 * @return a random Color object</body>
          </ownedComment>
          <ownedParameter xmi:id="_AOO5wQt6EeiiCrav3vcpBQ" type="_AMa74At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AONEkAt6EeiiCrav3vcpBQ" name="randomLoc">
          <ownedComment xmi:id="_APOYSwt6EeiiCrav3vcpBQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than rect.width
	 * and 0 less than y less than rect.height.
	 * @param rect The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_AONEkQt6EeiiCrav3vcpBQ" name="rect" type="_AMiQogt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AONEkgt6EeiiCrav3vcpBQ" type="_AMbi8Qt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AONroQt6EeiiCrav3vcpBQ" name="randomLoc">
          <ownedComment xmi:id="_APOYTAt6EeiiCrav3vcpBQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than dim.width
	 * and 0 less than y less than dim.height.
	 * @param dim The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_AONrogt6EeiiCrav3vcpBQ" name="dim" type="_AONEkwt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AONrowt6EeiiCrav3vcpBQ" type="_AMbi8Qt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOOSsAt6EeiiCrav3vcpBQ" name="randomVel">
          <ownedComment xmi:id="_APOYTwt6EeiiCrav3vcpBQ">
            <body>Returns a random velocity (as a Point) subject to the constraint that the absolute value
	 * of the velocity (speed) within the bound (inclusive) defined by rect. Thus the resultant
	 * velocity may be negative. The given Rectangle should use all positive values.
	 * @param rect The bounds for the absolute value of the velocity in the x and y directions.  
	 * @return a Point object with x and y subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AOOSsQt6EeiiCrav3vcpBQ" name="rect" type="_AMiQogt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOOSsgt6EeiiCrav3vcpBQ" type="_AMbi8Qt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOOSswt6EeiiCrav3vcpBQ" name="randomDim">
          <ownedComment xmi:id="_APOYUAt6EeiiCrav3vcpBQ">
            <body>Returns a random square Dimension, whose width is maxDim.width/2 less than width less than maxDim.width
	 * @param maxDim  The bounds on the side of the created Dimension.
	 * @return A random square Dimension subject to the given bound</body>
          </ownedComment>
          <ownedParameter xmi:id="_AOOStAt6EeiiCrav3vcpBQ" name="maxDim" type="_AONEkwt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOOStQt6EeiiCrav3vcpBQ" type="_AONEkwt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOOStgt6EeiiCrav3vcpBQ" name="randomBounds">
          <ownedComment xmi:id="_APOYUQt6EeiiCrav3vcpBQ">
            <body>Generates a randomly located and sized rectangle
	 * @param rect  The bounds for the location of the created rectangle
	 * @param maxDim  The bounds for the dimensions of the create rectangle
	 * @return A Rectangle with location and dimensions subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AOOStwt6EeiiCrav3vcpBQ" name="rect" type="_AMiQogt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOOSuAt6EeiiCrav3vcpBQ" name="maxDim" type="_AONEkwt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOO5wAt6EeiiCrav3vcpBQ" type="_AMiQogt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOO5wgt6EeiiCrav3vcpBQ" name="randomChoice">
          <ownedComment xmi:id="_APOYUwt6EeiiCrav3vcpBQ">
            <body>Returns a random choice of one of two objects, x and y, where probX is the probability 
	 * that x will be picked (0 less than x less than 1).
	 * @param x The first of two choices
	 * @param y The second of two choices
	 * @param probX  The probability of the first choice
	 * @return Either x or y as per the probability of choosing them.</body>
          </ownedComment>
          <ownedParameter xmi:id="_AOO5wwt6EeiiCrav3vcpBQ" name="x" type="_ANujcQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOO5xAt6EeiiCrav3vcpBQ" name="y" type="_ANujcQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOO5xQt6EeiiCrav3vcpBQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AOO5xgt6EeiiCrav3vcpBQ" type="_ANujcQt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AIT38At6EeiiCrav3vcpBQ" name="Randomizer">
        <ownedComment xmi:id="_APO_UAt6EeiiCrav3vcpBQ">
          <body>Utility class that supplies  class routines for generating various random values</body>
        </ownedComment>
        <ownedAttribute xmi:id="_AOsz0gt6EeiiCrav3vcpBQ" name="Singleton" isStatic="true" type="_AIT38At6EeiiCrav3vcpBQ" association="_APhTNAt6EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOta4At6EeiiCrav3vcpBQ" value="new Randomizer()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_ANONIAt6EeiiCrav3vcpBQ" client="_AIT38At6EeiiCrav3vcpBQ" supplier="_AIOYYAt6EeiiCrav3vcpBQ" contract="_AIOYYAt6EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APHqkAt6EeiiCrav3vcpBQ" name="randomLoc" specification="_AOPg0At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APHqkQt6EeiiCrav3vcpBQ" name="rect" type="_AMiQogt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APHqkgt6EeiiCrav3vcpBQ" type="_AMbi8Qt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, rect.width), randomInt(0, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APHqkwt6EeiiCrav3vcpBQ" name="randomLoc" specification="_AOQu8At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APHqlAt6EeiiCrav3vcpBQ" name="dim" type="_AONEkwt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APHqlQt6EeiiCrav3vcpBQ" type="_AMbi8Qt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, dim.width), randomInt(0, dim.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APHqlgt6EeiiCrav3vcpBQ" name="randomInt" specification="_AIkWoQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APHqlwt6EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APHqmAt6EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APHqmQt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int)Math.floor((Math.random()*(1+max-min))+min);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APHqmgt6EeiiCrav3vcpBQ" name="randomDouble" specification="_AIlkwAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APHqmwt6EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APHqnAt6EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APHqnQt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return (Math.random()*(max-min))+min;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APIRoAt6EeiiCrav3vcpBQ" name="randomVel" specification="_AOQu8wt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APIRoQt6EeiiCrav3vcpBQ" name="rect" type="_AMiQogt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_APIRogt6EeiiCrav3vcpBQ" type="_AMbi8Qt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (new Point (randomInt(-rect.width, rect.width), randomInt(-rect.height, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_API4sAt6EeiiCrav3vcpBQ" name="randomDim" specification="_AORWAAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_API4sQt6EeiiCrav3vcpBQ" name="maxDim" type="_AONEkwt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_API4sgt6EeiiCrav3vcpBQ" type="_AONEkwt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>int x =  randomInt(maxDim.width/2,maxDim.width);
		return new Dimension(x,x);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_API4swt6EeiiCrav3vcpBQ" name="randomBounds" specification="_AOR9EAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_API4tAt6EeiiCrav3vcpBQ" name="rect" type="_AMiQogt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_API4tQt6EeiiCrav3vcpBQ" name="maxDim" type="_AONEkwt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_API4tgt6EeiiCrav3vcpBQ" type="_AMiQogt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return new Rectangle(randomLoc(rect), randomDim(maxDim));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_API4twt6EeiiCrav3vcpBQ" name="randomColor" specification="_AImL0At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_API4uAt6EeiiCrav3vcpBQ" type="_AMa74At6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return new Color( randomInt(0,255),randomInt(0,255),randomInt(0,255));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_API4uQt6EeiiCrav3vcpBQ" name="randomChoice" specification="_AOSkIAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_API4ugt6EeiiCrav3vcpBQ" name="x" type="_ANujcQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_API4uwt6EeiiCrav3vcpBQ" name="y" type="_ANujcQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_API4vAt6EeiiCrav3vcpBQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_API4vQt6EeiiCrav3vcpBQ" type="_ANujcQt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (Math.random() &lt; probX) ? x: y;

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AIjvkAt6EeiiCrav3vcpBQ" name="Randomizer" visibility="private">
          <eAnnotations xmi:id="_AIjvkQt6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AIjvkgt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_AIkWoAt6EeiiCrav3vcpBQ" type="_AIT38At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AIkWoQt6EeiiCrav3vcpBQ" name="randomInt" method="_APHqlgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AIkWogt6EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AIkWowt6EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AIkWpAt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AIlkwAt6EeiiCrav3vcpBQ" name="randomDouble" method="_APHqmgt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AIlkwQt6EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AIlkwgt6EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AIlkwwt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AImL0At6EeiiCrav3vcpBQ" name="randomColor" method="_API4twt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AOR9FAt6EeiiCrav3vcpBQ" type="_AMa74At6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOPg0At6EeiiCrav3vcpBQ" name="randomLoc" method="_APHqkAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AOPg0Qt6EeiiCrav3vcpBQ" name="rect" type="_AMiQogt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOPg0gt6EeiiCrav3vcpBQ" type="_AMbi8Qt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOQu8At6EeiiCrav3vcpBQ" name="randomLoc" method="_APHqkwt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AOQu8Qt6EeiiCrav3vcpBQ" name="dim" type="_AONEkwt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOQu8gt6EeiiCrav3vcpBQ" type="_AMbi8Qt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOQu8wt6EeiiCrav3vcpBQ" name="randomVel" method="_APIRoAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AOQu9At6EeiiCrav3vcpBQ" name="rect" type="_AMiQogt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOQu9Qt6EeiiCrav3vcpBQ" type="_AMbi8Qt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AORWAAt6EeiiCrav3vcpBQ" name="randomDim" method="_API4sAt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AORWAQt6EeiiCrav3vcpBQ" name="maxDim" type="_AONEkwt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AORWAgt6EeiiCrav3vcpBQ" type="_AONEkwt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOR9EAt6EeiiCrav3vcpBQ" name="randomBounds" method="_API4swt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AOR9EQt6EeiiCrav3vcpBQ" name="rect" type="_AMiQogt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOR9Egt6EeiiCrav3vcpBQ" name="maxDim" type="_AONEkwt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOR9Ewt6EeiiCrav3vcpBQ" type="_AMiQogt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AOSkIAt6EeiiCrav3vcpBQ" name="randomChoice" method="_API4uQt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_AOSkIQt6EeiiCrav3vcpBQ" name="x" type="_ANujcQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOSkIgt6EeiiCrav3vcpBQ" name="y" type="_ANujcQt6EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_AOSkIwt6EeiiCrav3vcpBQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AOSkJAt6EeiiCrav3vcpBQ" type="_ANujcQt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_AIuusAt6EeiiCrav3vcpBQ" name="SineMaker">
        <ownedComment xmi:id="_APO_UQt6EeiiCrav3vcpBQ">
          <body>A utility class that can be used to create smoothly varying sinusoidal
numerical data.
Note that this is not a singleton class nor does it have static methods as
its behavior depends on the minimum, maximum and delta values given to 
its constructor.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_AOta4gt6EeiiCrav3vcpBQ" name="_mid" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOuB8Qt6EeiiCrav3vcpBQ" name="_ampl" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOuB8wt6EeiiCrav3vcpBQ" name="_delta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AOuB9Qt6EeiiCrav3vcpBQ" name="_theta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_AOupAAt6EeiiCrav3vcpBQ" value="-Math.PI/2.0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APJfwAt6EeiiCrav3vcpBQ" name="SineMaker" specification="_AIv80At6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APJfwQt6EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APJfwgt6EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APJfwwt6EeiiCrav3vcpBQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_APJfxAt6EeiiCrav3vcpBQ" type="_AIuusAt6EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>_mid = (max+min)/2.0;
		_ampl = (max-min)/2.0;
		_delta = delta;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APJfxQt6EeiiCrav3vcpBQ" name="getDblVal" specification="_AIv81wt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APJfxgt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double result = _mid + _ampl*Math.sin(_theta);
		_theta += _delta; // shorthand for _theta = _theta + _delta
		return result;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_APJfxwt6EeiiCrav3vcpBQ" name="getIntVal" specification="_AIwj4Qt6EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_APJfyAt6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int) Math.round(getDblVal());
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_AIv80At6EeiiCrav3vcpBQ" name="SineMaker" method="_APJfwAt6EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_AIv81At6EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_AIv81Qt6EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_APO_Ugt6EeiiCrav3vcpBQ">
            <body>The constructor takes several values to control the object's behavior.
	 * @param min The minimum and initial value to produce.
	 * @param max The maximum value to produce.
	 * @param delta The amount in radians that the generating angle is incremented each time
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_AIv80Qt6EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AIv80gt6EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AIv80wt6EeiiCrav3vcpBQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AIv81gt6EeiiCrav3vcpBQ" type="_AIuusAt6EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_AIv81wt6EeiiCrav3vcpBQ" name="getDblVal" method="_APJfxQt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APO_Uwt6EeiiCrav3vcpBQ">
            <body>Returns a different value each time it is called.  The value varies smoothly in a 
	 * sinusoidal fashion, incrementing each time as per the above specified delta 
	 * angle increase.
	 * @return the next value as a double</body>
          </ownedComment>
          <ownedParameter xmi:id="_AIwj4At6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AIwj4Qt6EeiiCrav3vcpBQ" name="getIntVal" method="_APJfxwt6EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_APO_VAt6EeiiCrav3vcpBQ">
            <body>Same as getDblVal, but returns the result rounded to the nearest integer.
	 * Note that getDblVal and getIntVal are not independent as getIntVal merely calls
	 * getDblVal.
	 * @return the next value as an int</body>
          </ownedComment>
          <ownedParameter xmi:id="_AIxK8At6EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_APhTNAt6EeiiCrav3vcpBQ" name="" memberEnd="_APhTNQt6EeiiCrav3vcpBQ _AOsz0gt6EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_APhTNQt6EeiiCrav3vcpBQ" name="" type="_AIT38At6EeiiCrav3vcpBQ" association="_APhTNAt6EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_AE9pAAt6EeiiCrav3vcpBQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_AE-QEAt6EeiiCrav3vcpBQ" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_AMi3sQt6EeiiCrav3vcpBQ" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ANQpYQt6EeiiCrav3vcpBQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ANRQcQt6EeiiCrav3vcpBQ" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ANR3gQt6EeiiCrav3vcpBQ" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ANSekAt6EeiiCrav3vcpBQ" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ANTssQt6EeiiCrav3vcpBQ" name="JComboBox"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="__qQC8At5EeiiCrav3vcpBQ">
      <eAnnotations xmi:id="__qQqAAt5EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="__qRREAt5EeiiCrav3vcpBQ" base_Package="__cU7sAt5EeiiCrav3vcpBQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Array xmi:id="_AGRQkwt6EeiiCrav3vcpBQ" base_Element="_AGRQkQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AGWJEgt6EeiiCrav3vcpBQ" base_Element="_AGViAQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AGkLgwt6EeiiCrav3vcpBQ" base_Element="_AGkLgAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AG0DIAt6EeiiCrav3vcpBQ" base_Element="_AGzcEAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_AG0qMAt6EeiiCrav3vcpBQ" base_Element="_AGzcEAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_AG0qMQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AHNEsAt6EeiiCrav3vcpBQ" base_Element="_AHMdoAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AHRWIwt6EeiiCrav3vcpBQ" base_Element="_AHRWIQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AHR9Mgt6EeiiCrav3vcpBQ" base_Element="_AHR9MAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AHupIwt6EeiiCrav3vcpBQ" base_Element="_AHuCEAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_AHvQMAt6EeiiCrav3vcpBQ" base_Element="_AHuCEAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_AHvQMQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AH3MBQt6EeiiCrav3vcpBQ" base_Element="_AH3MAAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_AH3zEAt6EeiiCrav3vcpBQ" base_Element="_AH3MAAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_AH3zEQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AH62YAt6EeiiCrav3vcpBQ" base_Element="_AH6PUAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_AH7dcAt6EeiiCrav3vcpBQ" base_Element="_AH6PUAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_AH7dcQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AIjvkwt6EeiiCrav3vcpBQ" base_Element="_AIjvkAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_AIyZEAt6EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_AIxyAAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_AI_NYAt6EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_AI9_QAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_AMU1QQt6EeiiCrav3vcpBQ" base_Element="_AMU1QAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_AMVcUQt6EeiiCrav3vcpBQ" base_Element="_AMVcUAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_AMWDYAt6EeiiCrav3vcpBQ" base_Element="_AMVcUgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_AMXRgAt6EeiiCrav3vcpBQ" base_Element="_AMWqcAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AMYfoAt6EeiiCrav3vcpBQ" base_Element="_AMX4kwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_AMYfoQt6EeiiCrav3vcpBQ" base_Element="_AMX4kwt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_AMYfogt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AMZtwgt6EeiiCrav3vcpBQ" base_Element="_AMZtwAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_AMbi8At6EeiiCrav3vcpBQ" base_Element="_AMa74At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_AMcKAAt6EeiiCrav3vcpBQ" base_Element="_AMbi8Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_AMcxEAt6EeiiCrav3vcpBQ" base_Element="_AMcKAQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_AMdYIAt6EeiiCrav3vcpBQ" base_Element="_AMcxEQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AMhpkgt6EeiiCrav3vcpBQ" base_Element="_AMhpkAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_AMiQoAt6EeiiCrav3vcpBQ" base_Element="_AMhpkAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_AMiQoQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_AMi3sAt6EeiiCrav3vcpBQ" base_Element="_AMiQogt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_AMi3sgt6EeiiCrav3vcpBQ" base_Element="_AMi3sQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AMmiFAt6EeiiCrav3vcpBQ" base_Element="_AMmiEQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_AMnJIAt6EeiiCrav3vcpBQ" base_Element="_AMmiEQt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_AMnJIQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AMnwMAt6EeiiCrav3vcpBQ" base_Element="_AMnJIwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_AMnwMQt6EeiiCrav3vcpBQ" base_Element="_AMnJIwt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_AMnwMgt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AMqMcgt6EeiiCrav3vcpBQ" base_Element="_AMplYQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_AMqMcwt6EeiiCrav3vcpBQ" base_Element="_AMplYQt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_AMqMdAt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_AMrakAt6EeiiCrav3vcpBQ" base_Element="_AMqzgQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_AMsBoAt6EeiiCrav3vcpBQ" base_Element="_AMrakQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AMtPwwt6EeiiCrav3vcpBQ" base_Element="_AMtPwAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_AMt20At6EeiiCrav3vcpBQ" base_Element="_AMtPwAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_AMt20Qt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_AMt21Qt6EeiiCrav3vcpBQ" base_Element="_AMt20gt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_AMyvUAt6EeiiCrav3vcpBQ" base_Element="_AMyIQAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_AM0kgAt6EeiiCrav3vcpBQ" base_Element="_AMyvUQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_AM1yoAt6EeiiCrav3vcpBQ" base_Element="_AM0kgQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_AM3AwAt6EeiiCrav3vcpBQ" base_Element="_AM2ZsAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Array xmi:id="_AM8gUAt6EeiiCrav3vcpBQ" base_Element="_AM7SMQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AM-8kAt6EeiiCrav3vcpBQ" base_Element="_AM-Vhgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_AM-8kQt6EeiiCrav3vcpBQ" base_Element="_AM-Vhgt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_AM-8kgt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_AM_joQt6EeiiCrav3vcpBQ" base_Element="_AM_joAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANFDMwt6EeiiCrav3vcpBQ" base_Element="_ANFDMAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_ANFqQQt6EeiiCrav3vcpBQ" base_Element="_ANFDMAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_ANFqQgt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANGRUgt6EeiiCrav3vcpBQ" base_Element="_ANGRUAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANHfdAt6EeiiCrav3vcpBQ" base_Element="_ANHfcQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_ANIGgAt6EeiiCrav3vcpBQ" base_Element="_ANHfcQt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_ANIGgQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANItkAt6EeiiCrav3vcpBQ" base_Element="_ANIGgwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_ANItkQt6EeiiCrav3vcpBQ" base_Element="_ANIGgwt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_ANItkgt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANJ7sAt6EeiiCrav3vcpBQ" base_Element="_ANJUoQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_ANJ7sQt6EeiiCrav3vcpBQ" base_Element="_ANJUoQt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_ANJ7sgt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANLJ0Qt6EeiiCrav3vcpBQ" base_Element="_ANKiwgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_ANLJ0gt6EeiiCrav3vcpBQ" base_Element="_ANKiwgt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_ANLJ0wt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANM_Awt6EeiiCrav3vcpBQ" base_Element="_ANM_AAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_ANM_BAt6EeiiCrav3vcpBQ" base_Element="_ANM_AAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_ANM_BQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ANQpYAt6EeiiCrav3vcpBQ" base_Element="_ANQCUAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ANRQcAt6EeiiCrav3vcpBQ" base_Element="_ANQpYQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ANR3gAt6EeiiCrav3vcpBQ" base_Element="_ANRQcQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ANR3ggt6EeiiCrav3vcpBQ" base_Element="_ANR3gQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ANSekQt6EeiiCrav3vcpBQ" base_Element="_ANSekAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ANTFoAt6EeiiCrav3vcpBQ" base_Element="_ANSekgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ANTssAt6EeiiCrav3vcpBQ" base_Element="_ANTFoQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ANUTwAt6EeiiCrav3vcpBQ" base_Element="_ANTssQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ANU60At6EeiiCrav3vcpBQ" base_Element="_ANUTwQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ANVh4At6EeiiCrav3vcpBQ" base_Element="_ANU60Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_ANXXEAt6EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_ANWI8Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANkLYgt6EeiiCrav3vcpBQ" base_Element="_ANjkUAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_ANkycAt6EeiiCrav3vcpBQ" base_Element="_ANjkUAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_ANlZgAt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANmAkgt6EeiiCrav3vcpBQ" base_Element="_ANlZgQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_ANmAkwt6EeiiCrav3vcpBQ" base_Element="_ANlZgQt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_ANmAlAt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANoc0At6EeiiCrav3vcpBQ" base_Element="_ANn1wAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_ANujcgt6EeiiCrav3vcpBQ" base_Element="_ANujcQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANzb8At6EeiiCrav3vcpBQ" base_Element="_ANy04At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_ANzb8Qt6EeiiCrav3vcpBQ" base_Element="_ANy04At6EeiiCrav3vcpBQ">
    <annotations xmi:id="_ANzb8gt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AN7-1At6EeiiCrav3vcpBQ" base_Element="_AN7-0At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_AN7-1Qt6EeiiCrav3vcpBQ" base_Element="_AN7-0At6EeiiCrav3vcpBQ">
    <annotations xmi:id="_AN8l4At6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AN-bEAt6EeiiCrav3vcpBQ" base_Element="_AN90AAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_AN-bEQt6EeiiCrav3vcpBQ" base_Element="_AN90AAt6EeiiCrav3vcpBQ">
    <annotations xmi:id="_AN_CIAt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOGW4Qt6EeiiCrav3vcpBQ" base_Element="_AOFv0At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_AOHlAAt6EeiiCrav3vcpBQ" base_Element="_AOFv0At6EeiiCrav3vcpBQ">
    <annotations xmi:id="_AOHlAQt6EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_AONroAt6EeiiCrav3vcpBQ" base_Element="_AONEkwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_AOZ44At6EeiiCrav3vcpBQ" base_Element="_AOZR0At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOdjQQt6EeiiCrav3vcpBQ" base_Element="_AOdjQAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_AOeKUAt6EeiiCrav3vcpBQ" genericsValue="?" base_Element="_AOdjQgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOeKUQt6EeiiCrav3vcpBQ" base_Element="_AOdjQgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOeKUwt6EeiiCrav3vcpBQ" base_Element="_AOeKUgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOfYcAt6EeiiCrav3vcpBQ" base_Element="_AOexYAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOgmkgt6EeiiCrav3vcpBQ" base_Element="_AOgmkQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOgmlgt6EeiiCrav3vcpBQ" base_Element="_AOgmlQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOhNoQt6EeiiCrav3vcpBQ" base_Element="_AOgmmAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOibwQt6EeiiCrav3vcpBQ" base_Element="_AOh0sAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOibxAt6EeiiCrav3vcpBQ" base_Element="_AOibwgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOjC0Qt6EeiiCrav3vcpBQ" base_Element="_AOibxQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOkQ8At6EeiiCrav3vcpBQ" base_Element="_AOjC0gt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOk4Agt6EeiiCrav3vcpBQ" base_Element="_AOk4AAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOlfEgt6EeiiCrav3vcpBQ" base_Element="_AOlfEAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOmtMAt6EeiiCrav3vcpBQ" base_Element="_AOlfEwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOmtNQt6EeiiCrav3vcpBQ" base_Element="_AOmtNAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOmtNwt6EeiiCrav3vcpBQ" base_Element="_AOmtNgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Array xmi:id="_AOnUQgt6EeiiCrav3vcpBQ" base_Element="_AOnUQAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOnUQwt6EeiiCrav3vcpBQ" base_Element="_AOnUQAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_AOn7UQt6EeiiCrav3vcpBQ" base_Property="_AOn7UAt6EeiiCrav3vcpBQ" siblings="_APNKMwt6EeiiCrav3vcpBQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOn7Ugt6EeiiCrav3vcpBQ" base_Element="_AOn7UAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOpJcAt6EeiiCrav3vcpBQ" base_Element="_AOoiYAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOqXkAt6EeiiCrav3vcpBQ" base_Element="_AOpJcQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOqXkwt6EeiiCrav3vcpBQ" base_Element="_AOqXkQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Array xmi:id="_AOqXlgt6EeiiCrav3vcpBQ" base_Element="_AOqXlAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOq-oAt6EeiiCrav3vcpBQ" base_Element="_AOqXlAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOq-pAt6EeiiCrav3vcpBQ" base_Element="_AOq-owt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOrlsgt6EeiiCrav3vcpBQ" base_Element="_AOrlsAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOsMwAt6EeiiCrav3vcpBQ" base_Element="_AOrlswt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOsz0Qt6EeiiCrav3vcpBQ" base_Element="_AOsMwQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOta4Qt6EeiiCrav3vcpBQ" base_Element="_AOsz0gt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOuB8At6EeiiCrav3vcpBQ" base_Element="_AOta4gt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOuB8gt6EeiiCrav3vcpBQ" base_Element="_AOuB8Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOuB9At6EeiiCrav3vcpBQ" base_Element="_AOuB8wt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOupAQt6EeiiCrav3vcpBQ" base_Element="_AOuB9Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOvQEAt6EeiiCrav3vcpBQ" base_Element="_AOupBAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOvQEwt6EeiiCrav3vcpBQ" base_Element="_AOvQEQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOv3IAt6EeiiCrav3vcpBQ" base_Element="_AOvQFAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOweMgt6EeiiCrav3vcpBQ" base_Element="_AOweMAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_AOweNAt6EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_AOweMwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOweNQt6EeiiCrav3vcpBQ" base_Element="_AOweMwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOweOAt6EeiiCrav3vcpBQ" base_Element="_AOweNgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOxFQQt6EeiiCrav3vcpBQ" base_Element="_AOweOQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOxFRAt6EeiiCrav3vcpBQ" base_Element="_AOxFQgt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOyTYAt6EeiiCrav3vcpBQ" base_Element="_AOxFRQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOyTYwt6EeiiCrav3vcpBQ" base_Element="_AOyTYQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOyTZgt6EeiiCrav3vcpBQ" base_Element="_AOyTZAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_AO0IkAt6EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_AOyTZwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AO1WsAt6EeiiCrav3vcpBQ" base_Element="_AOyTZwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_AO1Wsgt6EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_AO1WsQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AO19wAt6EeiiCrav3vcpBQ" base_Element="_AO1WsQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AO2k0At6EeiiCrav3vcpBQ" base_Element="_AO19wQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AO3L4At6EeiiCrav3vcpBQ" base_Element="_AO2k0Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AO3y8gt6EeiiCrav3vcpBQ" base_Element="_AO3y8At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AO4aAgt6EeiiCrav3vcpBQ" base_Element="_AO4aAAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AO5BEgt6EeiiCrav3vcpBQ" base_Element="_AO5BEAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AO5oIgt6EeiiCrav3vcpBQ" base_Element="_AO5oIAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_AO6PMAt6EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_AO5oIwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AO6PMgt6EeiiCrav3vcpBQ" base_Element="_AO5oIwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_APNxMAt6EeiiCrav3vcpBQ" base_Property="_APNKMwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_APNxMQt6EeiiCrav3vcpBQ" base_Element="_APNKMwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APXiMAt6EeiiCrav3vcpBQ" base_Element="_APW7IAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APYJQAt6EeiiCrav3vcpBQ" base_Element="_APXiMQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APYJQwt6EeiiCrav3vcpBQ" base_Element="_APYJQQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APYwUgt6EeiiCrav3vcpBQ" base_Element="_APYwUAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APZXYgt6EeiiCrav3vcpBQ" base_Element="_APZXYAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APZ-cAt6EeiiCrav3vcpBQ" base_Element="_APZXYwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APbMkAt6EeiiCrav3vcpBQ" base_Element="_APZ-cQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APbMkwt6EeiiCrav3vcpBQ" base_Element="_APbMkQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APbzoAt6EeiiCrav3vcpBQ" base_Element="_APbMlAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APbzowt6EeiiCrav3vcpBQ" base_Element="_APbzoQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APdBwAt6EeiiCrav3vcpBQ" base_Element="_APbzpAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APdBwwt6EeiiCrav3vcpBQ" base_Element="_APdBwQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APdo0At6EeiiCrav3vcpBQ" base_Element="_APdBxAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APdo0wt6EeiiCrav3vcpBQ" base_Element="_APdo0Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APeP4At6EeiiCrav3vcpBQ" base_Element="_APdo1At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APeP4wt6EeiiCrav3vcpBQ" base_Element="_APeP4Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APe28At6EeiiCrav3vcpBQ" base_Element="_APeP5At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APe28wt6EeiiCrav3vcpBQ" base_Element="_APe28Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APe29gt6EeiiCrav3vcpBQ" base_Element="_APe29At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APfeAAt6EeiiCrav3vcpBQ" base_Element="_APe29wt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APfeAwt6EeiiCrav3vcpBQ" base_Element="_APfeAQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APgFEAt6EeiiCrav3vcpBQ" base_Element="_APfeBAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APgFEwt6EeiiCrav3vcpBQ" base_Element="_APgFEQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APgsIAt6EeiiCrav3vcpBQ" base_Element="_APgFFAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APgsIwt6EeiiCrav3vcpBQ" base_Element="_APgsIQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APhTMAt6EeiiCrav3vcpBQ" base_Element="_APgsJAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APhTMwt6EeiiCrav3vcpBQ" base_Element="_APhTMQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APhTNgt6EeiiCrav3vcpBQ" base_Element="_APhTNAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APh6QAt6EeiiCrav3vcpBQ" base_Element="_APhTNwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APh6Qwt6EeiiCrav3vcpBQ" base_Element="_APh6QQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APihUAt6EeiiCrav3vcpBQ" base_Element="_APh6RAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APihUwt6EeiiCrav3vcpBQ" base_Element="_APihUQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APihVgt6EeiiCrav3vcpBQ" base_Element="_APihVAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APjIYAt6EeiiCrav3vcpBQ" base_Element="_APihVwt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APjIYwt6EeiiCrav3vcpBQ" base_Element="_APjIYQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APjvcAt6EeiiCrav3vcpBQ" base_Element="_APjIZAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APjvcwt6EeiiCrav3vcpBQ" base_Element="_APjvcQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APkWgAt6EeiiCrav3vcpBQ" base_Element="_APjvdAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APk9kAt6EeiiCrav3vcpBQ" base_Element="_APkWgQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APk9kwt6EeiiCrav3vcpBQ" base_Element="_APk9kQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APlkogt6EeiiCrav3vcpBQ" base_Element="_APlkoAt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APmLsAt6EeiiCrav3vcpBQ" base_Element="_APlkowt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APmywAt6EeiiCrav3vcpBQ" base_Element="_APmLsQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APmywwt6EeiiCrav3vcpBQ" base_Element="_APmywQt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APnZ0gt6EeiiCrav3vcpBQ" base_Element="_APnZ0At6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APnZ1Qt6EeiiCrav3vcpBQ" base_Element="_APnZ0wt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APoA4At6EeiiCrav3vcpBQ" base_Element="_APnZ1gt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APoA4wt6EeiiCrav3vcpBQ" base_Element="_APoA4Qt6EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_APon8At6EeiiCrav3vcpBQ" base_Element="_APoA5At6EeiiCrav3vcpBQ"/>
</xmi:XMI>
