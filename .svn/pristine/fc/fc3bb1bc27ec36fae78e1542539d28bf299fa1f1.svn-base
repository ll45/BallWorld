<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_uYOcUAuLEei-6eSvavMBRQ" name="Painting">
    <eAnnotations xmi:id="_ubX28AuLEei-6eSvavMBRQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_ubYeAAuLEei-6eSvavMBRQ" source="codegen">
        <details xmi:id="_ubYeAQuLEei-6eSvavMBRQ" key="codegenDirectory" value="/HW04/src"/>
        <details xmi:id="_vHXaQAuLEei-6eSvavMBRQ" key="AssociatedSourceCode" value="/HW04/src/controller/BallWorldController.java;133705207/1;/HW04/src/model/APaintStrategy.java;721565961/1;/HW04/src/model/Ball.java;1353458354/1;/HW04/src/model/BallPaintStrategy.java;538568874/1;/HW04/src/model/BallWorldModel.java;1140298352/1;/HW04/src/model/BreathingStrategy.java;569949667/1;/HW04/src/model/ColorStrategy.java;783269627/1;/HW04/src/model/CrashStrategy.java;4279759508/1;/HW04/src/model/EarthImagePaintStrategy.java;3813467846/1;/HW04/src/model/EllipsePaintStrategy.java;292774861/1;/HW04/src/model/EllipseShapeFactory.java;1636135608/1;/HW04/src/model/FastStrategy.java;3009224450/1;/HW04/src/model/HumbirdImagePaintStrategy.java;2095673321/1;/HW04/src/model/IBallCmd.java;2100560540/1;/HW04/src/model/IModel2ViewAdapter.java;715642539/1;/HW04/src/model/IPaintStrategy.java;556726924/1;/HW04/src/model/IShapeFactory.java;847786940/1;/HW04/src/model/IStrategyFac.java;3581042476/1;/HW04/src/model/IUpdateStrategy.java;1651050839/1;/HW04/src/model/ImagePaintStrategy.java;2009657845/1;/HW04/src/model/JupiterImagePaintStrategy.java;1682751580/1;/HW04/src/model/MarioImagePaintStrategy.java;594299252/1;/HW04/src/model/MarioMarsImagePaintStrategy.java;1637406599/1;/HW04/src/model/MarsImagePaintStrategy.java;4133321496/1;/HW04/src/model/MultiPaintStrategy.java;3595012638/1;/HW04/src/model/MultiStrategy.java;1636671415/1;/HW04/src/model/ReefImagePaintStrategy.java;2064349040/1;/HW04/src/model/SaturnImagePaintStrategy.java;1579071161/1;/HW04/src/model/ShapePaintStrategy.java;851889235/1;/HW04/src/model/SheepImagePaintStrategy.java;3365962051/1;/HW04/src/model/SoccerImagePaintStrategy.java;3158118968/1;/HW04/src/model/SonicImagePaintStrategy.java;1922529648/1;/HW04/src/model/SpawnStrategy.java;3065061180/1;/HW04/src/model/SquarePaintStrategy.java;217889410/1;/HW04/src/model/StraightStrategy.java;3914615527/1;/HW04/src/model/SwellStrategy.java;1352457759/1;/HW04/src/model/SwitcherStrategy.java;2480375116/1;/HW04/src/model/TeleportStrategy.java;2565727986/1;/HW04/src/model/UprightImagePaintStrategy.java;3704479299/1;/HW04/src/model/VenusImagePaintStrategy.java;2065086542/1;/HW04/src/model/WiggleStrategy.java;4246409471/1;/HW04/src/util/Dispatcher.java;77051068/1;/HW04/src/util/IRandomizer.java;4224991458/1;/HW04/src/util/Randomizer.java;1541548940/1;/HW04/src/util/SineMaker.java;1378225368/1;/HW04/src/view/BallWorldView.java;1506153628/1;/HW04/src/view/IView2ModelAdapter.java;2164964966/1;/HW04/src/model/RectangleEllipsePaintStrategy.java;4123402189/1;/HW04/src/model/RectanglePaintStrategy.java;3899500153/1;/HW04/src/model/RectangleShapeFactory.java;599087808/1;/HW04/src/model/UprightMultiPaintStrategy.java;3416028041/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_u6UcwAuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_u6UcwQuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_u6UcwguLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_u6UcwwuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_u6UcxAuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_u6VD0AuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_u6VD0QuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_u6VD0guLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_u6VD0wuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_u6VD1AuLEei-6eSvavMBRQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_u6VD1QuLEei-6eSvavMBRQ" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_u6W5AAuLEei-6eSvavMBRQ" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_u--6UAuLEei-6eSvavMBRQ" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_u_QAEAuLEei-6eSvavMBRQ" name="Ellipse2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_SU_E-AuUEei-6eSvavMBRQ" name="Rectangle2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_u65EgAuLEei-6eSvavMBRQ" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_u_nzgQuLEei-6eSvavMBRQ" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_u_nzgwuLEei-6eSvavMBRQ" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_u-9FIAuLEei-6eSvavMBRQ" name="Container"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u-9sMQuLEei-6eSvavMBRQ" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u--TQQuLEei-6eSvavMBRQ" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u_BWkAuLEei-6eSvavMBRQ" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u_B9oQuLEei-6eSvavMBRQ" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u_IEQAuLEei-6eSvavMBRQ" name="Rectangle"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_u_PZAAuLEei-6eSvavMBRQ" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u_URgAuLEei-6eSvavMBRQ" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u_U4kQuLEei-6eSvavMBRQ" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u_VfoAuLEei-6eSvavMBRQ" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u_VfoguLEei-6eSvavMBRQ" name="Toolkit"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u_l-UAuLEei-6eSvavMBRQ" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u_oakwuLEei-6eSvavMBRQ" name="FlowLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u_pBoAuLEei-6eSvavMBRQ" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vABcIQuLEei-6eSvavMBRQ" name="Dimension"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_u6YuMAuLEei-6eSvavMBRQ" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_u_CksQuLEei-6eSvavMBRQ" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_u_DLwAuLEei-6eSvavMBRQ" name="Observer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_u_11-guLEei-6eSvavMBRQ" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_u_11-wuLEei-6eSvavMBRQ" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_u6Vq4AuLEei-6eSvavMBRQ" name="model">
      <packagedElement xmi:type="uml:Class" xmi:id="_u7b3EAuLEei-6eSvavMBRQ" name="APaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_vAwb9AuLEei-6eSvavMBRQ">
          <body>This is an abstract class that defines the top level affine transform based
paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_vAQssguLEei-6eSvavMBRQ" name="at" visibility="package" type="_u--6UAuLEei-6eSvavMBRQ" association="_vBBhsQuLEei-6eSvavMBRQ"/>
        <interfaceRealization xmi:id="_u-_hYQuLEei-6eSvavMBRQ" client="_u7b3EAuLEei-6eSvavMBRQ" supplier="_u71fsQuLEei-6eSvavMBRQ" contract="_u71fsQuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAjnpguLEei-6eSvavMBRQ" name="APaintStrategy" specification="_u_zZsAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAjnpwuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAjnqAuLEei-6eSvavMBRQ" type="_u7b3EAuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>this.at = at;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAjnqQuLEei-6eSvavMBRQ" name="paint" specification="_u_zZtQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAjnqguLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAjnqwuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>double scale = ball.getRad();
		at.setToTranslation(ball.getLoc().x, ball.getLoc().y);
		at.scale(scale, scale);
		at.rotate(ball.getVel().x, ball.getVel().y);
		g.setColor(ball.getCol());    
		paintCfg(g, ball);
		paintXfrm(g, ball, at);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAjnrAuLEei-6eSvavMBRQ" name="getAT" specification="_u7dFMAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAjnrQuLEei-6eSvavMBRQ" type="_u--6UAuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.at;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u7b3EQuLEei-6eSvavMBRQ" name="APaintStrategy">
          <eAnnotations xmi:id="_u7ceIAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u7ceIQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u7ceIwuLEei-6eSvavMBRQ" type="_u7b3EAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u7dFMAuLEei-6eSvavMBRQ" name="getAT" method="_vAjnrAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAxDAAuLEei-6eSvavMBRQ">
            <body>This is a getter that returns the Affine Transform
	 * @return An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_0AxAuLEei-6eSvavMBRQ" type="_u--6UAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_AIcAuLEei-6eSvavMBRQ" name="init">
          <ownedParameter xmi:id="_u_AIcQuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_zZsAuLEei-6eSvavMBRQ" name="APaintStrategy" method="_vAjnpguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u_zZsguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u_zZswuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_vAwb9QuLEei-6eSvavMBRQ">
            <body>This is the constructor that takes in Affine Transform.
	 * @param at An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_zZsQuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_zZtAuLEei-6eSvavMBRQ" type="_u7b3EAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_zZtQuLEei-6eSvavMBRQ" name="paint" method="_vAjnqQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAwb9guLEei-6eSvavMBRQ">
            <body>This function paints the ball on the passed in Graphics object.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_zZtguLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_zZtwuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_0AwAuLEei-6eSvavMBRQ" name="paintCfg" visibility="protected">
          <ownedParameter xmi:id="_u_0AwQuLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_0AwguLEei-6eSvavMBRQ" name="host" type="_u7eTUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_0n0AuLEei-6eSvavMBRQ" name="paintXfrm" isAbstract="true">
          <ownedComment xmi:id="_vAxDAQuLEei-6eSvavMBRQ">
            <body>This function is a secondary paint operation that is the last step of the above
	 * paint method, which does not calculate its own affine transform, but instead,
	 * uses a supplied affine transform.
	 * @param g A graphics object
	 * @param host The host ball
	 * @param at An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_0n0QuLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_0n0guLEei-6eSvavMBRQ" name="host" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_0n0wuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u7eTUAuLEei-6eSvavMBRQ" name="Ball">
        <ownedComment xmi:id="_vAxDAguLEei-6eSvavMBRQ">
          <body>This is the Ball class, which is what is drawn on the screen, and implements
Observer to use dispatching.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_vARTwQuLEei-6eSvavMBRQ" name="col" type="_u_BWkAuLEei-6eSvavMBRQ" association="_vAxDAwuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_vAR60AuLEei-6eSvavMBRQ" name="loc" type="_u_B9oQuLEei-6eSvavMBRQ" association="_vAxqEAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_vAR60QuLEei-6eSvavMBRQ" name="rad" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAR60wuLEei-6eSvavMBRQ" name="vel" type="_u_B9oQuLEei-6eSvavMBRQ" association="_vAxqEguLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_vASh4AuLEei-6eSvavMBRQ" name="con" type="_u-9FIAuLEei-6eSvavMBRQ" association="_vAyRIQuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_vASh4QuLEei-6eSvavMBRQ" name="strat" visibility="private" type="_u7378AuLEei-6eSvavMBRQ" association="_vBCv0AuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_vASh4wuLEei-6eSvavMBRQ" name="paintStrat" type="_u71fsQuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBCv0wuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_vASh5AuLEei-6eSvavMBRQ" name="itr" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vASh5QuLEei-6eSvavMBRQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vATI8QuLEei-6eSvavMBRQ" name="radDelta">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_u_0n1AuLEei-6eSvavMBRQ" client="_u7eTUAuLEei-6eSvavMBRQ" supplier="_u_DLwAuLEei-6eSvavMBRQ" contract="_u_DLwAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAkOsAuLEei-6eSvavMBRQ" name="Ball" specification="_u_1O4AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAkOsQuLEei-6eSvavMBRQ" name="col" type="_u_BWkAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAkOsguLEei-6eSvavMBRQ" name="loc" type="_u_B9oQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAkOswuLEei-6eSvavMBRQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAkOtAuLEei-6eSvavMBRQ" name="vel" type="_u_B9oQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAkOtQuLEei-6eSvavMBRQ" name="con" type="_u-9FIAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAkOtguLEei-6eSvavMBRQ" name="updateStrat" type="_u7378AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAkOtwuLEei-6eSvavMBRQ" name="paintStrat" type="_u71fsQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAkOuAuLEei-6eSvavMBRQ" type="_u7eTUAuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>setCol(col);
		setLoc(loc);
		setRad(rad);
		setVel(vel);
		setCon(con);
		setStrat(updateStrat);
		setRadDelta(5);
		setPaintStrat(paintStrat);
		paintStrat.init(this);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAkOuQuLEei-6eSvavMBRQ" name="getRad" specification="_u7fhcAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAkOuguLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAkOuwuLEei-6eSvavMBRQ" name="setRad" specification="_u7fhcguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAkOvAuLEei-6eSvavMBRQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.rad = rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAkOvQuLEei-6eSvavMBRQ" name="move" specification="_u7fhdAuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>setLoc(new Point(getLoc().x + getVel().x, getLoc().y + getVel().y));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAkOvguLEei-6eSvavMBRQ" name="update" specification="_u_2dAQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAkOvwuLEei-6eSvavMBRQ" name="o" type="_u_CksQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAkOwAuLEei-6eSvavMBRQ" name="cmd" type="_u_11-wuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>((IBallCmd) cmd).apply(this, (Dispatcher) o);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAkOwQuLEei-6eSvavMBRQ" name="paint" specification="_u_3EEAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAkOwguLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>getPaintStrat().paint(g, this);
//		g.setColor(this.getCol());
//		g.fillOval(this.getLoc().x - getRad(), this.getLoc().y - getRad(), getRad() * 2, getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAkOwwuLEei-6eSvavMBRQ" name="getStrat" specification="_u7fhdQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAkOxAuLEei-6eSvavMBRQ" type="_u7378AuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAk1wAuLEei-6eSvavMBRQ" name="setStrat" specification="_u_EZ4QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAk1wQuLEei-6eSvavMBRQ" name="strat" type="_u7378AuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>this.strat = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAk1wguLEei-6eSvavMBRQ" name="getItr" specification="_u7gIgAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAk1wwuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAk1xAuLEei-6eSvavMBRQ" name="setItr" specification="_u7gIgguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAk1xQuLEei-6eSvavMBRQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.itr = itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAk1xguLEei-6eSvavMBRQ" name="bounce" specification="_u7gvkAuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>// Boundaries of the window
		int rightWall = getCon().getWidth();
		int bottomWall = getCon().getHeight();
		int leftWall = 0;
		int topWall = 0;
		
		int leftX = getLoc().x - getRad();
		int rightX = getLoc().x + getRad();
		
		int bottomY = getLoc().y + getRad();
		int topY = getLoc().y - getRad();
		
		int maxX = rightWall - getRad();
		int minX = getRad();
		
		int maxY = bottomWall - getRad();
		int minY = getRad();

		// Collision detected with left or right wall.
		if (leftX == leftWall || rightX == rightWall) {
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond right wall.
		else if (rightX > rightWall) {
			int diff = getLoc().x - maxX;
			setLoc(new Point(maxX - diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond left wall.
		else if (leftX &lt; leftWall) {
			int diff = minX - getLoc().x;
			setLoc(new Point(minX + diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Collision detected with top or bottom wall.
		else if (topY == topWall || bottomY == bottomWall) {
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond bottom wall.
		else if (bottomY > bottomWall) {
			int diff = getLoc().y - maxY;
			setLoc(new Point(getLoc().x, maxY - diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond top wall.
		else if (topY &lt; topWall) {
			int diff = minY - getLoc().y;
			setLoc(new Point(getLoc().x, minY + diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAk1xwuLEei-6eSvavMBRQ" name="setPaintStrat" specification="_u_EZ4wuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAk1yAuLEei-6eSvavMBRQ" name="paintStrat" type="_u71fsQuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>this.paintStrat = paintStrat;
		getPaintStrat().init(this);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u7fhcAuLEei-6eSvavMBRQ" name="getRad" method="_vAkOuQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAyRJAuLEei-6eSvavMBRQ">
            <body>This returns the radius of the ball.
	 * @return the rad</body>
          </ownedComment>
          <ownedParameter xmi:id="_u7fhcQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_u7fhcguLEei-6eSvavMBRQ" name="setRad" method="_vAkOuwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAyRJQuLEei-6eSvavMBRQ">
            <body>This sets the radius of the ball.
	 * @param rad the rad to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_u7fhcwuLEei-6eSvavMBRQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_u7fhdAuLEei-6eSvavMBRQ" name="move" method="_vAkOvQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAyRJguLEei-6eSvavMBRQ">
            <body>This function tells the ball to update its current location by the respective velocity
	 * component.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_u7fhdQuLEei-6eSvavMBRQ" name="getStrat" method="_vAkOwwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAyRKQuLEei-6eSvavMBRQ">
            <body>This function returns the ball's movement strategy.
	 * @return the strat</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_EZ4AuLEei-6eSvavMBRQ" type="_u7378AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u7gIgAuLEei-6eSvavMBRQ" name="getItr" method="_vAk1wguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAy4MQuLEei-6eSvavMBRQ">
            <body>This function returns the current iteration of the ball.
	 * @return the itr</body>
          </ownedComment>
          <ownedParameter xmi:id="_u7gIgQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_u7gIgguLEei-6eSvavMBRQ" name="setItr" method="_vAk1xAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAy4MguLEei-6eSvavMBRQ">
            <body>This function sets the current iteration of the ball.
	 * @param itr the itr to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_u7gIgwuLEei-6eSvavMBRQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_u7gvkAuLEei-6eSvavMBRQ" name="bounce" method="_vAk1xguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAy4MwuLEei-6eSvavMBRQ">
            <body>This function checks to see if the ball has come into contact with one of the boundaries of the 
	 *  panel. If it has, this function reverses the velocity of the ball, simulating a rebound off
	 *  of the wall. If, due to the delay of the GUI thread, the ball has passed one of the panel
	 *  boundaries, this function moves the ball to the location it would be at if it had properly 
	 *  bounced off of the wall, and sets the velocity to its appropriate value.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_u_EZ4QuLEei-6eSvavMBRQ" name="setStrat" method="_vAk1wAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAy4MAuLEei-6eSvavMBRQ">
            <body>This function sets the ball's movement strategy.
	 * @param strat the strat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_EZ4guLEei-6eSvavMBRQ" name="strat" type="_u7378AuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_EZ4wuLEei-6eSvavMBRQ" name="setPaintStrat" method="_vAk1xwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAy4NAuLEei-6eSvavMBRQ">
            <body>This function sets the paint strategy.
	 * @param paintStrat the paintStrat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_EZ5AuLEei-6eSvavMBRQ" name="paintStrat" type="_u71fsQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_1O4AuLEei-6eSvavMBRQ" name="Ball" method="_vAkOsAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u_119wuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u_11-AuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_vAyRIwuLEei-6eSvavMBRQ">
            <body>This is the Ball constructor, which sets its initial values.
	 * @param col The color of the ball
	 * @param loc The initial location of the ball.
	 * @param rad The radius of the ball.
	 * @param vel The initial velocity of the ball.
	 * @param con The container (component) on which the ball is drawn.
	 * @param updateStrat The IUpdateStrategy that decides how to update the ball.
	 * @param paintStrat The IPaintStrategy that decides how to paint the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_118AuLEei-6eSvavMBRQ" name="col" type="_u_BWkAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_118QuLEei-6eSvavMBRQ" name="loc" type="_u_B9oQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_118guLEei-6eSvavMBRQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u_118wuLEei-6eSvavMBRQ" name="vel" type="_u_B9oQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_119AuLEei-6eSvavMBRQ" name="con" type="_u-9FIAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_119QuLEei-6eSvavMBRQ" name="updateStrat" type="_u7378AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_119guLEei-6eSvavMBRQ" name="paintStrat" type="_u71fsQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_11-QuLEei-6eSvavMBRQ" type="_u7eTUAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_2dAQuLEei-6eSvavMBRQ" name="update" method="_vAkOvguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAyRJwuLEei-6eSvavMBRQ">
            <body>This function is required when implementing Observer, that tells the ball what to
	 * do when it is notified by the dispatcher.
	 * @param o An observable
	 * @param cmd An Object, which should be an IBallCmd</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_2dAguLEei-6eSvavMBRQ" name="o" type="_u_CksQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_2dAwuLEei-6eSvavMBRQ" name="cmd" type="_u_11-wuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_3EEAuLEei-6eSvavMBRQ" name="paint" method="_vAkOwQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAyRKAuLEei-6eSvavMBRQ">
            <body>This function determines how to paint the ball, and it delegates
	 * to the paint strategy's paint.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_3EEQuLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u7kZ8AuLEei-6eSvavMBRQ" name="BallPaintStrategy">
        <ownedComment xmi:id="_vAy4NQuLEei-6eSvavMBRQ">
          <body>This is the ball paint strategy, which implements a paint strategy for a ball.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_u_G2IAuLEei-6eSvavMBRQ" client="_u7kZ8AuLEei-6eSvavMBRQ" supplier="_u71fsQuLEei-6eSvavMBRQ" contract="_u71fsQuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAk1yQuLEei-6eSvavMBRQ" name="paint" specification="_u_4SMAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAk1yguLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAk1ywuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>g.setColor(ball.getCol());
		g.fillOval(ball.getLoc().x - ball.getRad(), ball.getLoc().y - ball.getRad(),
				ball.getRad() * 2, ball.getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u7lBAAuLEei-6eSvavMBRQ" name="BallPaintStrategy">
          <eAnnotations xmi:id="_u7lBAQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u7lBAguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u7lBBAuLEei-6eSvavMBRQ" type="_u7kZ8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_G2IQuLEei-6eSvavMBRQ" name="init">
          <ownedParameter xmi:id="_u_G2IguLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_4SMAuLEei-6eSvavMBRQ" name="paint" method="_vAk1yQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u_4SMQuLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_4SMguLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u7mPIAuLEei-6eSvavMBRQ" name="BallWorldModel">
        <ownedComment xmi:id="_vAy4NguLEei-6eSvavMBRQ">
          <body>This is the BallWorldModel class, which makes balls, clears balls, and updates the balls.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_vATwAAuLEei-6eSvavMBRQ" name="adapter" visibility="private" type="_u70RkQuLEei-6eSvavMBRQ" association="_vBDW4QuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vATwAQuLEei-6eSvavMBRQ" value="IModel2ViewAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAUXEQuLEei-6eSvavMBRQ" name="timeSlice" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAUXEguLEei-6eSvavMBRQ" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAUXFAuLEei-6eSvavMBRQ" name="dispatcher" visibility="private" type="_u8OhQAuLEei-6eSvavMBRQ" association="_vBD98QuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAU-IAuLEei-6eSvavMBRQ" value="new Dispatcher()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAU-IguLEei-6eSvavMBRQ" name="timer" visibility="private" type="_u_IrUQuLEei-6eSvavMBRQ" association="_vBElAQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAU-IwuLEei-6eSvavMBRQ" value="new Timer(timeSlice, (e) -> adapter.update())"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAlc0AuLEei-6eSvavMBRQ" name="BallWorldModel" specification="_u_JSYQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAlc0QuLEei-6eSvavMBRQ" name="adapter" type="_u70RkQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAlc0guLEei-6eSvavMBRQ" type="_u7mPIAuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>this.adapter = adapter;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAlc0wuLEei-6eSvavMBRQ" name="clearBalls" specification="_u7m2MAuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>dispatcher.deleteObservers();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAlc1AuLEei-6eSvavMBRQ" name="start" specification="_u7m2MQuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>timer.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAlc1QuLEei-6eSvavMBRQ" name="update" specification="_u_45QAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAlc1guLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll((IBallCmd) (ball, disp)->{
         // Whatever you want to do with the context Ball!
			ball.setItr(ball.getItr() + 1);
			ball.getStrat().updateState(ball, disp);
			ball.move();
			ball.bounce();
			ball.paint((Graphics) g);
		});
//        dispatcher.notifyAll(g);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAlc1wuLEei-6eSvavMBRQ" name="loadStrategy" specification="_u7m2MguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAlc2AuLEei-6eSvavMBRQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAlc2QuLEei-6eSvavMBRQ" type="_u7378AuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>Object[] args =  new Object[]{};
		java.lang.reflect.Constructor&lt;?> cons[];
		try {
			cons = Class.forName(strat).getConstructors();
			return (IUpdateStrategy) cons[0].newInstance(args);
		} catch (Exception e) {
			return IStrategyFac._errorStrategyFac.make();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAlc2guLEei-6eSvavMBRQ" name="fixName" specification="_u7ndQAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAlc2wuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAlc3AuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;model.&quot; + classname.substring(0, 1).toUpperCase() + classname.substring(1).toLowerCase() + &quot;Strategy&quot;;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAlc3QuLEei-6eSvavMBRQ" name="makeStrategyFac" specification="_u7ndQwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAlc3guLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAlc3wuLEei-6eSvavMBRQ" type="_u72t0QuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>if (null == classname) {
			return IStrategyFac._errorStrategyFac;
		}
	    return new IStrategyFac() {
	        /**
	         * Instantiate a strategy corresponding to the given class name.
	         * @return An IUpdateStrategy instance
	         */
	        public IUpdateStrategy make() {
	        		return loadStrategy(fixName(classname));
	        }

	        /**
	         * Return the given class name string
	         */
	        public String toString() {
	            return classname;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAmD4AuLEei-6eSvavMBRQ" name="makeBall" specification="_u_J5dAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAmD4QuLEei-6eSvavMBRQ" name="make" type="_u7378AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAmD4guLEei-6eSvavMBRQ" name="paintStrat" type="_u71fsQuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>Container con = adapter.getCanvas();
		Randomizer rzr = Randomizer.Singleton;
		
		int startRad = rzr.randomInt(10, 45);
		Point randLoc = rzr.randomLoc(new Rectangle(con.getWidth() - startRad, con.getHeight() - startRad));
		Point startLoc = new Point(randLoc.x + startRad, randLoc.y + startRad);
		Point startVel = new Point(0, 0);

		// Handles case where both x- and y-components of velocity are 0 to prevent ball from starting stationary.
		while (startVel.x == 0 &amp;&amp; startVel.y == 0) {
			startVel = new Point(rzr.randomInt(-20, 20), rzr.randomInt(-20, 20));
		}
		Color startCol = rzr.randomColor();
		
		Ball loaded = new Ball(startCol, startLoc, startRad, startVel, con, make, paintStrat);
		dispatcher.addObserver(loaded);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAmD4wuLEei-6eSvavMBRQ" name="combineStrategyFacs" specification="_u_J5dwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAmD5AuLEei-6eSvavMBRQ" name="stratFac1" type="_u72t0QuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_vAmD5QuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vAmD5guLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_vAmD5wuLEei-6eSvavMBRQ" name="stratFac2" type="_u72t0QuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_vAmD6AuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vAmD6QuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_vAmD6guLEei-6eSvavMBRQ" type="_u72t0QuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>if (null == stratFac1 || null == stratFac2) {
	    		return IStrategyFac._errorStrategyFac;
	    	}
	    
	    return new IStrategyFac() {
	        /**
	         * Instantiate a new MultiStrategy with the strategies from the given strategy factories
	         * @return A MultiStrategy instance
	         */
	        public IUpdateStrategy make() {
	            return new MultiStrategy(stratFac1.make(), stratFac2.make());
	        }

	        /**
	         * Return a string that is the toString()'s of the given strategy factories concatenated with a &quot;-&quot;
	         */
	        public String toString() {
	            return stratFac1.toString() + &quot;-&quot; + stratFac2.toString();
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAmD6wuLEei-6eSvavMBRQ" name="setSwitcherStrategy" specification="_u_KghwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAmD7AuLEei-6eSvavMBRQ" name="switchFac" type="_u72t0QuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>SwitcherStrategy.setStrat(switchFac.make());
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAmD7QuLEei-6eSvavMBRQ" name="getSwitcherFac" specification="_u7oEUAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAmD7guLEei-6eSvavMBRQ" type="_u72t0QuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return IStrategyFac.switcherStrat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAmD7wuLEei-6eSvavMBRQ" name="makePaintFactory" specification="_u7orYAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAmD8AuLEei-6eSvavMBRQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAmD8QuLEei-6eSvavMBRQ" type="_u72t0QuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return new IStrategyFac() {
	        public IUpdateStrategy make() {
	        		return new StraightStrategy();
	        }
 
	        public String toString() {
	            return text;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return loadPaintStrat(fixPaintName(text));
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAmq8AuLEei-6eSvavMBRQ" name="loadPaintStrat" specification="_u7orYguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAmq8QuLEei-6eSvavMBRQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAmq8guLEei-6eSvavMBRQ" type="_u71fsQuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>Object[] args =  new Object[]{};
		java.lang.reflect.Constructor&lt;?> cons[];
		try {
			cons = Class.forName(strat).getConstructors();
			return (IPaintStrategy) cons[0].newInstance(args);
		} catch (Exception e) {
			return IStrategyFac._errorStrategyFac.makePaint();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAmq8wuLEei-6eSvavMBRQ" name="fixPaintName" specification="_u7orZAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAmq9AuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAmq9QuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;model.&quot; + classname + &quot;PaintStrategy&quot;;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u7m2MAuLEei-6eSvavMBRQ" name="clearBalls" method="_vAlc0wuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAy4OAuLEei-6eSvavMBRQ">
            <body>This function clears all the balls from the canvas, by removing them as observers.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_u7m2MQuLEei-6eSvavMBRQ" name="start" method="_vAlc1AuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAy4OQuLEei-6eSvavMBRQ">
            <body>This function starts the timer.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_u7m2MguLEei-6eSvavMBRQ" name="loadStrategy" method="_vAlc1wuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAzfQAuLEei-6eSvavMBRQ">
            <body>This function takes an input string and loads the associated IUpdateStrategy,
	 * and returns the error strategy if the strategy isn't available.
	 * @param strat A string of the strategy to be created.
	 * @return The IUpdateStrategy associated with the string, or the error strategy if
	 * there is no associated strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u7m2MwuLEei-6eSvavMBRQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u_J5cguLEei-6eSvavMBRQ" type="_u7378AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u7ndQAuLEei-6eSvavMBRQ" name="fixName" method="_vAlc2guLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAzfQQuLEei-6eSvavMBRQ">
            <body>This function takes the input and confirms it to the required model.ClassStrategy format for
	 * dynamic class loading.
	 * @param classname The string that should be modified to conform to the model.ClassStrategy format.
	 * @return The class string in a model.ClassStrategy format.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u7ndQQuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u7ndQguLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_u7ndQwuLEei-6eSvavMBRQ" name="makeStrategyFac" method="_vAlc3QuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAzfQguLEei-6eSvavMBRQ">
            <body>This takes a class name, and creates a strategy factory for it, by loading the strategy and returning it
	 * in the make method.
	 * @param classname The class of strategy to make.
	 * @return An IStrategyFac whose make function calls the associated model.ClassStrategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u7ndRAuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u_J5cwuLEei-6eSvavMBRQ" type="_u72t0QuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u7oEUAuLEei-6eSvavMBRQ" name="getSwitcherFac" method="_vAmD7QuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAzfRguLEei-6eSvavMBRQ">
            <body>This function returns a strategy factory, which makes the current switcher balls' update
	 * strategy
	 * @return An IStrategyFac, which makes the current strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_KgiQuLEei-6eSvavMBRQ" type="_u72t0QuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u7orYAuLEei-6eSvavMBRQ" name="makePaintFactory" method="_vAmD7wuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAzfRwuLEei-6eSvavMBRQ">
            <body>This function returns an IStrategyFac to allow the Paint Strategies to be made later on.
	 * @param text The type of paint strategy.
	 * @return An IStrategyFac</body>
          </ownedComment>
          <ownedParameter xmi:id="_u7orYQuLEei-6eSvavMBRQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u_KgiguLEei-6eSvavMBRQ" type="_u72t0QuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u7orYguLEei-6eSvavMBRQ" name="loadPaintStrat" method="_vAmq8AuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAzfSAuLEei-6eSvavMBRQ">
            <body>This function loads an instance of an IPaintStrategy, given a classname.
	 * @param strat The type of paint strategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_u7orYwuLEei-6eSvavMBRQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u_LHkAuLEei-6eSvavMBRQ" type="_u71fsQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u7orZAuLEei-6eSvavMBRQ" name="fixPaintName" method="_vAmq8wuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAzfSQuLEei-6eSvavMBRQ">
            <body>This function &quot;fixes&quot; the type passed in to create an IPaintStrategy.
	 * @param classname The type of paint strategy to create.
	 * @return The fixed paint strategy information as a string.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u7orZQuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u7pScAuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_u_JSYQuLEei-6eSvavMBRQ" name="BallWorldModel" method="_vAlc0AuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u_JSYwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u_J5cAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_vAy4NwuLEei-6eSvavMBRQ">
            <body>This is the BallWorldModel constructor, which creates a model for the controller to interact with.
	 * @param adapter An IModel2ViewAdapter.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_JSYguLEei-6eSvavMBRQ" name="adapter" type="_u70RkQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_J5cQuLEei-6eSvavMBRQ" type="_u7mPIAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_J5dAuLEei-6eSvavMBRQ" name="makeBall" method="_vAmD4AuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAzfQwuLEei-6eSvavMBRQ">
            <body>This function randomizes parameters for the ball, and makes a ball with the parameter's update strategy.
	 * @param make The IUpdateStrategy that determines how the ball updates.
	 * @param paintStrat The IPaintStrategy that determines how to paint the ball</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_J5dQuLEei-6eSvavMBRQ" name="make" type="_u7378AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_J5dguLEei-6eSvavMBRQ" name="paintStrat" type="_u71fsQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_J5dwuLEei-6eSvavMBRQ" name="combineStrategyFacs" method="_vAmD4wuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAzfRAuLEei-6eSvavMBRQ">
            <body>Returns an IStrategyFac that can instantiate a MultiStrategy with the two
	 * strategies made by the two given IStrategyFac objects. Returns null if
	 * either supplied factory is null. The toString() of the returned factory
	 * is the toString()'s of the two given factories, concatenated with &quot;-&quot;. 
	 * If either factory is null, then a factory for a beeping error strategy is returned.
	 * 
	 * @param stratFac1 An IStrategyFac for a strategy
	 * @param stratFac2 An IStrategyFac for a strategy
	 * @return An IStrategyFac for the composition of the two strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_KggAuLEei-6eSvavMBRQ" name="stratFac1" type="_u72t0QuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_u_KggwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_u_KghAuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_u_KggQuLEei-6eSvavMBRQ" name="stratFac2" type="_u72t0QuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_u_KghQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_u_KghguLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_u_KggguLEei-6eSvavMBRQ" type="_u72t0QuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_KghwuLEei-6eSvavMBRQ" name="setSwitcherStrategy" method="_vAmD6wuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAzfRQuLEei-6eSvavMBRQ">
            <body>This function sets the switcher balls strategy to the one made by the input.
	 * @param switchFac IStrategyFac which makes the new update strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_KgiAuLEei-6eSvavMBRQ" name="switchFac" type="_u72t0QuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_45QAuLEei-6eSvavMBRQ" name="update" method="_vAlc1QuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAy4OguLEei-6eSvavMBRQ">
            <body>This function updates all the balls by notifying them using the dispatcher
	 * and an IBallCmd
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_45QQuLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u7rHoAuLEei-6eSvavMBRQ" name="BreathingStrategy">
        <ownedComment xmi:id="_vAzfSguLEei-6eSvavMBRQ">
          <body>This class defines a Breathing Strategy, which grows and shrinks the ball's radius.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_u_LuoAuLEei-6eSvavMBRQ" client="_u7rHoAuLEei-6eSvavMBRQ" supplier="_u7378AuLEei-6eSvavMBRQ" contract="_u7378AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAmq9guLEei-6eSvavMBRQ" name="updateState" specification="_u_LuoQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAmq9wuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAmq-AuLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getItr() % 5 == 0) {
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u_LuoQuLEei-6eSvavMBRQ" name="updateState" method="_vAmq9guLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u_LuoguLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_LuowuLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u7sVwAuLEei-6eSvavMBRQ" name="ColorStrategy">
        <ownedComment xmi:id="_vAzfSwuLEei-6eSvavMBRQ">
          <body>This class defines a Color Strategy, which changes the ball's color.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_u_MVswuLEei-6eSvavMBRQ" client="_u7sVwAuLEei-6eSvavMBRQ" supplier="_u7378AuLEei-6eSvavMBRQ" contract="_u7378AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAmq-QuLEei-6eSvavMBRQ" name="updateState" specification="_u_M8wAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAmq-guLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAmq-wuLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (ball.getItr() % 10 == 0) {
						Color newColor = Randomizer.Singleton.randomColor();
						ball.setCol(newColor);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u_M8wAuLEei-6eSvavMBRQ" name="updateState" method="_vAmq-QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u_M8wQuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_M8wguLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u7s80AuLEei-6eSvavMBRQ" name="CrashStrategy">
        <ownedComment xmi:id="_vAzfTAuLEei-6eSvavMBRQ">
          <body>This class defines a Crash Strategy which makes the ball
change color when it bounces from the boundaries of the canvas.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_u_Nj0guLEei-6eSvavMBRQ" client="_u7s80AuLEei-6eSvavMBRQ" supplier="_u7378AuLEei-6eSvavMBRQ" contract="_u7378AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAnSAAuLEei-6eSvavMBRQ" name="updateState" specification="_u_Nj0wuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAnSAQuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAnSAguLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					
					if ((ball.getLoc().x + ball.getRad() + 8 >= ball.getCon().getWidth()) ||
							(ball.getLoc().x - ball.getRad() &lt;= 8) ||
							(ball.getLoc().y + ball.getRad() >= ball.getCon().getHeight() - 8) ||
							(ball.getLoc().y - ball.getRad() &lt;= 8)) {
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u_Nj0wuLEei-6eSvavMBRQ" name="updateState" method="_vAnSAAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u_OK4AuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_OK4QuLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u7uK8AuLEei-6eSvavMBRQ" name="EarthImagePaintStrategy">
        <ownedComment xmi:id="_pJ6ScAuNEei-6eSvavMBRQ">
          <body>This is the class that paints an image of Earth.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_Ox8AuLEei-6eSvavMBRQ" general="_u7378QuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAnSAwuLEei-6eSvavMBRQ" name="EarthImagePaintStrategy" specification="_u7uK8QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAnSBAuLEei-6eSvavMBRQ" type="_u7uK8AuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(&quot;images/Earth.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u7uK8QuLEei-6eSvavMBRQ" name="EarthImagePaintStrategy" method="_vAnSAwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u7uK8guLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u7uyAAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u7uyAQuLEei-6eSvavMBRQ" type="_u7uK8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u7uyAguLEei-6eSvavMBRQ" name="EllipsePaintStrategy">
        <ownedComment xmi:id="_vAzfTQuLEei-6eSvavMBRQ">
          <body>This class defines a paint strategy to paint an ellipse shape.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_Ox8QuLEei-6eSvavMBRQ" general="_u8CUAAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAnSBQuLEei-6eSvavMBRQ" name="EllipsePaintStrategy" specification="_u7uyAwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAnSBguLEei-6eSvavMBRQ" type="_u7uyAguLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 4.0/3.0, 2.0/3.0);
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAnSBwuLEei-6eSvavMBRQ" name="EllipsePaintStrategy" specification="_u_5gUAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAnSCAuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAnSCQuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAnSCguLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAnSCwuLEei-6eSvavMBRQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAnSDAuLEei-6eSvavMBRQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAnSDQuLEei-6eSvavMBRQ" type="_u7uyAguLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(at, EllipseShapeFactory.Singleton.makeShape(x, y, width, height));
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u7uyAwuLEei-6eSvavMBRQ" name="EllipsePaintStrategy" method="_vAnSBQuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u7vZEAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u7vZEQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u7vZEguLEei-6eSvavMBRQ" type="_u7uyAguLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_5gUAuLEei-6eSvavMBRQ" name="EllipsePaintStrategy" method="_vAnSBwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u_5gVguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u_5gVwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u_5gUQuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_5gUguLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u_5gUwuLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u_5gVAuLEei-6eSvavMBRQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u_5gVQuLEei-6eSvavMBRQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u_5gWAuLEei-6eSvavMBRQ" type="_u7uyAguLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u7wAIAuLEei-6eSvavMBRQ" name="EllipseShapeFactory">
        <ownedComment xmi:id="_vAzfTguLEei-6eSvavMBRQ">
          <body>This class defines a shape factory to make Ellipses.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_vAVlMAuLEei-6eSvavMBRQ" name="Singleton" isLeaf="true" isStatic="true" type="_u7wAIAuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBFMEAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAVlMQuLEei-6eSvavMBRQ" value="new EllipseShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_u_QAEguLEei-6eSvavMBRQ" client="_u7wAIAuLEei-6eSvavMBRQ" supplier="_u72GwAuLEei-6eSvavMBRQ" contract="_u72GwAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAnSDguLEei-6eSvavMBRQ" name="makeShape" specification="_u7wnMAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAnSDwuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAnSEAuLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAnSEQuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAnSEguLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAnSEwuLEei-6eSvavMBRQ" type="_u_PZAAuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>Shape ellipse = new Ellipse2D.Double(x, y, xScale, yScale);
		return ellipse;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u7wnMAuLEei-6eSvavMBRQ" name="makeShape" method="_vAnSDguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u7wnMQuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u7wnMguLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u7wnMwuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u7wnNAuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u_6HYAuLEei-6eSvavMBRQ" type="_u_PZAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u7x1UAuLEei-6eSvavMBRQ" name="FastStrategy">
        <ownedComment xmi:id="_vAzfTwuLEei-6eSvavMBRQ">
          <body>This class defines a Fast Strategy that makes the ball's velocity increase and stop once it reaches
a pre defined max speed.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_u_QnIAuLEei-6eSvavMBRQ" client="_u7x1UAuLEei-6eSvavMBRQ" supplier="_u7378AuLEei-6eSvavMBRQ" contract="_u7378AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAn5EAuLEei-6eSvavMBRQ" name="updateState" specification="_u_ROMAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAn5EQuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAn5EguLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (Math.abs(ball.getVel().x) &lt; 100 &amp;&amp; Math.abs(ball.getVel().y) &lt; 100) {
						if (ball.getItr() % 10 == 0) {
							if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y + 2));
							} else if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y - 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y + 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y - 2));
							}
						}
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u_ROMAuLEei-6eSvavMBRQ" name="updateState" method="_vAn5EAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u_ROMQuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_ROMguLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u7zDcAuLEei-6eSvavMBRQ" name="HumbirdImagePaintStrategy">
        <ownedComment xmi:id="_uYkIoAuNEei-6eSvavMBRQ">
          <body>This is the class that paints an image of Humbird.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_R1QguLEei-6eSvavMBRQ" general="_u8MFAAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAn5EwuLEei-6eSvavMBRQ" name="HumbirdImagePaintStrategy" specification="_u7zDcQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAn5FAuLEei-6eSvavMBRQ" type="_u7zDcAuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(&quot;images/Humbird.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u7zDcQuLEei-6eSvavMBRQ" name="HumbirdImagePaintStrategy" method="_vAn5EwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u7zDcguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u7zDcwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u7zDdAuLEei-6eSvavMBRQ" type="_u7zDcAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_u7zqgAuLEei-6eSvavMBRQ" name="IBallCmd" isAbstract="true">
        <ownedOperation xmi:id="_u_ScUAuLEei-6eSvavMBRQ" name="apply" isAbstract="true">
          <ownedParameter xmi:id="_u_ScUQuLEei-6eSvavMBRQ" name="context" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_ScUguLEei-6eSvavMBRQ" name="disp" type="_u8OhQAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_u70RkQuLEei-6eSvavMBRQ" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_vA0GUAuLEei-6eSvavMBRQ">
          <body>This is an interface which defines the functions that the model wants the view to have/do.
@author sn32, kyl3</body>
        </ownedComment>
        <ownedAttribute xmi:id="_u704oQuLEei-6eSvavMBRQ" name="canvas" type="_u-9FIAuLEei-6eSvavMBRQ" isReadOnly="true" association="_vA93UAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_u704oguLEei-6eSvavMBRQ" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_u70RkQuLEei-6eSvavMBRQ" isReadOnly="true" association="_vA-eYQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_u71fsAuLEei-6eSvavMBRQ" value="new IModel2ViewAdapter() {&#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is an update function that we want the view to have.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public void update() {&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9; &#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is a function that gets the canvas from the view.&#xA;&#x9;&#x9;  * @return A container that is initially null.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public Container getCanvas() {&#xA;&#x9;&#x9;&#x9; return null;&#xA;&#x9;&#x9; }&#xA;&#x9; }"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_u704oAuLEei-6eSvavMBRQ" name="update">
          <ownedComment xmi:id="_vA0GUQuLEei-6eSvavMBRQ">
            <body>This is an update function that we want the view to have.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_u71fsQuLEei-6eSvavMBRQ" name="IPaintStrategy">
        <ownedComment xmi:id="_vA0GUguLEei-6eSvavMBRQ">
          <body>This is an interface for an IPaintStrategy that defines the methods we want it to have.
@author sn32, ll45</body>
        </ownedComment>
        <ownedOperation xmi:id="_u_TDYAuLEei-6eSvavMBRQ" name="init">
          <ownedParameter xmi:id="_u_TDYQuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_6HYQuLEei-6eSvavMBRQ" name="paint">
          <ownedParameter xmi:id="_u_6HYguLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_6HYwuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_u72GwAuLEei-6eSvavMBRQ" name="IShapeFactory">
        <ownedComment xmi:id="_vA0GUwuLEei-6eSvavMBRQ">
          <body>This interface defines the methods we want a shape factory to have.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_u72GwQuLEei-6eSvavMBRQ" name="makeShape">
          <ownedParameter xmi:id="_u72GwguLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u72GwwuLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u72GxAuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u72t0AuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u_6ucAuLEei-6eSvavMBRQ" type="_u_PZAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_u72t0QuLEei-6eSvavMBRQ" name="IStrategyFac">
        <ownedComment xmi:id="_vA0GVAuLEei-6eSvavMBRQ">
          <body>This interface defines the functions we want IStrategyFac to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_u73U4AuLEei-6eSvavMBRQ" name="_errorStrategyFac" type="_u72t0QuLEei-6eSvavMBRQ" association="_vA_FcQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_u73U4QuLEei-6eSvavMBRQ" value="new IStrategyFac(){&#xA;        /**&#xA;         * Make the beeping error strategy&#xA;         * @return  An instance of a beeping error strategy&#xA;         */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;            return new IUpdateStrategy() {&#xA;                private int count = 0; // update counter&#xA;                &#xA;                /**&#xA;                 * Beep the speaker every 25 updates&#xA;                 */&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void updateState(Ball ball, Dispatcher dispatcher) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(25 &lt; count++){&#xA;                        java.awt.Toolkit.getDefaultToolkit().beep(); &#xA;                        count = 0;&#xA;                    }&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;            };&#xA;        }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;}&#xA;    }"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_u73U4wuLEei-6eSvavMBRQ" name="switcherStrat" type="_u72t0QuLEei-6eSvavMBRQ" association="_vA_sgQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_u73U5AuLEei-6eSvavMBRQ" value="new IStrategyFac() {&#xA;    &#x9;&#x9;/**&#xA;    &#x9;&#x9; * This function makes the switcher strategy.&#xA;    &#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;&#x9;&#x9;&#x9;return new SwitcherStrategy();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_u72t0guLEei-6eSvavMBRQ" name="make">
          <ownedComment xmi:id="_vA0GVQuLEei-6eSvavMBRQ">
            <body>This function allows IStrategyFac to make an IUpdateStrategy.
	 * @return An IUpdateStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_TqcAuLEei-6eSvavMBRQ" type="_u7378AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u72t0wuLEei-6eSvavMBRQ" name="makePaint">
          <ownedComment xmi:id="_vA0GVguLEei-6eSvavMBRQ">
            <body>This function allows IStrategyFac to make an IPaintStrategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_TqcQuLEei-6eSvavMBRQ" type="_u71fsQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_u7378AuLEei-6eSvavMBRQ" name="IUpdateStrategy">
        <ownedComment xmi:id="_vA0GVwuLEei-6eSvavMBRQ">
          <body>This interface defines the functions we want IUpdateStrategies to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedOperation xmi:id="_u_TqcguLEei-6eSvavMBRQ" name="updateState">
          <ownedParameter xmi:id="_u_TqcwuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_TqdAuLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u7378QuLEei-6eSvavMBRQ" name="ImagePaintStrategy">
        <ownedComment xmi:id="_vA0GWAuLEei-6eSvavMBRQ">
          <body>This class defines a paint strategy for an image that extends APaintStrategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_XU0AuLEei-6eSvavMBRQ" general="_u7b3EAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_vAVlMguLEei-6eSvavMBRQ" name="scaleFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAWMQAuLEei-6eSvavMBRQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAWMQguLEei-6eSvavMBRQ" name="fillFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAWMQwuLEei-6eSvavMBRQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAWMRQuLEei-6eSvavMBRQ" name="localAT" visibility="private" type="_u--6UAuLEei-6eSvavMBRQ" association="_vBFMEwuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAWzUAuLEei-6eSvavMBRQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAWzUguLEei-6eSvavMBRQ" name="tempAT" type="_u--6UAuLEei-6eSvavMBRQ" association="_vBFzIQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAWzUwuLEei-6eSvavMBRQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAWzVAuLEei-6eSvavMBRQ" name="filename" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAWzVQuLEei-6eSvavMBRQ" name="image" visibility="private" type="_u_U4kQuLEei-6eSvavMBRQ" association="_vBGaMQuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_vAXaYQuLEei-6eSvavMBRQ" name="imageObs" visibility="private" type="_u-9FIAuLEei-6eSvavMBRQ" association="_vBHBQQuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAn5FQuLEei-6eSvavMBRQ" name="ImagePaintStrategy" specification="_u74jAAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAn5FguLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAn5FwuLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAn5GAuLEei-6eSvavMBRQ" type="_u7378QuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super (new AffineTransform());
		this.fillFactor = fillFactor;
		this.setFilename(filename);
				
		try {
			image =  Toolkit.getDefaultToolkit().getImage(filename);	
			
		} catch (Exception e) {
			System.out.println(&quot;failed&quot;);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAn5GQuLEei-6eSvavMBRQ" name="ImagePaintStrategy" specification="_u_6ucQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAn5GguLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAn5GwuLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAn5HAuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAn5HQuLEei-6eSvavMBRQ" type="_u7378QuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.fillFactor = fillFactor;
		this.setFilename(filename);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAn5HguLEei-6eSvavMBRQ" name="init" specification="_u_WtwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAn5HwuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>imageObs = ball.getCon();
		MediaTracker mt = new MediaTracker(ball.getCon());
		mt.addImage(image, 1);
		try {
			mt.waitForAll();
		} catch(Exception e){
			System.out.println(&quot;ImagePaintStrategy.init(): Error waiting for image.  Exception = &quot;+e);
		}
		scaleFactor = 2.0/(fillFactor*(image.getWidth(imageObs)+image.getHeight(imageObs))/2.0); // this line is described below
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAogIAuLEei-6eSvavMBRQ" name="paintXfrm" specification="_u_7VhQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAogIQuLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAogIguLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAogIwuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>localAT.setToScale(scaleFactor, scaleFactor);
		localAT.translate(-image.getWidth(imageObs)/2.0, -image.getHeight(imageObs)/2.0);
		localAT.preConcatenate(at);
		((Graphics2D)g).drawImage(image, localAT, imageObs); 
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAogJAuLEei-6eSvavMBRQ" name="setFilename" specification="_u75KEQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAogJQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.filename = filename;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u74jAAuLEei-6eSvavMBRQ" name="ImagePaintStrategy" method="_vAn5FQuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u74jAwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u74jBAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_vA0GWQuLEei-6eSvavMBRQ">
            <body>This is a constructor for the Image Paint Strategy that doesn't take an Affine Transform.
	 * @param filename String that is the path to the image file to load
	 * @param fillFactor A double that is the fill factor</body>
          </ownedComment>
          <ownedParameter xmi:id="_u74jAQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u74jAguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u75KEAuLEei-6eSvavMBRQ" type="_u7378QuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u75KEQuLEei-6eSvavMBRQ" name="setFilename" method="_vAogJAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vA0GXAuLEei-6eSvavMBRQ">
            <body>This function sets the filename.
	 * @param filename the filename to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_u75KEguLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_u_WtwAuLEei-6eSvavMBRQ" name="init" method="_vAn5HguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vA0GWwuLEei-6eSvavMBRQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_WtwQuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_6ucQuLEei-6eSvavMBRQ" name="ImagePaintStrategy" method="_vAn5GQuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u_7VgguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u_7VgwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_vA0GWguLEei-6eSvavMBRQ">
            <body>This is a constructor for Image Paint Strategy that takes an Affine Transform.
	 * @param filename String that is the path to the image file to load.
	 * @param fillFactor A double that is the fill factor
	 * @param at An Affine Transform.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_6ucguLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u_7VgAuLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u_7VgQuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_7VhAuLEei-6eSvavMBRQ" type="_u7378QuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_7VhQuLEei-6eSvavMBRQ" name="paintXfrm" method="_vAogIAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u_7VhguLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_7VhwuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_7ViAuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u76_QAuLEei-6eSvavMBRQ" name="JupiterImagePaintStrategy">
        <ownedComment xmi:id="_2ykggAuNEei-6eSvavMBRQ">
          <body>This is the class that paints an image of Jupiter.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_Yi8AuLEei-6eSvavMBRQ" general="_u7378QuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAogJguLEei-6eSvavMBRQ" name="JupiterImagePaintStrategy" specification="_u77mUAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAogJwuLEei-6eSvavMBRQ" type="_u76_QAuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(&quot;images/Jupiter.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u77mUAuLEei-6eSvavMBRQ" name="JupiterImagePaintStrategy" method="_vAogJguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u77mUQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u77mUguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u77mUwuLEei-6eSvavMBRQ" type="_u76_QAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u77mVAuLEei-6eSvavMBRQ" name="MarioImagePaintStrategy">
        <ownedComment xmi:id="_6YzAUAuNEei-6eSvavMBRQ">
          <body>This is the class that paints an image of Mario.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_Yi8QuLEei-6eSvavMBRQ" general="_u8MFAAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAogKAuLEei-6eSvavMBRQ" name="MarioImagePaintStrategy" specification="_u78NYAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAogKQuLEei-6eSvavMBRQ" type="_u77mVAuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(&quot;images/Mario.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u78NYAuLEei-6eSvavMBRQ" name="MarioImagePaintStrategy" method="_vAogKAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u78NYQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u78NYguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u78NYwuLEei-6eSvavMBRQ" type="_u77mVAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u78NZAuLEei-6eSvavMBRQ" name="MarioMarsImagePaintStrategy">
        <ownedComment xmi:id="__XOpMAuNEei-6eSvavMBRQ">
          <body>This is the class that paints an upright composite shape, a combination of Mars and Mario.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_Yi8guLEei-6eSvavMBRQ" general="_u79bgAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAogKguLEei-6eSvavMBRQ" name="MarioMarsImagePaintStrategy" specification="_u78NZQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAogKwuLEei-6eSvavMBRQ" type="_u78NZAuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(new APaintStrategy[]{new UprightImagePaintStrategy(&quot;images/Mars.gif&quot;, 1.0),
				new UprightImagePaintStrategy(&quot;images/Mario.gif&quot;, 1.0)});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u78NZQuLEei-6eSvavMBRQ" name="MarioMarsImagePaintStrategy" method="_vAogKguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u78NZguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u78NZwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u78NaAuLEei-6eSvavMBRQ" type="_u78NZAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u780cAuLEei-6eSvavMBRQ" name="MarsImagePaintStrategy">
        <ownedComment xmi:id="_EjaaMAuOEei-6eSvavMBRQ">
          <body>This is the class that paints an image of Mars.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_ZKAAuLEei-6eSvavMBRQ" general="_u7378QuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vApHMAuLEei-6eSvavMBRQ" name="MarsImagePaintStrategy" specification="_u780cQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vApHMQuLEei-6eSvavMBRQ" type="_u780cAuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(&quot;images/Mars.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u780cQuLEei-6eSvavMBRQ" name="MarsImagePaintStrategy" method="_vApHMAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u780cguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u780cwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u780dAuLEei-6eSvavMBRQ" type="_u780cAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u79bgAuLEei-6eSvavMBRQ" name="MultiPaintStrategy">
        <ownedComment xmi:id="_vA0tYAuLEei-6eSvavMBRQ">
          <body>This class defines a multi paint strategy which is the composition of other paint strategies.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_aYIAuLEei-6eSvavMBRQ" general="_u7b3EAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_vAYBcAuLEei-6eSvavMBRQ" name="pstrats" visibility="private" type="_u7b3EAuLEei-6eSvavMBRQ" association="_vBHoUQuLEei-6eSvavMBRQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vAYBcQuLEei-6eSvavMBRQ" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vApHMguLEei-6eSvavMBRQ" name="MultiPaintStrategy" specification="_u_ZKAQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vApHMwuLEei-6eSvavMBRQ" name="pstrats" type="_u7b3EAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vApHNAuLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vApHNQuLEei-6eSvavMBRQ" type="_u79bgAuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(new AffineTransform());&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vApHNguLEei-6eSvavMBRQ" name="MultiPaintStrategy" specification="_u_8joAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vApHNwuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vApHOAuLEei-6eSvavMBRQ" name="pstrats" type="_u7b3EAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vApHOQuLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vApHOguLEei-6eSvavMBRQ" type="_u79bgAuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(at);&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vApHOwuLEei-6eSvavMBRQ" name="init" specification="_u_ZxEQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vApHPAuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
		    strategy.init(ball);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vApHPQuLEei-6eSvavMBRQ" name="paintXfrm" specification="_u_8jpwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vApHPguLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vApHPwuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vApHQAuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
			strategy.paintXfrm(g, ball, at);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u79bgQuLEei-6eSvavMBRQ" name="MultiPaintStrategy">
          <eAnnotations xmi:id="_u79bgguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u79bgwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u7-CkQuLEei-6eSvavMBRQ" type="_u79bgAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_ZKAQuLEei-6eSvavMBRQ" name="MultiPaintStrategy" method="_vApHMguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u_ZKAwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u_ZKBAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_vA0tYQuLEei-6eSvavMBRQ">
            <body>This is a constructor that doesn't take in an affine transform.&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_ZKAguLEei-6eSvavMBRQ" name="pstrats" type="_u7b3EAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u_ZxEAuLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u_ZKBQuLEei-6eSvavMBRQ" type="_u79bgAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_ZxEQuLEei-6eSvavMBRQ" name="init" method="_vApHOwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vA0tYwuLEei-6eSvavMBRQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_ZxEguLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_8joAuLEei-6eSvavMBRQ" name="MultiPaintStrategy" method="_vApHNguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u_8jowuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u_8jpAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_vA0tYguLEei-6eSvavMBRQ">
            <body>This is a constructor that does take in an affine transform.&#xD;
	 * @param at An affine transform&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_8joQuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_8joguLEei-6eSvavMBRQ" name="pstrats" type="_u7b3EAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u_8jpguLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u_8jpQuLEei-6eSvavMBRQ" type="_u79bgAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_8jpwuLEei-6eSvavMBRQ" name="paintXfrm" method="_vApHPQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u_9KsAuLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_9KsQuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_9KsguLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u7_QsAuLEei-6eSvavMBRQ" name="MultiStrategy">
        <ownedComment xmi:id="_vA0tZAuLEei-6eSvavMBRQ">
          <body>This class defines a Multi Strategy which defines a movement strategy for a ball
is a combination of 2 other strategies.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_vAYBdAuLEei-6eSvavMBRQ" name="s1" visibility="private" type="_u7378AuLEei-6eSvavMBRQ" association="_vBHoVAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_vA0tZQuLEei-6eSvavMBRQ" name="s2" visibility="private" type="_u7378AuLEei-6eSvavMBRQ" association="_vBT1kAuLEei-6eSvavMBRQ"/>
        <interfaceRealization xmi:id="_u_aYIQuLEei-6eSvavMBRQ" client="_u7_QsAuLEei-6eSvavMBRQ" supplier="_u7378AuLEei-6eSvavMBRQ" contract="_u7378AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vApuQAuLEei-6eSvavMBRQ" name="MultiStrategy" specification="_u_a_MAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vApuQQuLEei-6eSvavMBRQ" name="s1" type="_u7378AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vApuQguLEei-6eSvavMBRQ" name="s2" type="_u7378AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vApuQwuLEei-6eSvavMBRQ" type="_u7_QsAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this.s1 = s1;
		this.s2 = s2;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vApuRAuLEei-6eSvavMBRQ" name="updateState" specification="_u_a_NguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vApuRQuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vApuRguLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					s1.updateState(ball, disp);
					s2.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u_a_MAuLEei-6eSvavMBRQ" name="MultiStrategy" method="_vApuQAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u_a_MwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u_a_NAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u_a_MQuLEei-6eSvavMBRQ" name="s1" type="_u7378AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_a_MguLEei-6eSvavMBRQ" name="s2" type="_u7378AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_a_NQuLEei-6eSvavMBRQ" type="_u7_QsAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_a_NguLEei-6eSvavMBRQ" name="updateState" method="_vApuRAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u_a_NwuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_a_OAuLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8BF4AuLEei-6eSvavMBRQ" name="ReefImagePaintStrategy">
        <ownedComment xmi:id="_Pr8N0AuOEei-6eSvavMBRQ">
          <body>This is the class that paints an image of a reef.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_bmQwuLEei-6eSvavMBRQ" general="_u8MFAAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vApuRwuLEei-6eSvavMBRQ" name="ReefImagePaintStrategy" specification="_u8BF4QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vApuSAuLEei-6eSvavMBRQ" type="_u8BF4AuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(&quot;images/Reef.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u8BF4QuLEei-6eSvavMBRQ" name="ReefImagePaintStrategy" method="_vApuRwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u8BF4guLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u8BF4wuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u8BF5AuLEei-6eSvavMBRQ" type="_u8BF4AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8Bs8AuLEei-6eSvavMBRQ" name="SaturnImagePaintStrategy">
        <ownedComment xmi:id="_TeBYUAuOEei-6eSvavMBRQ">
          <body>This is the class that paints an image of a Saturn.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_bmRAuLEei-6eSvavMBRQ" general="_u7378QuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vApuSQuLEei-6eSvavMBRQ" name="SaturnImagePaintStrategy" specification="_u8Bs8QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vApuSguLEei-6eSvavMBRQ" type="_u8Bs8AuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(&quot;images/Saturn.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u8Bs8QuLEei-6eSvavMBRQ" name="SaturnImagePaintStrategy" method="_vApuSQuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u8Bs8guLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u8Bs8wuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u8Bs9AuLEei-6eSvavMBRQ" type="_u8Bs8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8CUAAuLEei-6eSvavMBRQ" name="ShapePaintStrategy">
        <ownedComment xmi:id="_vA1UcQuLEei-6eSvavMBRQ">
          <body>This class defines a shape paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_cNUQuLEei-6eSvavMBRQ" general="_u7b3EAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_vAYogQuLEei-6eSvavMBRQ" name="shape" visibility="package" type="_u_PZAAuLEei-6eSvavMBRQ" association="_vBIPYguLEei-6eSvavMBRQ"/>
        <interfaceRealization xmi:id="_u_cNUAuLEei-6eSvavMBRQ" client="_u8CUAAuLEei-6eSvavMBRQ" supplier="_u72GwAuLEei-6eSvavMBRQ" contract="_u72GwAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAqVUAuLEei-6eSvavMBRQ" name="ShapePaintStrategy" specification="_u_9xwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAqVUQuLEei-6eSvavMBRQ" name="shape" type="_u_PZAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAqVUguLEei-6eSvavMBRQ" type="_u8CUAAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAqVUwuLEei-6eSvavMBRQ" name="ShapePaintStrategy" specification="_u_-Y0AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAqVVAuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAqVVQuLEei-6eSvavMBRQ" name="shape" type="_u_PZAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAqVVguLEei-6eSvavMBRQ" type="_u8CUAAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAqVVwuLEei-6eSvavMBRQ" name="paintXfrm" specification="_u_-Y1guLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAqVWAuLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAqVWQuLEei-6eSvavMBRQ" name="host" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAqVWguLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>((Graphics2D) g).fill(at.createTransformedShape(shape));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAqVWwuLEei-6eSvavMBRQ" name="makeShape" specification="_u8C7EAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAqVXAuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAqVXQuLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAqVXguLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAqVXwuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAqVYAuLEei-6eSvavMBRQ" type="_u_PZAAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>at.setToTranslation(x, y);
		at.scale(x * xScale, y * yScale);  // optional rotation can be added as well
		return at.createTransformedShape(shape);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u8C7EAuLEei-6eSvavMBRQ" name="makeShape" method="_vAqVWwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u8C7EQuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u8C7EguLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u8C7EwuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u8C7FAuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u_-_4AuLEei-6eSvavMBRQ" type="_u_PZAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_9xwAuLEei-6eSvavMBRQ" name="ShapePaintStrategy" method="_vAqVUAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u_9xwguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u_9xwwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u_9xwQuLEei-6eSvavMBRQ" name="shape" type="_u_PZAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_9xxAuLEei-6eSvavMBRQ" type="_u8CUAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_-Y0AuLEei-6eSvavMBRQ" name="ShapePaintStrategy" method="_vAqVUwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u_-Y0wuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u_-Y1AuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u_-Y0QuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_-Y0guLEei-6eSvavMBRQ" name="shape" type="_u_PZAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_-Y1QuLEei-6eSvavMBRQ" type="_u8CUAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_-Y1guLEei-6eSvavMBRQ" name="paintXfrm" method="_vAqVVwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u_-Y1wuLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_-Y2AuLEei-6eSvavMBRQ" name="host" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_-Y2QuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8EJMAuLEei-6eSvavMBRQ" name="SheepImagePaintStrategy">
        <ownedComment xmi:id="_XNsvEAuOEei-6eSvavMBRQ">
          <body>This is the class that paints an image of a Sheep.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_c0YAuLEei-6eSvavMBRQ" general="_u8MFAAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAqVYQuLEei-6eSvavMBRQ" name="SheepImagePaintStrategy" specification="_u8EwQAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAqVYguLEei-6eSvavMBRQ" type="_u8EJMAuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(&quot;images/Sheep.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u8EwQAuLEei-6eSvavMBRQ" name="SheepImagePaintStrategy" method="_vAqVYQuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u8EwQQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u8EwQguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u8EwQwuLEei-6eSvavMBRQ" type="_u8EJMAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8EwRAuLEei-6eSvavMBRQ" name="SoccerImagePaintStrategy">
        <ownedComment xmi:id="_aZDQwAuOEei-6eSvavMBRQ">
          <body>This is the class that paints an image of a soccer ball.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_c0YQuLEei-6eSvavMBRQ" general="_u7378QuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAq8YAuLEei-6eSvavMBRQ" name="SoccerImagePaintStrategy" specification="_u8FXUAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAq8YQuLEei-6eSvavMBRQ" type="_u8EwRAuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(&quot;images/Soccer.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u8FXUAuLEei-6eSvavMBRQ" name="SoccerImagePaintStrategy" method="_vAq8YAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u8FXUQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u8FXUguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u8FXUwuLEei-6eSvavMBRQ" type="_u8EwRAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8FXVAuLEei-6eSvavMBRQ" name="SonicImagePaintStrategy">
        <ownedComment xmi:id="_c1gFEAuOEei-6eSvavMBRQ">
          <body>This is the class that paints an image of Sonic.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_c0YguLEei-6eSvavMBRQ" general="_u8MFAAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAq8YguLEei-6eSvavMBRQ" name="SonicImagePaintStrategy" specification="_u8F-YAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAq8YwuLEei-6eSvavMBRQ" type="_u8FXVAuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(&quot;images/Sonic.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u8F-YAuLEei-6eSvavMBRQ" name="SonicImagePaintStrategy" method="_vAq8YguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u8F-YQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u8F-YguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u8F-YwuLEei-6eSvavMBRQ" type="_u8FXVAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8F-ZAuLEei-6eSvavMBRQ" name="SpawnStrategy">
        <ownedComment xmi:id="_vA1UcguLEei-6eSvavMBRQ">
          <body>This class defines a spawn strategy that interacts with other balls.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_vAYogwuLEei-6eSvavMBRQ" name="count" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAZPkAuLEei-6eSvavMBRQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAZPkguLEei-6eSvavMBRQ" name="delay" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAZPkwuLEei-6eSvavMBRQ" value="100"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_u_c0YwuLEei-6eSvavMBRQ" client="_u8F-ZAuLEei-6eSvavMBRQ" supplier="_u7378AuLEei-6eSvavMBRQ" contract="_u7378AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAq8ZAuLEei-6eSvavMBRQ" name="updateState" specification="_u_dbcAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAq8ZQuLEei-6eSvavMBRQ" name="context" type="_u7eTUAuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_vAq8ZguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vAq8ZwuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_vAq8aAuLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>if (delay &lt; count++) {
			dispatcher.notifyAll(new IBallCmd() {
				/**
				 * This function applies this command to the correct ball using a dispatcher.
				 */
				@Override
				public void apply(Ball other, Dispatcher disp) {
					if (count != 0 &amp;&amp; context != other) {
						if ((context.getRad() + other.getRad()) > 
						    context.getLoc().distance(other.getLoc())) {
							disp.addObserver(new Ball(
									context.getCol(),
									new Point(context.getLoc()), 
									context.getRad(),
									new Point(-context.getVel().x+1,-context.getVel().y+1), 
									context.getCon(), 
									new SpawnStrategy(), 
									context.getPaintStrat()));
							count = 0;
							delay *= 5;
						}
					}
				}
			});
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u_dbcAuLEei-6eSvavMBRQ" name="updateState" method="_vAq8ZAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u_dbcQuLEei-6eSvavMBRQ" name="context" type="_u7eTUAuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_u_dbdAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_u_dbdQuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_u_dbcguLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8HMgAuLEei-6eSvavMBRQ" name="SquarePaintStrategy">
        <ownedComment xmi:id="_vA1UcwuLEei-6eSvavMBRQ">
          <body>This is the square paint strategy that paints a square.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_u_eCgguLEei-6eSvavMBRQ" client="_u8HMgAuLEei-6eSvavMBRQ" supplier="_u71fsQuLEei-6eSvavMBRQ" contract="_u71fsQuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAq8aQuLEei-6eSvavMBRQ" name="paint" specification="_u_-_4QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAq8aguLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAq8awuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>int halfSide = ball.getRad();
		g.setColor(ball.getCol());
		g.fillRect(ball.getLoc().x - halfSide, ball.getLoc().y - halfSide, 2 * halfSide, 2 * halfSide);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u_eCgwuLEei-6eSvavMBRQ" name="init">
          <ownedParameter xmi:id="_u_eChAuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_-_4QuLEei-6eSvavMBRQ" name="paint" method="_vAq8aQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u_-_4guLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_-_4wuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8HzkAuLEei-6eSvavMBRQ" name="StraightStrategy">
        <ownedComment xmi:id="_vA1UdAuLEei-6eSvavMBRQ">
          <body>This class defines a Straight Strategy which defines a movement strategy for a ball that just
moves by changing it's location by its velocity components.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_u_epkQuLEei-6eSvavMBRQ" client="_u8HzkAuLEei-6eSvavMBRQ" supplier="_u7378AuLEei-6eSvavMBRQ" contract="_u7378AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAq8bAuLEei-6eSvavMBRQ" name="updateState" specification="_u_epkguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAq8bQuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAq8bguLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u_epkguLEei-6eSvavMBRQ" name="updateState" method="_vAq8bAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u_epkwuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_eplAuLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8IaoAuLEei-6eSvavMBRQ" name="SwellStrategy">
        <ownedComment xmi:id="_vA1UdQuLEei-6eSvavMBRQ">
          <body>This class defines a Swell Strategy which defines a movement strategy for a ball that grows it
in size, and once it reaches a certain size, it changes colors, and then shrinks slowly and repeats.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_u_fQowuLEei-6eSvavMBRQ" client="_u8IaoAuLEei-6eSvavMBRQ" supplier="_u7378AuLEei-6eSvavMBRQ" contract="_u7378AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vArjcAuLEei-6eSvavMBRQ" name="updateState" specification="_u_fQpAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vArjcQuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vArjcguLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getRad() >= 80) {
						ball.setRadDelta(1);
						ball.setRadDelta(ball.getRadDelta() * -1);
						ball.setCol(rzr.randomColor());
					} else if (ball.getRad() &lt;= 20) {
						ball.setRadDelta(-5);
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u_fQpAuLEei-6eSvavMBRQ" name="updateState" method="_vArjcAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u_fQpQuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_fQpguLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8JowAuLEei-6eSvavMBRQ" name="SwitcherStrategy">
        <ownedComment xmi:id="_vA1UdguLEei-6eSvavMBRQ">
          <body>This class defines a Switcher Strategy which defines a strategy for a ball that can
change by updating the strategy.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_vAZPlQuLEei-6eSvavMBRQ" name="strategy" visibility="private" isStatic="true" type="_u7378AuLEei-6eSvavMBRQ" association="_vBI2cQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAZPlguLEei-6eSvavMBRQ" value="new StraightStrategy()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_u_f3swuLEei-6eSvavMBRQ" client="_u8JowAuLEei-6eSvavMBRQ" supplier="_u7378AuLEei-6eSvavMBRQ" contract="_u7378AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vArjcwuLEei-6eSvavMBRQ" name="updateState" specification="_u_f3tAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vArjdAuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vArjdQuLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					strategy.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vArjdguLEei-6eSvavMBRQ" name="setStrat" specification="_u_gexAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vArjdwuLEei-6eSvavMBRQ" name="strat" type="_u7378AuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>SwitcherStrategy.strategy = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vArjeAuLEei-6eSvavMBRQ" name="getStrat" specification="_u8JowQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vArjeQuLEei-6eSvavMBRQ" type="_u7378AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return SwitcherStrategy.strategy;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u8JowQuLEei-6eSvavMBRQ" name="getStrat" isStatic="true" method="_vArjeAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vA17gQuLEei-6eSvavMBRQ">
            <body>This function returns the current strategy of the switcher balls.
	 * @return An IUpdateStrategy which is the current strategy of the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_hF0AuLEei-6eSvavMBRQ" type="_u7378AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_f3tAuLEei-6eSvavMBRQ" name="updateState" method="_vArjcwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u_f3tQuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_gewAuLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u_gexAuLEei-6eSvavMBRQ" name="setStrat" isStatic="true" method="_vArjdguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vA17gAuLEei-6eSvavMBRQ">
            <body>This function changes the strategy of all switcher balls to that of the parameter.
	 * @param strat An IUpdateStrategy which is the new strategy for all the balls to use</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_gexQuLEei-6eSvavMBRQ" name="strat" type="_u7378AuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8K24AuLEei-6eSvavMBRQ" name="TeleportStrategy">
        <ownedComment xmi:id="_vA17gguLEei-6eSvavMBRQ">
          <body>This class defines a Teleport Strategy which defines a movement strategy for a ball that randomly
changes the location of it, so it teleports.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_u_hF0QuLEei-6eSvavMBRQ" client="_u8K24AuLEei-6eSvavMBRQ" supplier="_u7378AuLEei-6eSvavMBRQ" contract="_u7378AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vArjeguLEei-6eSvavMBRQ" name="updateState" specification="_u_hF0guLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vArjewuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vArjfAuLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % 80 == 0) {
						ball.setLoc(rzr.randomLoc(new Rectangle(ball.getCon().getWidth() - ball.getRad(), ball.getCon().getHeight() - ball.getRad())));
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u_hF0guLEei-6eSvavMBRQ" name="updateState" method="_vArjeguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u_hF0wuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_hs4AuLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8MFAAuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy">
        <ownedComment xmi:id="_vA17gwuLEei-6eSvavMBRQ">
          <body>This class defines an upright image.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_iT8AuLEei-6eSvavMBRQ" general="_u7378QuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vArjfQuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy" specification="_u8MFAQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vArjfguLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vArjfwuLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vArjgAuLEei-6eSvavMBRQ" type="_u8MFAAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAsKgAuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy" specification="_vAAOAAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAsKgQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAsKgguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAsKgwuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAsKhAuLEei-6eSvavMBRQ" type="_u8MFAAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor, at);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAsKhQuLEei-6eSvavMBRQ" name="paintCfg" specification="_vAAOBwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAsKhguLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAsKhwuLEei-6eSvavMBRQ" name="host" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>super.paintCfg(g, host);&#xD;
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {&#xD;
			at.scale(1.0, -1.0);&#xD;
		}       &#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u8MFAQuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy" method="_vArjfQuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u8MFBAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u8MFBQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u8MFAguLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u8MFAwuLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u8MsEAuLEei-6eSvavMBRQ" type="_u8MFAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vAAOAAuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy" method="_vAsKgAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_vAAOBAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vAAOBQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_vAAOAQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAAOAguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAAOAwuLEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAAOBguLEei-6eSvavMBRQ" type="_u8MFAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vAAOBwuLEei-6eSvavMBRQ" name="paintCfg" visibility="protected" method="_vAsKhQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAAOCAuLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAAOCQuLEei-6eSvavMBRQ" name="host" type="_u7eTUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8NTIAuLEei-6eSvavMBRQ" name="VenusImagePaintStrategy">
        <ownedComment xmi:id="_JZJPgAuNEei-6eSvavMBRQ">
          <body>This is the class that paints an image of Venus.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_u_iT8QuLEei-6eSvavMBRQ" general="_u7378QuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAsKiAuLEei-6eSvavMBRQ" name="VenusImagePaintStrategy" specification="_u8N6MAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAsKiQuLEei-6eSvavMBRQ" type="_u8NTIAuLEei-6eSvavMBRQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(&quot;images/Venus.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u8N6MAuLEei-6eSvavMBRQ" name="VenusImagePaintStrategy" method="_vAsKiAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u8N6MQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u8N6MguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u8N6MwuLEei-6eSvavMBRQ" type="_u8NTIAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8N6NAuLEei-6eSvavMBRQ" name="WiggleStrategy">
        <ownedComment xmi:id="_vA17hAuLEei-6eSvavMBRQ">
          <body>This class defines a Wiggle Strategy which defines a movement strategy for a ball that randomly
changes the velocity direction, so it wiggles.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_u_iT8guLEei-6eSvavMBRQ" client="_u8N6NAuLEei-6eSvavMBRQ" supplier="_u7378AuLEei-6eSvavMBRQ" contract="_u7378AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAsKiguLEei-6eSvavMBRQ" name="updateState" specification="_u_i7AAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAsKiwuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAsKjAuLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % rzr.randomInt(2,  100) == 0) {
						ball.setVel(new Point(ball.getVel().x, ball.getVel().y * -1));
					} else if (ball.getItr() % rzr.randomInt(2, 100) == 0){
						ball.setVel(new Point(ball.getVel().x * -1, ball.getVel().y));
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u_i7AAuLEei-6eSvavMBRQ" name="updateState" method="_vAsKiguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u_i7AQuLEei-6eSvavMBRQ" name="ball" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_i7AguLEei-6eSvavMBRQ" name="dispatcher" type="_u8OhQAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vAxDAwuLEei-6eSvavMBRQ" name="" memberEnd="_vARTwQuLEei-6eSvavMBRQ _vAxDBAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vAxDBAuLEei-6eSvavMBRQ" name="" type="_u7eTUAuLEei-6eSvavMBRQ" association="_vAxDAwuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vAxqEAuLEei-6eSvavMBRQ" name="" memberEnd="_vAR60AuLEei-6eSvavMBRQ _vAxqEQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vAxqEQuLEei-6eSvavMBRQ" name="" type="_u7eTUAuLEei-6eSvavMBRQ" association="_vAxqEAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vAxqEguLEei-6eSvavMBRQ" name="" memberEnd="_vAR60wuLEei-6eSvavMBRQ _vAyRIAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vAyRIAuLEei-6eSvavMBRQ" name="" type="_u7eTUAuLEei-6eSvavMBRQ" association="_vAxqEguLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vAyRIQuLEei-6eSvavMBRQ" name="" memberEnd="_vASh4AuLEei-6eSvavMBRQ _vAyRIguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vAyRIguLEei-6eSvavMBRQ" name="" type="_u7eTUAuLEei-6eSvavMBRQ" association="_vAyRIQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vA93UAuLEei-6eSvavMBRQ" name="" memberEnd="_vA93UQuLEei-6eSvavMBRQ _u704oQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vA93UQuLEei-6eSvavMBRQ" name="" type="_u70RkQuLEei-6eSvavMBRQ" association="_vA93UAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vA-eYQuLEei-6eSvavMBRQ" name="" memberEnd="_vA-eYguLEei-6eSvavMBRQ _u704oguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vA-eYguLEei-6eSvavMBRQ" name="" type="_u70RkQuLEei-6eSvavMBRQ" association="_vA-eYQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vA_FcQuLEei-6eSvavMBRQ" name="" memberEnd="_vA_FcguLEei-6eSvavMBRQ _u73U4AuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vA_FcguLEei-6eSvavMBRQ" name="" type="_u72t0QuLEei-6eSvavMBRQ" association="_vA_FcQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vA_sgQuLEei-6eSvavMBRQ" name="" memberEnd="_vA_sgguLEei-6eSvavMBRQ _u73U4wuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vA_sgguLEei-6eSvavMBRQ" name="" type="_u72t0QuLEei-6eSvavMBRQ" association="_vA_sgQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBBhsQuLEei-6eSvavMBRQ" name="" memberEnd="_vBBhsguLEei-6eSvavMBRQ _vAQssguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBBhsguLEei-6eSvavMBRQ" name="" type="_u7b3EAuLEei-6eSvavMBRQ" association="_vBBhsQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBCv0AuLEei-6eSvavMBRQ" name="" memberEnd="_vBCv0QuLEei-6eSvavMBRQ _vASh4QuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBCv0QuLEei-6eSvavMBRQ" name="" type="_u7eTUAuLEei-6eSvavMBRQ" association="_vBCv0AuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBCv0wuLEei-6eSvavMBRQ" name="" memberEnd="_vBCv1AuLEei-6eSvavMBRQ _vASh4wuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBCv1AuLEei-6eSvavMBRQ" name="" type="_u7eTUAuLEei-6eSvavMBRQ" association="_vBCv0wuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBDW4QuLEei-6eSvavMBRQ" name="" memberEnd="_vBDW4guLEei-6eSvavMBRQ _vATwAAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBDW4guLEei-6eSvavMBRQ" name="" type="_u7mPIAuLEei-6eSvavMBRQ" association="_vBDW4QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBD98QuLEei-6eSvavMBRQ" name="" memberEnd="_vBD98guLEei-6eSvavMBRQ _vAUXFAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBD98guLEei-6eSvavMBRQ" name="" type="_u7mPIAuLEei-6eSvavMBRQ" association="_vBD98QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBElAQuLEei-6eSvavMBRQ" name="" memberEnd="_vBElAguLEei-6eSvavMBRQ _vAU-IguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBElAguLEei-6eSvavMBRQ" name="" type="_u7mPIAuLEei-6eSvavMBRQ" association="_vBElAQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBFMEAuLEei-6eSvavMBRQ" name="" memberEnd="_vBFMEQuLEei-6eSvavMBRQ _vAVlMAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBFMEQuLEei-6eSvavMBRQ" name="" type="_u7wAIAuLEei-6eSvavMBRQ" association="_vBFMEAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBFMEwuLEei-6eSvavMBRQ" name="" memberEnd="_vBFMFAuLEei-6eSvavMBRQ _vAWMRQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBFMFAuLEei-6eSvavMBRQ" name="" type="_u7378QuLEei-6eSvavMBRQ" association="_vBFMEwuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBFzIQuLEei-6eSvavMBRQ" name="" memberEnd="_vBFzIguLEei-6eSvavMBRQ _vAWzUguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBFzIguLEei-6eSvavMBRQ" name="" type="_u7378QuLEei-6eSvavMBRQ" association="_vBFzIQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBGaMQuLEei-6eSvavMBRQ" name="" memberEnd="_vBGaMguLEei-6eSvavMBRQ _vAWzVQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBGaMguLEei-6eSvavMBRQ" name="" type="_u7378QuLEei-6eSvavMBRQ" association="_vBGaMQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBHBQQuLEei-6eSvavMBRQ" name="" memberEnd="_vBHBQguLEei-6eSvavMBRQ _vAXaYQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBHBQguLEei-6eSvavMBRQ" name="" type="_u7378QuLEei-6eSvavMBRQ" association="_vBHBQQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBHoUQuLEei-6eSvavMBRQ" name="" memberEnd="_vBHoUguLEei-6eSvavMBRQ _vAYBcAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBHoUguLEei-6eSvavMBRQ" name="" type="_u79bgAuLEei-6eSvavMBRQ" association="_vBHoUQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBHoVAuLEei-6eSvavMBRQ" name="" memberEnd="_vBIPYAuLEei-6eSvavMBRQ _vAYBdAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBIPYAuLEei-6eSvavMBRQ" name="" type="_u7_QsAuLEei-6eSvavMBRQ" association="_vBHoVAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBIPYguLEei-6eSvavMBRQ" name="" memberEnd="_vBIPYwuLEei-6eSvavMBRQ _vAYogQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBIPYwuLEei-6eSvavMBRQ" name="" type="_u8CUAAuLEei-6eSvavMBRQ" association="_vBIPYguLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBI2cQuLEei-6eSvavMBRQ" name="" memberEnd="_vBI2cguLEei-6eSvavMBRQ _vAZPlQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBI2cguLEei-6eSvavMBRQ" name="" type="_u8JowAuLEei-6eSvavMBRQ" association="_vBI2cQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBT1kAuLEei-6eSvavMBRQ" name="" memberEnd="_vBT1kQuLEei-6eSvavMBRQ _vA0tZQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBT1kQuLEei-6eSvavMBRQ" name="" type="_u7_QsAuLEei-6eSvavMBRQ" association="_vBT1kAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_SUvNUAuUEei-6eSvavMBRQ" name="RectangleEllipsePaintStrategy">
        <ownedComment xmi:id="_SVCIVAuUEei-6eSvavMBRQ">
          <body>This class defines a composite rectangle ellipse shape that stays upright.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_SU-d4AuUEei-6eSvavMBRQ" general="_SU0s4AuUEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SVBhMguUEei-6eSvavMBRQ" name="RectangleEllipsePaintStrategy" specification="_SUv0YAuUEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_SVBhMwuUEei-6eSvavMBRQ" type="_SUvNUAuUEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(new APaintStrategy[]{new RectanglePaintStrategy(), new EllipsePaintStrategy()});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_SUv0YAuUEei-6eSvavMBRQ" name="RectangleEllipsePaintStrategy" method="_SVBhMguUEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_SUv0YQuUEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_SUwbcAuUEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_SUwbcQuUEei-6eSvavMBRQ" type="_SUvNUAuUEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_SUwbcguUEei-6eSvavMBRQ" name="RectanglePaintStrategy">
        <ownedComment xmi:id="_SVCIVQuUEei-6eSvavMBRQ">
          <body>This class defines a paint strategy to paint a rectangle shape.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_SU_E9wuUEei-6eSvavMBRQ" general="_u8CUAAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SVBhNAuUEei-6eSvavMBRQ" name="RectanglePaintStrategy" specification="_SUxCgAuUEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_SVBhNQuUEei-6eSvavMBRQ" type="_SUwbcguUEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 4.0/3.0, 1.0/3.0);
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SVCIQAuUEei-6eSvavMBRQ" name="RectanglePaintStrategy" specification="_SU-d4QuUEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_SVCIQQuUEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_SVCIQguUEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SVCIQwuUEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SVCIRAuUEei-6eSvavMBRQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SVCIRQuUEei-6eSvavMBRQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SVCIRguUEei-6eSvavMBRQ" type="_SUwbcguUEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(at, RectangleShapeFactory.Singleton.makeShape(x, y, width, height));
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_SUxCgAuUEei-6eSvavMBRQ" name="RectanglePaintStrategy" method="_SVBhNAuUEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_SUxCgQuUEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_SUxCgguUEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_SUxCgwuUEei-6eSvavMBRQ" type="_SUwbcguUEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_SU-d4QuUEei-6eSvavMBRQ" name="RectanglePaintStrategy" method="_SVCIQAuUEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_SU_E9AuUEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_SU_E9QuUEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_SU-d4guUEei-6eSvavMBRQ" name="at" type="_u--6UAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_SU_E8AuUEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SU_E8QuUEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SU_E8guUEei-6eSvavMBRQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SU_E8wuUEei-6eSvavMBRQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SU_E9guUEei-6eSvavMBRQ" type="_SUwbcguUEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_SUxpkAuUEei-6eSvavMBRQ" name="RectangleShapeFactory">
        <ownedComment xmi:id="_SVCvUAuUEei-6eSvavMBRQ">
          <body>This class defines a shape factory to make Rectangles.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_SVBhMAuUEei-6eSvavMBRQ" name="Singleton" isLeaf="true" isStatic="true" type="_SUxpkAuUEei-6eSvavMBRQ" isReadOnly="true" association="_SVCvUguUEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_SVBhMQuUEei-6eSvavMBRQ" value="new RectangleShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_SU_sAQuUEei-6eSvavMBRQ" client="_SUxpkAuUEei-6eSvavMBRQ" supplier="_u72GwAuLEei-6eSvavMBRQ" contract="_u72GwAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SVCIRwuUEei-6eSvavMBRQ" name="makeShape" specification="_SUy3sAuUEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_SVCISAuUEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SVCISQuUEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SVCISguUEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SVCISwuUEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SVCITAuUEei-6eSvavMBRQ" type="_u_PZAAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>Shape rect = new Rectangle2D.Double(x, y, xScale, yScale);
		return rect;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_SUy3sAuUEei-6eSvavMBRQ" name="makeShape" method="_SVCIRwuUEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_SUy3sQuUEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SUy3sguUEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SUy3swuUEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SUzewAuUEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SVATEAuUEei-6eSvavMBRQ" type="_u_PZAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_SU0s4AuUEei-6eSvavMBRQ" name="UprightMultiPaintStrategy">
        <ownedComment xmi:id="_SVCvUQuUEei-6eSvavMBRQ">
          <body>This class defines an upright multi paint strategy composition.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_SVA6JAuUEei-6eSvavMBRQ" general="_u79bgAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SVCITQuUEei-6eSvavMBRQ" name="UprightMultiPaintStrategy" specification="_SVATEQuUEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_SVCITguUEei-6eSvavMBRQ" name="pstrats" type="_u7b3EAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SVCITwuUEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SVCIUAuUEei-6eSvavMBRQ" type="_SU0s4AuUEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SVCIUQuUEei-6eSvavMBRQ" name="paintCfg" specification="_SVA6IQuUEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_SVCIUguUEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_SVCIUwuUEei-6eSvavMBRQ" name="host" type="_u7eTUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>super.paintCfg(g, host);
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {
			at.scale(1.0, -1.0);
		}       
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_SVATEQuUEei-6eSvavMBRQ" name="UprightMultiPaintStrategy" method="_SVCITQuUEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_SVATEwuUEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_SVATFAuUEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_SVATEguUEei-6eSvavMBRQ" name="pstrats" type="_u7b3EAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SVA6IAuUEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SVATFQuUEei-6eSvavMBRQ" type="_SU0s4AuUEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_SVA6IQuUEei-6eSvavMBRQ" name="paintCfg" visibility="protected" method="_SVCIUQuUEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_SVA6IguUEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_SVA6IwuUEei-6eSvavMBRQ" name="host" type="_u7eTUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SVCvUguUEei-6eSvavMBRQ" name="" memberEnd="_SVCvUwuUEei-6eSvavMBRQ _SVBhMAuUEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_SVCvUwuUEei-6eSvavMBRQ" name="" type="_SUxpkAuUEei-6eSvavMBRQ" association="_SVCvUguUEei-6eSvavMBRQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_u6Vq4QuLEei-6eSvavMBRQ" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_u8XEIAuLEei-6eSvavMBRQ" name="BallWorldView">
        <ownedComment xmi:id="_vA2ilAuLEei-6eSvavMBRQ">
          <body>This is the BallWorldView class, which has the frame on which our BallWorld is displayed.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <generalization xmi:id="_vAIJ0guLEei-6eSvavMBRQ" general="_u_mlYQuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_vAbr0QuLEei-6eSvavMBRQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAbr0guLEei-6eSvavMBRQ" value="-7114823923004621639L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAbr0wuLEei-6eSvavMBRQ" name="contentPane" visibility="private" type="_u_mlYwuLEei-6eSvavMBRQ" association="_vBKEkQuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_vAcS4QuLEei-6eSvavMBRQ" name="pnlControl" visibility="private" isLeaf="true" type="_u_mlYwuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBKroQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAcS4guLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAcS5AuLEei-6eSvavMBRQ" name="tfClassname" visibility="private" isLeaf="true" type="_u_nMcQuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBLSsQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAcS5QuLEei-6eSvavMBRQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAc58QuLEei-6eSvavMBRQ" name="btnClearBalls" visibility="private" isLeaf="true" type="_u_nMcwuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBL5wAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAc58guLEei-6eSvavMBRQ" value="new JButton(&quot;Clear balls&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAc59AuLEei-6eSvavMBRQ" name="adapter" visibility="private" type="_u8dKwAuLEei-6eSvavMBRQ" association="_vBL5wwuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_vAdhAguLEei-6eSvavMBRQ" name="pnlCanvas" visibility="private" isLeaf="true" type="_u_mlYwuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBMg0QuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAeIEAuLEei-6eSvavMBRQ" value="new JPanel() {&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * This is a private variable that gives the class an ID to serialize and deserialize.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;private static final long serialVersionUID = 8303517520311377718L;&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Overridden paintComponent method to paint a shape in the panel.&#xA;&#x9;&#x9; * @param g The Graphics object to paint on.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public void paintComponent(Graphics g) {&#xA;&#x9;&#x9;&#x9;super.paintComponent(g); // Do everything normally done first, e.g. clear the screen.&#xA;&#x9;&#x9;&#x9;adapter.paintBalls(g);&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAeIEguLEei-6eSvavMBRQ" name="btnAddToList" visibility="private" isLeaf="true" type="_u_nMcwuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBNH4QuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAeIEwuLEei-6eSvavMBRQ" value="new JButton(&quot;Add to list&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAeIFQuLEei-6eSvavMBRQ" name="btnCombine" visibility="private" isLeaf="true" type="_u_nMcwuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBNu8QuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAeIFguLEei-6eSvavMBRQ" value="new JButton(&quot;Combine&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAeIGAuLEei-6eSvavMBRQ" name="btnMakeSelectedBall" visibility="private" isLeaf="true" type="_u_nMcwuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBNu9AuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAevIAuLEei-6eSvavMBRQ" value="new JButton(&quot;Make selected ball&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAevIguLEei-6eSvavMBRQ" name="btnMakeSwitcher" visibility="private" isLeaf="true" type="_u_nMcwuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBOWAQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAevIwuLEei-6eSvavMBRQ" value="new JButton(&quot;Make switcher&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAevJQuLEei-6eSvavMBRQ" name="btnSwitch" visibility="private" isLeaf="true" type="_u_nMcwuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBO9EQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAevJguLEei-6eSvavMBRQ" value="new JButton(&quot;Switch&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAevKAuLEei-6eSvavMBRQ" name="comBoxTop" visibility="private" type="_u_oakQuLEei-6eSvavMBRQ" association="_vBPkIQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAfWMQuLEei-6eSvavMBRQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAfWMwuLEei-6eSvavMBRQ" name="comBoxBottom" visibility="private" type="_u_oakQuLEei-6eSvavMBRQ" association="_vBQLMAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAf9QAuLEei-6eSvavMBRQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAf9QguLEei-6eSvavMBRQ" name="pnlChangeList" visibility="private" isLeaf="true" type="_u_mlYwuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBQLMwuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAf9QwuLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAf9RQuLEei-6eSvavMBRQ" name="pnlDropDowns" visibility="private" isLeaf="true" type="_u_mlYwuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBQyQQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAf9RguLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAf9SAuLEei-6eSvavMBRQ" name="pnlSwitching" visibility="private" isLeaf="true" type="_u_mlYwuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBRZUQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAf9SQuLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAgkUQuLEei-6eSvavMBRQ" name="pnlPaintStrats" visibility="private" isLeaf="true" type="_u_mlYwuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBSAYAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAgkUguLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAgkVAuLEei-6eSvavMBRQ" name="btnAddPaintStrat" visibility="private" isLeaf="true" type="_u_nMcwuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBSAYwuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAgkVQuLEei-6eSvavMBRQ" value="new JButton(&quot;Add&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAhLYQuLEei-6eSvavMBRQ" name="txtPaintStrat" visibility="private" isLeaf="true" type="_u_nMcQuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBSncQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAhLYguLEei-6eSvavMBRQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAhLZAuLEei-6eSvavMBRQ" name="comBoxStrats" visibility="private" isLeaf="true" type="_u_oakQuLEei-6eSvavMBRQ" isReadOnly="true" association="_vBTOgQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAhycQuLEei-6eSvavMBRQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAt_sAuLEei-6eSvavMBRQ" name="getPanel" specification="_u8Y5UAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAt_sQuLEei-6eSvavMBRQ" type="_u_mlYwuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return pnlCanvas;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAt_sguLEei-6eSvavMBRQ" name="BallWorldView" specification="_u_qPwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAt_swuLEei-6eSvavMBRQ" name="adapter" type="_u8dKwAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAt_tAuLEei-6eSvavMBRQ" type="_u8XEIAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>txtPaintStrat.setToolTipText(&quot;This is the text field where you can add paint strategies.&quot;);
		pnlPaintStrats.setToolTipText(&quot;This is the panel that holds the components that let you add paint strategies and select them.&quot;);
		pnlPaintStrats.add(txtPaintStrat);
		txtPaintStrat.setColumns(10);
		this.adapter = adapter;
		initGUI();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAt_tQuLEei-6eSvavMBRQ" name="updateView" specification="_u8ZgYAuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>repaint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAt_tguLEei-6eSvavMBRQ" name="getCanvas" specification="_u8ZgYQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAt_twuLEei-6eSvavMBRQ" type="_u-9FIAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return getPanel();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAt_uAuLEei-6eSvavMBRQ" name="initGUI" specification="_u8ZgYguLEei-6eSvavMBRQ">
          <language>java</language>
          <body>setTitle(&quot;BallWorld&quot;);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setToolTipText(&quot;This is the content of the frame.&quot;);
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		pnlControl.setBackground(Color.DARK_GRAY);
		pnlControl.setToolTipText(&quot;This is the control panel that lets you create balls and clear them.&quot;);
		
		contentPane.add(pnlControl, BorderLayout.NORTH);
		pnlControl.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		pnlChangeList.setToolTipText(&quot;This panel is where you can add the type of ball you want to make to the drop down lists.&quot;);
		
		pnlControl.add(pnlChangeList);
		pnlChangeList.setLayout(new GridLayout(0, 1, 0, 0));
		
		pnlChangeList.add(tfClassname);
		tfClassname.setToolTipText(&quot;The type of the ball you want to make.&quot;);
		
		tfClassname.setColumns(10);
		btnAddToList.setToolTipText(&quot;This button adds the strategy type in the text field to the drop down boxes.&quot;);
		pnlChangeList.add(btnAddToList);
		btnAddToList.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (tfClassname.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem stratFac = adapter.addStrategy(tfClassname.getText());

             comBoxTop.insertItemAt(stratFac, 0);
             comBoxBottom.insertItemAt(stratFac, 0);
			}
		});
		pnlDropDowns.setToolTipText(&quot;This panel is for the drop down boxes, and buttons to make selected balls and combine strategies.&quot;);
		
		pnlControl.add(pnlDropDowns);
		pnlDropDowns.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSelectedBall.setToolTipText(&quot;This button makes a ball with the update strategy of the factory that's selected on the top drop down box.&quot;);
		pnlDropDowns.add(btnMakeSelectedBall);
		comBoxTop.setToolTipText(&quot;This is the drop down list on the top.&quot;);
		pnlDropDowns.add(comBoxTop);
		comBoxBottom.setToolTipText(&quot;This is the drop down list on the bottom.&quot;);
		pnlDropDowns.add(comBoxBottom);
		btnCombine.setToolTipText(&quot;This button combines the two strategy factories in the combo boxes.&quot;);
		pnlDropDowns.add(btnCombine);
		btnCombine.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem top = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem bottom = comBoxBottom.getItemAt(comBoxBottom.getSelectedIndex());
				
				if (top == null || bottom == null) {
					return;
				}
				
				TDropListItem combo = adapter.combineStrategies(top, bottom);
				comBoxTop.addItem(combo);
				comBoxBottom.addItem(combo);
			}
		});
		btnMakeSelectedBall.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem selected = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem paintFac = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (selected == null || paintFac == null) {
					return;
				}
				
				adapter.makeBall(selected, paintFac);
			}
		});
		pnlSwitching.setToolTipText(&quot;This panel is for the buttons related to making switcher balls and switching their strategies.&quot;);
		
		pnlControl.add(pnlSwitching);
		pnlSwitching.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSwitcher.setToolTipText(&quot;Click this item to make a switcher ball.&quot;);
		pnlSwitching.add(btnMakeSwitcher);
		btnSwitch.setToolTipText(&quot;Click this button to switch the switcher balls to the selected item in the top combo box.&quot;);
		pnlSwitching.add(btnSwitch);
		
		btnSwitch.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switchFac = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				
				if (switchFac == null) {
					return;
				}
				
				adapter.setSwitcherStrategy(switchFac);
			}
		});
		
		btnMakeSwitcher.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switcherStrat = adapter.getSwitcherFac();
				TDropListItem paintStrat = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (paintStrat == null) {
					return;
				}
				
				adapter.makeBall(switcherStrat, paintStrat);
			}
		});
		btnClearBalls.setToolTipText(&quot;Click this to clear the balls on the canvas.&quot;);
		btnClearBalls.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				adapter.clearBalls();
			}
		});
		
		pnlControl.add(btnClearBalls);
		
		pnlControl.add(pnlPaintStrats);
		pnlPaintStrats.setLayout(new GridLayout(0, 1, 0, 0));
		btnAddPaintStrat.setToolTipText(&quot;This is the button that lets you add paint strategies to the combo box below.&quot;);
		btnAddPaintStrat.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (txtPaintStrat.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem paintFac = adapter.addPaintFactory(txtPaintStrat.getText());
             comBoxStrats.insertItemAt(paintFac, 0);
			}
		});
		
		
		pnlPaintStrats.add(btnAddPaintStrat);
		comBoxStrats.setToolTipText(&quot;The is the combo box for the paint strategies that can be implemented.&quot;);
		
		pnlPaintStrats.add(comBoxStrats);
		pnlCanvas.setBackground(Color.LIGHT_GRAY);
		pnlCanvas.setToolTipText(&quot;This is the canvas where the balls move, and stay in.&quot;);
		
		contentPane.add(pnlCanvas, BorderLayout.CENTER);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAt_uQuLEei-6eSvavMBRQ" name="start" specification="_u8ZgYwuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>setExtendedState(JFrame.MAXIMIZED_BOTH);
		setVisible(true);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u8Y5UAuLEei-6eSvavMBRQ" name="getPanel" method="_vAt_sAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vA2ilQuLEei-6eSvavMBRQ">
            <body>This gets the canvas of the frame.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_vAIJ0AuLEei-6eSvavMBRQ" type="_u_mlYwuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u8ZgYAuLEei-6eSvavMBRQ" name="updateView" method="_vAt_tQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vA2ilwuLEei-6eSvavMBRQ">
            <body>Update the view by repainting</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_u8ZgYQuLEei-6eSvavMBRQ" name="getCanvas" method="_vAt_tguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vA2imAuLEei-6eSvavMBRQ">
            <body>This function returns the canvas panel.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_vAIJ0QuLEei-6eSvavMBRQ" type="_u-9FIAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u8ZgYguLEei-6eSvavMBRQ" name="initGUI" visibility="private" method="_vAt_uAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vA2imQuLEei-6eSvavMBRQ">
            <body>This private function initializes the GUI.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_u8ZgYwuLEei-6eSvavMBRQ" name="start" method="_vAt_uQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vA2imguLEei-6eSvavMBRQ">
            <body>This function makes the frame visible after initializing it.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_u_qPwAuLEei-6eSvavMBRQ" name="BallWorldView" method="_vAt_sguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u_qPwguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u_qPwwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_vA2ilguLEei-6eSvavMBRQ">
            <body>Create the frame
	 * @param adapter An IView2ModelAdapter</body>
          </ownedComment>
          <ownedParameter xmi:id="_u_qPwQuLEei-6eSvavMBRQ" name="adapter" type="_u8dKwAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_u_qPxAuLEei-6eSvavMBRQ" type="_u8XEIAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_u8dKwAuLEei-6eSvavMBRQ" name="IView2ModelAdapter">
        <ownedComment xmi:id="_vA2imwuLEei-6eSvavMBRQ">
          <body>This is an interface which has the functions that the view wants the model to have.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_u8dx0wuLEei-6eSvavMBRQ" name="switcherFac" type="_vAKmEguLEei-6eSvavMBRQ" isReadOnly="true" association="_vBATkQuLEei-6eSvavMBRQ"/>
        <ownedOperation xmi:id="_u8dx0AuLEei-6eSvavMBRQ" name="clearBalls">
          <ownedComment xmi:id="_vA2inAuLEei-6eSvavMBRQ">
            <body>This is a function that will tell the model to clear the balls.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_u8dx0QuLEei-6eSvavMBRQ" name="addStrategy">
          <ownedComment xmi:id="_vA3JoAuLEei-6eSvavMBRQ">
            <body>This function will take the given short strategy name and return a corresponding
     * something to put onto both drop lists.
     * @param classname The shortened class name of the desired strategy
     * @return Something to put onto both the drop lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u8dx0guLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vALNIQuLEei-6eSvavMBRQ" type="_vAKmEguLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u8eY4AuLEei-6eSvavMBRQ" name="addPaintFactory">
          <ownedParameter xmi:id="_u8eY4QuLEei-6eSvavMBRQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAMbQguLEei-6eSvavMBRQ" type="_vAKmEguLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vAKmEAuLEei-6eSvavMBRQ" name="paintBalls">
          <ownedComment xmi:id="_vA2inQuLEei-6eSvavMBRQ">
            <body>This is a function that will tell the model to paint the balls.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_vAKmEQuLEei-6eSvavMBRQ" name="g" type="_u--TQQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vALNIguLEei-6eSvavMBRQ" name="makeBall">
          <ownedComment xmi:id="_vA3JoQuLEei-6eSvavMBRQ">
            <body>This function will make a ball with the selected short strategy name.
     * @param selectedItem A shorten class name for the desired strategy
     * @param paintStrat A shorten class name for desired paint strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_vAL0MAuLEei-6eSvavMBRQ" name="selectedItem" type="_vAKmEguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAL0MQuLEei-6eSvavMBRQ" name="paintStrat" type="_vAKmEguLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vAL0MguLEei-6eSvavMBRQ" name="combineStrategies">
          <ownedComment xmi:id="_vA3JoguLEei-6eSvavMBRQ">
            <body>This function will return a new object to put on both lists, given two items from the lists.
     * @param selectedItem1 An object from one drop list
     * @param selectedItem2 An object from the other drop list
     * @return An object to put back on both lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_vAL0MwuLEei-6eSvavMBRQ" name="selectedItem1" type="_vAKmEguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAL0NAuLEei-6eSvavMBRQ" name="selectedItem2" type="_vAKmEguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAL0NQuLEei-6eSvavMBRQ" type="_vAKmEguLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vAMbQAuLEei-6eSvavMBRQ" name="setSwitcherStrategy">
          <ownedComment xmi:id="_vA3JowuLEei-6eSvavMBRQ">
            <body>This function will change the current strategy of the switcher balls to whatever
     * strategy is made by the factory in the parameter.
     * @param switchFac An object from the top drop list.</body>
          </ownedComment>
          <ownedParameter xmi:id="_vAMbQQuLEei-6eSvavMBRQ" name="switchFac" type="_vAKmEguLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vAKmEguLEei-6eSvavMBRQ" name="TDropListItem"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBATkQuLEei-6eSvavMBRQ" name="" memberEnd="_vBATkguLEei-6eSvavMBRQ _u8dx0wuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBATkguLEei-6eSvavMBRQ" name="" type="_u8dKwAuLEei-6eSvavMBRQ" association="_vBATkQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBKEkQuLEei-6eSvavMBRQ" name="" memberEnd="_vBKEkguLEei-6eSvavMBRQ _vAbr0wuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBKEkguLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBKEkQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBKroQuLEei-6eSvavMBRQ" name="" memberEnd="_vBKroguLEei-6eSvavMBRQ _vAcS4QuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBKroguLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBKroQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBLSsQuLEei-6eSvavMBRQ" name="" memberEnd="_vBLSsguLEei-6eSvavMBRQ _vAcS5AuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBLSsguLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBLSsQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBL5wAuLEei-6eSvavMBRQ" name="" memberEnd="_vBL5wQuLEei-6eSvavMBRQ _vAc58QuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBL5wQuLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBL5wAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBL5wwuLEei-6eSvavMBRQ" name="" memberEnd="_vBL5xAuLEei-6eSvavMBRQ _vAc59AuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBL5xAuLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBL5wwuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBMg0QuLEei-6eSvavMBRQ" name="" memberEnd="_vBMg0guLEei-6eSvavMBRQ _vAdhAguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBMg0guLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBMg0QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBNH4QuLEei-6eSvavMBRQ" name="" memberEnd="_vBNH4guLEei-6eSvavMBRQ _vAeIEguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBNH4guLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBNH4QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBNu8QuLEei-6eSvavMBRQ" name="" memberEnd="_vBNu8guLEei-6eSvavMBRQ _vAeIFQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBNu8guLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBNu8QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBNu9AuLEei-6eSvavMBRQ" name="" memberEnd="_vBNu9QuLEei-6eSvavMBRQ _vAeIGAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBNu9QuLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBNu9AuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBOWAQuLEei-6eSvavMBRQ" name="" memberEnd="_vBOWAguLEei-6eSvavMBRQ _vAevIguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBOWAguLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBOWAQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBO9EQuLEei-6eSvavMBRQ" name="" memberEnd="_vBO9EguLEei-6eSvavMBRQ _vAevJQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBO9EguLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBO9EQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBPkIQuLEei-6eSvavMBRQ" name="" memberEnd="_vBPkIguLEei-6eSvavMBRQ _vAevKAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBPkIguLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBPkIQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBQLMAuLEei-6eSvavMBRQ" name="" memberEnd="_vBQLMQuLEei-6eSvavMBRQ _vAfWMwuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBQLMQuLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBQLMAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBQLMwuLEei-6eSvavMBRQ" name="" memberEnd="_vBQLNAuLEei-6eSvavMBRQ _vAf9QguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBQLNAuLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBQLMwuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBQyQQuLEei-6eSvavMBRQ" name="" memberEnd="_vBQyQguLEei-6eSvavMBRQ _vAf9RQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBQyQguLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBQyQQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBRZUQuLEei-6eSvavMBRQ" name="" memberEnd="_vBRZUguLEei-6eSvavMBRQ _vAf9SAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBRZUguLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBRZUQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBSAYAuLEei-6eSvavMBRQ" name="" memberEnd="_vBSAYQuLEei-6eSvavMBRQ _vAgkUQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBSAYQuLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBSAYAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBSAYwuLEei-6eSvavMBRQ" name="" memberEnd="_vBSAZAuLEei-6eSvavMBRQ _vAgkVAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBSAZAuLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBSAYwuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBSncQuLEei-6eSvavMBRQ" name="" memberEnd="_vBSncguLEei-6eSvavMBRQ _vAhLYQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBSncguLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBSncQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBTOgQuLEei-6eSvavMBRQ" name="" memberEnd="_vBTOgguLEei-6eSvavMBRQ _vAhLZAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBTOgguLEei-6eSvavMBRQ" name="" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBTOgQuLEei-6eSvavMBRQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_u6WR8AuLEei-6eSvavMBRQ" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_u7Za0AuLEei-6eSvavMBRQ" name="BallWorldController">
        <ownedComment xmi:id="_vAwb8AuLEei-6eSvavMBRQ">
          <body>This is the BallWorldController, that has private variables for model and view,
and is able to interface between them.
@author sn32, kyl3, lka2, swong
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_vAPekAuLEei-6eSvavMBRQ" name="model" visibility="private" type="_u7mPIAuLEei-6eSvavMBRQ" association="_vBA6oAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_vAQFoQuLEei-6eSvavMBRQ" name="view" visibility="private" type="_u8XEIAuLEei-6eSvavMBRQ" association="_vBA6owuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAjnoAuLEei-6eSvavMBRQ" name="main" specification="_u7aB4AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAjnoQuLEei-6eSvavMBRQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vAjnoguLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(() -> {
			try {
				(new BallWorldController()).start();
			} catch (Exception e) {
				e.printStackTrace();
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAjnowuLEei-6eSvavMBRQ" name="BallWorldController" specification="_u7ao8guLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAjnpAuLEei-6eSvavMBRQ" type="_u7Za0AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>model = new BallWorldModel(new IModel2ViewAdapter() {

			/**
			 * This function from the IModel2ViewAdapter allows the controller
			 * to tell the view to update.
			 */
			@Override
			public void update() {
				view.updateView();
			}

			/**
			 * This function from the IModel2ViewAdapter allows the controller to get
			 * the canvas from the view.
			 */
			@Override
			public Container getCanvas() {
				return view.getCanvas();
			}
		});
		
		view = new BallWorldView&lt;IStrategyFac>(new IView2ModelAdapter&lt;IStrategyFac>() {
	        /**
	         * Returns an IStrategyFac that can instantiate the strategy specified
	         * by classname. Returns the error strategy factory if classname is null.
	         * The toString() of the returned factory is the classname.
	         * @param classname Shortened name of desired strategy
	         * @return A factory to make that strategy
	         */
			@Override
	        public IStrategyFac addStrategy(String classname) {
	        		return model.makeStrategyFac(classname);
	        	}

	        /**
	         * Add a ball to the system with a strategy as given by the given IStrategyFac
	         * @param selectedItem The fully qualified name of the desired strategy.
	         */
	        @Override
	        public void makeBall(IStrategyFac selectedItem, IStrategyFac paintStrat) {
	        		if (null != selectedItem &amp;&amp; paintStrat != null) {
	        			model.makeBall(selectedItem.make(), paintStrat.makePaint());
	        		}
	        	}
			
			/**
			 * Returns an IStrategyFac that can instantiate a MultiStrategy with the
			 * two strategies made by the two given IStrategyFac objects. Returns
			 * the error strategy factory if either supplied factory is null. The
			 * toString() of the returned factory is the toString()'s of the two given
			 * factories, concatenated with &quot;-&quot;.
			 * @param selectedItem1 An IStrategyFac for a strategy
			 * @param selectedItem2 An IStrategyFac for a strategy
			 * @return An IStrategyFac for the composition of the two strategies
			 */
	        @Override
			public IStrategyFac combineStrategies(IStrategyFac selectedItem1, IStrategyFac selectedItem2) {
				return model.combineStrategyFacs(selectedItem1, selectedItem2);
			}
			
			/**
			 * This function tells the model to clear all the balls from the canvas.
			 */
			@Override
			public void clearBalls() {
				model.clearBalls();
			}
			
			/**
			 * This function tells the model to paint and update the status of all the balls.
			 */
			@Override 
			public void paintBalls(Graphics g) {
				model.update(g); // see is this is correct or if a paint method is needed
			}

			/**
			 * This function sets the strategy of the switcher balls to whatever is made by
			 * the input's make method.
			 * @param switchFac The new strategy factory whose make method returns the new strategy
			 * for the switcher balls
			 */
			@Override
			public void setSwitcherStrategy(IStrategyFac switchFac) {
				model.setSwitcherStrategy(switchFac);
			}

			/**
			 * This function returns the strategy factory that is making the switcher balls' current strategy.
			 * @return An IStrategyFactory that makes the current switcher balls' strategy.
			 */
			@Override
			public IStrategyFac getSwitcherFac() {
				return model.getSwitcherFac();
			}

			@Override
			public IStrategyFac addPaintFactory(String text) {
				return model.makePaintFactory(text);
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAjnpQuLEei-6eSvavMBRQ" name="start" specification="_u7bQAQuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>view.start();
		model.start();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u7aB4AuLEei-6eSvavMBRQ" name="main" isStatic="true" method="_vAjnoAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAwb8QuLEei-6eSvavMBRQ">
            <body>This main method starts the BallWorldController.
	 * @param args Command line arguments.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u7aB4QuLEei-6eSvavMBRQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u7ao8AuLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_u7ao8guLEei-6eSvavMBRQ" name="BallWorldController" method="_vAjnowuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u7ao8wuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u7ao9AuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_vAwb8guLEei-6eSvavMBRQ">
            <body>This is the constructor for BallWorldController, which
	 * creates anonymous inner classes for the adapters, and defines their functions.</body>
          </ownedComment>
          <ownedParameter xmi:id="_u7bQAAuLEei-6eSvavMBRQ" type="_u7Za0AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u7bQAQuLEei-6eSvavMBRQ" name="start" method="_vAjnpQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vAwb8wuLEei-6eSvavMBRQ">
            <body>This function starts the view and model.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBA6oAuLEei-6eSvavMBRQ" name="" memberEnd="_vBA6oQuLEei-6eSvavMBRQ _vAPekAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBA6oQuLEei-6eSvavMBRQ" name="" type="_u7Za0AuLEei-6eSvavMBRQ" association="_vBA6oAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBA6owuLEei-6eSvavMBRQ" name="" memberEnd="_vBA6pAuLEei-6eSvavMBRQ _vAQFoQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBA6pAuLEei-6eSvavMBRQ" name="" type="_u7Za0AuLEei-6eSvavMBRQ" association="_vBA6owuLEei-6eSvavMBRQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_u6YuMQuLEei-6eSvavMBRQ" name="util">
      <packagedElement xmi:type="uml:Class" xmi:id="_u8OhQAuLEei-6eSvavMBRQ" name="Dispatcher">
        <ownedComment xmi:id="_vA17hQuLEei-6eSvavMBRQ">
          <body>A simplified Observable class that immediately notifies its Observers when its
notifyAll() method is called. The changed state of the Dispatcher does not need
to be separately set.
@author sn32, kyl3</body>
        </ownedComment>
        <generalization xmi:id="_vAA1EguLEei-6eSvavMBRQ" general="_u_CksQuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAsKjQuLEei-6eSvavMBRQ" name="notifyAll" specification="_vAA1EAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAsKjguLEei-6eSvavMBRQ" name="param" type="_u_11-wuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>setChanged();
     notifyObservers(param);
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_vAA1EAuLEei-6eSvavMBRQ" name="notifyAll" method="_vAsKjQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAA1EQuLEei-6eSvavMBRQ" name="param" type="_u_11-wuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_u8PIUAuLEei-6eSvavMBRQ" name="IRandomizer">
        <ownedOperation xmi:id="_u8PvYAuLEei-6eSvavMBRQ" name="randomInt">
          <ownedComment xmi:id="_vA17iAuLEei-6eSvavMBRQ">
            <body>Returns a random integer greater than or equal to min and less than or equal to max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return an int subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_u8PvYQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u8QWcAuLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u8QWcQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_u8QWcguLEei-6eSvavMBRQ" name="randomDouble">
          <ownedComment xmi:id="_vA17iQuLEei-6eSvavMBRQ">
            <body>Returns a random double greater than or equal to min and less than max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return a double subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_u8QWcwuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u8QWdAuLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u8QWdQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_u8Q9gAuLEei-6eSvavMBRQ" name="randomColor">
          <ownedComment xmi:id="_vA17jQuLEei-6eSvavMBRQ">
            <body>Generates a random color
	 * @return a random Color object</body>
          </ownedComment>
          <ownedParameter xmi:id="_vADRUAuLEei-6eSvavMBRQ" type="_u_BWkAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vAA1EwuLEei-6eSvavMBRQ" name="randomLoc">
          <ownedComment xmi:id="_vA17hguLEei-6eSvavMBRQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than rect.width
	 * and 0 less than y less than rect.height.
	 * @param rect The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_vAA1FAuLEei-6eSvavMBRQ" name="rect" type="_u_IEQAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vABcIAuLEei-6eSvavMBRQ" type="_u_B9oQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vABcIwuLEei-6eSvavMBRQ" name="randomLoc">
          <ownedComment xmi:id="_vA17hwuLEei-6eSvavMBRQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than dim.width
	 * and 0 less than y less than dim.height.
	 * @param dim The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_vABcJAuLEei-6eSvavMBRQ" name="dim" type="_vABcIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vACDMAuLEei-6eSvavMBRQ" type="_u_B9oQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vACDMQuLEei-6eSvavMBRQ" name="randomVel">
          <ownedComment xmi:id="_vA17iguLEei-6eSvavMBRQ">
            <body>Returns a random velocity (as a Point) subject to the constraint that the absolute value
	 * of the velocity (speed) within the bound (inclusive) defined by rect. Thus the resultant
	 * velocity may be negative. The given Rectangle should use all positive values.
	 * @param rect The bounds for the absolute value of the velocity in the x and y directions.  
	 * @return a Point object with x and y subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_vACDMguLEei-6eSvavMBRQ" name="rect" type="_u_IEQAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vACDMwuLEei-6eSvavMBRQ" type="_u_B9oQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vACqQAuLEei-6eSvavMBRQ" name="randomDim">
          <ownedComment xmi:id="_vA17iwuLEei-6eSvavMBRQ">
            <body>Returns a random square Dimension, whose width is maxDim.width/2 less than width less than maxDim.width
	 * @param maxDim  The bounds on the side of the created Dimension.
	 * @return A random square Dimension subject to the given bound</body>
          </ownedComment>
          <ownedParameter xmi:id="_vACqQQuLEei-6eSvavMBRQ" name="maxDim" type="_vABcIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vACqQguLEei-6eSvavMBRQ" type="_vABcIQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vACqQwuLEei-6eSvavMBRQ" name="randomBounds">
          <ownedComment xmi:id="_vA17jAuLEei-6eSvavMBRQ">
            <body>Generates a randomly located and sized rectangle
	 * @param rect  The bounds for the location of the created rectangle
	 * @param maxDim  The bounds for the dimensions of the create rectangle
	 * @return A Rectangle with location and dimensions subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_vACqRAuLEei-6eSvavMBRQ" name="rect" type="_u_IEQAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vACqRQuLEei-6eSvavMBRQ" name="maxDim" type="_vABcIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vACqRguLEei-6eSvavMBRQ" type="_u_IEQAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vADRUQuLEei-6eSvavMBRQ" name="randomChoice">
          <ownedComment xmi:id="_vA17jguLEei-6eSvavMBRQ">
            <body>Returns a random choice of one of two objects, x and y, where probX is the probability 
	 * that x will be picked (0 less than x less than 1).
	 * @param x The first of two choices
	 * @param y The second of two choices
	 * @param probX  The probability of the first choice
	 * @return Either x or y as per the probability of choosing them.</body>
          </ownedComment>
          <ownedParameter xmi:id="_vADRUguLEei-6eSvavMBRQ" name="x" type="_u_11-wuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vADRUwuLEei-6eSvavMBRQ" name="y" type="_u_11-wuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vADRVAuLEei-6eSvavMBRQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vADRVQuLEei-6eSvavMBRQ" type="_u_11-wuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8SLoAuLEei-6eSvavMBRQ" name="Randomizer">
        <ownedComment xmi:id="_vA17jwuLEei-6eSvavMBRQ">
          <body>Utility class that supplies  class routines for generating various random values</body>
        </ownedComment>
        <ownedAttribute xmi:id="_vAZ2oQuLEei-6eSvavMBRQ" name="singleton" isStatic="true" type="_u8SLoAuLEei-6eSvavMBRQ" association="_vBJdgQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAZ2oguLEei-6eSvavMBRQ" value="new Randomizer()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_u_kJIAuLEei-6eSvavMBRQ" client="_u8SLoAuLEei-6eSvavMBRQ" supplier="_u8PIUAuLEei-6eSvavMBRQ" contract="_u8PIUAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAsxkAuLEei-6eSvavMBRQ" name="randomLoc" specification="_vAD4YAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAsxkQuLEei-6eSvavMBRQ" name="rect" type="_u_IEQAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAsxkguLEei-6eSvavMBRQ" type="_u_B9oQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, rect.width), randomInt(0, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAsxkwuLEei-6eSvavMBRQ" name="randomLoc" specification="_vAD4YwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAsxlAuLEei-6eSvavMBRQ" name="dim" type="_vABcIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAsxlQuLEei-6eSvavMBRQ" type="_u_B9oQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, dim.width), randomInt(0, dim.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAsxlguLEei-6eSvavMBRQ" name="randomInt" specification="_u8TZwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAsxlwuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAsxmAuLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAsxmQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int)Math.floor((Math.random()*(1+max-min))+min);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAsxmguLEei-6eSvavMBRQ" name="randomDouble" specification="_u8TZxAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAsxmwuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAsxnAuLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAsxnQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return (Math.random()*(max-min))+min;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAsxnguLEei-6eSvavMBRQ" name="randomVel" specification="_vAEfcguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAsxnwuLEei-6eSvavMBRQ" name="rect" type="_u_IEQAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAsxoAuLEei-6eSvavMBRQ" type="_u_B9oQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return (new Point (randomInt(-rect.width, rect.width), randomInt(-rect.height, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAsxoQuLEei-6eSvavMBRQ" name="randomDim" specification="_vAFGgAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAsxoguLEei-6eSvavMBRQ" name="maxDim" type="_vABcIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAsxowuLEei-6eSvavMBRQ" type="_vABcIQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>int x =  randomInt(maxDim.width/2,maxDim.width);
		return new Dimension(x,x);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAtYoAuLEei-6eSvavMBRQ" name="randomBounds" specification="_vAFGgwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAtYoQuLEei-6eSvavMBRQ" name="rect" type="_u_IEQAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAtYoguLEei-6eSvavMBRQ" name="maxDim" type="_vABcIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAtYowuLEei-6eSvavMBRQ" type="_u_IEQAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return new Rectangle(randomLoc(rect), randomDim(maxDim));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAtYpAuLEei-6eSvavMBRQ" name="randomColor" specification="_u8UA0AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAtYpQuLEei-6eSvavMBRQ" type="_u_BWkAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return new Color( randomInt(0,255),randomInt(0,255),randomInt(0,255));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAtYpguLEei-6eSvavMBRQ" name="randomChoice" specification="_vAFtkAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAtYpwuLEei-6eSvavMBRQ" name="x" type="_u_11-wuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAtYqAuLEei-6eSvavMBRQ" name="y" type="_u_11-wuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAtYqQuLEei-6eSvavMBRQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAtYqguLEei-6eSvavMBRQ" type="_u_11-wuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return (Math.random() &lt; probX) ? x: y;

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u8SysAuLEei-6eSvavMBRQ" name="Randomizer" visibility="private">
          <eAnnotations xmi:id="_u8SysQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u8SysguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_u8SytAuLEei-6eSvavMBRQ" type="_u8SLoAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u8TZwAuLEei-6eSvavMBRQ" name="randomInt" method="_vAsxlguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u8TZwQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u8TZwguLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u8TZwwuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_u8TZxAuLEei-6eSvavMBRQ" name="randomDouble" method="_vAsxmguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_u8TZxQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u8TZxguLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u8TZxwuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_u8UA0AuLEei-6eSvavMBRQ" name="randomColor" method="_vAtYpAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAFGhwuLEei-6eSvavMBRQ" type="_u_BWkAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vAD4YAuLEei-6eSvavMBRQ" name="randomLoc" method="_vAsxkAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAD4YQuLEei-6eSvavMBRQ" name="rect" type="_u_IEQAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAD4YguLEei-6eSvavMBRQ" type="_u_B9oQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vAD4YwuLEei-6eSvavMBRQ" name="randomLoc" method="_vAsxkwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAEfcAuLEei-6eSvavMBRQ" name="dim" type="_vABcIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAEfcQuLEei-6eSvavMBRQ" type="_u_B9oQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vAEfcguLEei-6eSvavMBRQ" name="randomVel" method="_vAsxnguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAEfcwuLEei-6eSvavMBRQ" name="rect" type="_u_IEQAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAEfdAuLEei-6eSvavMBRQ" type="_u_B9oQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vAFGgAuLEei-6eSvavMBRQ" name="randomDim" method="_vAsxoQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAFGgQuLEei-6eSvavMBRQ" name="maxDim" type="_vABcIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAFGgguLEei-6eSvavMBRQ" type="_vABcIQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vAFGgwuLEei-6eSvavMBRQ" name="randomBounds" method="_vAtYoAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAFGhAuLEei-6eSvavMBRQ" name="rect" type="_u_IEQAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAFGhQuLEei-6eSvavMBRQ" name="maxDim" type="_vABcIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAFGhguLEei-6eSvavMBRQ" type="_u_IEQAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vAFtkAuLEei-6eSvavMBRQ" name="randomChoice" method="_vAtYpguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAFtkQuLEei-6eSvavMBRQ" name="x" type="_u_11-wuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAFtkguLEei-6eSvavMBRQ" name="y" type="_u_11-wuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_vAFtkwuLEei-6eSvavMBRQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAFtlAuLEei-6eSvavMBRQ" type="_u_11-wuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_u8VO8AuLEei-6eSvavMBRQ" name="SineMaker">
        <ownedComment xmi:id="_vA2ikAuLEei-6eSvavMBRQ">
          <body>A utility class that can be used to create smoothly varying sinusoidal
numerical data.
Note that this is not a singleton class nor does it have static methods as
its behavior depends on the minimum, maximum and delta values given to 
its constructor.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_vAadsQuLEei-6eSvavMBRQ" name="_mid" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAbEwAuLEei-6eSvavMBRQ" name="_ampl" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAbEwguLEei-6eSvavMBRQ" name="_delta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vAbExAuLEei-6eSvavMBRQ" name="_theta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vAbExQuLEei-6eSvavMBRQ" value="-Math.PI/2.0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAtYqwuLEei-6eSvavMBRQ" name="SineMaker" specification="_u8V2AAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAtYrAuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAtYrQuLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAtYrguLEei-6eSvavMBRQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vAtYrwuLEei-6eSvavMBRQ" type="_u8VO8AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>_mid = (max+min)/2.0;
		_ampl = (max-min)/2.0;
		_delta = delta;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAtYsAuLEei-6eSvavMBRQ" name="getDblVal" specification="_u8WdFguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAtYsQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double result = _mid + _ampl*Math.sin(_theta);
		_theta += _delta; // shorthand for _theta = _theta + _delta
		return result;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vAtYsguLEei-6eSvavMBRQ" name="getIntVal" specification="_u8WdGAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_vAtYswuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int) Math.round(getDblVal());
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_u8V2AAuLEei-6eSvavMBRQ" name="SineMaker" method="_vAtYqwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_u8WdEwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_u8WdFAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_vA2ikQuLEei-6eSvavMBRQ">
            <body>The constructor takes several values to control the object's behavior.
	 * @param min The minimum and initial value to produce.
	 * @param max The maximum value to produce.
	 * @param delta The amount in radians that the generating angle is incremented each time
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_u8WdEAuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u8WdEQuLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u8WdEguLEei-6eSvavMBRQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_u8WdFQuLEei-6eSvavMBRQ" type="_u8VO8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_u8WdFguLEei-6eSvavMBRQ" name="getDblVal" method="_vAtYsAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vA2ikguLEei-6eSvavMBRQ">
            <body>Returns a different value each time it is called.  The value varies smoothly in a 
	 * sinusoidal fashion, incrementing each time as per the above specified delta 
	 * angle increase.
	 * @return the next value as a double</body>
          </ownedComment>
          <ownedParameter xmi:id="_u8WdFwuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_u8WdGAuLEei-6eSvavMBRQ" name="getIntVal" method="_vAtYsguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_vA2ikwuLEei-6eSvavMBRQ">
            <body>Same as getDblVal, but returns the result rounded to the nearest integer.
	 * Note that getDblVal and getIntVal are not independent as getIntVal merely calls
	 * getDblVal.
	 * @return the next value as an int</body>
          </ownedComment>
          <ownedParameter xmi:id="_u8WdGQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vBJdgQuLEei-6eSvavMBRQ" name="" memberEnd="_vBJdgguLEei-6eSvavMBRQ _vAZ2oQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_vBJdgguLEei-6eSvavMBRQ" name="" type="_u8SLoAuLEei-6eSvavMBRQ" association="_vBJdgQuLEei-6eSvavMBRQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_u6cYkAuLEei-6eSvavMBRQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_u6cYkQuLEei-6eSvavMBRQ" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_u_IrUQuLEei-6eSvavMBRQ" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u_mlYQuLEei-6eSvavMBRQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u_mlYwuLEei-6eSvavMBRQ" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u_nMcQuLEei-6eSvavMBRQ" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u_nMcwuLEei-6eSvavMBRQ" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_u_oakQuLEei-6eSvavMBRQ" name="JComboBox"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_ubYeAguLEei-6eSvavMBRQ">
      <eAnnotations xmi:id="_ubZFEAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_ubZFEQuLEei-6eSvavMBRQ" base_Package="_uYOcUAuLEei-6eSvavMBRQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Array xmi:id="_u7ao8QuLEei-6eSvavMBRQ" base_Element="_u7aB4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u7ceIguLEei-6eSvavMBRQ" base_Element="_u7b3EQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u7lBAwuLEei-6eSvavMBRQ" base_Element="_u7lBAAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u7wnNQuLEei-6eSvavMBRQ" base_Element="_u7wnMAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u7xOQAuLEei-6eSvavMBRQ" base_Element="_u7wnMAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_u7xOQQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u70RkAuLEei-6eSvavMBRQ" base_Element="_u7zqgAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u73U4guLEei-6eSvavMBRQ" base_Element="_u73U4AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u73U5QuLEei-6eSvavMBRQ" base_Element="_u73U4wuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u7-CkAuLEei-6eSvavMBRQ" base_Element="_u79bgQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u8C7FQuLEei-6eSvavMBRQ" base_Element="_u8C7EAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u8C7FguLEei-6eSvavMBRQ" base_Element="_u8C7EAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_u8C7FwuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u8SyswuLEei-6eSvavMBRQ" base_Element="_u8SysAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_u8XrMAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_u8XEIAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_u8dKwQuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_u8dKwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u-9sMAuLEei-6eSvavMBRQ" base_Element="_u-9FIAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u--TQAuLEei-6eSvavMBRQ" base_Element="_u-9sMQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u--TQguLEei-6eSvavMBRQ" base_Element="_u--TQQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u-_hYAuLEei-6eSvavMBRQ" base_Element="_u--6UAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_AIcguLEei-6eSvavMBRQ" base_Element="_u_AIcAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_B9oAuLEei-6eSvavMBRQ" base_Element="_u_BWkAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_CksAuLEei-6eSvavMBRQ" base_Element="_u_B9oQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_CksguLEei-6eSvavMBRQ" base_Element="_u_CksQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_DLwQuLEei-6eSvavMBRQ" base_Element="_u_DLwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_HdMAuLEei-6eSvavMBRQ" base_Element="_u_G2IQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u_HdMQuLEei-6eSvavMBRQ" base_Element="_u_G2IQuLEei-6eSvavMBRQ">
    <annotations xmi:id="_u_HdMguLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_u_IrUAuLEei-6eSvavMBRQ" base_Element="_u_IEQAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_JSYAuLEei-6eSvavMBRQ" base_Element="_u_IrUQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_MVsAuLEei-6eSvavMBRQ" base_Element="_u_LuoQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u_MVsQuLEei-6eSvavMBRQ" base_Element="_u_LuoQuLEei-6eSvavMBRQ">
    <annotations xmi:id="_u_MVsguLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_M8wwuLEei-6eSvavMBRQ" base_Element="_u_M8wAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u_Nj0AuLEei-6eSvavMBRQ" base_Element="_u_M8wAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_u_Nj0QuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_OK4guLEei-6eSvavMBRQ" base_Element="_u_Nj0wuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u_OK4wuLEei-6eSvavMBRQ" base_Element="_u_Nj0wuLEei-6eSvavMBRQ">
    <annotations xmi:id="_u_OK5AuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_u_PZAQuLEei-6eSvavMBRQ" base_Element="_u_PZAAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_QAEQuLEei-6eSvavMBRQ" base_Element="_u_QAEAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_ROMwuLEei-6eSvavMBRQ" base_Element="_u_ROMAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u_R1QAuLEei-6eSvavMBRQ" base_Element="_u_ROMAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_u_R1QQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_u_ScUwuLEei-6eSvavMBRQ" base_Element="_u_ScUAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_U4kAuLEei-6eSvavMBRQ" base_Element="_u_URgAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_U4kguLEei-6eSvavMBRQ" base_Element="_u_U4kQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_VfoQuLEei-6eSvavMBRQ" base_Element="_u_VfoAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_WGsAuLEei-6eSvavMBRQ" base_Element="_u_VfoguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_bmQAuLEei-6eSvavMBRQ" base_Element="_u_a_NguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u_bmQQuLEei-6eSvavMBRQ" base_Element="_u_a_NguLEei-6eSvavMBRQ">
    <annotations xmi:id="_u_bmQguLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_dbcwuLEei-6eSvavMBRQ" base_Element="_u_dbcAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u_eCgAuLEei-6eSvavMBRQ" base_Element="_u_dbcAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_u_eCgQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_epkAuLEei-6eSvavMBRQ" base_Element="_u_eCgwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_fQoAuLEei-6eSvavMBRQ" base_Element="_u_epkguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u_fQoQuLEei-6eSvavMBRQ" base_Element="_u_epkguLEei-6eSvavMBRQ">
    <annotations xmi:id="_u_fQoguLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_f3sAuLEei-6eSvavMBRQ" base_Element="_u_fQpAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u_f3sQuLEei-6eSvavMBRQ" base_Element="_u_fQpAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_u_f3sguLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_gewQuLEei-6eSvavMBRQ" base_Element="_u_f3tAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u_gewguLEei-6eSvavMBRQ" base_Element="_u_f3tAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_u_gewwuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_hs4QuLEei-6eSvavMBRQ" base_Element="_u_hF0guLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u_hs4guLEei-6eSvavMBRQ" base_Element="_u_hF0guLEei-6eSvavMBRQ">
    <annotations xmi:id="_u_hs4wuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_i7AwuLEei-6eSvavMBRQ" base_Element="_u_i7AAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u_i7BAuLEei-6eSvavMBRQ" base_Element="_u_i7AAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_u_i7BQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_u_mlYAuLEei-6eSvavMBRQ" base_Element="_u_l-UAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_mlYguLEei-6eSvavMBRQ" base_Element="_u_mlYQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_nMcAuLEei-6eSvavMBRQ" base_Element="_u_mlYwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_nMcguLEei-6eSvavMBRQ" base_Element="_u_nMcQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_nzgAuLEei-6eSvavMBRQ" base_Element="_u_nMcwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_nzgguLEei-6eSvavMBRQ" base_Element="_u_nzgQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_oakAuLEei-6eSvavMBRQ" base_Element="_u_nzgwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_oakguLEei-6eSvavMBRQ" base_Element="_u_oakQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_oalAuLEei-6eSvavMBRQ" base_Element="_u_oakwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_pBoQuLEei-6eSvavMBRQ" base_Element="_u_pBoAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_u_q20AuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_u_qPwQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_0AwwuLEei-6eSvavMBRQ" base_Element="_u_0AwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_u_2dAAuLEei-6eSvavMBRQ" base_Element="_u_11-wuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_4SMwuLEei-6eSvavMBRQ" base_Element="_u_4SMAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u_4SNAuLEei-6eSvavMBRQ" base_Element="_u_4SMAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_u_4SNQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_78kAuLEei-6eSvavMBRQ" base_Element="_u_7VhQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u_78kQuLEei-6eSvavMBRQ" base_Element="_u_7VhQuLEei-6eSvavMBRQ">
    <annotations xmi:id="_u_78kguLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u_9KswuLEei-6eSvavMBRQ" base_Element="_u_8jpwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u_9KtAuLEei-6eSvavMBRQ" base_Element="_u_8jpwuLEei-6eSvavMBRQ">
    <annotations xmi:id="_u_9KtQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_u__m8AuLEei-6eSvavMBRQ" base_Element="_u_-_4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_u__m8QuLEei-6eSvavMBRQ" base_Element="_u_-_4QuLEei-6eSvavMBRQ">
    <annotations xmi:id="_u__m8guLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_vABcIguLEei-6eSvavMBRQ" base_Element="_vABcIQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vALNIAuLEei-6eSvavMBRQ" base_Element="_vAKmEguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAQFoAuLEei-6eSvavMBRQ" base_Element="_vAPekAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_vAQssAuLEei-6eSvavMBRQ" genericsValue="?" base_Element="_vAQFoQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAQssQuLEei-6eSvavMBRQ" base_Element="_vAQFoQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vARTwAuLEei-6eSvavMBRQ" base_Element="_vAQssguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAR60guLEei-6eSvavMBRQ" base_Element="_vAR60QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vASh4guLEei-6eSvavMBRQ" base_Element="_vASh4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vATI8AuLEei-6eSvavMBRQ" base_Element="_vASh5AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAUXEAuLEei-6eSvavMBRQ" base_Element="_vATwAAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAUXEwuLEei-6eSvavMBRQ" base_Element="_vAUXEQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAU-IQuLEei-6eSvavMBRQ" base_Element="_vAUXFAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAU-JAuLEei-6eSvavMBRQ" base_Element="_vAU-IguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAWMQQuLEei-6eSvavMBRQ" base_Element="_vAVlMguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAWMRAuLEei-6eSvavMBRQ" base_Element="_vAWMQguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAWzUQuLEei-6eSvavMBRQ" base_Element="_vAWMRQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAXaYAuLEei-6eSvavMBRQ" base_Element="_vAWzVQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAXaYguLEei-6eSvavMBRQ" base_Element="_vAXaYQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Array xmi:id="_vAYBcguLEei-6eSvavMBRQ" base_Element="_vAYBcAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAYBcwuLEei-6eSvavMBRQ" base_Element="_vAYBcAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_vAYBdQuLEei-6eSvavMBRQ" base_Property="_vAYBdAuLEei-6eSvavMBRQ" siblings="_vA0tZQuLEei-6eSvavMBRQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAYogAuLEei-6eSvavMBRQ" base_Element="_vAYBdAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAYogguLEei-6eSvavMBRQ" base_Element="_vAYogQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAZPkQuLEei-6eSvavMBRQ" base_Element="_vAYogwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAZPlAuLEei-6eSvavMBRQ" base_Element="_vAZPkguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAZ2oAuLEei-6eSvavMBRQ" base_Element="_vAZPlQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAadsAuLEei-6eSvavMBRQ" base_Element="_vAZ2oQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAadsguLEei-6eSvavMBRQ" base_Element="_vAadsQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAbEwQuLEei-6eSvavMBRQ" base_Element="_vAbEwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAbEwwuLEei-6eSvavMBRQ" base_Element="_vAbEwguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAbr0AuLEei-6eSvavMBRQ" base_Element="_vAbExAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAcS4AuLEei-6eSvavMBRQ" base_Element="_vAbr0wuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAcS4wuLEei-6eSvavMBRQ" base_Element="_vAcS4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAc58AuLEei-6eSvavMBRQ" base_Element="_vAcS5AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAc58wuLEei-6eSvavMBRQ" base_Element="_vAc58QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_vAdhAAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_vAc59AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAdhAQuLEei-6eSvavMBRQ" base_Element="_vAc59AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAeIEQuLEei-6eSvavMBRQ" base_Element="_vAdhAguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAeIFAuLEei-6eSvavMBRQ" base_Element="_vAeIEguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAeIFwuLEei-6eSvavMBRQ" base_Element="_vAeIFQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAevIQuLEei-6eSvavMBRQ" base_Element="_vAeIGAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAevJAuLEei-6eSvavMBRQ" base_Element="_vAevIguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAevJwuLEei-6eSvavMBRQ" base_Element="_vAevJQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_vAfWMAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_vAevKAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAfWMguLEei-6eSvavMBRQ" base_Element="_vAevKAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_vAfWNAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_vAfWMwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAf9QQuLEei-6eSvavMBRQ" base_Element="_vAfWMwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAf9RAuLEei-6eSvavMBRQ" base_Element="_vAf9QguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAf9RwuLEei-6eSvavMBRQ" base_Element="_vAf9RQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAgkUAuLEei-6eSvavMBRQ" base_Element="_vAf9SAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAgkUwuLEei-6eSvavMBRQ" base_Element="_vAgkUQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAhLYAuLEei-6eSvavMBRQ" base_Element="_vAgkVAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAhLYwuLEei-6eSvavMBRQ" base_Element="_vAhLYQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_vAhycAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_vAhLZAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vAhycguLEei-6eSvavMBRQ" base_Element="_vAhLZAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_vA0tZguLEei-6eSvavMBRQ" base_Property="_vA0tZQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vA1UcAuLEei-6eSvavMBRQ" base_Element="_vA0tZQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vA-eYAuLEei-6eSvavMBRQ" base_Element="_vA93UAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vA_FcAuLEei-6eSvavMBRQ" base_Element="_vA-eYQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vA_sgAuLEei-6eSvavMBRQ" base_Element="_vA_FcQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBATkAuLEei-6eSvavMBRQ" base_Element="_vA_sgQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBATkwuLEei-6eSvavMBRQ" base_Element="_vBATkQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBA6oguLEei-6eSvavMBRQ" base_Element="_vBA6oAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBBhsAuLEei-6eSvavMBRQ" base_Element="_vBA6owuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBCIwAuLEei-6eSvavMBRQ" base_Element="_vBBhsQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBCv0guLEei-6eSvavMBRQ" base_Element="_vBCv0AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBDW4AuLEei-6eSvavMBRQ" base_Element="_vBCv0wuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBD98AuLEei-6eSvavMBRQ" base_Element="_vBDW4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBElAAuLEei-6eSvavMBRQ" base_Element="_vBD98QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBElAwuLEei-6eSvavMBRQ" base_Element="_vBElAQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBFMEguLEei-6eSvavMBRQ" base_Element="_vBFMEAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBFzIAuLEei-6eSvavMBRQ" base_Element="_vBFMEwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBGaMAuLEei-6eSvavMBRQ" base_Element="_vBFzIQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBHBQAuLEei-6eSvavMBRQ" base_Element="_vBGaMQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBHoUAuLEei-6eSvavMBRQ" base_Element="_vBHBQQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBHoUwuLEei-6eSvavMBRQ" base_Element="_vBHoUQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBIPYQuLEei-6eSvavMBRQ" base_Element="_vBHoVAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBI2cAuLEei-6eSvavMBRQ" base_Element="_vBIPYguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBJdgAuLEei-6eSvavMBRQ" base_Element="_vBI2cQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBKEkAuLEei-6eSvavMBRQ" base_Element="_vBJdgQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBKroAuLEei-6eSvavMBRQ" base_Element="_vBKEkQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBLSsAuLEei-6eSvavMBRQ" base_Element="_vBKroQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBLSswuLEei-6eSvavMBRQ" base_Element="_vBLSsQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBL5wguLEei-6eSvavMBRQ" base_Element="_vBL5wAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBMg0AuLEei-6eSvavMBRQ" base_Element="_vBL5wwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBNH4AuLEei-6eSvavMBRQ" base_Element="_vBMg0QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBNu8AuLEei-6eSvavMBRQ" base_Element="_vBNH4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBNu8wuLEei-6eSvavMBRQ" base_Element="_vBNu8QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBOWAAuLEei-6eSvavMBRQ" base_Element="_vBNu9AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBO9EAuLEei-6eSvavMBRQ" base_Element="_vBOWAQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBPkIAuLEei-6eSvavMBRQ" base_Element="_vBO9EQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBPkIwuLEei-6eSvavMBRQ" base_Element="_vBPkIQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBQLMguLEei-6eSvavMBRQ" base_Element="_vBQLMAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBQyQAuLEei-6eSvavMBRQ" base_Element="_vBQLMwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBRZUAuLEei-6eSvavMBRQ" base_Element="_vBQyQQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBRZUwuLEei-6eSvavMBRQ" base_Element="_vBRZUQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBSAYguLEei-6eSvavMBRQ" base_Element="_vBSAYAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBSncAuLEei-6eSvavMBRQ" base_Element="_vBSAYwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBTOgAuLEei-6eSvavMBRQ" base_Element="_vBSncQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBTOgwuLEei-6eSvavMBRQ" base_Element="_vBTOgQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_vBT1kguLEei-6eSvavMBRQ" base_Element="_vBT1kAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Array xmi:id="_M5488AuOEei-6eSvavMBRQ" base_Element="_u_8joguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SUzewQuUEei-6eSvavMBRQ" base_Element="_SUy3sAuUEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_SU0F0AuUEei-6eSvavMBRQ" base_Element="_SUy3sAuUEei-6eSvavMBRQ">
    <annotations xmi:id="_SU0F0QuUEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SU_sAAuUEei-6eSvavMBRQ" base_Element="_SU_E-AuUEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_SVDWYAuUEei-6eSvavMBRQ" base_Element="_SVCvUguUEei-6eSvavMBRQ"/>
</xmi:XMI>
