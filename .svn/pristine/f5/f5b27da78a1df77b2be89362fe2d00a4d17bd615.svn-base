<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_102) on Tue Feb 06 17:11:36 CST 2018 -->
<title>M-Index</title>
<meta name="date" content="2018-02-06">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="M-Index";
        }
    }
    catch(err) {
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li>Package</li>
<li>Class</li>
<li>Use</li>
<li><a href="../overview-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="index-11.html">Prev Letter</a></li>
<li><a href="index-13.html">Next Letter</a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?index-files/index-12.html" target="_top">Frames</a></li>
<li><a href="index-12.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class="contentContainer"><a href="index-1.html">A</a>&nbsp;<a href="index-2.html">B</a>&nbsp;<a href="index-3.html">C</a>&nbsp;<a href="index-4.html">D</a>&nbsp;<a href="index-5.html">E</a>&nbsp;<a href="index-6.html">F</a>&nbsp;<a href="index-7.html">G</a>&nbsp;<a href="index-8.html">H</a>&nbsp;<a href="index-9.html">I</a>&nbsp;<a href="index-10.html">J</a>&nbsp;<a href="index-11.html">L</a>&nbsp;<a href="index-12.html">M</a>&nbsp;<a href="index-13.html">N</a>&nbsp;<a href="index-14.html">P</a>&nbsp;<a href="index-15.html">R</a>&nbsp;<a href="index-16.html">S</a>&nbsp;<a href="index-17.html">T</a>&nbsp;<a href="index-18.html">U</a>&nbsp;<a href="index-19.html">V</a>&nbsp;<a href="index-20.html">W</a>&nbsp;<a href="index-21.html">_</a>&nbsp;<a name="I:M">
<!--   -->
</a>
<h2 class="title">M</h2>
<dl>
<dt><span class="memberNameLink"><a href="../controller/BallWorldController.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class controller.<a href="../controller/BallWorldController.html" title="class in controller">BallWorldController</a></dt>
<dd>
<div class="block">This main method starts the BallWorldController.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/IStrategyFac.html#make--">make()</a></span> - Method in interface model.<a href="../model/IStrategyFac.html" title="interface in model">IStrategyFac</a></dt>
<dd>
<div class="block">This function allows IStrategyFac to make an IUpdateStrategy.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/BallWorldModel.html#makeBall-model.IUpdateStrategy-model.IPaintStrategy-">makeBall(IUpdateStrategy, IPaintStrategy)</a></span> - Method in class model.<a href="../model/BallWorldModel.html" title="class in model">BallWorldModel</a></dt>
<dd>
<div class="block">This function randomizes parameters for the ball, and makes a ball with the parameter's update strategy.</div>
</dd>
<dt><span class="memberNameLink"><a href="../view/IView2ModelAdapter.html#makeBall-TDropListItem-TDropListItem-">makeBall(TDropListItem, TDropListItem)</a></span> - Method in interface view.<a href="../view/IView2ModelAdapter.html" title="interface in view">IView2ModelAdapter</a></dt>
<dd>
<div class="block">This function will make a ball with the selected short strategy name.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/IStrategyFac.html#makePaint--">makePaint()</a></span> - Method in interface model.<a href="../model/IStrategyFac.html" title="interface in model">IStrategyFac</a></dt>
<dd>
<div class="block">This function allows IStrategyFac to make an IPaintStrategy.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/BallWorldModel.html#makePaintFactory-java.lang.String-">makePaintFactory(String)</a></span> - Method in class model.<a href="../model/BallWorldModel.html" title="class in model">BallWorldModel</a></dt>
<dd>
<div class="block">This function returns an IStrategyFac to allow the Paint Strategies to be made later on.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/EllipseShapeFactory.html#makeShape-double-double-double-double-">makeShape(double, double, double, double)</a></span> - Method in class model.<a href="../model/EllipseShapeFactory.html" title="class in model">EllipseShapeFactory</a></dt>
<dd>
<div class="block">This is the function that actual makes and returns the shape.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/IShapeFactory.html#makeShape-double-double-double-double-">makeShape(double, double, double, double)</a></span> - Method in interface model.<a href="../model/IShapeFactory.html" title="interface in model">IShapeFactory</a></dt>
<dd>
<div class="block">This function creates a shape.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/RectangleShapeFactory.html#makeShape-double-double-double-double-">makeShape(double, double, double, double)</a></span> - Method in class model.<a href="../model/RectangleShapeFactory.html" title="class in model">RectangleShapeFactory</a></dt>
<dd>
<div class="block">This is the function that actual makes and returns the shape.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/ShapePaintStrategy.html#makeShape-double-double-double-double-">makeShape(double, double, double, double)</a></span> - Method in class model.<a href="../model/ShapePaintStrategy.html" title="class in model">ShapePaintStrategy</a></dt>
<dd>
<div class="block">This function makes the shape.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/BallWorldModel.html#makeStrategyFac-java.lang.String-">makeStrategyFac(String)</a></span> - Method in class model.<a href="../model/BallWorldModel.html" title="class in model">BallWorldModel</a></dt>
<dd>
<div class="block">This takes a class name, and creates a strategy factory for it, by loading the strategy and returning it
 in the make method.</div>
</dd>
<dt><a href="../model/MarioImagePaintStrategy.html" title="class in model"><span class="typeNameLink">MarioImagePaintStrategy</span></a> - Class in <a href="../model/package-summary.html">model</a></dt>
<dd>
<div class="block">This is the class that paints an image of Mario.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/MarioImagePaintStrategy.html#MarioImagePaintStrategy--">MarioImagePaintStrategy()</a></span> - Constructor for class model.<a href="../model/MarioImagePaintStrategy.html" title="class in model">MarioImagePaintStrategy</a></dt>
<dd>
<div class="block">This is the constructor that calls its super constructor on the proper image.</div>
</dd>
<dt><a href="../model/MarioMarsImagePaintStrategy.html" title="class in model"><span class="typeNameLink">MarioMarsImagePaintStrategy</span></a> - Class in <a href="../model/package-summary.html">model</a></dt>
<dd>
<div class="block">This is the class that paints an upright composite shape, a combination of Mars and Mario.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/MarioMarsImagePaintStrategy.html#MarioMarsImagePaintStrategy--">MarioMarsImagePaintStrategy()</a></span> - Constructor for class model.<a href="../model/MarioMarsImagePaintStrategy.html" title="class in model">MarioMarsImagePaintStrategy</a></dt>
<dd>
<div class="block">This is the constructor that calls its super constructor on the proper combination of images.</div>
</dd>
<dt><a href="../model/MarsImagePaintStrategy.html" title="class in model"><span class="typeNameLink">MarsImagePaintStrategy</span></a> - Class in <a href="../model/package-summary.html">model</a></dt>
<dd>
<div class="block">This is the class that paints an image of Mars.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/MarsImagePaintStrategy.html#MarsImagePaintStrategy--">MarsImagePaintStrategy()</a></span> - Constructor for class model.<a href="../model/MarsImagePaintStrategy.html" title="class in model">MarsImagePaintStrategy</a></dt>
<dd>
<div class="block">This is the constructor that calls its super constructor on the proper image.</div>
</dd>
<dt><a href="../model/package-summary.html">model</a> - package model</dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="../controller/BallWorldController.html#model">model</a></span> - Variable in class controller.<a href="../controller/BallWorldController.html" title="class in controller">BallWorldController</a></dt>
<dd>
<div class="block">This is an instance of a BallWorldModel, that allows the controller to interface with the model.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/Ball.html#move--">move()</a></span> - Method in class model.<a href="../model/Ball.html" title="class in model">Ball</a></dt>
<dd>
<div class="block">This function tells the ball to update its current location by the respective velocity
 component.</div>
</dd>
<dt><a href="../model/MultiPaintStrategy.html" title="class in model"><span class="typeNameLink">MultiPaintStrategy</span></a> - Class in <a href="../model/package-summary.html">model</a></dt>
<dd>
<div class="block">This class defines a multi paint strategy which is the composition of other paint strategies.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/MultiPaintStrategy.html#MultiPaintStrategy-model.APaintStrategy:A-">MultiPaintStrategy(APaintStrategy[])</a></span> - Constructor for class model.<a href="../model/MultiPaintStrategy.html" title="class in model">MultiPaintStrategy</a></dt>
<dd>
<div class="block">This is a constructor that doesn't take in an affine transform.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/MultiPaintStrategy.html#MultiPaintStrategy--">MultiPaintStrategy()</a></span> - Constructor for class model.<a href="../model/MultiPaintStrategy.html" title="class in model">MultiPaintStrategy</a></dt>
<dd>
<div class="block">This is the default constructor.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/MultiPaintStrategy.html#MultiPaintStrategy-java.awt.geom.AffineTransform-model.APaintStrategy:A-">MultiPaintStrategy(AffineTransform, APaintStrategy[])</a></span> - Constructor for class model.<a href="../model/MultiPaintStrategy.html" title="class in model">MultiPaintStrategy</a></dt>
<dd>
<div class="block">This is a constructor that does take in an affine transform.</div>
</dd>
<dt><a href="../model/MultiStrategy.html" title="class in model"><span class="typeNameLink">MultiStrategy</span></a> - Class in <a href="../model/package-summary.html">model</a></dt>
<dd>
<div class="block">This class defines a Multi Strategy which defines a movement strategy for a ball
 is a combination of 2 other strategies.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/MultiStrategy.html#MultiStrategy-model.IUpdateStrategy-model.IUpdateStrategy-">MultiStrategy(IUpdateStrategy, IUpdateStrategy)</a></span> - Constructor for class model.<a href="../model/MultiStrategy.html" title="class in model">MultiStrategy</a></dt>
<dd>
<div class="block">This constructor requires the 2 strategies that will be combined.</div>
</dd>
</dl>
<a href="index-1.html">A</a>&nbsp;<a href="index-2.html">B</a>&nbsp;<a href="index-3.html">C</a>&nbsp;<a href="index-4.html">D</a>&nbsp;<a href="index-5.html">E</a>&nbsp;<a href="index-6.html">F</a>&nbsp;<a href="index-7.html">G</a>&nbsp;<a href="index-8.html">H</a>&nbsp;<a href="index-9.html">I</a>&nbsp;<a href="index-10.html">J</a>&nbsp;<a href="index-11.html">L</a>&nbsp;<a href="index-12.html">M</a>&nbsp;<a href="index-13.html">N</a>&nbsp;<a href="index-14.html">P</a>&nbsp;<a href="index-15.html">R</a>&nbsp;<a href="index-16.html">S</a>&nbsp;<a href="index-17.html">T</a>&nbsp;<a href="index-18.html">U</a>&nbsp;<a href="index-19.html">V</a>&nbsp;<a href="index-20.html">W</a>&nbsp;<a href="index-21.html">_</a>&nbsp;</div>
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li>Package</li>
<li>Class</li>
<li>Use</li>
<li><a href="../overview-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="index-11.html">Prev Letter</a></li>
<li><a href="index-13.html">Next Letter</a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?index-files/index-12.html" target="_top">Frames</a></li>
<li><a href="index-12.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
