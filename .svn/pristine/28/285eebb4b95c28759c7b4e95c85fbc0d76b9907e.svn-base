<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_enqoQAt4EeiiCrav3vcpBQ" name="MVC">
    <eAnnotations xmi:id="_euSNoAt4EeiiCrav3vcpBQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_euSNoQt4EeiiCrav3vcpBQ" source="codegen">
        <details xmi:id="_euSNogt4EeiiCrav3vcpBQ" key="codegenDirectory" value="/HW04/src"/>
        <details xmi:id="_foz8MAt4EeiiCrav3vcpBQ" key="AssociatedSourceCode" value="/HW04/src/controller/BallWorldController.java;133705207/1;/HW04/src/model/ADecoratorPaintStrategy.java;3522512554/1;/HW04/src/model/APaintStrategy.java;1740869287/1;/HW04/src/view/IView2ModelAdapter.java;637323524/1;/HW04/src/model/BallPaintStrategy.java;538568874/1;/HW04/src/model/BallWorldModel.java;3438198808/1;/HW04/src/model/BreathingStrategy.java;569949667/1;/HW04/src/model/ColorStrategy.java;783269627/1;/HW04/src/model/CompositePaintStrategy.java;2517148635/1;/HW04/src/model/CrashStrategy.java;4279759508/1;/HW04/src/model/EllipsePaintStrategy.java;292774861/1;/HW04/src/model/EllipseShapeFactory.java;1636135608/1;/HW04/src/model/FastStrategy.java;3009224450/1;/HW04/src/model/IBallCmd.java;2100560540/1;/HW04/src/model/IModel2ViewAdapter.java;715642539/1;/HW04/src/model/IPaintStrategy.java;556726924/1;/HW04/src/model/IShapeFactory.java;810833796/1;/HW04/src/model/IStrategyFac.java;3581042476/1;/HW04/src/model/IUpdateStrategy.java;1651050839/1;/HW04/src/model/ImagePaintStrategy.java;2009657845/1;/HW04/src/model/MultiPaintStrategy.java;843652504/1;/HW04/src/model/MultiStrategy.java;1636671415/1;/HW04/src/model/PolygonFactory.java;352231935/1;/HW04/src/model/RectanglePaintStrategy.java;952260073/1;/HW04/src/model/RectangleShapeFactory.java;3860937959/1;/HW04/src/model/ShapePaintStrategy.java;851889235/1;/HW04/src/model/SpawnStrategy.java;3065061180/1;/HW04/src/model/SquarePaintStrategy.java;3526266484/1;/HW04/src/model/StraightStrategy.java;3914615527/1;/HW04/src/model/SwellStrategy.java;1352457759/1;/HW04/src/model/SwitcherStrategy.java;2480375116/1;/HW04/src/model/TeleportStrategy.java;2565727986/1;/HW04/src/model/UprightCompositePaintStrategy.java;585067317/1;/HW04/src/model/UprightImageStrategy.java;3761235521/1;/HW04/src/model/UprightShapePaintStrategy.java;35762995/1;/HW04/src/model/WiggleStrategy.java;4246409471/1;/HW04/src/util/Dispatcher.java;77051068/1;/HW04/src/util/IRandomizer.java;4224991458/1;/HW04/src/util/Randomizer.java;1541548940/1;/HW04/src/util/SineMaker.java;1378225368/1;/HW04/src/view/BallWorldView.java;1506153628/1;/HW04/src/model/Ball.java;544139014/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_fUyM8At4EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_fUzbEAt4EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_fUzbEQt4EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_fUzbEgt4EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_fUzbEwt4EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_fUzbFAt4EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_fUzbFQt4EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_fU0CIAt4EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_fU0CIQt4EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_fU1QQAt4EeiiCrav3vcpBQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_fU13UAt4EeiiCrav3vcpBQ" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_fU7W4At4EeiiCrav3vcpBQ" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_fbKhwAt4EeiiCrav3vcpBQ" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_fbfR4Qt4EeiiCrav3vcpBQ" name="Ellipse2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_fWGbkAt4EeiiCrav3vcpBQ" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_fb_BIQt4EeiiCrav3vcpBQ" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_fb_oMQt4EeiiCrav3vcpBQ" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_fbHecAt4EeiiCrav3vcpBQ" name="Container"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fbIFgQt4EeiiCrav3vcpBQ" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fbJToAt4EeiiCrav3vcpBQ" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fbUSwAt4EeiiCrav3vcpBQ" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fbU50At4EeiiCrav3vcpBQ" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fbVg4Qt4EeiiCrav3vcpBQ" name="Rectangle"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_fbeq0At4EeiiCrav3vcpBQ" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fbi8Qwt4EeiiCrav3vcpBQ" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fbjjUQt4EeiiCrav3vcpBQ" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fbkKYAt4EeiiCrav3vcpBQ" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fbkKYgt4EeiiCrav3vcpBQ" name="Toolkit"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fbrfIAt4EeiiCrav3vcpBQ" name="Polygon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fb8k4At4EeiiCrav3vcpBQ" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fcA2UAt4EeiiCrav3vcpBQ" name="FlowLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fcA2Ugt4EeiiCrav3vcpBQ" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fc0Hkwt4EeiiCrav3vcpBQ" name="Dimension"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_fV_t4At4EeiiCrav3vcpBQ" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_fcHkAAt4EeiiCrav3vcpBQ" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_fcILEQt4EeiiCrav3vcpBQ" name="Observer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_fcy5cAt4EeiiCrav3vcpBQ" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_fcy5cQt4EeiiCrav3vcpBQ" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_fU2eYAt4EeiiCrav3vcpBQ" name="model">
      <packagedElement xmi:type="uml:Class" xmi:id="_fWsRcAt4EeiiCrav3vcpBQ" name="ADecoratorPaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_fd9-IAt4EeiiCrav3vcpBQ">
          <body>This is the ADecoratePaintStrategy class that is abstract. It has the basic functionality&#xD;
of a paint strategy, and the methods simply delegate to the decoree.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_fbM-AAt4EeiiCrav3vcpBQ" general="_fWutsAt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fdHplAt4EeiiCrav3vcpBQ" name="decoree" visibility="private" type="_fWutsAt4EeiiCrav3vcpBQ" association="_feRgIQt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdp1Fgt4EeiiCrav3vcpBQ" name="ADecoratorPaintStrategy" specification="_fbLI0Qt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdp1Fwt4EeiiCrav3vcpBQ" name="decoree" type="_fWutsAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdp1GAt4EeiiCrav3vcpBQ" type="_fWsRcAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(new AffineTransform());&#xD;
		this.decoree = decoree;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdp1GQt4EeiiCrav3vcpBQ" name="init" specification="_fbLv4Qt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdp1Ggt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>decoree.init(ball);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdqcIAt4EeiiCrav3vcpBQ" name="paintXfrm" specification="_fcUYUAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdqcIQt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdqcIgt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdqcIwt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>decoree.paintXfrm(g, ball, at);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdrDMAt4EeiiCrav3vcpBQ" name="paint" specification="_fcVmcAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdrDMQt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdrDMgt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>decoree.paint(g, ball);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fbLI0Qt4EeiiCrav3vcpBQ" name="ADecoratorPaintStrategy" method="_fdp1Fgt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fbLI0wt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fbLI1At4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_fd9-IQt4EeiiCrav3vcpBQ">
            <body>This is the constructor for ADecoratorPaintStrategy, that calls the&#xD;
	 * super constructor with an affine transform, and sets the decoree.&#xD;
	 * @param decoree An APaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_fbLI0gt4EeiiCrav3vcpBQ" name="decoree" type="_fWutsAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fbLv4At4EeiiCrav3vcpBQ" type="_fWsRcAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fbLv4Qt4EeiiCrav3vcpBQ" name="init" method="_fdp1GQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fbLv4gt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcUYUAt4EeiiCrav3vcpBQ" name="paintXfrm" method="_fdqcIAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fcUYUQt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcUYUgt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcUYUwt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcVmcAt4EeiiCrav3vcpBQ" name="paint" method="_fdrDMAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fcVmcQt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcVmcgt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fWutsAt4EeiiCrav3vcpBQ" name="APaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_fd9-Igt4EeiiCrav3vcpBQ">
          <body>This is an abstract class that defines the top level affine transform based
paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_fdI3sAt4EeiiCrav3vcpBQ" name="at" visibility="package" type="_fbKhwAt4EeiiCrav3vcpBQ" association="_feSHMQt4EeiiCrav3vcpBQ"/>
        <interfaceRealization xmi:id="_fbOMIAt4EeiiCrav3vcpBQ" client="_fWutsAt4EeiiCrav3vcpBQ" supplier="_fXGhIAt4EeiiCrav3vcpBQ" contract="_fXGhIAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdrDMwt4EeiiCrav3vcpBQ" name="APaintStrategy" specification="_fcW0kAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdrDNAt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdrDNQt4EeiiCrav3vcpBQ" type="_fWutsAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.at = at;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdrDNgt4EeiiCrav3vcpBQ" name="paint" specification="_fcXboAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdrDNwt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdrDOAt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>double scale = ball.getRad();
		at.setToTranslation(ball.getLoc().x, ball.getLoc().y);
		at.scale(scale, scale);
		at.rotate(ball.getVel().x, ball.getVel().y);
		g.setColor(ball.getCol());    
		paintCfg(g, ball);
		paintXfrm(g, ball, at);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdrDOQt4EeiiCrav3vcpBQ" name="getAT" specification="_fWv70gt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdrDOgt4EeiiCrav3vcpBQ" type="_fbKhwAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return this.at;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fWvUwAt4EeiiCrav3vcpBQ" name="APaintStrategy">
          <eAnnotations xmi:id="_fWvUwQt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fWvUwgt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fWv70Qt4EeiiCrav3vcpBQ" type="_fWutsAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fWv70gt4EeiiCrav3vcpBQ" name="getAT" method="_fdrDOQt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd9-JQt4EeiiCrav3vcpBQ">
            <body>This is a getter that returns the Affine Transform
	 * @return An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_fcYpwAt4EeiiCrav3vcpBQ" type="_fbKhwAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fbOzMAt4EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_fbOzMQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcW0kAt4EeiiCrav3vcpBQ" name="APaintStrategy" method="_fdrDMwt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fcW0kgt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fcW0kwt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_fd9-Iwt4EeiiCrav3vcpBQ">
            <body>This is the constructor that takes in Affine Transform.
	 * @param at</body>
          </ownedComment>
          <ownedParameter xmi:id="_fcW0kQt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcW0lAt4EeiiCrav3vcpBQ" type="_fWutsAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcXboAt4EeiiCrav3vcpBQ" name="paint" method="_fdrDNgt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd9-JAt4EeiiCrav3vcpBQ">
            <body>This function paints the ball on the passed in Graphics object.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fcXboQt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcYCsAt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcYCsQt4EeiiCrav3vcpBQ" name="paintCfg" visibility="protected">
          <ownedParameter xmi:id="_fcYCsgt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcYCswt4EeiiCrav3vcpBQ" name="host" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcYpwQt4EeiiCrav3vcpBQ" name="paintXfrm" isAbstract="true">
          <ownedComment xmi:id="_fd9-Jgt4EeiiCrav3vcpBQ">
            <body>This function is a secondary paint operation that is the last step of the above
	 * paint method, which does not calculate its own affine transform, but instead,
	 * uses a supplied affine transform.
	 * @param g A graphics object
	 * @param host The host ball
	 * @param at An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_fcYpwgt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcYpwwt4EeiiCrav3vcpBQ" name="host" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcYpxAt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fW1bYAt4EeiiCrav3vcpBQ" name="BallPaintStrategy">
        <ownedComment xmi:id="_fd-lNAt4EeiiCrav3vcpBQ">
          <body>This is the ball paint strategy, which implements a paint strategy for a ball.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_fbSdkAt4EeiiCrav3vcpBQ" client="_fW1bYAt4EeiiCrav3vcpBQ" supplier="_fXGhIAt4EeiiCrav3vcpBQ" contract="_fXGhIAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdrDOwt4EeiiCrav3vcpBQ" name="paint" specification="_fcdiQAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdrDPAt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdrDPQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>g.setColor(ball.getCol());
		g.fillOval(ball.getLoc().x - ball.getRad(), ball.getLoc().y - ball.getRad(),
				ball.getRad() * 2, ball.getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fW2CcAt4EeiiCrav3vcpBQ" name="BallPaintStrategy">
          <eAnnotations xmi:id="_fW2CcQt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fW2Ccgt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fW2pgQt4EeiiCrav3vcpBQ" type="_fW1bYAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fbTEoAt4EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_fbTEoQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcdiQAt4EeiiCrav3vcpBQ" name="paint" method="_fdrDOwt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fcdiQQt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcdiQgt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fW3QkAt4EeiiCrav3vcpBQ" name="BallWorldModel">
        <ownedComment xmi:id="_fd-lNQt4EeiiCrav3vcpBQ">
          <body>This is the BallWorldModel class, which makes balls, clears balls, and updates the balls.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_fdKF0At4EeiiCrav3vcpBQ" name="adapter" visibility="private" type="_fXFTAAt4EeiiCrav3vcpBQ" association="_feSuQAt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdKF0Qt4EeiiCrav3vcpBQ" value="IModel2ViewAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdKF0wt4EeiiCrav3vcpBQ" name="timeSlice" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdKF1At4EeiiCrav3vcpBQ" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdKs4Qt4EeiiCrav3vcpBQ" name="dispatcher" visibility="private" type="_fXosoAt4EeiiCrav3vcpBQ" association="_feSuQwt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdKs4gt4EeiiCrav3vcpBQ" value="new Dispatcher()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdKs5At4EeiiCrav3vcpBQ" name="timer" visibility="private" type="_fbWH8Qt4EeiiCrav3vcpBQ" association="_feTVUQt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdKs5Qt4EeiiCrav3vcpBQ" value="new Timer(timeSlice, (e) -> adapter.update())"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdrDPgt4EeiiCrav3vcpBQ" name="BallWorldModel" specification="_fbWvAQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdrDPwt4EeiiCrav3vcpBQ" name="adapter" type="_fXFTAAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdrDQAt4EeiiCrav3vcpBQ" type="_fW3QkAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.adapter = adapter;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdrDQQt4EeiiCrav3vcpBQ" name="clearBalls" specification="_fW33oAt4EeiiCrav3vcpBQ">
          <language>java</language>
          <body>dispatcher.deleteObservers();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdrDQgt4EeiiCrav3vcpBQ" name="start" specification="_fW33oQt4EeiiCrav3vcpBQ">
          <language>java</language>
          <body>timer.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdrqQAt4EeiiCrav3vcpBQ" name="update" specification="_fcewYAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdrqQQt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll((IBallCmd) (ball, disp)->{
         // Whatever you want to do with the context Ball!
			ball.setItr(ball.getItr() + 1);
			ball.getStrat().updateState(ball, disp);
			ball.move();
			ball.bounce();
			ball.paint((Graphics) g);
		});
//        dispatcher.notifyAll(g);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdsRUAt4EeiiCrav3vcpBQ" name="loadStrategy" specification="_fW4esAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdsRUQt4EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdsRUgt4EeiiCrav3vcpBQ" type="_fXMAsAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>Object[] args =  new Object[]{};
		java.lang.reflect.Constructor&lt;?> cons[];
		try {
			cons = Class.forName(strat).getConstructors();
			return (IUpdateStrategy) cons[0].newInstance(args);
		} catch (Exception e) {
			return IStrategyFac._errorStrategyFac.make();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdsRUwt4EeiiCrav3vcpBQ" name="fixName" specification="_fW4esgt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdsRVAt4EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdsRVQt4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;model.&quot; + classname.substring(0, 1).toUpperCase() + classname.substring(1).toLowerCase() + &quot;Strategy&quot;;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdsRVgt4EeiiCrav3vcpBQ" name="makeStrategyFac" specification="_fW5FwQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdsRVwt4EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdsRWAt4EeiiCrav3vcpBQ" type="_fXI9YAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>if (null == classname) {
			return IStrategyFac._errorStrategyFac;
		}
	    return new IStrategyFac() {
	        /**
	         * Instantiate a strategy corresponding to the given class name.
	         * @return An IUpdateStrategy instance
	         */
	        public IUpdateStrategy make() {
	        		return loadStrategy(fixName(classname));
	        }

	        /**
	         * Return the given class name string
	         */
	        public String toString() {
	            return classname;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdsRWQt4EeiiCrav3vcpBQ" name="makeBall" specification="_fbX9IQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdsRWgt4EeiiCrav3vcpBQ" name="make" type="_fXMAsAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdsRWwt4EeiiCrav3vcpBQ" name="paintStrat" type="_fXGhIAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>Container con = adapter.getCanvas();
		Randomizer rzr = Randomizer.Singleton;
		
		int startRad = rzr.randomInt(10, 45);
		Point randLoc = rzr.randomLoc(new Rectangle(con.getWidth() - startRad, con.getHeight() - startRad));
		Point startLoc = new Point(randLoc.x + startRad, randLoc.y + startRad);
		Point startVel = new Point(0, 0);

		// Handles case where both x- and y-components of velocity are 0 to prevent ball from starting stationary.
		while (startVel.x == 0 &amp;&amp; startVel.y == 0) {
			startVel = new Point(rzr.randomInt(-20, 20), rzr.randomInt(-20, 20));
		}
		Color startCol = rzr.randomColor();
		
		Ball loaded = new Ball(startCol, startLoc, startRad, startVel, con, make, paintStrat);
		dispatcher.addObserver(loaded);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdsRXAt4EeiiCrav3vcpBQ" name="combineStrategyFacs" specification="_fbX9JAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdsRXQt4EeiiCrav3vcpBQ" name="stratFac1" type="_fXI9YAt4EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_fdsRXgt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_fdsRXwt4EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_fdsRYAt4EeiiCrav3vcpBQ" name="stratFac2" type="_fXI9YAt4EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_fdsRYQt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_fdsRYgt4EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_fdsRYwt4EeiiCrav3vcpBQ" type="_fXI9YAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>if (null == stratFac1 || null == stratFac2) {
	    		return IStrategyFac._errorStrategyFac;
	    	}
	    
	    return new IStrategyFac() {
	        /**
	         * Instantiate a new MultiStrategy with the strategies from the given strategy factories
	         * @return A MultiStrategy instance
	         */
	        public IUpdateStrategy make() {
	            return new MultiStrategy(stratFac1.make(), stratFac2.make());
	        }

	        /**
	         * Return a string that is the toString()'s of the given strategy factories concatenated with a &quot;-&quot;
	         */
	        public String toString() {
	            return stratFac1.toString() + &quot;-&quot; + stratFac2.toString();
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdsRZAt4EeiiCrav3vcpBQ" name="setSwitcherStrategy" specification="_fbYkNAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdsRZQt4EeiiCrav3vcpBQ" name="switchFac" type="_fXI9YAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>SwitcherStrategy.setStrat(switchFac.make());
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdsRZgt4EeiiCrav3vcpBQ" name="getSwitcherFac" specification="_fW5s0At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdsRZwt4EeiiCrav3vcpBQ" type="_fXI9YAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return IStrategyFac.switcherStrat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdsRaAt4EeiiCrav3vcpBQ" name="makePaintFactory" specification="_fW5s0Qt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdsRaQt4EeiiCrav3vcpBQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdsRagt4EeiiCrav3vcpBQ" type="_fXI9YAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return new IStrategyFac() {
	        public IUpdateStrategy make() {
	        		return new StraightStrategy();
	        }
 
	        public String toString() {
	            return text;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return loadPaintStrat(fixPaintName(text));
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fds4YAt4EeiiCrav3vcpBQ" name="loadPaintStrat" specification="_fW5s0wt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fds4YQt4EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fds4Ygt4EeiiCrav3vcpBQ" type="_fXGhIAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>if (strat.endsWith(&quot;ImagePaintStrategy&quot;)) {
			int imgInd = strat.indexOf(&quot;ImagePaintStrategy&quot;);
			String nameFile = strat.substring(6, imgInd);
			
			String filename = &quot;images/&quot; + nameFile + &quot;.gif&quot;;
			
			Object[] args =  new Object[]{filename, 1.0};
			java.lang.reflect.Constructor&lt;?> cons[];
			try {
				cons = Class.forName(&quot;model.ImagePaintStrategy&quot;).getConstructors();
				if (cons[0].getParameterCount() == 2) {
					return (IPaintStrategy) cons[0].newInstance(args);
				} else {
					return (IPaintStrategy) cons[1].newInstance(args);
				}
				
			} catch (Exception e) {
				System.out.println(e);
				return IStrategyFac._errorStrategyFac.makePaint();
			}
		} else if (strat.endsWith(&quot;CompositePaintStrategy&quot;)) {
			APaintStrategy[] pstrats = {new ImagePaintStrategy(&quot;images/Mars.gif&quot;, 1.0), new ImagePaintStrategy(&quot;images/Mario.gif&quot;, 1.0)};
			return new UprightCompositePaintStrategy(pstrats);
		} else {
			Object[] args =  new Object[]{};
			java.lang.reflect.Constructor&lt;?> cons[];
			try {
				cons = Class.forName(strat).getConstructors();
				return (IPaintStrategy) cons[0].newInstance(args);
			} catch (Exception e) {
				return IStrategyFac._errorStrategyFac.makePaint();
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fds4Ywt4EeiiCrav3vcpBQ" name="fixPaintName" specification="_fW6T4At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fds4ZAt4EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fds4ZQt4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String classnameLower = classname.toLowerCase();
		if (classnameLower.endsWith(&quot;image&quot;)) {
			int indImg = classnameLower.indexOf(&quot;image&quot;);
			String imgType = classnameLower.substring(0, indImg);
			return &quot;model.&quot; + imgType.substring(0, 1).toUpperCase() + imgType.substring(1).toLowerCase() + &quot;ImagePaintStrategy&quot;;
		}
		return &quot;model.&quot; + classname.substring(0, 1).toUpperCase() + classname.substring(1).toLowerCase() + &quot;PaintStrategy&quot;;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fW33oAt4EeiiCrav3vcpBQ" name="clearBalls" method="_fdrDQQt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd-lNwt4EeiiCrav3vcpBQ">
            <body>This function clears all the balls from the canvas, by removing them as observers.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_fW33oQt4EeiiCrav3vcpBQ" name="start" method="_fdrDQgt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd-lOAt4EeiiCrav3vcpBQ">
            <body>This function starts the timer.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_fW4esAt4EeiiCrav3vcpBQ" name="loadStrategy" method="_fdsRUAt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd-lOgt4EeiiCrav3vcpBQ">
            <body>This function takes an input string and loads the associated IUpdateStrategy,
	 * and returns the error strategy if the strategy isn't available.
	 * @param strat A string of the strategy to be created.
	 * @return The IUpdateStrategy associated with the string, or the error strategy if
	 * there is no associated strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fW4esQt4EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fbXWFAt4EeiiCrav3vcpBQ" type="_fXMAsAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fW4esgt4EeiiCrav3vcpBQ" name="fixName" method="_fdsRUwt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd-lOwt4EeiiCrav3vcpBQ">
            <body>This function takes the input and confirms it to the required model.ClassStrategy format for
	 * dynamic class loading.
	 * @param classname The string that should be modified to conform to the model.ClassStrategy format.
	 * @return The class string in a model.ClassStrategy format.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fW4eswt4EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fW5FwAt4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_fW5FwQt4EeiiCrav3vcpBQ" name="makeStrategyFac" method="_fdsRVgt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd-lPAt4EeiiCrav3vcpBQ">
            <body>This takes a class name, and creates a strategy factory for it, by loading the strategy and returning it
	 * in the make method.
	 * @param classname The class of strategy to make.
	 * @return An IStrategyFac whose make function calls the associated model.ClassStrategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fW5Fwgt4EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fbX9IAt4EeiiCrav3vcpBQ" type="_fXI9YAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fW5s0At4EeiiCrav3vcpBQ" name="getSwitcherFac" method="_fdsRZgt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd_MQQt4EeiiCrav3vcpBQ">
            <body>This function returns a strategy factory, which makes the current switcher balls' update
	 * strategy
	 * @return An IStrategyFac, which makes the current strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fbYkNgt4EeiiCrav3vcpBQ" type="_fXI9YAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fW5s0Qt4EeiiCrav3vcpBQ" name="makePaintFactory" method="_fdsRaAt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd_MQgt4EeiiCrav3vcpBQ">
            <body>This function returns an IStrategyFac to allow the Paint Strategies to be made later on.
	 * @param text The type of paint strategy.
	 * @return An IStrategyFac</body>
          </ownedComment>
          <ownedParameter xmi:id="_fW5s0gt4EeiiCrav3vcpBQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fbYkNwt4EeiiCrav3vcpBQ" type="_fXI9YAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fW5s0wt4EeiiCrav3vcpBQ" name="loadPaintStrat" method="_fds4YAt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd_MQwt4EeiiCrav3vcpBQ">
            <body>This function loads an instance of an IPaintStrategy, given a classname.
	 * @param strat The type of paint strategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_fW5s1At4EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fbZLQAt4EeiiCrav3vcpBQ" type="_fXGhIAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fW6T4At4EeiiCrav3vcpBQ" name="fixPaintName" method="_fds4Ywt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd_MRAt4EeiiCrav3vcpBQ">
            <body>This function &quot;fixes&quot; the type passed in to create an IPaintStrategy.
	 * @param classname The type of paint strategy to create.
	 * @return The fixed paint strategy information as a string.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fW6T4Qt4EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fW6T4gt4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_fbWvAQt4EeiiCrav3vcpBQ" name="BallWorldModel" method="_fdrDPgt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fbXWEQt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fbXWEgt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_fd-lNgt4EeiiCrav3vcpBQ">
            <body>This is the BallWorldModel constructor, which creates a model for the controller to interact with.
	 * @param adapter An IModel2ViewAdapter.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fbXWEAt4EeiiCrav3vcpBQ" name="adapter" type="_fXFTAAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fbXWEwt4EeiiCrav3vcpBQ" type="_fW3QkAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fbX9IQt4EeiiCrav3vcpBQ" name="makeBall" method="_fdsRWQt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd-lPQt4EeiiCrav3vcpBQ">
            <body>This function randomizes parameters for the ball, and makes a ball with the parameter's update strategy.
	 * @param make The IUpdateStrategy that determines how the ball updates.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fbX9Igt4EeiiCrav3vcpBQ" name="make" type="_fXMAsAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fbX9Iwt4EeiiCrav3vcpBQ" name="paintStrat" type="_fXGhIAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fbX9JAt4EeiiCrav3vcpBQ" name="combineStrategyFacs" method="_fdsRXAt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd-lPgt4EeiiCrav3vcpBQ">
            <body>Returns an IStrategyFac that can instantiate a MultiStrategy with the two
	 * strategies made by the two given IStrategyFac objects. Returns null if
	 * either supplied factory is null. The toString() of the returned factory
	 * is the toString()'s of the two given factories, concatenated with &quot;-&quot;. 
	 * If either factory is null, then a factory for a beeping error strategy is returned.
	 * 
	 * @param stratFac1 An IStrategyFac for a strategy
	 * @param stratFac2 An IStrategyFac for a strategy
	 * @return An IStrategyFac for the composition of the two strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_fbX9JQt4EeiiCrav3vcpBQ" name="stratFac1" type="_fXI9YAt4EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_fbYkMAt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_fbYkMQt4EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_fbX9Jgt4EeiiCrav3vcpBQ" name="stratFac2" type="_fXI9YAt4EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_fbYkMgt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_fbYkMwt4EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_fbX9Jwt4EeiiCrav3vcpBQ" type="_fXI9YAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fbYkNAt4EeiiCrav3vcpBQ" name="setSwitcherStrategy" method="_fdsRZAt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd_MQAt4EeiiCrav3vcpBQ">
            <body>This function sets the switcher balls strategy to the one made by the input.
	 * @param switchFac IStrategyFac which makes the new update strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fbYkNQt4EeiiCrav3vcpBQ" name="switchFac" type="_fXI9YAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcewYAt4EeiiCrav3vcpBQ" name="update" method="_fdrqQAt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd-lOQt4EeiiCrav3vcpBQ">
            <body>This function updates all the balls by notifying them using the dispatcher
	 * and an IBallCmd
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fcewYQt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fW8JEAt4EeiiCrav3vcpBQ" name="BreathingStrategy">
        <ownedComment xmi:id="_fd_MRQt4EeiiCrav3vcpBQ">
          <body>This class defines a Breathing Strategy, which grows and shrinks the ball's radius.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_fbZyUAt4EeiiCrav3vcpBQ" client="_fW8JEAt4EeiiCrav3vcpBQ" supplier="_fXMAsAt4EeiiCrav3vcpBQ" contract="_fXMAsAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdtfcAt4EeiiCrav3vcpBQ" name="updateState" specification="_fbaZYAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdtfcQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdtfcgt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getItr() % 5 == 0) {
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fbaZYAt4EeiiCrav3vcpBQ" name="updateState" method="_fdtfcAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fbaZYQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fbaZYgt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fW9XMAt4EeiiCrav3vcpBQ" name="ColorStrategy">
        <ownedComment xmi:id="_fd_MRgt4EeiiCrav3vcpBQ">
          <body>This class defines a Color Strategy, which changes the ball's color.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_fbbngAt4EeiiCrav3vcpBQ" client="_fW9XMAt4EeiiCrav3vcpBQ" supplier="_fXMAsAt4EeiiCrav3vcpBQ" contract="_fXMAsAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdtfcwt4EeiiCrav3vcpBQ" name="updateState" specification="_fbbngQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdtfdAt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdtfdQt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (ball.getItr() % 10 == 0) {
						Color newColor = Randomizer.Singleton.randomColor();
						ball.setCol(newColor);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fbbngQt4EeiiCrav3vcpBQ" name="updateState" method="_fdtfcwt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fbbnggt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fbbngwt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fW9-QAt4EeiiCrav3vcpBQ" name="CompositePaintStrategy">
        <ownedComment xmi:id="_fd_MRwt4EeiiCrav3vcpBQ">
          <body>This class defines a CompositePaintStrategy, which is a concrete class of MultiPaintStrategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_fbc1pAt4EeiiCrav3vcpBQ" general="_fXQSIAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdtfdgt4EeiiCrav3vcpBQ" name="CompositePaintStrategy" specification="_fbcOkgt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdtfdwt4EeiiCrav3vcpBQ" name="pstrats" type="_fWutsAt4EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fdtfeAt4EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdtfeQt4EeiiCrav3vcpBQ" type="_fW9-QAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fduGgAt4EeiiCrav3vcpBQ" name="CompositePaintStrategy" specification="_fcfXcAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fduGgQt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fduGggt4EeiiCrav3vcpBQ" name="pstrats" type="_fWutsAt4EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fduGgwt4EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fduGhAt4EeiiCrav3vcpBQ" type="_fW9-QAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, pstrats);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fbcOkgt4EeiiCrav3vcpBQ" name="CompositePaintStrategy" method="_fdtfdgt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fbc1oAt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fbc1oQt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fbcOkwt4EeiiCrav3vcpBQ" name="pstrats" type="_fWutsAt4EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fbc1owt4EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fbc1ogt4EeiiCrav3vcpBQ" type="_fW9-QAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcfXcAt4EeiiCrav3vcpBQ" name="CompositePaintStrategy" method="_fduGgAt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fcf-ggt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fcf-gwt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fcf-gAt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcf-gQt4EeiiCrav3vcpBQ" name="pstrats" type="_fWutsAt4EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fcf-hQt4EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcf-hAt4EeiiCrav3vcpBQ" type="_fW9-QAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fW_MYAt4EeiiCrav3vcpBQ" name="CrashStrategy">
        <ownedComment xmi:id="_fd_MSAt4EeiiCrav3vcpBQ">
          <body>This class defines a Crash Strategy which makes the ball
change color when it bounces from the boundaries of the canvas.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_fbc1pQt4EeiiCrav3vcpBQ" client="_fW_MYAt4EeiiCrav3vcpBQ" supplier="_fXMAsAt4EeiiCrav3vcpBQ" contract="_fXMAsAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fduGhQt4EeiiCrav3vcpBQ" name="updateState" specification="_fbdcsAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fduGhgt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fduGhwt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					
					if ((ball.getLoc().x + ball.getRad() + 8 >= ball.getCon().getWidth()) ||
							(ball.getLoc().x - ball.getRad() &lt;= 8) ||
							(ball.getLoc().y + ball.getRad() >= ball.getCon().getHeight() - 8) ||
							(ball.getLoc().y - ball.getRad() &lt;= 8)) {
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fbdcsAt4EeiiCrav3vcpBQ" name="updateState" method="_fduGhQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fbdcsQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fbdcsgt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXAagAt4EeiiCrav3vcpBQ" name="EllipsePaintStrategy">
        <ownedComment xmi:id="_fd_MSQt4EeiiCrav3vcpBQ">
          <body>This class defines a paint strategy to paint an ellipse shape.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_fbeDwgt4EeiiCrav3vcpBQ" general="_fXaDIAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fduGiAt4EeiiCrav3vcpBQ" name="EllipsePaintStrategy" specification="_fXAagQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fduGiQt4EeiiCrav3vcpBQ" type="_fXAagAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 4.0/3.0, 2.0/3.0);
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fduGigt4EeiiCrav3vcpBQ" name="EllipsePaintStrategy" specification="_fcglkAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fduGiwt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fduGjAt4EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fduGjQt4EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fduGjgt4EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fduGjwt4EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fduGkAt4EeiiCrav3vcpBQ" type="_fXAagAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, EllipseShapeFactory.Singleton.makeShape(x, y, width, height));
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fXAagQt4EeiiCrav3vcpBQ" name="EllipsePaintStrategy" method="_fduGiAt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fXAaggt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fXAagwt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fXAahAt4EeiiCrav3vcpBQ" type="_fXAagAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcglkAt4EeiiCrav3vcpBQ" name="EllipsePaintStrategy" method="_fduGigt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fcgllgt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fchMoAt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fcglkQt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcglkgt4EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcglkwt4EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcgllAt4EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcgllQt4EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fchMoQt4EeiiCrav3vcpBQ" type="_fXAagAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXBBkAt4EeiiCrav3vcpBQ" name="EllipseShapeFactory">
        <ownedComment xmi:id="_fd_MSgt4EeiiCrav3vcpBQ">
          <body>This class defines a shape factory to make Ellipses.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_fdL7AAt4EeiiCrav3vcpBQ" name="Singleton" isLeaf="true" isStatic="true" type="_fXBBkAt4EeiiCrav3vcpBQ" isReadOnly="true" association="_feTVVAt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdL7AQt4EeiiCrav3vcpBQ" value="new EllipseShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_fbf48Qt4EeiiCrav3vcpBQ" client="_fXBBkAt4EeiiCrav3vcpBQ" supplier="_fXHvQAt4EeiiCrav3vcpBQ" contract="_fXHvQAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdutkAt4EeiiCrav3vcpBQ" name="makeShape" specification="_fXBooAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdutkQt4EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdutkgt4EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdutkwt4EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdutlAt4EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdutlQt4EeiiCrav3vcpBQ" type="_fbeq0At4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>Shape ellipse = new Ellipse2D.Double(x, y, xScale, yScale);
		return ellipse;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fXBooAt4EeiiCrav3vcpBQ" name="makeShape" method="_fdutkAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fXBooQt4EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXBoogt4EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXBoowt4EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXBopAt4EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fchzsAt4EeiiCrav3vcpBQ" type="_fbeq0At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXDd0At4EeiiCrav3vcpBQ" name="FastStrategy">
        <ownedComment xmi:id="_fd_MSwt4EeiiCrav3vcpBQ">
          <body>This class defines a Fast Strategy that makes the ball's velocity increase and stop once it reaches
a pre defined max speed.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_fbggAAt4EeiiCrav3vcpBQ" client="_fXDd0At4EeiiCrav3vcpBQ" supplier="_fXMAsAt4EeiiCrav3vcpBQ" contract="_fXMAsAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdutlgt4EeiiCrav3vcpBQ" name="updateState" specification="_fbggAQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdutlwt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdutmAt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (Math.abs(ball.getVel().x) &lt; 100 &amp;&amp; Math.abs(ball.getVel().y) &lt; 100) {
						if (ball.getItr() % 10 == 0) {
							if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y + 2));
							} else if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y - 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y + 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y - 2));
							}
						}
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fbggAQt4EeiiCrav3vcpBQ" name="updateState" method="_fdutlgt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fbggAgt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fbggAwt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_fXEE4At4EeiiCrav3vcpBQ" name="IBallCmd" isAbstract="true">
        <ownedOperation xmi:id="_fbhHEwt4EeiiCrav3vcpBQ" name="apply" isAbstract="true">
          <ownedParameter xmi:id="_fbhHFAt4EeiiCrav3vcpBQ" name="context" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fbhuIAt4EeiiCrav3vcpBQ" name="disp" type="_fXosoAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_fXFTAAt4EeiiCrav3vcpBQ" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_fd_MTAt4EeiiCrav3vcpBQ">
          <body>This is an interface which defines the functions that the model wants the view to have/do.
@author sn32, kyl3</body>
        </ownedComment>
        <ownedAttribute xmi:id="_fXF6EAt4EeiiCrav3vcpBQ" name="canvas" type="_fbHecAt4EeiiCrav3vcpBQ" isReadOnly="true" association="_feN1wQt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fXF6EQt4EeiiCrav3vcpBQ" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_fXFTAAt4EeiiCrav3vcpBQ" isReadOnly="true" association="_feOc0Qt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXF6Egt4EeiiCrav3vcpBQ" value="new IModel2ViewAdapter() {&#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is an update function that we want the view to have.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public void update() {&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9; &#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is a function that gets the canvas from the view.&#xA;&#x9;&#x9;  * @return A container that is initially null.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public Container getCanvas() {&#xA;&#x9;&#x9;&#x9; return null;&#xA;&#x9;&#x9; }&#xA;&#x9; }"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_fXFTAQt4EeiiCrav3vcpBQ" name="update">
          <ownedComment xmi:id="_fd_MTQt4EeiiCrav3vcpBQ">
            <body>This is an update function that we want the view to have.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_fXGhIAt4EeiiCrav3vcpBQ" name="IPaintStrategy">
        <ownedComment xmi:id="_fd_zUAt4EeiiCrav3vcpBQ">
          <body>This is an interface for an IPaintStrategy that defines the methods we want it to have.
@author sn32, ll45</body>
        </ownedComment>
        <ownedOperation xmi:id="_fbhuIgt4EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_fbiVMAt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fciawAt4EeiiCrav3vcpBQ" name="paint">
          <ownedParameter xmi:id="_fcjB0At4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcjB0Qt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_fXHvQAt4EeiiCrav3vcpBQ" name="IShapeFactory">
        <ownedComment xmi:id="_fd_zUQt4EeiiCrav3vcpBQ">
          <body>This interface defines the methods we want a shape factory to have.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_fXIWUAt4EeiiCrav3vcpBQ" name="makeShape">
          <ownedParameter xmi:id="_fXIWUQt4EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXIWUgt4EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXIWUwt4EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXIWVAt4EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcjB0gt4EeiiCrav3vcpBQ" type="_fbeq0At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_fXI9YAt4EeiiCrav3vcpBQ" name="IStrategyFac">
        <ownedComment xmi:id="_fd_zUgt4EeiiCrav3vcpBQ">
          <body>This interface defines the functions we want IStrategyFac to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_fXKLgQt4EeiiCrav3vcpBQ" name="_errorStrategyFac" type="_fXI9YAt4EeiiCrav3vcpBQ" association="_fePD4Qt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXKLggt4EeiiCrav3vcpBQ" value="new IStrategyFac(){&#xA;        /**&#xA;         * Make the beeping error strategy&#xA;         * @return  An instance of a beeping error strategy&#xA;         */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;            return new IUpdateStrategy() {&#xA;                private int count = 0; // update counter&#xA;                &#xA;                /**&#xA;                 * Beep the speaker every 25 updates&#xA;                 */&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void updateState(Ball ball, Dispatcher dispatcher) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(25 &lt; count++){&#xA;                        java.awt.Toolkit.getDefaultToolkit().beep(); &#xA;                        count = 0;&#xA;                    }&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;            };&#xA;        }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;}&#xA;    }"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fXKykQt4EeiiCrav3vcpBQ" name="switcherStrat" type="_fXI9YAt4EeiiCrav3vcpBQ" association="_fePq8Qt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXLZoAt4EeiiCrav3vcpBQ" value="new IStrategyFac() {&#xA;    &#x9;&#x9;/**&#xA;    &#x9;&#x9; * This function makes the switcher strategy.&#xA;    &#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;&#x9;&#x9;&#x9;return new SwitcherStrategy();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_fXJkcAt4EeiiCrav3vcpBQ" name="make">
          <ownedComment xmi:id="_fd_zUwt4EeiiCrav3vcpBQ">
            <body>This function allows IStrategyFac to make an IUpdateStrategy.
	 * @return An IUpdateStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_fbiVMQt4EeiiCrav3vcpBQ" type="_fXMAsAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fXKLgAt4EeiiCrav3vcpBQ" name="makePaint">
          <ownedComment xmi:id="_fd_zVAt4EeiiCrav3vcpBQ">
            <body>This function allows IStrategyFac to make an IPaintStrategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_fbiVMgt4EeiiCrav3vcpBQ" type="_fXGhIAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_fXMAsAt4EeiiCrav3vcpBQ" name="IUpdateStrategy">
        <ownedComment xmi:id="_fd_zVQt4EeiiCrav3vcpBQ">
          <body>This interface defines the functions we want IUpdateStrategies to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedOperation xmi:id="_fbi8QAt4EeiiCrav3vcpBQ" name="updateState">
          <ownedParameter xmi:id="_fbi8QQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fbi8Qgt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXMnwAt4EeiiCrav3vcpBQ" name="ImagePaintStrategy">
        <ownedComment xmi:id="_fd_zVgt4EeiiCrav3vcpBQ">
          <body>This class defines a paint strategy for an image that extends APaintStrategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_fbl_kAt4EeiiCrav3vcpBQ" general="_fWutsAt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fdL7Agt4EeiiCrav3vcpBQ" name="scaleFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdMiEAt4EeiiCrav3vcpBQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdMiEgt4EeiiCrav3vcpBQ" name="fillFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdMiEwt4EeiiCrav3vcpBQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdNJIQt4EeiiCrav3vcpBQ" name="localAT" visibility="private" type="_fbKhwAt4EeiiCrav3vcpBQ" association="_feT8YQt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdNJIgt4EeiiCrav3vcpBQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdNJJAt4EeiiCrav3vcpBQ" name="tempAT" type="_fbKhwAt4EeiiCrav3vcpBQ" association="_feUjcQt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdNwMAt4EeiiCrav3vcpBQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdNwMQt4EeiiCrav3vcpBQ" name="filename" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdNwMgt4EeiiCrav3vcpBQ" name="image" visibility="private" type="_fbjjUQt4EeiiCrav3vcpBQ" association="_feVKgQt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fdOXQAt4EeiiCrav3vcpBQ" name="imageObs" visibility="private" type="_fbHecAt4EeiiCrav3vcpBQ" association="_feVxkAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdutmQt4EeiiCrav3vcpBQ" name="ImagePaintStrategy" specification="_fXN14At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdutmgt4EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdutmwt4EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdutnAt4EeiiCrav3vcpBQ" type="_fXMnwAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super (new AffineTransform());
		this.fillFactor = fillFactor;
		this.setFilename(filename);
				
		try {
			image =  Toolkit.getDefaultToolkit().getImage(filename);	
			
		} catch (Exception e) {
			System.out.println(&quot;failed&quot;);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdvUoAt4EeiiCrav3vcpBQ" name="ImagePaintStrategy" specification="_fckP8At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdvUoQt4EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdvUogt4EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdvUowt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdvUpAt4EeiiCrav3vcpBQ" type="_fXMnwAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.fillFactor = fillFactor;
		this.setFilename(filename);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdvUpQt4EeiiCrav3vcpBQ" name="init" specification="_fblYgAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdvUpgt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>imageObs = ball.getCon();
		MediaTracker mt = new MediaTracker(ball.getCon());
		mt.addImage(image, 1);
		try {
			mt.waitForAll();
		} catch(Exception e){
			System.out.println(&quot;ImagePaintStrategy.init(): Error waiting for image.  Exception = &quot;+e);
		}
		scaleFactor = 2.0/(fillFactor*(image.getWidth(imageObs)+image.getHeight(imageObs))/2.0); // this line is described below
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdvUpwt4EeiiCrav3vcpBQ" name="paintXfrm" specification="_fck3Awt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdvUqAt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdvUqQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdvUqgt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>localAT.setToScale(scaleFactor, scaleFactor);
		localAT.translate(-image.getWidth(imageObs)/2.0, -image.getHeight(imageObs)/2.0);
		localAT.preConcatenate(at);
		((Graphics2D)g).drawImage(image, localAT, imageObs); 
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdvUqwt4EeiiCrav3vcpBQ" name="setFilename" specification="_fXOc8At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdvUrAt4EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.filename = filename;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fXN14At4EeiiCrav3vcpBQ" name="ImagePaintStrategy" method="_fdutmQt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fXN14wt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fXN15At4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_fd_zVwt4EeiiCrav3vcpBQ">
            <body>This is a constructor for the Image Paint Strategy that doesn't take an Affine Transform.
	 * @param filename String that is the path to the image file to load
	 * @param fillFactor A double that is the fill factor</body>
          </ownedComment>
          <ownedParameter xmi:id="_fXN14Qt4EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXN14gt4EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXN15Qt4EeiiCrav3vcpBQ" type="_fXMnwAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fXOc8At4EeiiCrav3vcpBQ" name="setFilename" method="_fdvUqwt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd_zWgt4EeiiCrav3vcpBQ">
            <body>This function sets the filename.
	 * @param filename the filename to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_fXOc8Qt4EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_fblYgAt4EeiiCrav3vcpBQ" name="init" method="_fdvUpQt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd_zWQt4EeiiCrav3vcpBQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fblYgQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fckP8At4EeiiCrav3vcpBQ" name="ImagePaintStrategy" method="_fdvUoAt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fck3AAt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fck3AQt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_fd_zWAt4EeiiCrav3vcpBQ">
            <body>This is a constructor for Image Paint Strategy that takes an Affine Transform.
	 * @param filename String that is the path to the image file to load.
	 * @param fillFactor A double that is the fill factor
	 * @param at An Affine Transform.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fckP8Qt4EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fckP8gt4EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fckP8wt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fck3Agt4EeiiCrav3vcpBQ" type="_fXMnwAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fck3Awt4EeiiCrav3vcpBQ" name="paintXfrm" method="_fdvUpwt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fcleEAt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcleEQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcleEgt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXQSIAt4EeiiCrav3vcpBQ" name="MultiPaintStrategy">
        <ownedComment xmi:id="_fd_zWwt4EeiiCrav3vcpBQ">
          <body>This class defines a multi paint strategy which is the composition of other paint strategies.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_fbob0At4EeiiCrav3vcpBQ" general="_fWutsAt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fdO-UAt4EeiiCrav3vcpBQ" name="pstrats" visibility="private" type="_fWutsAt4EeiiCrav3vcpBQ" association="_feWYoAt4EeiiCrav3vcpBQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fdO-UQt4EeiiCrav3vcpBQ" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdwiwAt4EeiiCrav3vcpBQ" name="MultiPaintStrategy" specification="_fbnNsAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdwiwQt4EeiiCrav3vcpBQ" name="pstrats" type="_fWutsAt4EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fdwiwgt4EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdwiwwt4EeiiCrav3vcpBQ" type="_fXQSIAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(new AffineTransform());&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdwixAt4EeiiCrav3vcpBQ" name="MultiPaintStrategy" specification="_fcmsMAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdwixQt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdwixgt4EeiiCrav3vcpBQ" name="pstrats" type="_fWutsAt4EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fdwixwt4EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdwiyAt4EeiiCrav3vcpBQ" type="_fXQSIAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at);&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdwiyQt4EeiiCrav3vcpBQ" name="init" specification="_fbn0wQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdwiygt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
		    strategy.init(ball);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdxJ0At4EeiiCrav3vcpBQ" name="paintXfrm" specification="_fcnTQQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdxJ0Qt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdxJ0gt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdxJ0wt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
			strategy.paintXfrm(g, ball, at);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fbnNsAt4EeiiCrav3vcpBQ" name="MultiPaintStrategy" method="_fdwiwAt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fbnNsgt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fbnNswt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_fd_zXAt4EeiiCrav3vcpBQ">
            <body>This is a constructor that doesn't take in an affine transform.&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_fbnNsQt4EeiiCrav3vcpBQ" name="pstrats" type="_fWutsAt4EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fbnNtQt4EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fbnNtAt4EeiiCrav3vcpBQ" type="_fXQSIAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fbn0wQt4EeiiCrav3vcpBQ" name="init" method="_fdwiyQt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feAaYQt4EeiiCrav3vcpBQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fbn0wgt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcmsMAt4EeiiCrav3vcpBQ" name="MultiPaintStrategy" method="_fdwixAt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fcmsMwt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fcmsNAt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_feAaYAt4EeiiCrav3vcpBQ">
            <body>This is a constructor that does take in an affine transform.&#xD;
	 * @param at An affine transform&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_fcmsMQt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcmsMgt4EeiiCrav3vcpBQ" name="pstrats" type="_fWutsAt4EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fcnTQAt4EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcmsNQt4EeiiCrav3vcpBQ" type="_fXQSIAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcnTQQt4EeiiCrav3vcpBQ" name="paintXfrm" method="_fdxJ0At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fcn6UAt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcn6UQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcn6Ugt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXSuYAt4EeiiCrav3vcpBQ" name="MultiStrategy">
        <ownedComment xmi:id="_feAaYgt4EeiiCrav3vcpBQ">
          <body>This class defines a Multi Strategy which defines a movement strategy for a ball
is a combination of 2 other strategies.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_fdPlYgt4EeiiCrav3vcpBQ" name="s1" visibility="private" type="_fXMAsAt4EeiiCrav3vcpBQ" association="_feWYowt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_feAaYwt4EeiiCrav3vcpBQ" name="s2" visibility="private" type="_fXMAsAt4EeiiCrav3vcpBQ" association="_fem3UQt4EeiiCrav3vcpBQ"/>
        <interfaceRealization xmi:id="_fbpp8At4EeiiCrav3vcpBQ" client="_fXSuYAt4EeiiCrav3vcpBQ" supplier="_fXMAsAt4EeiiCrav3vcpBQ" contract="_fXMAsAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdxJ1At4EeiiCrav3vcpBQ" name="MultiStrategy" specification="_fbqRAAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdxJ1Qt4EeiiCrav3vcpBQ" name="s1" type="_fXMAsAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdxJ1gt4EeiiCrav3vcpBQ" name="s2" type="_fXMAsAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdxJ1wt4EeiiCrav3vcpBQ" type="_fXSuYAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.s1 = s1;
		this.s2 = s2;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdxw4At4EeiiCrav3vcpBQ" name="updateState" specification="_fbq4EAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdxw4Qt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdxw4gt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					s1.updateState(ball, disp);
					s2.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fbqRAAt4EeiiCrav3vcpBQ" name="MultiStrategy" method="_fdxJ1At4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fbqRAwt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fbqRBAt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fbqRAQt4EeiiCrav3vcpBQ" name="s1" type="_fXMAsAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fbqRAgt4EeiiCrav3vcpBQ" name="s2" type="_fXMAsAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fbqRBQt4EeiiCrav3vcpBQ" type="_fXSuYAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fbq4EAt4EeiiCrav3vcpBQ" name="updateState" method="_fdxw4At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fbq4EQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fbq4Egt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXT8gAt4EeiiCrav3vcpBQ" name="PolygonFactory">
        <ownedComment xmi:id="_feBBcQt4EeiiCrav3vcpBQ">
          <body>This class defines a polygon factory, which makes polygons.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_fdQMcgt4EeiiCrav3vcpBQ" name="poly" visibility="package" type="_fbrfIAt4EeiiCrav3vcpBQ" association="_feW_sQt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdQzgAt4EeiiCrav3vcpBQ" value="new Polygon()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdQzggt4EeiiCrav3vcpBQ" name="at" visibility="package" type="_fbKhwAt4EeiiCrav3vcpBQ" association="_feXmwQt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fdRakQt4EeiiCrav3vcpBQ" name="scaleFactor" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdRakgt4EeiiCrav3vcpBQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdRalAt4EeiiCrav3vcpBQ" name="pts" visibility="package" type="_fbU50At4EeiiCrav3vcpBQ" association="_feXmxAt4EeiiCrav3vcpBQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fdSBoAt4EeiiCrav3vcpBQ" value="*"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_fbsGMQt4EeiiCrav3vcpBQ" client="_fXT8gAt4EeiiCrav3vcpBQ" supplier="_fXHvQAt4EeiiCrav3vcpBQ" contract="_fXHvQAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdxw4wt4EeiiCrav3vcpBQ" name="PolygonFactory" specification="_fcohYAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdxw5At4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdxw5Qt4EeiiCrav3vcpBQ" name="scaleFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdxw5gt4EeiiCrav3vcpBQ" name="pts" type="_fbU50At4EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fdxw5wt4EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdxw6At4EeiiCrav3vcpBQ" type="_fXT8gAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.at = at;
		this.scaleFactor = scaleFactor;
		this.pts = pts;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdyX8At4EeiiCrav3vcpBQ" name="makeShape" specification="_fXVKoAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdyX8Qt4EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdyX8gt4EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdyX8wt4EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdyX9At4EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdyX9Qt4EeiiCrav3vcpBQ" type="_fbeq0At4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>at.setToTranslation(x, y);
		at.scale(xScale*scaleFactor, yScale*scaleFactor);  // optional rotation can be added as well
		return at.createTransformedShape(poly);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fXVKoAt4EeiiCrav3vcpBQ" name="makeShape" method="_fdyX8At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fXVKoQt4EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXVKogt4EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXVKowt4EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXVKpAt4EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcpvgAt4EeiiCrav3vcpBQ" type="_fbeq0At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcohYAt4EeiiCrav3vcpBQ" name="PolygonFactory" method="_fdxw4wt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fcpIcAt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fcpIcQt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fcohYQt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcohYgt4EeiiCrav3vcpBQ" name="scaleFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcohYwt4EeiiCrav3vcpBQ" name="pts" type="_fbU50At4EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fcpIcwt4EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcpIcgt4EeiiCrav3vcpBQ" type="_fXT8gAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXW_0At4EeiiCrav3vcpBQ" name="RectanglePaintStrategy">
        <ownedComment xmi:id="_feBBcgt4EeiiCrav3vcpBQ">
          <body>This class defines a Rectangle Paint Strategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_fbtUUAt4EeiiCrav3vcpBQ" general="_fXaDIAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdyX9gt4EeiiCrav3vcpBQ" name="RectanglePaintStrategy" specification="_fXXm4At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdyX9wt4EeiiCrav3vcpBQ" type="_fXW_0At4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 3.0, 1.0);
	  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdyX-At4EeiiCrav3vcpBQ" name="RectanglePaintStrategy" specification="_fcpvgQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdyX-Qt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdyX-gt4EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdyX-wt4EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdyX_At4EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdyX_Qt4EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdyX_gt4EeiiCrav3vcpBQ" type="_fXW_0At4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, RectangleShapeFactory.Singleton.makeShape(x,y,width,height));
	  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fXXm4At4EeiiCrav3vcpBQ" name="RectanglePaintStrategy" method="_fdyX9gt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fXXm4Qt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fXXm4gt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fXXm4wt4EeiiCrav3vcpBQ" type="_fXW_0At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcpvgQt4EeiiCrav3vcpBQ" name="RectanglePaintStrategy" method="_fdyX-At4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fcqWlAt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fcqWlQt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fcpvggt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcqWkAt4EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcqWkQt4EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcqWkgt4EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcqWkwt4EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcqWlgt4EeiiCrav3vcpBQ" type="_fXW_0At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXYN8At4EeiiCrav3vcpBQ" name="RectangleShapeFactory">
        <ownedComment xmi:id="_feBogAt4EeiiCrav3vcpBQ">
          <body>This class defines a factory that makes rectangles.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_fdSosAt4EeiiCrav3vcpBQ" name="Singleton" isLeaf="true" isStatic="true" type="_fXYN8At4EeiiCrav3vcpBQ" isReadOnly="true" association="_feYN0Qt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdSosQt4EeiiCrav3vcpBQ" value="new RectangleShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_fbtUUQt4EeiiCrav3vcpBQ" client="_fXYN8At4EeiiCrav3vcpBQ" supplier="_fXHvQAt4EeiiCrav3vcpBQ" contract="_fXHvQAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdy_AAt4EeiiCrav3vcpBQ" name="makeShape" specification="_fXY1AAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdy_AQt4EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdy_Agt4EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdy_Awt4EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdy_BAt4EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdy_BQt4EeiiCrav3vcpBQ" type="_fbeq0At4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>Shape rec = new Rectangle((int) (x), (int) (y), (int) (xScale), (int) (yScale));
		return rec;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fXY1AAt4EeiiCrav3vcpBQ" name="makeShape" method="_fdy_AAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fXY1AQt4EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXY1Agt4EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXY1Awt4EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXY1BAt4EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcq9oAt4EeiiCrav3vcpBQ" type="_fbeq0At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXaDIAt4EeiiCrav3vcpBQ" name="ShapePaintStrategy">
        <ownedComment xmi:id="_feBogQt4EeiiCrav3vcpBQ">
          <body>This class defines a shape paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_fbuicAt4EeiiCrav3vcpBQ" general="_fWutsAt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fdSosgt4EeiiCrav3vcpBQ" name="shape" visibility="package" type="_fbeq0At4EeiiCrav3vcpBQ" association="_feY04Qt4EeiiCrav3vcpBQ"/>
        <interfaceRealization xmi:id="_fbt7YAt4EeiiCrav3vcpBQ" client="_fXaDIAt4EeiiCrav3vcpBQ" supplier="_fXHvQAt4EeiiCrav3vcpBQ" contract="_fXHvQAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdy_Bgt4EeiiCrav3vcpBQ" name="ShapePaintStrategy" specification="_fcq9oQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdy_Bwt4EeiiCrav3vcpBQ" name="shape" type="_fbeq0At4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdy_CAt4EeiiCrav3vcpBQ" type="_fXaDIAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdzmEAt4EeiiCrav3vcpBQ" name="ShapePaintStrategy" specification="_fcrkswt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdzmEQt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdzmEgt4EeiiCrav3vcpBQ" name="shape" type="_fbeq0At4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdzmEwt4EeiiCrav3vcpBQ" type="_fXaDIAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdzmFAt4EeiiCrav3vcpBQ" name="paintXfrm" specification="_fcsy0At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdzmFQt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdzmFgt4EeiiCrav3vcpBQ" name="host" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdzmFwt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>((Graphics2D) g).fill(at.createTransformedShape(shape));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdzmGAt4EeiiCrav3vcpBQ" name="makeShape" specification="_fXbRQAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdzmGQt4EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdzmGgt4EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdzmGwt4EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdzmHAt4EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdzmHQt4EeiiCrav3vcpBQ" type="_fbeq0At4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>at.setToTranslation(x, y);
		at.scale(x * xScale, y * yScale);  // optional rotation can be added as well
		return at.createTransformedShape(shape);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fXbRQAt4EeiiCrav3vcpBQ" name="makeShape" method="_fdzmGAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fXbRQQt4EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXbRQgt4EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXbRQwt4EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXbRRAt4EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcsy1At4EeiiCrav3vcpBQ" type="_fbeq0At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcq9oQt4EeiiCrav3vcpBQ" name="ShapePaintStrategy" method="_fdy_Bgt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fcrksAt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fcrksQt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fcq9ogt4EeiiCrav3vcpBQ" name="shape" type="_fbeq0At4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcrksgt4EeiiCrav3vcpBQ" type="_fXaDIAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcrkswt4EeiiCrav3vcpBQ" name="ShapePaintStrategy" method="_fdzmEAt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fcsLwgt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fcsLwwt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fcsLwAt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcsLwQt4EeiiCrav3vcpBQ" name="shape" type="_fbeq0At4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcsLxAt4EeiiCrav3vcpBQ" type="_fXaDIAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcsy0At4EeiiCrav3vcpBQ" name="paintXfrm" method="_fdzmFAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fcsy0Qt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcsy0gt4EeiiCrav3vcpBQ" name="host" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcsy0wt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXdtgAt4EeiiCrav3vcpBQ" name="SpawnStrategy">
        <ownedComment xmi:id="_feBoggt4EeiiCrav3vcpBQ">
          <body>This class defines a spawn strategy that interacts with other balls.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_fdT20At4EeiiCrav3vcpBQ" name="count" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdT20Qt4EeiiCrav3vcpBQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdT20wt4EeiiCrav3vcpBQ" name="delay" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdT21At4EeiiCrav3vcpBQ" value="100"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_fbvwkAt4EeiiCrav3vcpBQ" client="_fXdtgAt4EeiiCrav3vcpBQ" supplier="_fXMAsAt4EeiiCrav3vcpBQ" contract="_fXMAsAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd0NIAt4EeiiCrav3vcpBQ" name="updateState" specification="_fbvwkQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd0NIQt4EeiiCrav3vcpBQ" name="context" type="_fX7nkAt4EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_fd0NIgt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_fd0NIwt4EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_fd0NJAt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>if (delay &lt; count++) {
			dispatcher.notifyAll(new IBallCmd() {
				/**
				 * This function applies this command to the correct ball using a dispatcher.
				 */
				@Override
				public void apply(Ball other, Dispatcher disp) {
					if (count != 0 &amp;&amp; context != other) {
						if ((context.getRad() + other.getRad()) > 
						    context.getLoc().distance(other.getLoc())) {
							disp.addObserver(new Ball(
									context.getCol(),
									new Point(context.getLoc()), 
									context.getRad(),
									new Point(-context.getVel().x+1,-context.getVel().y+1), 
									context.getCon(), 
									new SpawnStrategy(), 
									context.getPaintStrat()));
							count = 0;
							delay *= 5;
						}
					}
				}
			});
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fbvwkQt4EeiiCrav3vcpBQ" name="updateState" method="_fd0NIAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fbwXoAt4EeiiCrav3vcpBQ" name="context" type="_fX7nkAt4EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_fbwXowt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_fbwXpAt4EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_fbwXoQt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXe7oAt4EeiiCrav3vcpBQ" name="SquarePaintStrategy">
        <ownedComment xmi:id="_feBogwt4EeiiCrav3vcpBQ">
          <body>This is the square paint strategy that paints a square.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_fbw-sgt4EeiiCrav3vcpBQ" client="_fXe7oAt4EeiiCrav3vcpBQ" supplier="_fXGhIAt4EeiiCrav3vcpBQ" contract="_fXGhIAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd0NJQt4EeiiCrav3vcpBQ" name="paint" specification="_fctZ4At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd0NJgt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd0NJwt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>int halfSide = ball.getRad();
		g.setColor(ball.getCol());
		g.fillRect(ball.getLoc().x - halfSide, ball.getLoc().y - halfSide, 2 * halfSide, 2 * halfSide);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fbw-swt4EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_fbw-tAt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fctZ4At4EeiiCrav3vcpBQ" name="paint" method="_fd0NJQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fctZ4Qt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fctZ4gt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXfisAt4EeiiCrav3vcpBQ" name="StraightStrategy">
        <ownedComment xmi:id="_feBohAt4EeiiCrav3vcpBQ">
          <body>This class defines a Straight Strategy which defines a movement strategy for a ball that just
moves by changing it's location by its velocity components.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_fbxlwQt4EeiiCrav3vcpBQ" client="_fXfisAt4EeiiCrav3vcpBQ" supplier="_fXMAsAt4EeiiCrav3vcpBQ" contract="_fXMAsAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd0NKAt4EeiiCrav3vcpBQ" name="updateState" specification="_fbyM0At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd0NKQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd0NKgt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fbyM0At4EeiiCrav3vcpBQ" name="updateState" method="_fd0NKAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fbyM0Qt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fbyM0gt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXgw0At4EeiiCrav3vcpBQ" name="SwellStrategy">
        <ownedComment xmi:id="_feBohQt4EeiiCrav3vcpBQ">
          <body>This class defines a Swell Strategy which defines a movement strategy for a ball that grows it
in size, and once it reaches a certain size, it changes colors, and then shrinks slowly and repeats.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_fbyz4At4EeiiCrav3vcpBQ" client="_fXgw0At4EeiiCrav3vcpBQ" supplier="_fXMAsAt4EeiiCrav3vcpBQ" contract="_fXMAsAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd00MAt4EeiiCrav3vcpBQ" name="updateState" specification="_fbyz4Qt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd00MQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd00Mgt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getRad() >= 80) {
						ball.setRadDelta(1);
						ball.setRadDelta(ball.getRadDelta() * -1);
						ball.setCol(rzr.randomColor());
					} else if (ball.getRad() &lt;= 20) {
						ball.setRadDelta(-5);
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fbyz4Qt4EeiiCrav3vcpBQ" name="updateState" method="_fd00MAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fbyz4gt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fbyz4wt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXhX4At4EeiiCrav3vcpBQ" name="SwitcherStrategy">
        <ownedComment xmi:id="_feBohgt4EeiiCrav3vcpBQ">
          <body>This class defines a Switcher Strategy which defines a strategy for a ball that can
change by updating the strategy.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_fdUd4At4EeiiCrav3vcpBQ" name="strategy" visibility="private" isStatic="true" type="_fXMAsAt4EeiiCrav3vcpBQ" association="_feY05At4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdUd4Qt4EeiiCrav3vcpBQ" value="new StraightStrategy()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_fbza8wt4EeiiCrav3vcpBQ" client="_fXhX4At4EeiiCrav3vcpBQ" supplier="_fXMAsAt4EeiiCrav3vcpBQ" contract="_fXMAsAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd00Mwt4EeiiCrav3vcpBQ" name="updateState" specification="_fb0CAAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd00NAt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd00NQt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					strategy.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd00Ngt4EeiiCrav3vcpBQ" name="setStrat" specification="_fb0pEgt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd1bQAt4EeiiCrav3vcpBQ" name="strat" type="_fXMAsAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>SwitcherStrategy.strategy = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd1bQQt4EeiiCrav3vcpBQ" name="getStrat" specification="_fXh-8At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd1bQgt4EeiiCrav3vcpBQ" type="_fXMAsAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return SwitcherStrategy.strategy;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fXh-8At4EeiiCrav3vcpBQ" name="getStrat" isStatic="true" method="_fd1bQQt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feBoiAt4EeiiCrav3vcpBQ">
            <body>This function returns the current strategy of the switcher balls.
	 * @return An IUpdateStrategy which is the current strategy of the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fb0pFAt4EeiiCrav3vcpBQ" type="_fXMAsAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fb0CAAt4EeiiCrav3vcpBQ" name="updateState" method="_fd00Mwt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fb0CAQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fb0CAgt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fb0pEgt4EeiiCrav3vcpBQ" name="setStrat" isStatic="true" method="_fd00Ngt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feBohwt4EeiiCrav3vcpBQ">
            <body>This function changes the strategy of all switcher balls to that of the parameter.
	 * @param strat An IUpdateStrategy which is the new strategy for all the balls to use</body>
          </ownedComment>
          <ownedParameter xmi:id="_fb0pEwt4EeiiCrav3vcpBQ" name="strat" type="_fXMAsAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXjNEAt4EeiiCrav3vcpBQ" name="TeleportStrategy">
        <ownedComment xmi:id="_feBoiQt4EeiiCrav3vcpBQ">
          <body>This class defines a Teleport Strategy which defines a movement strategy for a ball that randomly
changes the location of it, so it teleports.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_fb1QIAt4EeiiCrav3vcpBQ" client="_fXjNEAt4EeiiCrav3vcpBQ" supplier="_fXMAsAt4EeiiCrav3vcpBQ" contract="_fXMAsAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd1bQwt4EeiiCrav3vcpBQ" name="updateState" specification="_fb1QIQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd1bRAt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd1bRQt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % 80 == 0) {
						ball.setLoc(rzr.randomLoc(new Rectangle(ball.getCon().getWidth() - ball.getRad(), ball.getCon().getHeight() - ball.getRad())));
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fb1QIQt4EeiiCrav3vcpBQ" name="updateState" method="_fd1bQwt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fb1QIgt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fb1QIwt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXj0IAt4EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy">
        <ownedComment xmi:id="_feBoigt4EeiiCrav3vcpBQ">
          <body>This classd defines an upright composite paint strategy.
@author sn32, ll45
 *</body>
        </ownedComment>
        <generalization xmi:id="_fb2eQQt4EeiiCrav3vcpBQ" general="_fW9-QAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd2CUAt4EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" specification="_fb13Mgt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd2CUQt4EeiiCrav3vcpBQ" name="pstrats" type="_fWutsAt4EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fd2CUgt4EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fd2CUwt4EeiiCrav3vcpBQ" type="_fXj0IAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd2CVAt4EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" specification="_fcuoAAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd2CVQt4EeiiCrav3vcpBQ" name="pstrats" type="_fWutsAt4EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fd2CVgt4EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fd2CVwt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd2CWAt4EeiiCrav3vcpBQ" type="_fXj0IAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd2CWQt4EeiiCrav3vcpBQ" name="paintCfg" specification="_fcvPFAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd2CWgt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd2CWwt4EeiiCrav3vcpBQ" name="host" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>super.paintCfg(g, host);
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {
			at.scale(1.0, -1.0);
		}        
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fb13Mgt4EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" method="_fd2CUAt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fb13NAt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fb13NQt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fb13Mwt4EeiiCrav3vcpBQ" name="pstrats" type="_fWutsAt4EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fb2eQAt4EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fb13Ngt4EeiiCrav3vcpBQ" type="_fXj0IAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcuoAAt4EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" method="_fd2CVAt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fcvPEAt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fcvPEQt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fcuoAQt4EeiiCrav3vcpBQ" name="pstrats" type="_fWutsAt4EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fcvPEwt4EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcuoAgt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcvPEgt4EeiiCrav3vcpBQ" type="_fXj0IAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcvPFAt4EeiiCrav3vcpBQ" name="paintCfg" visibility="protected" method="_fd2CWQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fcvPFQt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcv2IAt4EeiiCrav3vcpBQ" name="host" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXlCQAt4EeiiCrav3vcpBQ" name="UprightImageStrategy">
        <ownedComment xmi:id="_feCPkAt4EeiiCrav3vcpBQ">
          <body>This class defines an upright image.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_fb3FUAt4EeiiCrav3vcpBQ" general="_fXMnwAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd2CXAt4EeiiCrav3vcpBQ" name="UprightImageStrategy" specification="_fXlCQQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd2CXQt4EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fd2CXgt4EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fd2CXwt4EeiiCrav3vcpBQ" type="_fXlCQAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd2pYAt4EeiiCrav3vcpBQ" name="UprightImageStrategy" specification="_fcwdMAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd2pYQt4EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fd2pYgt4EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fd2pYwt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd2pZAt4EeiiCrav3vcpBQ" type="_fXlCQAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor, at);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd2pZQt4EeiiCrav3vcpBQ" name="paintCfg" specification="_fcxEQAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd2pZgt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd2pZwt4EeiiCrav3vcpBQ" name="host" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>super.paintCfg(g, host);&#xD;
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {&#xD;
			at.scale(1.0, -1.0);&#xD;
		}       &#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fXlCQQt4EeiiCrav3vcpBQ" name="UprightImageStrategy" method="_fd2CXAt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fXlpUAt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fXlpUQt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fXlCQgt4EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXlCQwt4EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXlpUgt4EeiiCrav3vcpBQ" type="_fXlCQAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcwdMAt4EeiiCrav3vcpBQ" name="UprightImageStrategy" method="_fd2pYAt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fcwdNAt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fcwdNQt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fcwdMQt4EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcwdMgt4EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcwdMwt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcwdNgt4EeiiCrav3vcpBQ" type="_fXlCQAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcxEQAt4EeiiCrav3vcpBQ" name="paintCfg" visibility="protected" method="_fd2pZQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fcxEQQt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcxEQgt4EeiiCrav3vcpBQ" name="host" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXm3cAt4EeiiCrav3vcpBQ" name="UprightShapePaintStrategy">
        <ownedComment xmi:id="_feCPkQt4EeiiCrav3vcpBQ">
          <body>This class defines an upright shape paint strategy.
@author sn32, ll45
 *</body>
        </ownedComment>
        <generalization xmi:id="_fb3sYAt4EeiiCrav3vcpBQ" general="_fXaDIAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd2paAt4EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" specification="_fcxrUAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd2paQt4EeiiCrav3vcpBQ" name="shape" type="_fbeq0At4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd2pagt4EeiiCrav3vcpBQ" type="_fXm3cAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(shape);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd2pawt4EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" specification="_fcySYwt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd2pbAt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd2pbQt4EeiiCrav3vcpBQ" name="shape" type="_fbeq0At4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd2pbgt4EeiiCrav3vcpBQ" type="_fXm3cAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, shape);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fcxrUAt4EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" method="_fd2paAt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fcySYAt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fcySYQt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fcxrUQt4EeiiCrav3vcpBQ" name="shape" type="_fbeq0At4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcySYgt4EeiiCrav3vcpBQ" type="_fXm3cAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcySYwt4EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" method="_fd2pawt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fcySZgt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fcySZwt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fcySZAt4EeiiCrav3vcpBQ" name="at" type="_fbKhwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcySZQt4EeiiCrav3vcpBQ" name="shape" type="_fbeq0At4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcySaAt4EeiiCrav3vcpBQ" type="_fXm3cAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXnegAt4EeiiCrav3vcpBQ" name="WiggleStrategy">
        <ownedComment xmi:id="_feCPkgt4EeiiCrav3vcpBQ">
          <body>This class defines a Wiggle Strategy which defines a movement strategy for a ball that randomly
changes the velocity direction, so it wiggles.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_fb3sYQt4EeiiCrav3vcpBQ" client="_fXnegAt4EeiiCrav3vcpBQ" supplier="_fXMAsAt4EeiiCrav3vcpBQ" contract="_fXMAsAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd3QcAt4EeiiCrav3vcpBQ" name="updateState" specification="_fb4TcAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd3QcQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd3Qcgt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % rzr.randomInt(2,  100) == 0) {
						ball.setVel(new Point(ball.getVel().x, ball.getVel().y * -1));
					} else if (ball.getItr() % rzr.randomInt(2, 100) == 0){
						ball.setVel(new Point(ball.getVel().x * -1, ball.getVel().y));
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fb4TcAt4EeiiCrav3vcpBQ" name="updateState" method="_fd3QcAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fb4TcQt4EeiiCrav3vcpBQ" name="ball" type="_fX7nkAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fb4Tcgt4EeiiCrav3vcpBQ" name="dispatcher" type="_fXosoAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fX7nkAt4EeiiCrav3vcpBQ" name="Ball">
        <ownedComment xmi:id="_feC2qwt4EeiiCrav3vcpBQ">
          <body>This is the Ball class, which is what is drawn on the screen, and implements
Observer to use dispatching.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_fdkVgAt4EeiiCrav3vcpBQ" name="col" type="_fbUSwAt4EeiiCrav3vcpBQ" association="_feDdsAt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fdkVgQt4EeiiCrav3vcpBQ" name="loc" type="_fbU50At4EeiiCrav3vcpBQ" association="_feDdsgt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fdk8kAt4EeiiCrav3vcpBQ" name="rad" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdk8kgt4EeiiCrav3vcpBQ" name="vel" type="_fbU50At4EeiiCrav3vcpBQ" association="_feEEwAt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fdk8kwt4EeiiCrav3vcpBQ" name="con" type="_fbHecAt4EeiiCrav3vcpBQ" association="_feEEwgt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fdmKsAt4EeiiCrav3vcpBQ" name="strat" visibility="private" type="_fXMAsAt4EeiiCrav3vcpBQ" association="_femQQAt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fdmKsgt4EeiiCrav3vcpBQ" name="paintStrat" type="_fXGhIAt4EeiiCrav3vcpBQ" isReadOnly="true" association="_femQQwt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fdmKswt4EeiiCrav3vcpBQ" name="itr" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdmKtAt4EeiiCrav3vcpBQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdmKtgt4EeiiCrav3vcpBQ" name="radDelta">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_fc_twAt4EeiiCrav3vcpBQ" client="_fX7nkAt4EeiiCrav3vcpBQ" supplier="_fcILEQt4EeiiCrav3vcpBQ" contract="_fcILEQt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd6TwAt4EeiiCrav3vcpBQ" name="Ball" specification="_fdA74At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd6TwQt4EeiiCrav3vcpBQ" name="col" type="_fbUSwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd6Twgt4EeiiCrav3vcpBQ" name="loc" type="_fbU50At4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd6Twwt4EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fd6TxAt4EeiiCrav3vcpBQ" name="vel" type="_fbU50At4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd6TxQt4EeiiCrav3vcpBQ" name="con" type="_fbHecAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd6Txgt4EeiiCrav3vcpBQ" name="updateStrat" type="_fXMAsAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd6Txwt4EeiiCrav3vcpBQ" name="paintStrat" type="_fXGhIAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd6TyAt4EeiiCrav3vcpBQ" type="_fX7nkAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>setCol(col);
		setLoc(loc);
		setRad(rad);
		setVel(vel);
		setCon(con);
		setStrat(updateStrat);
		setRadDelta(5);
		setPaintStrat(paintStrat);
		paintStrat.init(this);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd6TyQt4EeiiCrav3vcpBQ" name="getRad" specification="_fX9cwAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd6Tygt4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd6Tywt4EeiiCrav3vcpBQ" name="setRad" specification="_fX-D0Qt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd6TzAt4EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.rad = rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd6TzQt4EeiiCrav3vcpBQ" name="move" specification="_fX-D0wt4EeiiCrav3vcpBQ">
          <language>java</language>
          <body>setLoc(new Point(getLoc().x + getVel().x, getLoc().y + getVel().y));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd6Tzgt4EeiiCrav3vcpBQ" name="update" specification="_fdBi8At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd6Tzwt4EeiiCrav3vcpBQ" name="o" type="_fcHkAAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd6T0At4EeiiCrav3vcpBQ" name="cmd" type="_fcy5cQt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>((IBallCmd) cmd).apply(this, (Dispatcher) o);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd660At4EeiiCrav3vcpBQ" name="paint" specification="_fdCKAAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd660Qt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>getPaintStrat().paint(g, this);
//		g.setColor(this.getCol());
//		g.fillOval(this.getLoc().x - getRad(), this.getLoc().y - getRad(), getRad() * 2, getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd660gt4EeiiCrav3vcpBQ" name="getStrat" specification="_fX-q4At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd660wt4EeiiCrav3vcpBQ" type="_fXMAsAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd661At4EeiiCrav3vcpBQ" name="setStrat" specification="_fcKAQAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd661Qt4EeiiCrav3vcpBQ" name="strat" type="_fXMAsAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>this.strat = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd661gt4EeiiCrav3vcpBQ" name="getItr" specification="_fX-q4Qt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd661wt4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd662At4EeiiCrav3vcpBQ" name="setItr" specification="_fX_R8Qt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd662Qt4EeiiCrav3vcpBQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.itr = itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd662gt4EeiiCrav3vcpBQ" name="bounce" specification="_fX_R8wt4EeiiCrav3vcpBQ">
          <language>java</language>
          <body>// Boundaries of the window
		int rightWall = getCon().getWidth();
		int bottomWall = getCon().getHeight();
		int leftWall = 0;
		int topWall = 0;
		
		int leftX = getLoc().x - getRad();
		int rightX = getLoc().x + getRad();
		
		int bottomY = getLoc().y + getRad();
		int topY = getLoc().y - getRad();
		
		int maxX = rightWall - getRad();
		int minX = getRad();
		
		int maxY = bottomWall - getRad();
		int minY = getRad();

		// Collision detected with left or right wall.
		if (leftX == leftWall || rightX == rightWall) {
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond right wall.
		else if (rightX > rightWall) {
			int diff = getLoc().x - maxX;
			setLoc(new Point(maxX - diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond left wall.
		else if (leftX &lt; leftWall) {
			int diff = minX - getLoc().x;
			setLoc(new Point(minX + diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Collision detected with top or bottom wall.
		else if (topY == topWall || bottomY == bottomWall) {
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond bottom wall.
		else if (bottomY > bottomWall) {
			int diff = getLoc().y - maxY;
			setLoc(new Point(getLoc().x, maxY - diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond top wall.
		else if (topY &lt; topWall) {
			int diff = minY - getLoc().y;
			setLoc(new Point(getLoc().x, minY + diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd662wt4EeiiCrav3vcpBQ" name="setPaintStrat" specification="_fcKAQgt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd663At4EeiiCrav3vcpBQ" name="paintStrat" type="_fXGhIAt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>this.paintStrat = paintStrat;
		getPaintStrat().init(this);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fX9cwAt4EeiiCrav3vcpBQ" name="getRad" method="_fd6TyQt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feEExQt4EeiiCrav3vcpBQ">
            <body>This returns the radius of the ball.
	 * @return the rad</body>
          </ownedComment>
          <ownedParameter xmi:id="_fX-D0At4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_fX-D0Qt4EeiiCrav3vcpBQ" name="setRad" method="_fd6Tywt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feEr0At4EeiiCrav3vcpBQ">
            <body>This sets the radius of the ball.
	 * @param rad the rad to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_fX-D0gt4EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_fX-D0wt4EeiiCrav3vcpBQ" name="move" method="_fd6TzQt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feEr0Qt4EeiiCrav3vcpBQ">
            <body>This function tells the ball to update its current location by the respective velocity
	 * component.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_fX-q4At4EeiiCrav3vcpBQ" name="getStrat" method="_fd660gt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feEr1At4EeiiCrav3vcpBQ">
            <body>This function returns the ball's movement strategy.
	 * @return the strat</body>
          </ownedComment>
          <ownedParameter xmi:id="_fcJZMAt4EeiiCrav3vcpBQ" type="_fXMAsAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fX-q4Qt4EeiiCrav3vcpBQ" name="getItr" method="_fd661gt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feEr1gt4EeiiCrav3vcpBQ">
            <body>This function returns the current iteration of the ball.
	 * @return the itr</body>
          </ownedComment>
          <ownedParameter xmi:id="_fX_R8At4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_fX_R8Qt4EeiiCrav3vcpBQ" name="setItr" method="_fd662At4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feEr1wt4EeiiCrav3vcpBQ">
            <body>This function sets the current iteration of the ball.
	 * @param itr the itr to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_fX_R8gt4EeiiCrav3vcpBQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_fX_R8wt4EeiiCrav3vcpBQ" name="bounce" method="_fd662gt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feEr2At4EeiiCrav3vcpBQ">
            <body>This function checks to see if the ball has come into contact with one of the boundaries of the 
	 *  panel. If it has, this function reverses the velocity of the ball, simulating a rebound off
	 *  of the wall. If, due to the delay of the GUI thread, the ball has passed one of the panel
	 *  boundaries, this function moves the ball to the location it would be at if it had properly 
	 *  bounced off of the wall, and sets the velocity to its appropriate value.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_fcKAQAt4EeiiCrav3vcpBQ" name="setStrat" method="_fd661At4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feEr1Qt4EeiiCrav3vcpBQ">
            <body>This function sets the ball's movement strategy.
	 * @param strat the strat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_fcKAQQt4EeiiCrav3vcpBQ" name="strat" type="_fXMAsAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcKAQgt4EeiiCrav3vcpBQ" name="setPaintStrat" method="_fd662wt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feEr2Qt4EeiiCrav3vcpBQ">
            <body>This function sets the paint strategy.
	 * @param paintStrat the paintStrat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_fcKAQwt4EeiiCrav3vcpBQ" name="paintStrat" type="_fXGhIAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fdA74At4EeiiCrav3vcpBQ" name="Ball" method="_fd6TwAt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fdA76At4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fdA76Qt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_feEExAt4EeiiCrav3vcpBQ">
            <body>This is the Ball constructor, which sets its initial values.
	 * @param col The color of the ball
	 * @param loc The initial location of the ball.
	 * @param rad The radius of the ball.
	 * @param vel The initial velocity of the ball.
	 * @param con The container (component) on which the ball is drawn.
	 * @param updateStrat The IUpdateStrategy that decides how to update the ball.
	 * @param paintStrat The IPaintStrategy that decides how to paint the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fdA74Qt4EeiiCrav3vcpBQ" name="col" type="_fbUSwAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdA74gt4EeiiCrav3vcpBQ" name="loc" type="_fbU50At4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdA74wt4EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fdA75At4EeiiCrav3vcpBQ" name="vel" type="_fbU50At4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdA75Qt4EeiiCrav3vcpBQ" name="con" type="_fbHecAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdA75gt4EeiiCrav3vcpBQ" name="updateStrat" type="_fXMAsAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdA75wt4EeiiCrav3vcpBQ" name="paintStrat" type="_fXGhIAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdA76gt4EeiiCrav3vcpBQ" type="_fX7nkAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fdBi8At4EeiiCrav3vcpBQ" name="update" method="_fd6Tzgt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feEr0gt4EeiiCrav3vcpBQ">
            <body>This function is required when implementing Observer, that tells the ball what to
	 * do when it is notified by the dispatcher.
	 * @param o An observable
	 * @param g An Object, which should be an IBallCmd</body>
          </ownedComment>
          <ownedParameter xmi:id="_fdBi8Qt4EeiiCrav3vcpBQ" name="o" type="_fcHkAAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fdBi8gt4EeiiCrav3vcpBQ" name="cmd" type="_fcy5cQt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fdCKAAt4EeiiCrav3vcpBQ" name="paint" method="_fd660At4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feEr0wt4EeiiCrav3vcpBQ">
            <body>This function determines how to paint the ball, and it delegates
	 * to the paint strategy's paint.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fdCKAQt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feDdsAt4EeiiCrav3vcpBQ" name="" memberEnd="_fdkVgAt4EeiiCrav3vcpBQ _feDdsQt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feDdsQt4EeiiCrav3vcpBQ" name="" type="_fX7nkAt4EeiiCrav3vcpBQ" association="_feDdsAt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feDdsgt4EeiiCrav3vcpBQ" name="" memberEnd="_fdkVgQt4EeiiCrav3vcpBQ _feDdswt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feDdswt4EeiiCrav3vcpBQ" name="" type="_fX7nkAt4EeiiCrav3vcpBQ" association="_feDdsgt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feEEwAt4EeiiCrav3vcpBQ" name="" memberEnd="_fdk8kgt4EeiiCrav3vcpBQ _feEEwQt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feEEwQt4EeiiCrav3vcpBQ" name="" type="_fX7nkAt4EeiiCrav3vcpBQ" association="_feEEwAt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feEEwgt4EeiiCrav3vcpBQ" name="" memberEnd="_fdk8kwt4EeiiCrav3vcpBQ _feEEwwt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feEEwwt4EeiiCrav3vcpBQ" name="" type="_fX7nkAt4EeiiCrav3vcpBQ" association="_feEEwgt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feN1wQt4EeiiCrav3vcpBQ" name="" memberEnd="_feN1wgt4EeiiCrav3vcpBQ _fXF6EAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feN1wgt4EeiiCrav3vcpBQ" name="" type="_fXFTAAt4EeiiCrav3vcpBQ" association="_feN1wQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feOc0Qt4EeiiCrav3vcpBQ" name="" memberEnd="_feOc0gt4EeiiCrav3vcpBQ _fXF6EQt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feOc0gt4EeiiCrav3vcpBQ" name="" type="_fXFTAAt4EeiiCrav3vcpBQ" association="_feOc0Qt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_fePD4Qt4EeiiCrav3vcpBQ" name="" memberEnd="_fePD4gt4EeiiCrav3vcpBQ _fXKLgQt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_fePD4gt4EeiiCrav3vcpBQ" name="" type="_fXI9YAt4EeiiCrav3vcpBQ" association="_fePD4Qt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_fePq8Qt4EeiiCrav3vcpBQ" name="" memberEnd="_fePq8gt4EeiiCrav3vcpBQ _fXKykQt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_fePq8gt4EeiiCrav3vcpBQ" name="" type="_fXI9YAt4EeiiCrav3vcpBQ" association="_fePq8Qt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feRgIQt4EeiiCrav3vcpBQ" name="" memberEnd="_feRgIgt4EeiiCrav3vcpBQ _fdHplAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feRgIgt4EeiiCrav3vcpBQ" name="" type="_fWsRcAt4EeiiCrav3vcpBQ" association="_feRgIQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feSHMQt4EeiiCrav3vcpBQ" name="" memberEnd="_feSHMgt4EeiiCrav3vcpBQ _fdI3sAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feSHMgt4EeiiCrav3vcpBQ" name="" type="_fWutsAt4EeiiCrav3vcpBQ" association="_feSHMQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feSuQAt4EeiiCrav3vcpBQ" name="" memberEnd="_feSuQQt4EeiiCrav3vcpBQ _fdKF0At4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feSuQQt4EeiiCrav3vcpBQ" name="" type="_fW3QkAt4EeiiCrav3vcpBQ" association="_feSuQAt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feSuQwt4EeiiCrav3vcpBQ" name="" memberEnd="_feSuRAt4EeiiCrav3vcpBQ _fdKs4Qt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feSuRAt4EeiiCrav3vcpBQ" name="" type="_fW3QkAt4EeiiCrav3vcpBQ" association="_feSuQwt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feTVUQt4EeiiCrav3vcpBQ" name="" memberEnd="_feTVUgt4EeiiCrav3vcpBQ _fdKs5At4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feTVUgt4EeiiCrav3vcpBQ" name="" type="_fW3QkAt4EeiiCrav3vcpBQ" association="_feTVUQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feTVVAt4EeiiCrav3vcpBQ" name="" memberEnd="_feTVVQt4EeiiCrav3vcpBQ _fdL7AAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feTVVQt4EeiiCrav3vcpBQ" name="" type="_fXBBkAt4EeiiCrav3vcpBQ" association="_feTVVAt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feT8YQt4EeiiCrav3vcpBQ" name="" memberEnd="_feT8Ygt4EeiiCrav3vcpBQ _fdNJIQt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feT8Ygt4EeiiCrav3vcpBQ" name="" type="_fXMnwAt4EeiiCrav3vcpBQ" association="_feT8YQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feUjcQt4EeiiCrav3vcpBQ" name="" memberEnd="_feUjcgt4EeiiCrav3vcpBQ _fdNJJAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feUjcgt4EeiiCrav3vcpBQ" name="" type="_fXMnwAt4EeiiCrav3vcpBQ" association="_feUjcQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feVKgQt4EeiiCrav3vcpBQ" name="" memberEnd="_feVKggt4EeiiCrav3vcpBQ _fdNwMgt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feVKggt4EeiiCrav3vcpBQ" name="" type="_fXMnwAt4EeiiCrav3vcpBQ" association="_feVKgQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feVxkAt4EeiiCrav3vcpBQ" name="" memberEnd="_feVxkQt4EeiiCrav3vcpBQ _fdOXQAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feVxkQt4EeiiCrav3vcpBQ" name="" type="_fXMnwAt4EeiiCrav3vcpBQ" association="_feVxkAt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feWYoAt4EeiiCrav3vcpBQ" name="" memberEnd="_feWYoQt4EeiiCrav3vcpBQ _fdO-UAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feWYoQt4EeiiCrav3vcpBQ" name="" type="_fXQSIAt4EeiiCrav3vcpBQ" association="_feWYoAt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feWYowt4EeiiCrav3vcpBQ" name="" memberEnd="_feWYpAt4EeiiCrav3vcpBQ _fdPlYgt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feWYpAt4EeiiCrav3vcpBQ" name="" type="_fXSuYAt4EeiiCrav3vcpBQ" association="_feWYowt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feW_sQt4EeiiCrav3vcpBQ" name="" memberEnd="_feW_sgt4EeiiCrav3vcpBQ _fdQMcgt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feW_sgt4EeiiCrav3vcpBQ" name="" type="_fXT8gAt4EeiiCrav3vcpBQ" association="_feW_sQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feXmwQt4EeiiCrav3vcpBQ" name="" memberEnd="_feXmwgt4EeiiCrav3vcpBQ _fdQzggt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feXmwgt4EeiiCrav3vcpBQ" name="" type="_fXT8gAt4EeiiCrav3vcpBQ" association="_feXmwQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feXmxAt4EeiiCrav3vcpBQ" name="" memberEnd="_feXmxQt4EeiiCrav3vcpBQ _fdRalAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feXmxQt4EeiiCrav3vcpBQ" name="" type="_fXT8gAt4EeiiCrav3vcpBQ" association="_feXmxAt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feYN0Qt4EeiiCrav3vcpBQ" name="" memberEnd="_feYN0gt4EeiiCrav3vcpBQ _fdSosAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feYN0gt4EeiiCrav3vcpBQ" name="" type="_fXYN8At4EeiiCrav3vcpBQ" association="_feYN0Qt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feY04Qt4EeiiCrav3vcpBQ" name="" memberEnd="_feY04gt4EeiiCrav3vcpBQ _fdSosgt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feY04gt4EeiiCrav3vcpBQ" name="" type="_fXaDIAt4EeiiCrav3vcpBQ" association="_feY04Qt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feY05At4EeiiCrav3vcpBQ" name="" memberEnd="_feY05Qt4EeiiCrav3vcpBQ _fdUd4At4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feY05Qt4EeiiCrav3vcpBQ" name="" type="_fXhX4At4EeiiCrav3vcpBQ" association="_feY05At4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_femQQAt4EeiiCrav3vcpBQ" name="" memberEnd="_femQQQt4EeiiCrav3vcpBQ _fdmKsAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_femQQQt4EeiiCrav3vcpBQ" name="" type="_fX7nkAt4EeiiCrav3vcpBQ" association="_femQQAt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_femQQwt4EeiiCrav3vcpBQ" name="" memberEnd="_femQRAt4EeiiCrav3vcpBQ _fdmKsgt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_femQRAt4EeiiCrav3vcpBQ" name="" type="_fX7nkAt4EeiiCrav3vcpBQ" association="_femQQwt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_fem3UQt4EeiiCrav3vcpBQ" name="" memberEnd="_fem3Ugt4EeiiCrav3vcpBQ _feAaYwt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_fem3Ugt4EeiiCrav3vcpBQ" name="" type="_fXSuYAt4EeiiCrav3vcpBQ" association="_fem3UQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_fU3FcAt4EeiiCrav3vcpBQ" name="view">
      <packagedElement xmi:type="uml:Interface" xmi:id="_fWyYEAt4EeiiCrav3vcpBQ" name="IView2ModelAdapter">
        <ownedComment xmi:id="_fd9-Jwt4EeiiCrav3vcpBQ">
          <body>This is an interface which has the functions that the view wants the model to have.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_fW0NQAt4EeiiCrav3vcpBQ" name="switcherFac" type="_fcZ34At4EeiiCrav3vcpBQ" isReadOnly="true" association="_feNOsAt4EeiiCrav3vcpBQ"/>
        <ownedOperation xmi:id="_fWy_IQt4EeiiCrav3vcpBQ" name="clearBalls">
          <ownedComment xmi:id="_fd9-KAt4EeiiCrav3vcpBQ">
            <body>This is a function that will tell the model to clear the balls.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_fWy_Igt4EeiiCrav3vcpBQ" name="addStrategy">
          <ownedComment xmi:id="_fd-lMAt4EeiiCrav3vcpBQ">
            <body>This function will take the given short strategy name and return a corresponding
     * something to put onto both drop lists.
     * @param classname The shortened class name of the desired strategy
     * @return Something to put onto both the drop lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fWy_Iwt4EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcae8Qt4EeiiCrav3vcpBQ" type="_fcZ34At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fW00UAt4EeiiCrav3vcpBQ" name="addPaintFactory">
          <ownedParameter xmi:id="_fW00UQt4EeiiCrav3vcpBQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fcc7MAt4EeiiCrav3vcpBQ" type="_fcZ34At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcZQ0At4EeiiCrav3vcpBQ" name="paintBalls">
          <ownedComment xmi:id="_fd9-KQt4EeiiCrav3vcpBQ">
            <body>This is a function that will tell the model to paint the balls.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fcZQ0Qt4EeiiCrav3vcpBQ" name="g" type="_fbJToAt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcae8gt4EeiiCrav3vcpBQ" name="makeBall">
          <ownedComment xmi:id="_fd-lMQt4EeiiCrav3vcpBQ">
            <body>This function will make a ball with the selected short strategy name.
     * @param selectedItem A shorten class name for the desired strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_fcbGAAt4EeiiCrav3vcpBQ" name="selectedItem" type="_fcZ34At4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcbGAQt4EeiiCrav3vcpBQ" name="paintStrat" type="_fcZ34At4EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fcbGAgt4EeiiCrav3vcpBQ" name="combineStrategies">
          <ownedComment xmi:id="_fd-lMgt4EeiiCrav3vcpBQ">
            <body>This function will return a new object to put on both lists, given two items from the lists.
     * @param selectedItem1 An object from one drop list
     * @param selectedItem2 An object from the other drop list
     * @return An object to put back on both lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fcbGAwt4EeiiCrav3vcpBQ" name="selectedItem1" type="_fcZ34At4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcbGBAt4EeiiCrav3vcpBQ" name="selectedItem2" type="_fcZ34At4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcbtEAt4EeiiCrav3vcpBQ" type="_fcZ34At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fccUIAt4EeiiCrav3vcpBQ" name="setSwitcherStrategy">
          <ownedComment xmi:id="_fd-lMwt4EeiiCrav3vcpBQ">
            <body>This function will change the current strategy of the switcher balls to whatever
     * strategy is made by the factory in the parameter.
     * @param switchFac An object from the top drop list.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fccUIQt4EeiiCrav3vcpBQ" name="switchFac" type="_fcZ34At4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXydoAt4EeiiCrav3vcpBQ" name="BallWorldView">
        <ownedComment xmi:id="_feC2pAt4EeiiCrav3vcpBQ">
          <body>This is the BallWorldView class, which has the frame on which our BallWorld is displayed.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <generalization xmi:id="_fc9RgQt4EeiiCrav3vcpBQ" general="_fb9L8Qt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fdYIQAt4EeiiCrav3vcpBQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdYIQQt4EeiiCrav3vcpBQ" value="-7114823923004621639L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdYIQgt4EeiiCrav3vcpBQ" name="contentPane" visibility="private" type="_fb9zAAt4EeiiCrav3vcpBQ" association="_feaDAAt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fdYIRAt4EeiiCrav3vcpBQ" name="pnlControl" visibility="private" isLeaf="true" type="_fb9zAAt4EeiiCrav3vcpBQ" isReadOnly="true" association="_feaDAwt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdYvUAt4EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdZWYQt4EeiiCrav3vcpBQ" name="tfClassname" visibility="private" isLeaf="true" type="_fb9zAgt4EeiiCrav3vcpBQ" isReadOnly="true" association="_feaqEQt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdZWYgt4EeiiCrav3vcpBQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdZWZAt4EeiiCrav3vcpBQ" name="btnClearBalls" visibility="private" isLeaf="true" type="_fb-aEQt4EeiiCrav3vcpBQ" isReadOnly="true" association="_feb4MAt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdZWZQt4EeiiCrav3vcpBQ" value="new JButton(&quot;Clear balls&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdZ9cQt4EeiiCrav3vcpBQ" name="adapter" visibility="private" type="_fWyYEAt4EeiiCrav3vcpBQ" association="_fecfQQt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fdbLkgt4EeiiCrav3vcpBQ" name="pnlCanvas" visibility="private" isLeaf="true" type="_fb9zAAt4EeiiCrav3vcpBQ" isReadOnly="true" association="_fedGUQt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdbLkwt4EeiiCrav3vcpBQ" value="new JPanel() {&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * This is a private variable that gives the class an ID to serialize and deserialize.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;private static final long serialVersionUID = 8303517520311377718L;&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Overridden paintComponent method to paint a shape in the panel.&#xA;&#x9;&#x9; * @param g The Graphics object to paint on.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public void paintComponent(Graphics g) {&#xA;&#x9;&#x9;&#x9;super.paintComponent(g); // Do everything normally done first, e.g. clear the screen.&#xA;&#x9;&#x9;&#x9;adapter.paintBalls(g);&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdbLlQt4EeiiCrav3vcpBQ" name="btnAddToList" visibility="private" isLeaf="true" type="_fb-aEQt4EeiiCrav3vcpBQ" isReadOnly="true" association="_fedtYQt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdbLlgt4EeiiCrav3vcpBQ" value="new JButton(&quot;Add to list&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdbLmAt4EeiiCrav3vcpBQ" name="btnCombine" visibility="private" isLeaf="true" type="_fb-aEQt4EeiiCrav3vcpBQ" isReadOnly="true" association="_feeUcQt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdbyoAt4EeiiCrav3vcpBQ" value="new JButton(&quot;Combine&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdbyogt4EeiiCrav3vcpBQ" name="btnMakeSelectedBall" visibility="private" isLeaf="true" type="_fb-aEQt4EeiiCrav3vcpBQ" isReadOnly="true" association="_fee7gQt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdbyowt4EeiiCrav3vcpBQ" value="new JButton(&quot;Make selected ball&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdcZsQt4EeiiCrav3vcpBQ" name="btnMakeSwitcher" visibility="private" isLeaf="true" type="_fb-aEQt4EeiiCrav3vcpBQ" isReadOnly="true" association="_fefikQt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdcZsgt4EeiiCrav3vcpBQ" value="new JButton(&quot;Make switcher&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fddAwAt4EeiiCrav3vcpBQ" name="btnSwitch" visibility="private" isLeaf="true" type="_fb-aEQt4EeiiCrav3vcpBQ" isReadOnly="true" association="_fegJoQt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fddn0At4EeiiCrav3vcpBQ" value="new JButton(&quot;Switch&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fddn0gt4EeiiCrav3vcpBQ" name="comBoxTop" visibility="private" type="_fb_oMwt4EeiiCrav3vcpBQ" association="_fegwsQt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fddn1At4EeiiCrav3vcpBQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fde18Qt4EeiiCrav3vcpBQ" name="comBoxBottom" visibility="private" type="_fb_oMwt4EeiiCrav3vcpBQ" association="_fehXwQt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdgEEQt4EeiiCrav3vcpBQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdgEEwt4EeiiCrav3vcpBQ" name="pnlChangeList" visibility="private" isLeaf="true" type="_fb9zAAt4EeiiCrav3vcpBQ" isReadOnly="true" association="_feh-0Qt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdgEFAt4EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdgEFgt4EeiiCrav3vcpBQ" name="pnlDropDowns" visibility="private" isLeaf="true" type="_fb9zAAt4EeiiCrav3vcpBQ" isReadOnly="true" association="_feil4Qt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdgrIAt4EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdhSMAt4EeiiCrav3vcpBQ" name="pnlSwitching" visibility="private" isLeaf="true" type="_fb9zAAt4EeiiCrav3vcpBQ" isReadOnly="true" association="_fejM8Qt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdhSMQt4EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdhSMwt4EeiiCrav3vcpBQ" name="pnlPaintStrats" visibility="private" isLeaf="true" type="_fb9zAAt4EeiiCrav3vcpBQ" isReadOnly="true" association="_fej0AQt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdhSNAt4EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdh5QQt4EeiiCrav3vcpBQ" name="btnAddPaintStrat" visibility="private" isLeaf="true" type="_fb-aEQt4EeiiCrav3vcpBQ" isReadOnly="true" association="_fekbEQt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdh5Qgt4EeiiCrav3vcpBQ" value="new JButton(&quot;Add&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdigUAt4EeiiCrav3vcpBQ" name="txtPaintStrat" visibility="private" isLeaf="true" type="_fb9zAgt4EeiiCrav3vcpBQ" isReadOnly="true" association="_felCIQt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdigUQt4EeiiCrav3vcpBQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdjHYAt4EeiiCrav3vcpBQ" name="comBoxStrats" visibility="private" isLeaf="true" type="_fb_oMwt4EeiiCrav3vcpBQ" isReadOnly="true" association="_felpMAt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdjHYgt4EeiiCrav3vcpBQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd5FqQt4EeiiCrav3vcpBQ" name="getPanel" specification="_fX054At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd5Fqgt4EeiiCrav3vcpBQ" type="_fb9zAAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return pnlCanvas;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd5ssAt4EeiiCrav3vcpBQ" name="BallWorldView" specification="_fcCrgAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd5ssQt4EeiiCrav3vcpBQ" name="adapter" type="_fWyYEAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd5ssgt4EeiiCrav3vcpBQ" type="_fXydoAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>txtPaintStrat.setToolTipText(&quot;This is the text field where you can add paint strategies.&quot;);
		pnlPaintStrats.setToolTipText(&quot;This is the panel that holds the components that let you add paint strategies and select them.&quot;);
		pnlPaintStrats.add(txtPaintStrat);
		txtPaintStrat.setColumns(10);
		this.adapter = adapter;
		initGUI();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd5sswt4EeiiCrav3vcpBQ" name="updateView" specification="_fX1g8At4EeiiCrav3vcpBQ">
          <language>java</language>
          <body>repaint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd5stAt4EeiiCrav3vcpBQ" name="getCanvas" specification="_fX1g8Qt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd5stQt4EeiiCrav3vcpBQ" type="_fbHecAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return getPanel();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd5stgt4EeiiCrav3vcpBQ" name="initGUI" specification="_fX2IAAt4EeiiCrav3vcpBQ">
          <language>java</language>
          <body>setTitle(&quot;BallWorld&quot;);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setToolTipText(&quot;This is the content of the frame.&quot;);
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		pnlControl.setBackground(Color.DARK_GRAY);
		pnlControl.setToolTipText(&quot;This is the control panel that lets you create balls and clear them.&quot;);
		
		contentPane.add(pnlControl, BorderLayout.NORTH);
		pnlControl.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		pnlChangeList.setToolTipText(&quot;This panel is where you can add the type of ball you want to make to the drop down lists.&quot;);
		
		pnlControl.add(pnlChangeList);
		pnlChangeList.setLayout(new GridLayout(0, 1, 0, 0));
		
		pnlChangeList.add(tfClassname);
		tfClassname.setToolTipText(&quot;The type of the ball you want to make.&quot;);
		
		tfClassname.setColumns(10);
		btnAddToList.setToolTipText(&quot;This button adds the strategy type in the text field to the drop down boxes.&quot;);
		pnlChangeList.add(btnAddToList);
		btnAddToList.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (tfClassname.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem stratFac = adapter.addStrategy(tfClassname.getText());

             comBoxTop.insertItemAt(stratFac, 0);
             comBoxBottom.insertItemAt(stratFac, 0);
			}
		});
		pnlDropDowns.setToolTipText(&quot;This panel is for the drop down boxes, and buttons to make selected balls and combine strategies.&quot;);
		
		pnlControl.add(pnlDropDowns);
		pnlDropDowns.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSelectedBall.setToolTipText(&quot;This button makes a ball with the update strategy of the factory that's selected on the top drop down box.&quot;);
		pnlDropDowns.add(btnMakeSelectedBall);
		comBoxTop.setToolTipText(&quot;This is the drop down list on the top.&quot;);
		pnlDropDowns.add(comBoxTop);
		comBoxBottom.setToolTipText(&quot;This is the drop down list on the bottom.&quot;);
		pnlDropDowns.add(comBoxBottom);
		btnCombine.setToolTipText(&quot;This button combines the two strategy factories in the combo boxes.&quot;);
		pnlDropDowns.add(btnCombine);
		btnCombine.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem top = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem bottom = comBoxBottom.getItemAt(comBoxBottom.getSelectedIndex());
				
				if (top == null || bottom == null) {
					return;
				}
				
				TDropListItem combo = adapter.combineStrategies(top, bottom);
				comBoxTop.addItem(combo);
				comBoxBottom.addItem(combo);
			}
		});
		btnMakeSelectedBall.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem selected = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem paintFac = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (selected == null || paintFac == null) {
					return;
				}
				
				adapter.makeBall(selected, paintFac);
			}
		});
		pnlSwitching.setToolTipText(&quot;This panel is for the buttons related to making switcher balls and switching their strategies.&quot;);
		
		pnlControl.add(pnlSwitching);
		pnlSwitching.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSwitcher.setToolTipText(&quot;Click this item to make a switcher ball.&quot;);
		pnlSwitching.add(btnMakeSwitcher);
		btnSwitch.setToolTipText(&quot;Click this button to switch the switcher balls to the selected item in the top combo box.&quot;);
		pnlSwitching.add(btnSwitch);
		
		btnSwitch.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switchFac = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				
				if (switchFac == null) {
					return;
				}
				
				adapter.setSwitcherStrategy(switchFac);
			}
		});
		
		btnMakeSwitcher.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switcherStrat = adapter.getSwitcherFac();
				TDropListItem paintStrat = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (paintStrat == null) {
					return;
				}
				
				adapter.makeBall(switcherStrat, paintStrat);
			}
		});
		btnClearBalls.setToolTipText(&quot;Click this to clear the balls on the canvas.&quot;);
		btnClearBalls.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				adapter.clearBalls();
			}
		});
		
		pnlControl.add(btnClearBalls);
		
		pnlControl.add(pnlPaintStrats);
		pnlPaintStrats.setLayout(new GridLayout(0, 1, 0, 0));
		btnAddPaintStrat.setToolTipText(&quot;This is the button that lets you add paint strategies to the combo box below.&quot;);
		btnAddPaintStrat.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (txtPaintStrat.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem paintFac = adapter.addPaintFactory(txtPaintStrat.getText());
             comBoxStrats.insertItemAt(paintFac, 0);
			}
		});
		
		
		pnlPaintStrats.add(btnAddPaintStrat);
		comBoxStrats.setToolTipText(&quot;The is the combo box for the paint strategies that can be implemented.&quot;);
		
		pnlPaintStrats.add(comBoxStrats);
		pnlCanvas.setBackground(Color.LIGHT_GRAY);
		pnlCanvas.setToolTipText(&quot;This is the canvas where the balls move, and stay in.&quot;);
		
		contentPane.add(pnlCanvas, BorderLayout.CENTER);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd5stwt4EeiiCrav3vcpBQ" name="start" specification="_fX2IAQt4EeiiCrav3vcpBQ">
          <language>java</language>
          <body>setExtendedState(JFrame.MAXIMIZED_BOTH);
		setVisible(true);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fX054At4EeiiCrav3vcpBQ" name="getPanel" method="_fd5FqQt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feC2pQt4EeiiCrav3vcpBQ">
            <body>This gets the canvas of the frame.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_fc8qcAt4EeiiCrav3vcpBQ" type="_fb9zAAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fX1g8At4EeiiCrav3vcpBQ" name="updateView" method="_fd5sswt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feC2pwt4EeiiCrav3vcpBQ">
            <body>Update the view by repainting</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_fX1g8Qt4EeiiCrav3vcpBQ" name="getCanvas" method="_fd5stAt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feC2qAt4EeiiCrav3vcpBQ">
            <body>This function returns the canvas panel.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_fc9RgAt4EeiiCrav3vcpBQ" type="_fbHecAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fX2IAAt4EeiiCrav3vcpBQ" name="initGUI" visibility="private" method="_fd5stgt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feC2qQt4EeiiCrav3vcpBQ">
            <body>This private function initializes the GUI.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_fX2IAQt4EeiiCrav3vcpBQ" name="start" method="_fd5stwt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feC2qgt4EeiiCrav3vcpBQ">
            <body>This function makes the frame visible after initializing it.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_fcCrgAt4EeiiCrav3vcpBQ" name="BallWorldView" method="_fd5ssAt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fcCrggt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fcCrgwt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_feC2pgt4EeiiCrav3vcpBQ">
            <body>Create the frame
	 * @param adapter An IView2ModelAdapter</body>
          </ownedComment>
          <ownedParameter xmi:id="_fcCrgQt4EeiiCrav3vcpBQ" name="adapter" type="_fWyYEAt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fcCrhAt4EeiiCrav3vcpBQ" type="_fXydoAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fcZ34At4EeiiCrav3vcpBQ" name="TDropListItem"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_feNOsAt4EeiiCrav3vcpBQ" name="" memberEnd="_feNOsQt4EeiiCrav3vcpBQ _fW0NQAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feNOsQt4EeiiCrav3vcpBQ" name="" type="_fWyYEAt4EeiiCrav3vcpBQ" association="_feNOsAt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feaDAAt4EeiiCrav3vcpBQ" name="" memberEnd="_feaDAQt4EeiiCrav3vcpBQ _fdYIQgt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feaDAQt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_feaDAAt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feaDAwt4EeiiCrav3vcpBQ" name="" memberEnd="_feaDBAt4EeiiCrav3vcpBQ _fdYIRAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feaDBAt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_feaDAwt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feaqEQt4EeiiCrav3vcpBQ" name="" memberEnd="_feaqEgt4EeiiCrav3vcpBQ _fdZWYQt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feaqEgt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_feaqEQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feb4MAt4EeiiCrav3vcpBQ" name="" memberEnd="_feb4MQt4EeiiCrav3vcpBQ _fdZWZAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feb4MQt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_feb4MAt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_fecfQQt4EeiiCrav3vcpBQ" name="" memberEnd="_fecfQgt4EeiiCrav3vcpBQ _fdZ9cQt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_fecfQgt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_fecfQQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_fedGUQt4EeiiCrav3vcpBQ" name="" memberEnd="_fedGUgt4EeiiCrav3vcpBQ _fdbLkgt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_fedGUgt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_fedGUQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_fedtYQt4EeiiCrav3vcpBQ" name="" memberEnd="_fedtYgt4EeiiCrav3vcpBQ _fdbLlQt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_fedtYgt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_fedtYQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feeUcQt4EeiiCrav3vcpBQ" name="" memberEnd="_feeUcgt4EeiiCrav3vcpBQ _fdbLmAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feeUcgt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_feeUcQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_fee7gQt4EeiiCrav3vcpBQ" name="" memberEnd="_fee7ggt4EeiiCrav3vcpBQ _fdbyogt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_fee7ggt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_fee7gQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_fefikQt4EeiiCrav3vcpBQ" name="" memberEnd="_fefikgt4EeiiCrav3vcpBQ _fdcZsQt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_fefikgt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_fefikQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_fegJoQt4EeiiCrav3vcpBQ" name="" memberEnd="_fegJogt4EeiiCrav3vcpBQ _fddAwAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_fegJogt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_fegJoQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_fegwsQt4EeiiCrav3vcpBQ" name="" memberEnd="_fegwsgt4EeiiCrav3vcpBQ _fddn0gt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_fegwsgt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_fegwsQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_fehXwQt4EeiiCrav3vcpBQ" name="" memberEnd="_fehXwgt4EeiiCrav3vcpBQ _fde18Qt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_fehXwgt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_fehXwQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feh-0Qt4EeiiCrav3vcpBQ" name="" memberEnd="_feh-0gt4EeiiCrav3vcpBQ _fdgEEwt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feh-0gt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_feh-0Qt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feil4Qt4EeiiCrav3vcpBQ" name="" memberEnd="_feil4gt4EeiiCrav3vcpBQ _fdgEFgt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feil4gt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_feil4Qt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_fejM8Qt4EeiiCrav3vcpBQ" name="" memberEnd="_fejM8gt4EeiiCrav3vcpBQ _fdhSMAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_fejM8gt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_fejM8Qt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_fej0AQt4EeiiCrav3vcpBQ" name="" memberEnd="_fej0Agt4EeiiCrav3vcpBQ _fdhSMwt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_fej0Agt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_fej0AQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_fekbEQt4EeiiCrav3vcpBQ" name="" memberEnd="_fekbEgt4EeiiCrav3vcpBQ _fdh5QQt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_fekbEgt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_fekbEQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_felCIQt4EeiiCrav3vcpBQ" name="" memberEnd="_felCIgt4EeiiCrav3vcpBQ _fdigUAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_felCIgt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_felCIQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_felpMAt4EeiiCrav3vcpBQ" name="" memberEnd="_felpMQt4EeiiCrav3vcpBQ _fdjHYAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_felpMQt4EeiiCrav3vcpBQ" name="" type="_fXydoAt4EeiiCrav3vcpBQ" association="_felpMAt4EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_fU46oAt4EeiiCrav3vcpBQ" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_fWonEAt4EeiiCrav3vcpBQ" name="BallWorldController">
        <ownedComment xmi:id="_fd9XEAt4EeiiCrav3vcpBQ">
          <body>This is the BallWorldController, that has private variables for model and view,
and is able to interface between them.
@author sn32, kyl3, lka2, swong
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_fdGbcAt4EeiiCrav3vcpBQ" name="model" visibility="private" type="_fW3QkAt4EeiiCrav3vcpBQ" association="_feQSAQt4EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_fdHpkQt4EeiiCrav3vcpBQ" name="view" visibility="private" type="_fXydoAt4EeiiCrav3vcpBQ" association="_feQ5EQt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdp1EAt4EeiiCrav3vcpBQ" name="main" specification="_fWqcQAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdp1EQt4EeiiCrav3vcpBQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fdp1Egt4EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(() -> {
			try {
				(new BallWorldController()).start();
			} catch (Exception e) {
				e.printStackTrace();
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdp1Ewt4EeiiCrav3vcpBQ" name="BallWorldController" specification="_fWrDUQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fdp1FAt4EeiiCrav3vcpBQ" type="_fWonEAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>model = new BallWorldModel(new IModel2ViewAdapter() {

			/**
			 * This function from the IModel2ViewAdapter allows the controller
			 * to tell the view to update.
			 */
			@Override
			public void update() {
				view.updateView();
			}

			/**
			 * This function from the IModel2ViewAdapter allows the controller to get
			 * the canvas from the view.
			 */
			@Override
			public Container getCanvas() {
				return view.getCanvas();
			}
		});
		
		view = new BallWorldView&lt;IStrategyFac>(new IView2ModelAdapter&lt;IStrategyFac>() {
	        /**
	         * Returns an IStrategyFac that can instantiate the strategy specified
	         * by classname. Returns the error strategy factory if classname is null.
	         * The toString() of the returned factory is the classname.
	         * @param classname Shortened name of desired strategy
	         * @return A factory to make that strategy
	         */
			@Override
	        public IStrategyFac addStrategy(String classname) {
	        		return model.makeStrategyFac(classname);
	        	}

	        /**
	         * Add a ball to the system with a strategy as given by the given IStrategyFac
	         * @param selectedItem The fully qualified name of the desired strategy.
	         */
	        @Override
	        public void makeBall(IStrategyFac selectedItem, IStrategyFac paintStrat) {
	        		if (null != selectedItem &amp;&amp; paintStrat != null) {
	        			model.makeBall(selectedItem.make(), paintStrat.makePaint());
	        		}
	        	}
			
			/**
			 * Returns an IStrategyFac that can instantiate a MultiStrategy with the
			 * two strategies made by the two given IStrategyFac objects. Returns
			 * the error strategy factory if either supplied factory is null. The
			 * toString() of the returned factory is the toString()'s of the two given
			 * factories, concatenated with &quot;-&quot;.
			 * @param selectedItem1 An IStrategyFac for a strategy
			 * @param selectedItem2 An IStrategyFac for a strategy
			 * @return An IStrategyFac for the composition of the two strategies
			 */
	        @Override
			public IStrategyFac combineStrategies(IStrategyFac selectedItem1, IStrategyFac selectedItem2) {
				return model.combineStrategyFacs(selectedItem1, selectedItem2);
			}
			
			/**
			 * This function tells the model to clear all the balls from the canvas.
			 */
			@Override
			public void clearBalls() {
				model.clearBalls();
			}
			
			/**
			 * This function tells the model to paint and update the status of all the balls.
			 */
			@Override 
			public void paintBalls(Graphics g) {
				model.update(g); // see is this is correct or if a paint method is needed
			}

			/**
			 * This function sets the strategy of the switcher balls to whatever is made by
			 * the input's make method.
			 * @param switchFac The new strategy factory whose make method returns the new strategy
			 * for the switcher balls
			 */
			@Override
			public void setSwitcherStrategy(IStrategyFac switchFac) {
				model.setSwitcherStrategy(switchFac);
			}

			/**
			 * This function returns the strategy factory that is making the switcher balls' current strategy.
			 * @return An IStrategyFactory that makes the current switcher balls' strategy.
			 */
			@Override
			public IStrategyFac getSwitcherFac() {
				return model.getSwitcherFac();
			}

			@Override
			public IStrategyFac addPaintFactory(String text) {
				return model.makePaintFactory(text);
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fdp1FQt4EeiiCrav3vcpBQ" name="start" specification="_fWrqYAt4EeiiCrav3vcpBQ">
          <language>java</language>
          <body>view.start();
		model.start();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fWqcQAt4EeiiCrav3vcpBQ" name="main" isStatic="true" method="_fdp1EAt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd9XEQt4EeiiCrav3vcpBQ">
            <body>This main method starts the BallWorldController.
	 * @param args Command line arguments.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fWqcQQt4EeiiCrav3vcpBQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fWqcQgt4EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_fWrDUQt4EeiiCrav3vcpBQ" name="BallWorldController" method="_fdp1Ewt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fWrDUgt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fWrDUwt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_fd9XEgt4EeiiCrav3vcpBQ">
            <body>This is the constructor for BallWorldController, which
	 * creates anonymous inner classes for the adapters, and defines their functions.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fWrDVAt4EeiiCrav3vcpBQ" type="_fWonEAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fWrqYAt4EeiiCrav3vcpBQ" name="start" method="_fdp1FQt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_fd9XEwt4EeiiCrav3vcpBQ">
            <body>This function starts the view and model.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feQSAQt4EeiiCrav3vcpBQ" name="" memberEnd="_feQSAgt4EeiiCrav3vcpBQ _fdGbcAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feQSAgt4EeiiCrav3vcpBQ" name="" type="_fWonEAt4EeiiCrav3vcpBQ" association="_feQSAQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feQ5EQt4EeiiCrav3vcpBQ" name="" memberEnd="_feQ5Egt4EeiiCrav3vcpBQ _fdHpkQt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feQ5Egt4EeiiCrav3vcpBQ" name="" type="_fWonEAt4EeiiCrav3vcpBQ" association="_feQ5EQt4EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_fVTKUAt4EeiiCrav3vcpBQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_fVTKUQt4EeiiCrav3vcpBQ" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_fbWH8Qt4EeiiCrav3vcpBQ" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fb9L8Qt4EeiiCrav3vcpBQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fb9zAAt4EeiiCrav3vcpBQ" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fb9zAgt4EeiiCrav3vcpBQ" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fb-aEQt4EeiiCrav3vcpBQ" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fb_oMwt4EeiiCrav3vcpBQ" name="JComboBox"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_fVTKUgt4EeiiCrav3vcpBQ" name="util">
      <packagedElement xmi:type="uml:Class" xmi:id="_fXosoAt4EeiiCrav3vcpBQ" name="Dispatcher">
        <ownedComment xmi:id="_feCPkwt4EeiiCrav3vcpBQ">
          <body>A simplified Observable class that immediately notifies its Observers when its
notifyAll() method is called. The changed state of the Dispatcher does not need
to be separately set.
@author sn32, kyl3</body>
        </ownedComment>
        <generalization xmi:id="_fczggwt4EeiiCrav3vcpBQ" general="_fcHkAAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd3Qcwt4EeiiCrav3vcpBQ" name="notifyAll" specification="_fczggQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd3QdAt4EeiiCrav3vcpBQ" name="param" type="_fcy5cQt4EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>setChanged();
     notifyObservers(param);
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fczggQt4EeiiCrav3vcpBQ" name="notifyAll" method="_fd3Qcwt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fczgggt4EeiiCrav3vcpBQ" name="param" type="_fcy5cQt4EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_fXpTsAt4EeiiCrav3vcpBQ" name="IRandomizer">
        <ownedOperation xmi:id="_fXpTsQt4EeiiCrav3vcpBQ" name="randomInt">
          <ownedComment xmi:id="_feCPlgt4EeiiCrav3vcpBQ">
            <body>Returns a random integer greater than or equal to min and less than or equal to max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return an int subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_fXpTsgt4EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXp6wAt4EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXp6wQt4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_fXp6wgt4EeiiCrav3vcpBQ" name="randomDouble">
          <ownedComment xmi:id="_feCPlwt4EeiiCrav3vcpBQ">
            <body>Returns a random double greater than or equal to min and less than max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return a double subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_fXp6wwt4EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXp6xAt4EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXp6xQt4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_fXqh0At4EeiiCrav3vcpBQ" name="randomColor">
          <ownedComment xmi:id="_feCPmwt4EeiiCrav3vcpBQ">
            <body>Generates a random color
	 * @return a random Color object</body>
          </ownedComment>
          <ownedParameter xmi:id="_fc2j1At4EeiiCrav3vcpBQ" type="_fbUSwAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fc0HkAt4EeiiCrav3vcpBQ" name="randomLoc">
          <ownedComment xmi:id="_feCPlAt4EeiiCrav3vcpBQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than rect.width
	 * and 0 less than y less than rect.height.
	 * @param rect The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_fc0HkQt4EeiiCrav3vcpBQ" name="rect" type="_fbVg4Qt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fc0Hkgt4EeiiCrav3vcpBQ" type="_fbU50At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fc1VsQt4EeiiCrav3vcpBQ" name="randomLoc">
          <ownedComment xmi:id="_feCPlQt4EeiiCrav3vcpBQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than dim.width
	 * and 0 less than y less than dim.height.
	 * @param dim The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_fc1Vsgt4EeiiCrav3vcpBQ" name="dim" type="_fc0Hkwt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fc1Vswt4EeiiCrav3vcpBQ" type="_fbU50At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fc1VtAt4EeiiCrav3vcpBQ" name="randomVel">
          <ownedComment xmi:id="_feCPmAt4EeiiCrav3vcpBQ">
            <body>Returns a random velocity (as a Point) subject to the constraint that the absolute value
	 * of the velocity (speed) within the bound (inclusive) defined by rect. Thus the resultant
	 * velocity may be negative. The given Rectangle should use all positive values.
	 * @param rect The bounds for the absolute value of the velocity in the x and y directions.  
	 * @return a Point object with x and y subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fc1VtQt4EeiiCrav3vcpBQ" name="rect" type="_fbVg4Qt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fc18wAt4EeiiCrav3vcpBQ" type="_fbU50At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fc18wQt4EeiiCrav3vcpBQ" name="randomDim">
          <ownedComment xmi:id="_feCPmQt4EeiiCrav3vcpBQ">
            <body>Returns a random square Dimension, whose width is maxDim.width/2 less than width less than maxDim.width
	 * @param maxDim  The bounds on the side of the created Dimension.
	 * @return A random square Dimension subject to the given bound</body>
          </ownedComment>
          <ownedParameter xmi:id="_fc18wgt4EeiiCrav3vcpBQ" name="maxDim" type="_fc0Hkwt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fc18wwt4EeiiCrav3vcpBQ" type="_fc0Hkwt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fc2j0At4EeiiCrav3vcpBQ" name="randomBounds">
          <ownedComment xmi:id="_feCPmgt4EeiiCrav3vcpBQ">
            <body>Generates a randomly located and sized rectangle
	 * @param rect  The bounds for the location of the created rectangle
	 * @param maxDim  The bounds for the dimensions of the create rectangle
	 * @return A Rectangle with location and dimensions subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fc2j0Qt4EeiiCrav3vcpBQ" name="rect" type="_fbVg4Qt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fc2j0gt4EeiiCrav3vcpBQ" name="maxDim" type="_fc0Hkwt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fc2j0wt4EeiiCrav3vcpBQ" type="_fbVg4Qt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fc3K4At4EeiiCrav3vcpBQ" name="randomChoice">
          <ownedComment xmi:id="_feCPnAt4EeiiCrav3vcpBQ">
            <body>Returns a random choice of one of two objects, x and y, where probX is the probability 
	 * that x will be picked (0 less than x less than 1).
	 * @param x The first of two choices
	 * @param y The second of two choices
	 * @param probX  The probability of the first choice
	 * @return Either x or y as per the probability of choosing them.</body>
          </ownedComment>
          <ownedParameter xmi:id="_fc3K4Qt4EeiiCrav3vcpBQ" name="x" type="_fcy5cQt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fc3K4gt4EeiiCrav3vcpBQ" name="y" type="_fcy5cQt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fc3K4wt4EeiiCrav3vcpBQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fc3K5At4EeiiCrav3vcpBQ" type="_fcy5cQt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXrv8At4EeiiCrav3vcpBQ" name="Randomizer">
        <ownedComment xmi:id="_feCPnQt4EeiiCrav3vcpBQ">
          <body>Utility class that supplies  class routines for generating various random values</body>
        </ownedComment>
        <ownedAttribute xmi:id="_fdVsAAt4EeiiCrav3vcpBQ" name="Singleton" isStatic="true" type="_fXrv8At4EeiiCrav3vcpBQ" association="_feZb8Qt4EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdVsAQt4EeiiCrav3vcpBQ" value="new Randomizer()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_fb5hkAt4EeiiCrav3vcpBQ" client="_fXrv8At4EeiiCrav3vcpBQ" supplier="_fXpTsAt4EeiiCrav3vcpBQ" contract="_fXpTsAt4EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd3QdQt4EeiiCrav3vcpBQ" name="randomLoc" specification="_fc3x8At4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd33gAt4EeiiCrav3vcpBQ" name="rect" type="_fbVg4Qt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd33gQt4EeiiCrav3vcpBQ" type="_fbU50At4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, rect.width), randomInt(0, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd33ggt4EeiiCrav3vcpBQ" name="randomLoc" specification="_fc4ZAgt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd33gwt4EeiiCrav3vcpBQ" name="dim" type="_fc0Hkwt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd33hAt4EeiiCrav3vcpBQ" type="_fbU50At4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, dim.width), randomInt(0, dim.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd33hQt4EeiiCrav3vcpBQ" name="randomInt" specification="_fXs-Egt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd33hgt4EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fd33hwt4EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fd33iAt4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int)Math.floor((Math.random()*(1+max-min))+min);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd33iQt4EeiiCrav3vcpBQ" name="randomDouble" specification="_fXtlIAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd33igt4EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fd33iwt4EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fd33jAt4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return (Math.random()*(max-min))+min;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd33jQt4EeiiCrav3vcpBQ" name="randomVel" specification="_fc4ZBQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd33jgt4EeiiCrav3vcpBQ" name="rect" type="_fbVg4Qt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd33jwt4EeiiCrav3vcpBQ" type="_fbU50At4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (new Point (randomInt(-rect.width, rect.width), randomInt(-rect.height, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd4ekAt4EeiiCrav3vcpBQ" name="randomDim" specification="_fc5AEgt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd4ekQt4EeiiCrav3vcpBQ" name="maxDim" type="_fc0Hkwt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd4ekgt4EeiiCrav3vcpBQ" type="_fc0Hkwt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>int x =  randomInt(maxDim.width/2,maxDim.width);
		return new Dimension(x,x);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd4ekwt4EeiiCrav3vcpBQ" name="randomBounds" specification="_fc5nIAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd4elAt4EeiiCrav3vcpBQ" name="rect" type="_fbVg4Qt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd4elQt4EeiiCrav3vcpBQ" name="maxDim" type="_fc0Hkwt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd4elgt4EeiiCrav3vcpBQ" type="_fbVg4Qt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return new Rectangle(randomLoc(rect), randomDim(maxDim));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd4elwt4EeiiCrav3vcpBQ" name="randomColor" specification="_fXtlJAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd4emAt4EeiiCrav3vcpBQ" type="_fbUSwAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return new Color( randomInt(0,255),randomInt(0,255),randomInt(0,255));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd4emQt4EeiiCrav3vcpBQ" name="randomChoice" specification="_fc6OMQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd4emgt4EeiiCrav3vcpBQ" name="x" type="_fcy5cQt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd4emwt4EeiiCrav3vcpBQ" name="y" type="_fcy5cQt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fd4enAt4EeiiCrav3vcpBQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fd4enQt4EeiiCrav3vcpBQ" type="_fcy5cQt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (Math.random() &lt; probX) ? x: y;

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fXsXAAt4EeiiCrav3vcpBQ" name="Randomizer" visibility="private">
          <eAnnotations xmi:id="_fXsXAQt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fXsXAgt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_fXs-EQt4EeiiCrav3vcpBQ" type="_fXrv8At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fXs-Egt4EeiiCrav3vcpBQ" name="randomInt" method="_fd33hQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fXs-Ewt4EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXs-FAt4EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXs-FQt4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_fXtlIAt4EeiiCrav3vcpBQ" name="randomDouble" method="_fd33iQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fXtlIQt4EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXtlIgt4EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXtlIwt4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_fXtlJAt4EeiiCrav3vcpBQ" name="randomColor" method="_fd4elwt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fc6OMAt4EeiiCrav3vcpBQ" type="_fbUSwAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fc3x8At4EeiiCrav3vcpBQ" name="randomLoc" method="_fd3QdQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fc4ZAAt4EeiiCrav3vcpBQ" name="rect" type="_fbVg4Qt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fc4ZAQt4EeiiCrav3vcpBQ" type="_fbU50At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fc4ZAgt4EeiiCrav3vcpBQ" name="randomLoc" method="_fd33ggt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fc4ZAwt4EeiiCrav3vcpBQ" name="dim" type="_fc0Hkwt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fc4ZBAt4EeiiCrav3vcpBQ" type="_fbU50At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fc4ZBQt4EeiiCrav3vcpBQ" name="randomVel" method="_fd33jQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fc5AEAt4EeiiCrav3vcpBQ" name="rect" type="_fbVg4Qt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fc5AEQt4EeiiCrav3vcpBQ" type="_fbU50At4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fc5AEgt4EeiiCrav3vcpBQ" name="randomDim" method="_fd4ekAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fc5AEwt4EeiiCrav3vcpBQ" name="maxDim" type="_fc0Hkwt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fc5AFAt4EeiiCrav3vcpBQ" type="_fc0Hkwt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fc5nIAt4EeiiCrav3vcpBQ" name="randomBounds" method="_fd4ekwt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fc5nIQt4EeiiCrav3vcpBQ" name="rect" type="_fbVg4Qt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fc5nIgt4EeiiCrav3vcpBQ" name="maxDim" type="_fc0Hkwt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fc5nIwt4EeiiCrav3vcpBQ" type="_fbVg4Qt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fc6OMQt4EeiiCrav3vcpBQ" name="randomChoice" method="_fd4emQt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fc6OMgt4EeiiCrav3vcpBQ" name="x" type="_fcy5cQt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fc6OMwt4EeiiCrav3vcpBQ" name="y" type="_fcy5cQt4EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_fc6ONAt4EeiiCrav3vcpBQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fc6ONQt4EeiiCrav3vcpBQ" type="_fcy5cQt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_fXvaUAt4EeiiCrav3vcpBQ" name="SineMaker">
        <ownedComment xmi:id="_feC2oAt4EeiiCrav3vcpBQ">
          <body>A utility class that can be used to create smoothly varying sinusoidal
numerical data.
Note that this is not a singleton class nor does it have static methods as
its behavior depends on the minimum, maximum and delta values given to 
its constructor.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_fdVsAwt4EeiiCrav3vcpBQ" name="_mid" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdWTEQt4EeiiCrav3vcpBQ" name="_ampl" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdWTEwt4EeiiCrav3vcpBQ" name="_delta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fdW6IQt4EeiiCrav3vcpBQ" name="_theta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_fdW6Igt4EeiiCrav3vcpBQ" value="-Math.PI/2.0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd5FoAt4EeiiCrav3vcpBQ" name="SineMaker" specification="_fXxPgAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd5FoQt4EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fd5Fogt4EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fd5Fowt4EeiiCrav3vcpBQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fd5FpAt4EeiiCrav3vcpBQ" type="_fXvaUAt4EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>_mid = (max+min)/2.0;
		_ampl = (max-min)/2.0;
		_delta = delta;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd5FpQt4EeiiCrav3vcpBQ" name="getDblVal" specification="_fXx2kAt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd5Fpgt4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double result = _mid + _ampl*Math.sin(_theta);
		_theta += _delta; // shorthand for _theta = _theta + _delta
		return result;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fd5Fpwt4EeiiCrav3vcpBQ" name="getIntVal" specification="_fXx2kgt4EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_fd5FqAt4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int) Math.round(getDblVal());
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_fXxPgAt4EeiiCrav3vcpBQ" name="SineMaker" method="_fd5FoAt4EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_fXxPhAt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_fXxPhQt4EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_feC2oQt4EeiiCrav3vcpBQ">
            <body>The constructor takes several values to control the object's behavior.
	 * @param min The minimum and initial value to produce.
	 * @param max The maximum value to produce.
	 * @param delta The amount in radians that the generating angle is incremented each time
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_fXxPgQt4EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXxPggt4EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXxPgwt4EeiiCrav3vcpBQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_fXxPhgt4EeiiCrav3vcpBQ" type="_fXvaUAt4EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_fXx2kAt4EeiiCrav3vcpBQ" name="getDblVal" method="_fd5FpQt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feC2ogt4EeiiCrav3vcpBQ">
            <body>Returns a different value each time it is called.  The value varies smoothly in a 
	 * sinusoidal fashion, incrementing each time as per the above specified delta 
	 * angle increase.
	 * @return the next value as a double</body>
          </ownedComment>
          <ownedParameter xmi:id="_fXx2kQt4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_fXx2kgt4EeiiCrav3vcpBQ" name="getIntVal" method="_fd5Fpwt4EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_feC2owt4EeiiCrav3vcpBQ">
            <body>Same as getDblVal, but returns the result rounded to the nearest integer.
	 * Note that getDblVal and getIntVal are not independent as getIntVal merely calls
	 * getDblVal.
	 * @return the next value as an int</body>
          </ownedComment>
          <ownedParameter xmi:id="_fXx2kwt4EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_feZb8Qt4EeiiCrav3vcpBQ" name="" memberEnd="_feZb8gt4EeiiCrav3vcpBQ _fdVsAAt4EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_feZb8gt4EeiiCrav3vcpBQ" name="" type="_fXrv8At4EeiiCrav3vcpBQ" association="_feZb8Qt4EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_ev7MYAt4EeiiCrav3vcpBQ">
      <eAnnotations xmi:id="_ev7MYQt4EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_ev7zcAt4EeiiCrav3vcpBQ" base_Package="_enqoQAt4EeiiCrav3vcpBQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Array xmi:id="_fWrDUAt4EeiiCrav3vcpBQ" base_Element="_fWqcQQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fWv70At4EeiiCrav3vcpBQ" base_Element="_fWvUwAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_fWy_IAt4EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_fWyYEAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fW2pgAt4EeiiCrav3vcpBQ" base_Element="_fW2CcAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fXCPsAt4EeiiCrav3vcpBQ" base_Element="_fXBooAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fXC2wAt4EeiiCrav3vcpBQ" base_Element="_fXBooAt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fXC2wQt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fXEr8At4EeiiCrav3vcpBQ" base_Element="_fXEE4At4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fXKykAt4EeiiCrav3vcpBQ" base_Element="_fXKLgQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fXLZoQt4EeiiCrav3vcpBQ" base_Element="_fXKykQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fXVxsAt4EeiiCrav3vcpBQ" base_Element="_fXVKoAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fXVxsQt4EeiiCrav3vcpBQ" base_Element="_fXVKoAt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fXVxsgt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fXZcEAt4EeiiCrav3vcpBQ" base_Element="_fXY1AAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fXZcEQt4EeiiCrav3vcpBQ" base_Element="_fXY1AAt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fXZcEgt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fXb4UAt4EeiiCrav3vcpBQ" base_Element="_fXbRQAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fXb4UQt4EeiiCrav3vcpBQ" base_Element="_fXbRQAt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fXb4Ugt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fXs-EAt4EeiiCrav3vcpBQ" base_Element="_fXsXAAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_fXzEsAt4EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_fXydoAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fbIFgAt4EeiiCrav3vcpBQ" base_Element="_fbHecAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fbIskAt4EeiiCrav3vcpBQ" base_Element="_fbIFgQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fbJToQt4EeiiCrav3vcpBQ" base_Element="_fbJToAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fbLI0At4EeiiCrav3vcpBQ" base_Element="_fbKhwAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fbMW8At4EeiiCrav3vcpBQ" base_Element="_fbLv4Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fbMW8Qt4EeiiCrav3vcpBQ" base_Element="_fbLv4Qt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fbMW8gt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fbPaQAt4EeiiCrav3vcpBQ" base_Element="_fbOzMAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fbTEogt4EeiiCrav3vcpBQ" base_Element="_fbTEoAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fbTrsAt4EeiiCrav3vcpBQ" base_Element="_fbTEoAt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fbTrsQt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_fbUSwQt4EeiiCrav3vcpBQ" base_Element="_fbUSwAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fbVg4At4EeiiCrav3vcpBQ" base_Element="_fbU50At4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fbWH8At4EeiiCrav3vcpBQ" base_Element="_fbVg4Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fbWvAAt4EeiiCrav3vcpBQ" base_Element="_fbWH8Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fbbAcAt4EeiiCrav3vcpBQ" base_Element="_fbaZYAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fbbAcQt4EeiiCrav3vcpBQ" base_Element="_fbaZYAt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fbbAcgt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fbbnhAt4EeiiCrav3vcpBQ" base_Element="_fbbngQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fbcOkAt4EeiiCrav3vcpBQ" base_Element="_fbbngQt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fbcOkQt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fbdcswt4EeiiCrav3vcpBQ" base_Element="_fbdcsAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fbeDwAt4EeiiCrav3vcpBQ" base_Element="_fbdcsAt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fbeDwQt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_fbfR4At4EeiiCrav3vcpBQ" base_Element="_fbeq0At4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fbf48At4EeiiCrav3vcpBQ" base_Element="_fbfR4Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fbhHEAt4EeiiCrav3vcpBQ" base_Element="_fbggAQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fbhHEQt4EeiiCrav3vcpBQ" base_Element="_fbggAQt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fbhHEgt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_fbhuIQt4EeiiCrav3vcpBQ" base_Element="_fbhHEwt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fbjjUAt4EeiiCrav3vcpBQ" base_Element="_fbi8Qwt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fbjjUgt4EeiiCrav3vcpBQ" base_Element="_fbjjUQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fbkKYQt4EeiiCrav3vcpBQ" base_Element="_fbkKYAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fbkKYwt4EeiiCrav3vcpBQ" base_Element="_fbkKYgt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Array xmi:id="_fbn0wAt4EeiiCrav3vcpBQ" base_Element="_fbnNsQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fbq4Ewt4EeiiCrav3vcpBQ" base_Element="_fbq4EAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fbq4FAt4EeiiCrav3vcpBQ" base_Element="_fbq4EAt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fbq4FQt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_fbsGMAt4EeiiCrav3vcpBQ" base_Element="_fbrfIAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fbwXogt4EeiiCrav3vcpBQ" base_Element="_fbvwkQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fbw-sAt4EeiiCrav3vcpBQ" base_Element="_fbvwkQt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fbw-sQt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fbxlwAt4EeiiCrav3vcpBQ" base_Element="_fbw-swt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fbyM0wt4EeiiCrav3vcpBQ" base_Element="_fbyM0At4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fbyM1At4EeiiCrav3vcpBQ" base_Element="_fbyM0At4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fbyM1Qt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fbza8At4EeiiCrav3vcpBQ" base_Element="_fbyz4Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fbza8Qt4EeiiCrav3vcpBQ" base_Element="_fbyz4Qt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fbza8gt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fb0CAwt4EeiiCrav3vcpBQ" base_Element="_fb0CAAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fb0pEAt4EeiiCrav3vcpBQ" base_Element="_fb0CAAt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fb0pEQt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fb1QJAt4EeiiCrav3vcpBQ" base_Element="_fb1QIQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fb13MAt4EeiiCrav3vcpBQ" base_Element="_fb1QIQt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fb13MQt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fb46gAt4EeiiCrav3vcpBQ" base_Element="_fb4TcAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fb46gQt4EeiiCrav3vcpBQ" base_Element="_fb4TcAt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fb46ggt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_fb9L8At4EeiiCrav3vcpBQ" base_Element="_fb8k4At4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fb9L8gt4EeiiCrav3vcpBQ" base_Element="_fb9L8Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fb9zAQt4EeiiCrav3vcpBQ" base_Element="_fb9zAAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fb-aEAt4EeiiCrav3vcpBQ" base_Element="_fb9zAgt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fb_BIAt4EeiiCrav3vcpBQ" base_Element="_fb-aEQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fb_oMAt4EeiiCrav3vcpBQ" base_Element="_fb_BIQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fb_oMgt4EeiiCrav3vcpBQ" base_Element="_fb_oMQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fcAPQAt4EeiiCrav3vcpBQ" base_Element="_fb_oMwt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fcA2UQt4EeiiCrav3vcpBQ" base_Element="_fcA2UAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fcBdYAt4EeiiCrav3vcpBQ" base_Element="_fcA2Ugt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_fcD5oAt4EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_fcCrgQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fcILEAt4EeiiCrav3vcpBQ" base_Element="_fcHkAAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fcIyIAt4EeiiCrav3vcpBQ" base_Element="_fcILEQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fcU_YAt4EeiiCrav3vcpBQ" base_Element="_fcUYUAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fcU_YQt4EeiiCrav3vcpBQ" base_Element="_fcUYUAt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fcU_Ygt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fcVmcwt4EeiiCrav3vcpBQ" base_Element="_fcVmcAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fcWNgAt4EeiiCrav3vcpBQ" base_Element="_fcVmcAt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fcWNgQt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fcYCtAt4EeiiCrav3vcpBQ" base_Element="_fcYCsQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fcae8At4EeiiCrav3vcpBQ" base_Element="_fcZ34At4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fcdiQwt4EeiiCrav3vcpBQ" base_Element="_fcdiQAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fceJUAt4EeiiCrav3vcpBQ" base_Element="_fcdiQAt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fceJUQt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fcleEwt4EeiiCrav3vcpBQ" base_Element="_fck3Awt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fcmFIAt4EeiiCrav3vcpBQ" base_Element="_fck3Awt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fcmFIQt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fcn6Uwt4EeiiCrav3vcpBQ" base_Element="_fcnTQQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fcn6VAt4EeiiCrav3vcpBQ" base_Element="_fcnTQQt4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fcn6VQt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fcuA8At4EeiiCrav3vcpBQ" base_Element="_fctZ4At4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_fcuA8Qt4EeiiCrav3vcpBQ" base_Element="_fctZ4At4EeiiCrav3vcpBQ">
    <annotations xmi:id="_fcuA8gt4EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_fczggAt4EeiiCrav3vcpBQ" base_Element="_fcy5cQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fc1VsAt4EeiiCrav3vcpBQ" base_Element="_fc0Hkwt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdHpkAt4EeiiCrav3vcpBQ" base_Element="_fdGbcAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_fdHpkgt4EeiiCrav3vcpBQ" genericsValue="?" base_Element="_fdHpkQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdHpkwt4EeiiCrav3vcpBQ" base_Element="_fdHpkQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdIQoAt4EeiiCrav3vcpBQ" base_Element="_fdHplAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdJewAt4EeiiCrav3vcpBQ" base_Element="_fdI3sAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdKF0gt4EeiiCrav3vcpBQ" base_Element="_fdKF0At4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdKs4At4EeiiCrav3vcpBQ" base_Element="_fdKF0wt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdKs4wt4EeiiCrav3vcpBQ" base_Element="_fdKs4Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdLT8At4EeiiCrav3vcpBQ" base_Element="_fdKs5At4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdMiEQt4EeiiCrav3vcpBQ" base_Element="_fdL7Agt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdNJIAt4EeiiCrav3vcpBQ" base_Element="_fdMiEgt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdNJIwt4EeiiCrav3vcpBQ" base_Element="_fdNJIQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdNwMwt4EeiiCrav3vcpBQ" base_Element="_fdNwMgt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdOXQQt4EeiiCrav3vcpBQ" base_Element="_fdOXQAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Array xmi:id="_fdPlYAt4EeiiCrav3vcpBQ" base_Element="_fdO-UAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdPlYQt4EeiiCrav3vcpBQ" base_Element="_fdO-UAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_fdQMcAt4EeiiCrav3vcpBQ" base_Property="_fdPlYgt4EeiiCrav3vcpBQ" siblings="_feAaYwt4EeiiCrav3vcpBQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdQMcQt4EeiiCrav3vcpBQ" base_Element="_fdPlYgt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdQzgQt4EeiiCrav3vcpBQ" base_Element="_fdQMcgt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdRakAt4EeiiCrav3vcpBQ" base_Element="_fdQzggt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdRakwt4EeiiCrav3vcpBQ" base_Element="_fdRakQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Array xmi:id="_fdSBoQt4EeiiCrav3vcpBQ" base_Element="_fdRalAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdSBogt4EeiiCrav3vcpBQ" base_Element="_fdRalAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdSoswt4EeiiCrav3vcpBQ" base_Element="_fdSosgt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdT20gt4EeiiCrav3vcpBQ" base_Element="_fdT20At4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdT21Qt4EeiiCrav3vcpBQ" base_Element="_fdT20wt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdUd4gt4EeiiCrav3vcpBQ" base_Element="_fdUd4At4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdVsAgt4EeiiCrav3vcpBQ" base_Element="_fdVsAAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdWTEAt4EeiiCrav3vcpBQ" base_Element="_fdVsAwt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdWTEgt4EeiiCrav3vcpBQ" base_Element="_fdWTEQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdW6IAt4EeiiCrav3vcpBQ" base_Element="_fdWTEwt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdXhMAt4EeiiCrav3vcpBQ" base_Element="_fdW6IQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdYIQwt4EeiiCrav3vcpBQ" base_Element="_fdYIQgt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdZWYAt4EeiiCrav3vcpBQ" base_Element="_fdYIRAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdZWYwt4EeiiCrav3vcpBQ" base_Element="_fdZWYQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdZ9cAt4EeiiCrav3vcpBQ" base_Element="_fdZWZAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_fdbLkAt4EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_fdZ9cQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdbLkQt4EeiiCrav3vcpBQ" base_Element="_fdZ9cQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdbLlAt4EeiiCrav3vcpBQ" base_Element="_fdbLkgt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdbLlwt4EeiiCrav3vcpBQ" base_Element="_fdbLlQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdbyoQt4EeiiCrav3vcpBQ" base_Element="_fdbLmAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdcZsAt4EeiiCrav3vcpBQ" base_Element="_fdbyogt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdcZswt4EeiiCrav3vcpBQ" base_Element="_fdcZsQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fddn0Qt4EeiiCrav3vcpBQ" base_Element="_fddAwAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_fddn0wt4EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_fddn0gt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fde18At4EeiiCrav3vcpBQ" base_Element="_fddn0gt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_fdgEEAt4EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_fde18Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdgEEgt4EeiiCrav3vcpBQ" base_Element="_fde18Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdgEFQt4EeiiCrav3vcpBQ" base_Element="_fdgEEwt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdgrIQt4EeiiCrav3vcpBQ" base_Element="_fdgEFgt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdhSMgt4EeiiCrav3vcpBQ" base_Element="_fdhSMAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdh5QAt4EeiiCrav3vcpBQ" base_Element="_fdhSMwt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdh5Qwt4EeiiCrav3vcpBQ" base_Element="_fdh5QQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdigUgt4EeiiCrav3vcpBQ" base_Element="_fdigUAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_fdjHYQt4EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_fdjHYAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdjucAt4EeiiCrav3vcpBQ" base_Element="_fdjHYAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdk8kQt4EeiiCrav3vcpBQ" base_Element="_fdk8kAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdmKsQt4EeiiCrav3vcpBQ" base_Element="_fdmKsAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fdmKtQt4EeiiCrav3vcpBQ" base_Element="_fdmKswt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_feAaZAt4EeiiCrav3vcpBQ" base_Property="_feAaYwt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_feBBcAt4EeiiCrav3vcpBQ" base_Element="_feAaYwt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feN1wAt4EeiiCrav3vcpBQ" base_Element="_feNOsAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feOc0At4EeiiCrav3vcpBQ" base_Element="_feN1wQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fePD4At4EeiiCrav3vcpBQ" base_Element="_feOc0Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fePq8At4EeiiCrav3vcpBQ" base_Element="_fePD4Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feQSAAt4EeiiCrav3vcpBQ" base_Element="_fePq8Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feQ5EAt4EeiiCrav3vcpBQ" base_Element="_feQSAQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feRgIAt4EeiiCrav3vcpBQ" base_Element="_feQ5EQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feSHMAt4EeiiCrav3vcpBQ" base_Element="_feRgIQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feSHMwt4EeiiCrav3vcpBQ" base_Element="_feSHMQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feSuQgt4EeiiCrav3vcpBQ" base_Element="_feSuQAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feTVUAt4EeiiCrav3vcpBQ" base_Element="_feSuQwt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feTVUwt4EeiiCrav3vcpBQ" base_Element="_feTVUQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feT8YAt4EeiiCrav3vcpBQ" base_Element="_feTVVAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feUjcAt4EeiiCrav3vcpBQ" base_Element="_feT8YQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feVKgAt4EeiiCrav3vcpBQ" base_Element="_feUjcQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feVKgwt4EeiiCrav3vcpBQ" base_Element="_feVKgQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feVxkgt4EeiiCrav3vcpBQ" base_Element="_feVxkAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feWYogt4EeiiCrav3vcpBQ" base_Element="_feWYoAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feW_sAt4EeiiCrav3vcpBQ" base_Element="_feWYowt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feXmwAt4EeiiCrav3vcpBQ" base_Element="_feW_sQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feXmwwt4EeiiCrav3vcpBQ" base_Element="_feXmwQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feYN0At4EeiiCrav3vcpBQ" base_Element="_feXmxAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feY04At4EeiiCrav3vcpBQ" base_Element="_feYN0Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feY04wt4EeiiCrav3vcpBQ" base_Element="_feY04Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feZb8At4EeiiCrav3vcpBQ" base_Element="_feY05At4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feZb8wt4EeiiCrav3vcpBQ" base_Element="_feZb8Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feaDAgt4EeiiCrav3vcpBQ" base_Element="_feaDAAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feaqEAt4EeiiCrav3vcpBQ" base_Element="_feaDAwt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_febRIAt4EeiiCrav3vcpBQ" base_Element="_feaqEQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fecfQAt4EeiiCrav3vcpBQ" base_Element="_feb4MAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fedGUAt4EeiiCrav3vcpBQ" base_Element="_fecfQQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fedtYAt4EeiiCrav3vcpBQ" base_Element="_fedGUQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feeUcAt4EeiiCrav3vcpBQ" base_Element="_fedtYQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fee7gAt4EeiiCrav3vcpBQ" base_Element="_feeUcQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fefikAt4EeiiCrav3vcpBQ" base_Element="_fee7gQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fegJoAt4EeiiCrav3vcpBQ" base_Element="_fefikQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fegwsAt4EeiiCrav3vcpBQ" base_Element="_fegJoQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fehXwAt4EeiiCrav3vcpBQ" base_Element="_fegwsQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feh-0At4EeiiCrav3vcpBQ" base_Element="_fehXwQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feil4At4EeiiCrav3vcpBQ" base_Element="_feh-0Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fejM8At4EeiiCrav3vcpBQ" base_Element="_feil4Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fej0AAt4EeiiCrav3vcpBQ" base_Element="_fejM8Qt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fekbEAt4EeiiCrav3vcpBQ" base_Element="_fej0AQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_felCIAt4EeiiCrav3vcpBQ" base_Element="_fekbEQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_felCIwt4EeiiCrav3vcpBQ" base_Element="_felCIQt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_felpMgt4EeiiCrav3vcpBQ" base_Element="_felpMAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_femQQgt4EeiiCrav3vcpBQ" base_Element="_femQQAt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_fem3UAt4EeiiCrav3vcpBQ" base_Element="_femQQwt4EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_feneYAt4EeiiCrav3vcpBQ" base_Element="_fem3UQt4EeiiCrav3vcpBQ"/>
</xmi:XMI>
