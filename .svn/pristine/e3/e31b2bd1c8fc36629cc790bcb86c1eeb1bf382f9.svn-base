<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_YNfVYAsQEeiTNeZmJQOSSg" name="HW04">
    <eAnnotations xmi:id="_YkSEwAsQEeiTNeZmJQOSSg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_YkSr0AsQEeiTNeZmJQOSSg" source="codegen">
        <details xmi:id="_YkSr0QsQEeiTNeZmJQOSSg" key="codegenDirectory" value="/HW04/src"/>
        <details xmi:id="_bCkFEAsQEeiTNeZmJQOSSg" key="AssociatedSourceCode" value="/HW04/src/controller/BallWorldController.java;133705207/1;/HW04/src/model/ADecoratorPaintStrategy.java;3522512554/1;/HW04/src/model/APaintStrategy.java;1740869287/1;/HW04/src/model/Ball.java;544139014/1;/HW04/src/model/BallPaintStrategy.java;538568874/1;/HW04/src/model/BallWorldModel.java;3438198808/1;/HW04/src/model/BreathingStrategy.java;569949667/1;/HW04/src/model/ColorStrategy.java;783269627/1;/HW04/src/model/CompositePaintStrategy.java;2517148635/1;/HW04/src/model/CrashStrategy.java;4279759508/1;/HW04/src/model/EllipsePaintStrategy.java;292774861/1;/HW04/src/model/EllipseShapeFactory.java;1636135608/1;/HW04/src/model/FastStrategy.java;3009224450/1;/HW04/src/model/IBallCmd.java;2100560540/1;/HW04/src/model/IModel2ViewAdapter.java;715642539/1;/HW04/src/model/IPaintStrategy.java;556726924/1;/HW04/src/model/IShapeFactory.java;810833796/1;/HW04/src/model/IStrategyFac.java;878593396/1;/HW04/src/model/IUpdateStrategy.java;1651050839/1;/HW04/src/model/ImagePaintStrategy.java;2009657845/1;/HW04/src/model/MultiPaintStrategy.java;843652504/1;/HW04/src/model/MultiStrategy.java;1636671415/1;/HW04/src/model/PolygonFactory.java;352231935/1;/HW04/src/model/RectanglePaintStrategy.java;952260073/1;/HW04/src/model/RectangleShapeFactory.java;3860937959/1;/HW04/src/model/ShapePaintStrategy.java;851889235/1;/HW04/src/model/SpawnStrategy.java;3065061180/1;/HW04/src/model/SquarePaintStrategy.java;3526266484/1;/HW04/src/model/StraightStrategy.java;3914615527/1;/HW04/src/model/SwellStrategy.java;1352457759/1;/HW04/src/model/SwitcherStrategy.java;2480375116/1;/HW04/src/model/TeleportStrategy.java;2565727986/1;/HW04/src/model/UprightCompositePaintStrategy.java;585067317/1;/HW04/src/model/UprightImageStrategy.java;3761235521/1;/HW04/src/model/UprightShapePaintStrategy.java;35762995/1;/HW04/src/model/WiggleStrategy.java;4246409471/1;/HW04/src/util/Dispatcher.java;77051068/1;/HW04/src/util/IRandomizer.java;4224991458/1;/HW04/src/util/Randomizer.java;1541548940/1;/HW04/src/util/SineMaker.java;1378225368/1;/HW04/src/view/BallWorldView.java;1506153628/1;/HW04/src/view/IView2ModelAdapter.java;637323524/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_aHdHsAsQEeiTNeZmJQOSSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_aHduwAsQEeiTNeZmJQOSSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_aHduwQsQEeiTNeZmJQOSSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_aHduwgsQEeiTNeZmJQOSSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_aHduwwsQEeiTNeZmJQOSSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_aHduxAsQEeiTNeZmJQOSSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_aHduxQsQEeiTNeZmJQOSSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_aHduxgsQEeiTNeZmJQOSSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_aHe84AsQEeiTNeZmJQOSSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_aH3XYAsQEeiTNeZmJQOSSg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_aH3-cAsQEeiTNeZmJQOSSg" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_aIJrQAsQEeiTNeZmJQOSSg" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_aUgsQAsQEeiTNeZmJQOSSg" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_aVVysAsQEeiTNeZmJQOSSg" name="Ellipse2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_aK9usAsQEeiTNeZmJQOSSg" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_aWbX0QsQEeiTNeZmJQOSSg" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_aWb-4QsQEeiTNeZmJQOSSg" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_aUbzwAsQEeiTNeZmJQOSSg" name="Container"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aUdB4QsQEeiTNeZmJQOSSg" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aUeQAQsQEeiTNeZmJQOSSg" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aUzAIAsQEeiTNeZmJQOSSg" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aU0OQQsQEeiTNeZmJQOSSg" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aVCQsAsQEeiTNeZmJQOSSg" name="Rectangle"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_aVTWcAsQEeiTNeZmJQOSSg" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aVdHcwsQEeiTNeZmJQOSSg" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aVgKwAsQEeiTNeZmJQOSSg" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aVhY4AsQEeiTNeZmJQOSSg" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aVh_8QsQEeiTNeZmJQOSSg" name="Toolkit"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aVwpcAsQEeiTNeZmJQOSSg" name="Polygon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aWVRMAsQEeiTNeZmJQOSSg" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aWebIQsQEeiTNeZmJQOSSg" name="FlowLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aWfpQQsQEeiTNeZmJQOSSg" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aXlOYAsQEeiTNeZmJQOSSg" name="Dimension"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_aIg3oAsQEeiTNeZmJQOSSg" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_aU1cYQsQEeiTNeZmJQOSSg" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_aU2qgQsQEeiTNeZmJQOSSg" name="Observer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_aXERAAsQEeiTNeZmJQOSSg" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_aXERAQsQEeiTNeZmJQOSSg" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_aH4lgAsQEeiTNeZmJQOSSg" name="model">
      <packagedElement xmi:type="uml:Class" xmi:id="_aMs0EAsQEeiTNeZmJQOSSg" name="ADecoratorPaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_aZkycwsQEeiTNeZmJQOSSg">
          <body>This is the ADecoratePaintStrategy class that is abstract. It has the basic functionality&#xD;
of a paint strategy, and the methods simply delegate to the decoree.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_aUlkwAsQEeiTNeZmJQOSSg" general="_aMzhwAsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aYChYQsQEeiTNeZmJQOSSg" name="decoree" visibility="private" type="_aMzhwAsQEeiTNeZmJQOSSg" association="_aaO5wQsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZG4YQsQEeiTNeZmJQOSSg" name="ADecoratorPaintStrategy" specification="_aUjIgAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZG4YgsQEeiTNeZmJQOSSg" name="decoree" type="_aMzhwAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZG4YwsQEeiTNeZmJQOSSg" type="_aMs0EAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>super(new AffineTransform());&#xD;
		this.decoree = decoree;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZHfcAsQEeiTNeZmJQOSSg" name="init" specification="_aUjvkwsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZHfcQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>decoree.init(ball);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZHfcgsQEeiTNeZmJQOSSg" name="paintXfrm" specification="_aW5R4AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZHfcwsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZHfdAsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZHfdQsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>decoree.paintXfrm(g, ball, at);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZIGgAsQEeiTNeZmJQOSSg" name="paint" specification="_aW7HEQsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZIGgQsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZIGggsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>decoree.paint(g, ball);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aUjIgAsQEeiTNeZmJQOSSg" name="ADecoratorPaintStrategy" method="_aZG4YQsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aUjvkAsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aUjvkQsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_aZkydAsQEeiTNeZmJQOSSg">
            <body>This is the constructor for ADecoratorPaintStrategy, that calls the&#xD;
	 * super constructor with an affine transform, and sets the decoree.&#xD;
	 * @param decoree An APaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_aUjIgQsQEeiTNeZmJQOSSg" name="decoree" type="_aMzhwAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aUjvkgsQEeiTNeZmJQOSSg" type="_aMs0EAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aUjvkwsQEeiTNeZmJQOSSg" name="init" method="_aZHfcAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aUjvlAsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aW5R4AsQEeiTNeZmJQOSSg" name="paintXfrm" method="_aZHfcgsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aW5R4QsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aW548AsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aW548QsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aW7HEQsQEeiTNeZmJQOSSg" name="paint" method="_aZIGgAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aW7HEgsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aW7uIAsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aMzhwAsQEeiTNeZmJQOSSg" name="APaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_aZkydQsQEeiTNeZmJQOSSg">
          <body>This is an abstract class that defines the top level affine transform based
paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_aYDvgAsQEeiTNeZmJQOSSg" name="at" visibility="package" type="_aUgsQAsQEeiTNeZmJQOSSg" association="_aaPg0QsQEeiTNeZmJQOSSg"/>
        <interfaceRealization xmi:id="_aUtgkAsQEeiTNeZmJQOSSg" client="_aMzhwAsQEeiTNeZmJQOSSg" supplier="_aOVLwAsQEeiTNeZmJQOSSg" contract="_aOVLwAsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZIGgwsQEeiTNeZmJQOSSg" name="APaintStrategy" specification="_aW88QAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZItkAsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZItkQsQEeiTNeZmJQOSSg" type="_aMzhwAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>this.at = at;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZItkgsQEeiTNeZmJQOSSg" name="paint" specification="_aW9jUAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZItkwsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZItlAsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>double scale = ball.getRad();
		at.setToTranslation(ball.getLoc().x, ball.getLoc().y);
		at.scale(scale, scale);
		at.rotate(ball.getVel().x, ball.getVel().y);
		g.setColor(ball.getCol());    
		paintCfg(g, ball);
		paintXfrm(g, ball, at);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZItlQsQEeiTNeZmJQOSSg" name="getAT" specification="_aM3zMAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZItlgsQEeiTNeZmJQOSSg" type="_aUgsQAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>return this.at;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aM1W8AsQEeiTNeZmJQOSSg" name="APaintStrategy">
          <eAnnotations xmi:id="_aM1W8QsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aM1W8gsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aM2lEAsQEeiTNeZmJQOSSg" type="_aMzhwAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aM3zMAsQEeiTNeZmJQOSSg" name="getAT" method="_aZItlQsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZlZgAsQEeiTNeZmJQOSSg">
            <body>This is a getter that returns the Affine Transform
	 * @return An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_aW-xcAsQEeiTNeZmJQOSSg" type="_aUgsQAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aUvVwAsQEeiTNeZmJQOSSg" name="init">
          <ownedParameter xmi:id="_aUvVwQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aW88QAsQEeiTNeZmJQOSSg" name="APaintStrategy" method="_aZIGgwsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aW88QgsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aW88QwsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_aZkydgsQEeiTNeZmJQOSSg">
            <body>This is the constructor that takes in Affine Transform.
	 * @param at</body>
          </ownedComment>
          <ownedParameter xmi:id="_aW88QQsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aW88RAsQEeiTNeZmJQOSSg" type="_aMzhwAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aW9jUAsQEeiTNeZmJQOSSg" name="paint" method="_aZItkgsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZkydwsQEeiTNeZmJQOSSg">
            <body>This function paints the ball on the passed in Graphics object.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aW9jUQsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aW9jUgsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aW-KYAsQEeiTNeZmJQOSSg" name="paintCfg" visibility="protected">
          <ownedParameter xmi:id="_aW-KYQsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aW-KYgsQEeiTNeZmJQOSSg" name="host" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aW-xcQsQEeiTNeZmJQOSSg" name="paintXfrm" isAbstract="true">
          <ownedComment xmi:id="_aZlZgQsQEeiTNeZmJQOSSg">
            <body>This function is a secondary paint operation that is the last step of the above
	 * paint method, which does not calculate its own affine transform, but instead,
	 * uses a supplied affine transform.
	 * @param g A graphics object
	 * @param host The host ball
	 * @param at An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_aW_YgAsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aW_YgQsQEeiTNeZmJQOSSg" name="host" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aW_YggsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aM-g4AsQEeiTNeZmJQOSSg" name="Ball">
        <ownedComment xmi:id="_aZlZggsQEeiTNeZmJQOSSg">
          <body>This is the Ball class, which is what is drawn on the screen, and implements
Observer to use dispatching.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_aYEWkAsQEeiTNeZmJQOSSg" name="col" type="_aUzAIAsQEeiTNeZmJQOSSg" association="_aZn1wAsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aYE9oAsQEeiTNeZmJQOSSg" name="loc" type="_aU0OQQsQEeiTNeZmJQOSSg" association="_aZoc0AsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aYFksAsQEeiTNeZmJQOSSg" name="rad" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYFksgsQEeiTNeZmJQOSSg" name="vel" type="_aU0OQQsQEeiTNeZmJQOSSg" association="_aZoc0gsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aYGLwAsQEeiTNeZmJQOSSg" name="con" type="_aUbzwAsQEeiTNeZmJQOSSg" association="_aZpD4AsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aYGLwQsQEeiTNeZmJQOSSg" name="strat" visibility="private" type="_aOfj0AsQEeiTNeZmJQOSSg" association="_aaQH4QsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aYGy0QsQEeiTNeZmJQOSSg" name="paintStrat" type="_aOVLwAsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aaQu8QsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aYGy0gsQEeiTNeZmJQOSSg" name="itr" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYGy0wsQEeiTNeZmJQOSSg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYHZ4QsQEeiTNeZmJQOSSg" name="radDelta">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_aW__kAsQEeiTNeZmJQOSSg" client="_aM-g4AsQEeiTNeZmJQOSSg" supplier="_aU2qgQsQEeiTNeZmJQOSSg" contract="_aU2qgQsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZJUoAsQEeiTNeZmJQOSSg" name="Ball" specification="_aXB0wAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZJUoQsQEeiTNeZmJQOSSg" name="col" type="_aUzAIAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZJUogsQEeiTNeZmJQOSSg" name="loc" type="_aU0OQQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZJUowsQEeiTNeZmJQOSSg" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZJUpAsQEeiTNeZmJQOSSg" name="vel" type="_aU0OQQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZJUpQsQEeiTNeZmJQOSSg" name="con" type="_aUbzwAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZJUpgsQEeiTNeZmJQOSSg" name="updateStrat" type="_aOfj0AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZJUpwsQEeiTNeZmJQOSSg" name="paintStrat" type="_aOVLwAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZJUqAsQEeiTNeZmJQOSSg" type="_aM-g4AsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>setCol(col);
		setLoc(loc);
		setRad(rad);
		setVel(vel);
		setCon(con);
		setStrat(updateStrat);
		setRadDelta(5);
		setPaintStrat(paintStrat);
		paintStrat.init(this);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZJ7sAsQEeiTNeZmJQOSSg" name="getRad" specification="_aNCLQAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZJ7sQsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZJ7sgsQEeiTNeZmJQOSSg" name="setRad" specification="_aNDZYAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZJ7swsQEeiTNeZmJQOSSg" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.rad = rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZKiwAsQEeiTNeZmJQOSSg" name="move" specification="_aNEAcAsQEeiTNeZmJQOSSg">
          <language>java</language>
          <body>setLoc(new Point(getLoc().x + getVel().x, getLoc().y + getVel().y));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZKiwQsQEeiTNeZmJQOSSg" name="update" specification="_aXE4EQsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZKiwgsQEeiTNeZmJQOSSg" name="o" type="_aU1cYQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZKiwwsQEeiTNeZmJQOSSg" name="cmd" type="_aXERAQsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>((IBallCmd) cmd).apply(this, (Dispatcher) o);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZKixAsQEeiTNeZmJQOSSg" name="paint" specification="_aXFfIQsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZKixQsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>getPaintStrat().paint(g, this);
//		g.setColor(this.getCol());
//		g.fillOval(this.getLoc().x - getRad(), this.getLoc().y - getRad(), getRad() * 2, getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZLJ0AsQEeiTNeZmJQOSSg" name="getStrat" specification="_aNEngAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZLJ0QsQEeiTNeZmJQOSSg" type="_aOfj0AsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>return strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZLJ0gsQEeiTNeZmJQOSSg" name="setStrat" specification="_aU5t0QsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZLJ0wsQEeiTNeZmJQOSSg" name="strat" type="_aOfj0AsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>this.strat = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZLJ1AsQEeiTNeZmJQOSSg" name="getItr" specification="_aNGcsAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZLJ1QsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZLJ1gsQEeiTNeZmJQOSSg" name="setItr" specification="_aNHDwAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZLJ1wsQEeiTNeZmJQOSSg" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.itr = itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZLw4AsQEeiTNeZmJQOSSg" name="bounce" specification="_aNHq0AsQEeiTNeZmJQOSSg">
          <language>java</language>
          <body>// Boundaries of the window
		int rightWall = getCon().getWidth();
		int bottomWall = getCon().getHeight();
		int leftWall = 0;
		int topWall = 0;
		
		int leftX = getLoc().x - getRad();
		int rightX = getLoc().x + getRad();
		
		int bottomY = getLoc().y + getRad();
		int topY = getLoc().y - getRad();
		
		int maxX = rightWall - getRad();
		int minX = getRad();
		
		int maxY = bottomWall - getRad();
		int minY = getRad();

		// Collision detected with left or right wall.
		if (leftX == leftWall || rightX == rightWall) {
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond right wall.
		else if (rightX > rightWall) {
			int diff = getLoc().x - maxX;
			setLoc(new Point(maxX - diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond left wall.
		else if (leftX &lt; leftWall) {
			int diff = minX - getLoc().x;
			setLoc(new Point(minX + diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Collision detected with top or bottom wall.
		else if (topY == topWall || bottomY == bottomWall) {
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond bottom wall.
		else if (bottomY > bottomWall) {
			int diff = getLoc().y - maxY;
			setLoc(new Point(getLoc().x, maxY - diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond top wall.
		else if (topY &lt; topWall) {
			int diff = minY - getLoc().y;
			setLoc(new Point(getLoc().x, minY + diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZLw4QsQEeiTNeZmJQOSSg" name="setPaintStrat" specification="_aU6U4AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZLw4gsQEeiTNeZmJQOSSg" name="paintStrat" type="_aOVLwAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>this.paintStrat = paintStrat;
		getPaintStrat().init(this);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aNCLQAsQEeiTNeZmJQOSSg" name="getRad" method="_aZJ7sAsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZpD4wsQEeiTNeZmJQOSSg">
            <body>This returns the radius of the ball.
	 * @return the rad</body>
          </ownedComment>
          <ownedParameter xmi:id="_aNCyUAsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_aNDZYAsQEeiTNeZmJQOSSg" name="setRad" method="_aZJ7sgsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZpD5AsQEeiTNeZmJQOSSg">
            <body>This sets the radius of the ball.
	 * @param rad the rad to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_aNDZYQsQEeiTNeZmJQOSSg" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_aNEAcAsQEeiTNeZmJQOSSg" name="move" method="_aZKiwAsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZpD5QsQEeiTNeZmJQOSSg">
            <body>This function tells the ball to update its current location by the respective velocity
	 * component.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_aNEngAsQEeiTNeZmJQOSSg" name="getStrat" method="_aZLJ0AsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZpq8QsQEeiTNeZmJQOSSg">
            <body>This function returns the ball's movement strategy.
	 * @return the strat</body>
          </ownedComment>
          <ownedParameter xmi:id="_aU5t0AsQEeiTNeZmJQOSSg" type="_aOfj0AsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aNGcsAsQEeiTNeZmJQOSSg" name="getItr" method="_aZLJ1AsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZpq8wsQEeiTNeZmJQOSSg">
            <body>This function returns the current iteration of the ball.
	 * @return the itr</body>
          </ownedComment>
          <ownedParameter xmi:id="_aNGcsQsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_aNHDwAsQEeiTNeZmJQOSSg" name="setItr" method="_aZLJ1gsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZpq9AsQEeiTNeZmJQOSSg">
            <body>This function sets the current iteration of the ball.
	 * @param itr the itr to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_aNHDwQsQEeiTNeZmJQOSSg" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_aNHq0AsQEeiTNeZmJQOSSg" name="bounce" method="_aZLw4AsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZpq9QsQEeiTNeZmJQOSSg">
            <body>This function checks to see if the ball has come into contact with one of the boundaries of the 
	 *  panel. If it has, this function reverses the velocity of the ball, simulating a rebound off
	 *  of the wall. If, due to the delay of the GUI thread, the ball has passed one of the panel
	 *  boundaries, this function moves the ball to the location it would be at if it had properly 
	 *  bounced off of the wall, and sets the velocity to its appropriate value.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_aU5t0QsQEeiTNeZmJQOSSg" name="setStrat" method="_aZLJ0gsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZpq8gsQEeiTNeZmJQOSSg">
            <body>This function sets the ball's movement strategy.
	 * @param strat the strat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_aU5t0gsQEeiTNeZmJQOSSg" name="strat" type="_aOfj0AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aU6U4AsQEeiTNeZmJQOSSg" name="setPaintStrat" method="_aZLw4QsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZpq9gsQEeiTNeZmJQOSSg">
            <body>This function sets the paint strategy.
	 * @param paintStrat the paintStrat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_aU6U4QsQEeiTNeZmJQOSSg" name="paintStrat" type="_aOVLwAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXB0wAsQEeiTNeZmJQOSSg" name="Ball" method="_aZJUoAsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aXDC4AsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aXDC4QsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_aZpD4gsQEeiTNeZmJQOSSg">
            <body>This is the Ball constructor, which sets its initial values.
	 * @param col The color of the ball
	 * @param loc The initial location of the ball.
	 * @param rad The radius of the ball.
	 * @param vel The initial velocity of the ball.
	 * @param con The container (component) on which the ball is drawn.
	 * @param updateStrat The IUpdateStrategy that decides how to update the ball.
	 * @param paintStrat The IPaintStrategy that decides how to paint the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aXB0wQsQEeiTNeZmJQOSSg" name="col" type="_aUzAIAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXCb0AsQEeiTNeZmJQOSSg" name="loc" type="_aU0OQQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXCb0QsQEeiTNeZmJQOSSg" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXCb0gsQEeiTNeZmJQOSSg" name="vel" type="_aU0OQQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXCb0wsQEeiTNeZmJQOSSg" name="con" type="_aUbzwAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXCb1AsQEeiTNeZmJQOSSg" name="updateStrat" type="_aOfj0AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXCb1QsQEeiTNeZmJQOSSg" name="paintStrat" type="_aOVLwAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXDC4gsQEeiTNeZmJQOSSg" type="_aM-g4AsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXE4EQsQEeiTNeZmJQOSSg" name="update" method="_aZKiwQsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZpD5gsQEeiTNeZmJQOSSg">
            <body>This function is required when implementing Observer, that tells the ball what to
	 * do when it is notified by the dispatcher.
	 * @param o An observable
	 * @param g An Object, which should be an IBallCmd</body>
          </ownedComment>
          <ownedParameter xmi:id="_aXE4EgsQEeiTNeZmJQOSSg" name="o" type="_aU1cYQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXFfIAsQEeiTNeZmJQOSSg" name="cmd" type="_aXERAQsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXFfIQsQEeiTNeZmJQOSSg" name="paint" method="_aZKixAsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZpq8AsQEeiTNeZmJQOSSg">
            <body>This function determines how to paint the ball, and it delegates
	 * to the paint strategy's paint.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aXGGMAsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aNVGMAsQEeiTNeZmJQOSSg" name="BallPaintStrategy">
        <ownedComment xmi:id="_aZpq9wsQEeiTNeZmJQOSSg">
          <body>This is the ball paint strategy, which implements a paint strategy for a ball.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_aU_NYAsQEeiTNeZmJQOSSg" client="_aNVGMAsQEeiTNeZmJQOSSg" supplier="_aOVLwAsQEeiTNeZmJQOSSg" contract="_aOVLwAsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZMX8AsQEeiTNeZmJQOSSg" name="paint" specification="_aXIicAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZMX8QsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZMX8gsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>g.setColor(ball.getCol());
		g.fillOval(ball.getLoc().x - ball.getRad(), ball.getLoc().y - ball.getRad(),
				ball.getRad() * 2, ball.getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aNWUUAsQEeiTNeZmJQOSSg" name="BallPaintStrategy">
          <eAnnotations xmi:id="_aNWUUQsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aNWUUgsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aNXicAsQEeiTNeZmJQOSSg" type="_aNVGMAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aVAbgAsQEeiTNeZmJQOSSg" name="init">
          <ownedParameter xmi:id="_aVAbgQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXIicAsQEeiTNeZmJQOSSg" name="paint" method="_aZMX8AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aXIicQsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXIicgsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aNZ-sAsQEeiTNeZmJQOSSg" name="BallWorldModel">
        <ownedComment xmi:id="_aZpq-AsQEeiTNeZmJQOSSg">
          <body>This is the BallWorldModel class, which makes balls, clears balls, and updates the balls.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_aYIoAAsQEeiTNeZmJQOSSg" name="adapter" visibility="private" type="_aOPFIAsQEeiTNeZmJQOSSg" association="_aaRWAQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYIoAQsQEeiTNeZmJQOSSg" value="IModel2ViewAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYJPEQsQEeiTNeZmJQOSSg" name="timeSlice" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYJPEgsQEeiTNeZmJQOSSg" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYJ2IAsQEeiTNeZmJQOSSg" name="dispatcher" visibility="private" type="_aPmXEAsQEeiTNeZmJQOSSg" association="_aaR9EQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYJ2IQsQEeiTNeZmJQOSSg" value="new Dispatcher()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYJ2IwsQEeiTNeZmJQOSSg" name="timer" visibility="private" type="_aVDe0QsQEeiTNeZmJQOSSg" association="_aaTLMAsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYKdMAsQEeiTNeZmJQOSSg" value="new Timer(timeSlice, (e) -> adapter.update())"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZM_AAsQEeiTNeZmJQOSSg" name="BallWorldModel" specification="_aVFUAAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZM_AQsQEeiTNeZmJQOSSg" name="adapter" type="_aOPFIAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZM_AgsQEeiTNeZmJQOSSg" type="_aNZ-sAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>this.adapter = adapter;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZM_AwsQEeiTNeZmJQOSSg" name="clearBalls" specification="_aNca8AsQEeiTNeZmJQOSSg">
          <language>java</language>
          <body>dispatcher.deleteObservers();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZM_BAsQEeiTNeZmJQOSSg" name="start" specification="_aNdCAAsQEeiTNeZmJQOSSg">
          <language>java</language>
          <body>timer.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZM_BQsQEeiTNeZmJQOSSg" name="update" specification="_aXKXoAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZM_BgsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>dispatcher.notifyAll((IBallCmd) (ball, disp)->{
         // Whatever you want to do with the context Ball!
			ball.setItr(ball.getItr() + 1);
			ball.getStrat().updateState(ball, disp);
			ball.move();
			ball.bounce();
			ball.paint((Graphics) g);
		});
//        dispatcher.notifyAll(g);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZM_BwsQEeiTNeZmJQOSSg" name="loadStrategy" specification="_aNdpEAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZM_CAsQEeiTNeZmJQOSSg" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZM_CQsQEeiTNeZmJQOSSg" type="_aOfj0AsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>Object[] args =  new Object[]{};
		java.lang.reflect.Constructor&lt;?> cons[];
		try {
			cons = Class.forName(strat).getConstructors();
			return (IUpdateStrategy) cons[0].newInstance(args);
		} catch (Exception e) {
			return IStrategyFac._errorStrategyFac.make();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZNmEAsQEeiTNeZmJQOSSg" name="fixName" specification="_aNeQIAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZNmEQsQEeiTNeZmJQOSSg" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZNmEgsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;model.&quot; + classname.substring(0, 1).toUpperCase() + classname.substring(1).toLowerCase() + &quot;Strategy&quot;;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZNmEwsQEeiTNeZmJQOSSg" name="makeStrategyFac" specification="_aNfeQAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZNmFAsQEeiTNeZmJQOSSg" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZNmFQsQEeiTNeZmJQOSSg" type="_aOarUAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>if (null == classname) {
			return IStrategyFac._errorStrategyFac;
		}
	    return new IStrategyFac() {
	        /**
	         * Instantiate a strategy corresponding to the given class name.
	         * @return An IUpdateStrategy instance
	         */
	        public IUpdateStrategy make() {
	        		return loadStrategy(fixName(classname));
	        }

	        /**
	         * Return the given class name string
	         */
	        public String toString() {
	            return classname;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZNmFgsQEeiTNeZmJQOSSg" name="makeBall" specification="_aVGiIAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZNmFwsQEeiTNeZmJQOSSg" name="make" type="_aOfj0AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZNmGAsQEeiTNeZmJQOSSg" name="paintStrat" type="_aOVLwAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>Container con = adapter.getCanvas();
		Randomizer rzr = Randomizer.Singleton;
		
		int startRad = rzr.randomInt(10, 45);
		Point randLoc = rzr.randomLoc(new Rectangle(con.getWidth() - startRad, con.getHeight() - startRad));
		Point startLoc = new Point(randLoc.x + startRad, randLoc.y + startRad);
		Point startVel = new Point(0, 0);

		// Handles case where both x- and y-components of velocity are 0 to prevent ball from starting stationary.
		while (startVel.x == 0 &amp;&amp; startVel.y == 0) {
			startVel = new Point(rzr.randomInt(-20, 20), rzr.randomInt(-20, 20));
		}
		Color startCol = rzr.randomColor();
		
		Ball loaded = new Ball(startCol, startLoc, startRad, startVel, con, make, paintStrat);
		dispatcher.addObserver(loaded);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZNmGQsQEeiTNeZmJQOSSg" name="combineStrategyFacs" specification="_aVGiIwsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZNmGgsQEeiTNeZmJQOSSg" name="stratFac1" type="_aOarUAsQEeiTNeZmJQOSSg">
            <eAnnotations xmi:id="_aZNmGwsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_aZNmHAsQEeiTNeZmJQOSSg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_aZNmHQsQEeiTNeZmJQOSSg" name="stratFac2" type="_aOarUAsQEeiTNeZmJQOSSg">
            <eAnnotations xmi:id="_aZNmHgsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_aZNmHwsQEeiTNeZmJQOSSg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_aZNmIAsQEeiTNeZmJQOSSg" type="_aOarUAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>if (null == stratFac1 || null == stratFac2) {
	    		return IStrategyFac._errorStrategyFac;
	    	}
	    
	    return new IStrategyFac() {
	        /**
	         * Instantiate a new MultiStrategy with the strategies from the given strategy factories
	         * @return A MultiStrategy instance
	         */
	        public IUpdateStrategy make() {
	            return new MultiStrategy(stratFac1.make(), stratFac2.make());
	        }

	        /**
	         * Return a string that is the toString()'s of the given strategy factories concatenated with a &quot;-&quot;
	         */
	        public String toString() {
	            return stratFac1.toString() + &quot;-&quot; + stratFac2.toString();
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZONIAsQEeiTNeZmJQOSSg" name="setSwitcherStrategy" specification="_aVHwQgsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZONIQsQEeiTNeZmJQOSSg" name="switchFac" type="_aOarUAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>SwitcherStrategy.setStrat(switchFac.make());
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZONIgsQEeiTNeZmJQOSSg" name="getSwitcherFac" specification="_aNh6gAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZONIwsQEeiTNeZmJQOSSg" type="_aOarUAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>return IStrategyFac.switcherStrat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZONJAsQEeiTNeZmJQOSSg" name="makePaintFactory" specification="_aNjvsAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZONJQsQEeiTNeZmJQOSSg" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZONJgsQEeiTNeZmJQOSSg" type="_aOarUAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>return new IStrategyFac() {
	        public IUpdateStrategy make() {
	        		return new StraightStrategy();
	        }
 
	        public String toString() {
	            return text;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return loadPaintStrat(fixPaintName(text));
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZONJwsQEeiTNeZmJQOSSg" name="loadPaintStrat" specification="_aNk90AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZONKAsQEeiTNeZmJQOSSg" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZONKQsQEeiTNeZmJQOSSg" type="_aOVLwAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>if (strat.endsWith(&quot;ImagePaintStrategy&quot;)) {
			int imgInd = strat.indexOf(&quot;ImagePaintStrategy&quot;);
			String nameFile = strat.substring(6, imgInd);
			
			String filename = &quot;images/&quot; + nameFile + &quot;.gif&quot;;
			
			Object[] args =  new Object[]{filename, 1.0};
			java.lang.reflect.Constructor&lt;?> cons[];
			try {
				cons = Class.forName(&quot;model.ImagePaintStrategy&quot;).getConstructors();
				if (cons[0].getParameterCount() == 2) {
					return (IPaintStrategy) cons[0].newInstance(args);
				} else {
					return (IPaintStrategy) cons[1].newInstance(args);
				}
				
			} catch (Exception e) {
				System.out.println(e);
				return IStrategyFac._errorStrategyFac.makePaint();
			}
		} else if (strat.endsWith(&quot;CompositePaintStrategy&quot;)) {
			APaintStrategy[] pstrats = {new ImagePaintStrategy(&quot;images/Mars.gif&quot;, 1.0), new ImagePaintStrategy(&quot;images/Mario.gif&quot;, 1.0)};
			return new UprightCompositePaintStrategy(pstrats);
		} else {
			Object[] args =  new Object[]{};
			java.lang.reflect.Constructor&lt;?> cons[];
			try {
				cons = Class.forName(strat).getConstructors();
				return (IPaintStrategy) cons[0].newInstance(args);
			} catch (Exception e) {
				return IStrategyFac._errorStrategyFac.makePaint();
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZONKgsQEeiTNeZmJQOSSg" name="fixPaintName" specification="_aNlk4AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZONKwsQEeiTNeZmJQOSSg" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZONLAsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String classnameLower = classname.toLowerCase();
		if (classnameLower.endsWith(&quot;image&quot;)) {
			int indImg = classnameLower.indexOf(&quot;image&quot;);
			String imgType = classnameLower.substring(0, indImg);
			return &quot;model.&quot; + imgType.substring(0, 1).toUpperCase() + imgType.substring(1).toLowerCase() + &quot;ImagePaintStrategy&quot;;
		}
		return &quot;model.&quot; + classname.substring(0, 1).toUpperCase() + classname.substring(1).toLowerCase() + &quot;PaintStrategy&quot;;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aNca8AsQEeiTNeZmJQOSSg" name="clearBalls" method="_aZM_AwsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZqSAQsQEeiTNeZmJQOSSg">
            <body>This function clears all the balls from the canvas, by removing them as observers.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_aNdCAAsQEeiTNeZmJQOSSg" name="start" method="_aZM_BAsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZqSAgsQEeiTNeZmJQOSSg">
            <body>This function starts the timer.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_aNdpEAsQEeiTNeZmJQOSSg" name="loadStrategy" method="_aZM_BwsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZqSBAsQEeiTNeZmJQOSSg">
            <body>This function takes an input string and loads the associated IUpdateStrategy,
	 * and returns the error strategy if the strategy isn't available.
	 * @param strat A string of the strategy to be created.
	 * @return The IUpdateStrategy associated with the string, or the error strategy if
	 * there is no associated strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aNdpEQsQEeiTNeZmJQOSSg" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aVF7EAsQEeiTNeZmJQOSSg" type="_aOfj0AsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aNeQIAsQEeiTNeZmJQOSSg" name="fixName" method="_aZNmEAsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZqSBQsQEeiTNeZmJQOSSg">
            <body>This function takes the input and confirms it to the required model.ClassStrategy format for
	 * dynamic class loading.
	 * @param classname The string that should be modified to conform to the model.ClassStrategy format.
	 * @return The class string in a model.ClassStrategy format.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aNeQIQsQEeiTNeZmJQOSSg" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aNe3MAsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_aNfeQAsQEeiTNeZmJQOSSg" name="makeStrategyFac" method="_aZNmEwsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZqSBgsQEeiTNeZmJQOSSg">
            <body>This takes a class name, and creates a strategy factory for it, by loading the strategy and returning it
	 * in the make method.
	 * @param classname The class of strategy to make.
	 * @return An IStrategyFac whose make function calls the associated model.ClassStrategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aNgFUAsQEeiTNeZmJQOSSg" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aVF7EQsQEeiTNeZmJQOSSg" type="_aOarUAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aNh6gAsQEeiTNeZmJQOSSg" name="getSwitcherFac" method="_aZONIgsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZqSCgsQEeiTNeZmJQOSSg">
            <body>This function returns a strategy factory, which makes the current switcher balls' update
	 * strategy
	 * @return An IStrategyFac, which makes the current strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aVIXUAsQEeiTNeZmJQOSSg" type="_aOarUAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aNjvsAsQEeiTNeZmJQOSSg" name="makePaintFactory" method="_aZONJAsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZqSCwsQEeiTNeZmJQOSSg">
            <body>This function returns an IStrategyFac to allow the Paint Strategies to be made later on.
	 * @param text The type of paint strategy.
	 * @return An IStrategyFac</body>
          </ownedComment>
          <ownedParameter xmi:id="_aNjvsQsQEeiTNeZmJQOSSg" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aVIXUQsQEeiTNeZmJQOSSg" type="_aOarUAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aNk90AsQEeiTNeZmJQOSSg" name="loadPaintStrat" method="_aZONJwsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZqSDAsQEeiTNeZmJQOSSg">
            <body>This function loads an instance of an IPaintStrategy, given a classname.
	 * @param strat The type of paint strategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_aNk90QsQEeiTNeZmJQOSSg" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aVIXUgsQEeiTNeZmJQOSSg" type="_aOVLwAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aNlk4AsQEeiTNeZmJQOSSg" name="fixPaintName" method="_aZONKgsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZqSDQsQEeiTNeZmJQOSSg">
            <body>This function &quot;fixes&quot; the type passed in to create an IPaintStrategy.
	 * @param classname The type of paint strategy to create.
	 * @return The fixed paint strategy information as a string.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aNlk4QsQEeiTNeZmJQOSSg" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aNlk4gsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_aVFUAAsQEeiTNeZmJQOSSg" name="BallWorldModel" method="_aZM_AAsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aVFUAgsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aVFUAwsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_aZqSAAsQEeiTNeZmJQOSSg">
            <body>This is the BallWorldModel constructor, which creates a model for the controller to interact with.
	 * @param adapter An IModel2ViewAdapter.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aVFUAQsQEeiTNeZmJQOSSg" name="adapter" type="_aOPFIAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aVFUBAsQEeiTNeZmJQOSSg" type="_aNZ-sAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aVGiIAsQEeiTNeZmJQOSSg" name="makeBall" method="_aZNmFgsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZqSBwsQEeiTNeZmJQOSSg">
            <body>This function randomizes parameters for the ball, and makes a ball with the parameter's update strategy.
	 * @param make The IUpdateStrategy that determines how the ball updates.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aVGiIQsQEeiTNeZmJQOSSg" name="make" type="_aOfj0AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aVGiIgsQEeiTNeZmJQOSSg" name="paintStrat" type="_aOVLwAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aVGiIwsQEeiTNeZmJQOSSg" name="combineStrategyFacs" method="_aZNmGQsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZqSCAsQEeiTNeZmJQOSSg">
            <body>Returns an IStrategyFac that can instantiate a MultiStrategy with the two
	 * strategies made by the two given IStrategyFac objects. Returns null if
	 * either supplied factory is null. The toString() of the returned factory
	 * is the toString()'s of the two given factories, concatenated with &quot;-&quot;. 
	 * If either factory is null, then a factory for a beeping error strategy is returned.
	 * 
	 * @param stratFac1 An IStrategyFac for a strategy
	 * @param stratFac2 An IStrategyFac for a strategy
	 * @return An IStrategyFac for the composition of the two strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_aVHJMAsQEeiTNeZmJQOSSg" name="stratFac1" type="_aOarUAsQEeiTNeZmJQOSSg">
            <eAnnotations xmi:id="_aVHJMwsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_aVHJNAsQEeiTNeZmJQOSSg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_aVHJMQsQEeiTNeZmJQOSSg" name="stratFac2" type="_aOarUAsQEeiTNeZmJQOSSg">
            <eAnnotations xmi:id="_aVHwQAsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_aVHwQQsQEeiTNeZmJQOSSg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_aVHJMgsQEeiTNeZmJQOSSg" type="_aOarUAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aVHwQgsQEeiTNeZmJQOSSg" name="setSwitcherStrategy" method="_aZONIAsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZqSCQsQEeiTNeZmJQOSSg">
            <body>This function sets the switcher balls strategy to the one made by the input.
	 * @param switchFac IStrategyFac which makes the new update strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aVHwQwsQEeiTNeZmJQOSSg" name="switchFac" type="_aOarUAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXKXoAsQEeiTNeZmJQOSSg" name="update" method="_aZM_BQsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZqSAwsQEeiTNeZmJQOSSg">
            <body>This function updates all the balls by notifying them using the dispatcher
	 * and an IBallCmd
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aXKXoQsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aNrrgAsQEeiTNeZmJQOSSg" name="BreathingStrategy">
        <ownedComment xmi:id="_aZqSDgsQEeiTNeZmJQOSSg">
          <body>This class defines a Breathing Strategy, which grows and shrinks the ball's radius.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_aVKMgAsQEeiTNeZmJQOSSg" client="_aNrrgAsQEeiTNeZmJQOSSg" supplier="_aOfj0AsQEeiTNeZmJQOSSg" contract="_aOfj0AsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZO0MAsQEeiTNeZmJQOSSg" name="updateState" specification="_aVKzkAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZO0MQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZO0MgsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getItr() % 5 == 0) {
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aVKzkAsQEeiTNeZmJQOSSg" name="updateState" method="_aZO0MAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aVKzkQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aVKzkgsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aNuHwAsQEeiTNeZmJQOSSg" name="ColorStrategy">
        <ownedComment xmi:id="_aZq5EAsQEeiTNeZmJQOSSg">
          <body>This class defines a Color Strategy, which changes the ball's color.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_aVMBsQsQEeiTNeZmJQOSSg" client="_aNuHwAsQEeiTNeZmJQOSSg" supplier="_aOfj0AsQEeiTNeZmJQOSSg" contract="_aOfj0AsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZO0MwsQEeiTNeZmJQOSSg" name="updateState" specification="_aVMowAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZO0NAsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZO0NQsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (ball.getItr() % 10 == 0) {
						Color newColor = Randomizer.Singleton.randomColor();
						ball.setCol(newColor);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aVMowAsQEeiTNeZmJQOSSg" name="updateState" method="_aZO0MwsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aVMowQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aVMowgsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aN7jIAsQEeiTNeZmJQOSSg" name="CompositePaintStrategy">
        <ownedComment xmi:id="_aZq5EQsQEeiTNeZmJQOSSg">
          <body>This class defines a CompositePaintStrategy, which is a concrete class of MultiPaintStrategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_aVPsEAsQEeiTNeZmJQOSSg" general="_aOuNUAsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZO0NgsQEeiTNeZmJQOSSg" name="CompositePaintStrategy" specification="_aVOd8AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZO0NwsQEeiTNeZmJQOSSg" name="pstrats" type="_aMzhwAsQEeiTNeZmJQOSSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aZO0OAsQEeiTNeZmJQOSSg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZO0OQsQEeiTNeZmJQOSSg" type="_aN7jIAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>super(pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZPbQAsQEeiTNeZmJQOSSg" name="CompositePaintStrategy" specification="_aXMM0AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZPbQQsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZPbQgsQEeiTNeZmJQOSSg" name="pstrats" type="_aMzhwAsQEeiTNeZmJQOSSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aZPbQwsQEeiTNeZmJQOSSg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZPbRAsQEeiTNeZmJQOSSg" type="_aN7jIAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>super(at, pstrats);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aVOd8AsQEeiTNeZmJQOSSg" name="CompositePaintStrategy" method="_aZO0NgsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aVOd8gsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aVOd8wsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aVOd8QsQEeiTNeZmJQOSSg" name="pstrats" type="_aMzhwAsQEeiTNeZmJQOSSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aVPFAAsQEeiTNeZmJQOSSg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aVOd9AsQEeiTNeZmJQOSSg" type="_aN7jIAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXMM0AsQEeiTNeZmJQOSSg" name="CompositePaintStrategy" method="_aZPbQAsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aXMM0wsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aXMM1AsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aXMM0QsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXMM0gsQEeiTNeZmJQOSSg" name="pstrats" type="_aMzhwAsQEeiTNeZmJQOSSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aXMz4AsQEeiTNeZmJQOSSg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXMM1QsQEeiTNeZmJQOSSg" type="_aN7jIAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aN9_YAsQEeiTNeZmJQOSSg" name="CrashStrategy">
        <ownedComment xmi:id="_aZq5EgsQEeiTNeZmJQOSSg">
          <body>This class defines a Crash Strategy which makes the ball
change color when it bounces from the boundaries of the canvas.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_aVQTIAsQEeiTNeZmJQOSSg" client="_aN9_YAsQEeiTNeZmJQOSSg" supplier="_aOfj0AsQEeiTNeZmJQOSSg" contract="_aOfj0AsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZPbRQsQEeiTNeZmJQOSSg" name="updateState" specification="_aVQTIQsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZPbRgsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZPbRwsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					
					if ((ball.getLoc().x + ball.getRad() + 8 >= ball.getCon().getWidth()) ||
							(ball.getLoc().x - ball.getRad() &lt;= 8) ||
							(ball.getLoc().y + ball.getRad() >= ball.getCon().getHeight() - 8) ||
							(ball.getLoc().y - ball.getRad() &lt;= 8)) {
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aVQTIQsQEeiTNeZmJQOSSg" name="updateState" method="_aZPbRQsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aVQ6MAsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aVQ6MQsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aOBCsAsQEeiTNeZmJQOSSg" name="EllipsePaintStrategy">
        <ownedComment xmi:id="_aZq5EwsQEeiTNeZmJQOSSg">
          <body>This class defines a paint strategy to paint an ellipse shape.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_aVSvYAsQEeiTNeZmJQOSSg" general="_aPGAwAsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZPbSAsQEeiTNeZmJQOSSg" name="EllipsePaintStrategy" specification="_aOBpwAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZPbSQsQEeiTNeZmJQOSSg" type="_aOBCsAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 4.0/3.0, 2.0/3.0);
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZPbSgsQEeiTNeZmJQOSSg" name="EllipsePaintStrategy" specification="_aXNa8AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZPbSwsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZPbTAsQEeiTNeZmJQOSSg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZPbTQsQEeiTNeZmJQOSSg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZPbTgsQEeiTNeZmJQOSSg" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZPbTwsQEeiTNeZmJQOSSg" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZPbUAsQEeiTNeZmJQOSSg" type="_aOBCsAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>super(at, EllipseShapeFactory.Singleton.makeShape(x, y, width, height));
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aOBpwAsQEeiTNeZmJQOSSg" name="EllipsePaintStrategy" method="_aZPbSAsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aOBpwQsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aOCQ0AsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aOCQ0QsQEeiTNeZmJQOSSg" type="_aOBCsAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXNa8AsQEeiTNeZmJQOSSg" name="EllipsePaintStrategy" method="_aZPbSgsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aXNa9gsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aXNa9wsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aXNa8QsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXNa8gsQEeiTNeZmJQOSSg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXNa8wsQEeiTNeZmJQOSSg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXNa9AsQEeiTNeZmJQOSSg" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXNa9QsQEeiTNeZmJQOSSg" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXNa-AsQEeiTNeZmJQOSSg" type="_aOBCsAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aOEGAAsQEeiTNeZmJQOSSg" name="EllipseShapeFactory">
        <ownedComment xmi:id="_aZq5FAsQEeiTNeZmJQOSSg">
          <body>This class defines a shape factory to make Ellipses.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_aYLrUAsQEeiTNeZmJQOSSg" name="Singleton" isLeaf="true" isStatic="true" type="_aOEGAAsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aaTyQAsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYLrUQsQEeiTNeZmJQOSSg" value="new EllipseShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_aVWZwQsQEeiTNeZmJQOSSg" client="_aOEGAAsQEeiTNeZmJQOSSg" supplier="_aOXoAAsQEeiTNeZmJQOSSg" contract="_aOXoAAsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZQCUAsQEeiTNeZmJQOSSg" name="makeShape" specification="_aOEtEAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZQCUQsQEeiTNeZmJQOSSg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZQCUgsQEeiTNeZmJQOSSg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZQCUwsQEeiTNeZmJQOSSg" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZQCVAsQEeiTNeZmJQOSSg" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZQCVQsQEeiTNeZmJQOSSg" type="_aVTWcAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>Shape ellipse = new Ellipse2D.Double(x, y, xScale, yScale);
		return ellipse;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aOEtEAsQEeiTNeZmJQOSSg" name="makeShape" method="_aZQCUAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aOFUIAsQEeiTNeZmJQOSSg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aOFUIQsQEeiTNeZmJQOSSg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aOFUIgsQEeiTNeZmJQOSSg" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aOFUIwsQEeiTNeZmJQOSSg" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXOpEAsQEeiTNeZmJQOSSg" type="_aVTWcAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aOKzsAsQEeiTNeZmJQOSSg" name="FastStrategy">
        <ownedComment xmi:id="_aZq5FQsQEeiTNeZmJQOSSg">
          <body>This class defines a Fast Strategy that makes the ball's velocity increase and stop once it reaches
a pre defined max speed.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_aVXn4AsQEeiTNeZmJQOSSg" client="_aOKzsAsQEeiTNeZmJQOSSg" supplier="_aOfj0AsQEeiTNeZmJQOSSg" contract="_aOfj0AsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZQpYAsQEeiTNeZmJQOSSg" name="updateState" specification="_aVXn4QsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZQpYQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZQpYgsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (Math.abs(ball.getVel().x) &lt; 100 &amp;&amp; Math.abs(ball.getVel().y) &lt; 100) {
						if (ball.getItr() % 10 == 0) {
							if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y + 2));
							} else if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y - 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y + 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y - 2));
							}
						}
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aVXn4QsQEeiTNeZmJQOSSg" name="updateState" method="_aZQpYAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aVXn4gsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aVYO8AsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_aONP8AsQEeiTNeZmJQOSSg" name="IBallCmd" isAbstract="true">
        <ownedOperation xmi:id="_aVZdEAsQEeiTNeZmJQOSSg" name="apply" isAbstract="true">
          <ownedParameter xmi:id="_aVZdEQsQEeiTNeZmJQOSSg" name="context" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aVZdEgsQEeiTNeZmJQOSSg" name="disp" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_aOPFIAsQEeiTNeZmJQOSSg" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_aZq5FgsQEeiTNeZmJQOSSg">
          <body>This is an interface which defines the functions that the model wants the view to have/do.
@author sn32, kyl3</body>
        </ownedComment>
        <ownedAttribute xmi:id="_aOQ6UAsQEeiTNeZmJQOSSg" name="canvas" type="_aUbzwAsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aaJaMAsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aOSvgAsQEeiTNeZmJQOSSg" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_aOPFIAsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aaLPYAsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aOTWkAsQEeiTNeZmJQOSSg" value="new IModel2ViewAdapter() {&#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is an update function that we want the view to have.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public void update() {&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9; &#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is a function that gets the canvas from the view.&#xA;&#x9;&#x9;  * @return A container that is initially null.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public Container getCanvas() {&#xA;&#x9;&#x9;&#x9; return null;&#xA;&#x9;&#x9; }&#xA;&#x9; }"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_aOPsMAsQEeiTNeZmJQOSSg" name="update">
          <ownedComment xmi:id="_aZq5FwsQEeiTNeZmJQOSSg">
            <body>This is an update function that we want the view to have.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_aOVLwAsQEeiTNeZmJQOSSg" name="IPaintStrategy">
        <ownedComment xmi:id="_aZq5GAsQEeiTNeZmJQOSSg">
          <body>This is an interface for an IPaintStrategy that defines the methods we want it to have.
@author sn32, ll45</body>
        </ownedComment>
        <ownedOperation xmi:id="_aVarMAsQEeiTNeZmJQOSSg" name="init">
          <ownedParameter xmi:id="_aVbSQAsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXPQIAsQEeiTNeZmJQOSSg" name="paint">
          <ownedParameter xmi:id="_aXPQIQsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXPQIgsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_aOXoAAsQEeiTNeZmJQOSSg" name="IShapeFactory">
        <ownedComment xmi:id="_aZq5GQsQEeiTNeZmJQOSSg">
          <body>This interface defines the methods we want a shape factory to have.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_aOY2IAsQEeiTNeZmJQOSSg" name="makeShape">
          <ownedParameter xmi:id="_aOY2IQsQEeiTNeZmJQOSSg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aOY2IgsQEeiTNeZmJQOSSg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aOZdMAsQEeiTNeZmJQOSSg" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aOZdMQsQEeiTNeZmJQOSSg" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXP3MAsQEeiTNeZmJQOSSg" type="_aVTWcAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_aOarUAsQEeiTNeZmJQOSSg" name="IStrategyFac">
        <ownedComment xmi:id="_aZq5GgsQEeiTNeZmJQOSSg">
          <body>This interface defines the functions we want IStrategyFac to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_aOcggAsQEeiTNeZmJQOSSg" name="_errorStrategyFac" visibility="package" type="_aOarUAsQEeiTNeZmJQOSSg" association="_aaMdgQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aOcggQsQEeiTNeZmJQOSSg" value="new IStrategyFac(){&#xA;        /**&#xA;         * Make the beeping error strategy&#xA;         * @return  An instance of a beeping error strategy&#xA;         */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;            return new IUpdateStrategy() {&#xA;                private int count = 0; // update counter&#xA;                &#xA;                /**&#xA;                 * Beep the speaker every 25 updates&#xA;                 */&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void updateState(Ball ball, Dispatcher dispatcher) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(25 &lt; count++){&#xA;                        java.awt.Toolkit.getDefaultToolkit().beep(); &#xA;                        count = 0;&#xA;                    }&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;            };&#xA;        }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;}&#xA;    }"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aOduoAsQEeiTNeZmJQOSSg" name="switcherStrat" type="_aOarUAsQEeiTNeZmJQOSSg" association="_aaNEkQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aOduoQsQEeiTNeZmJQOSSg" value="new IStrategyFac() {&#xA;    &#x9;&#x9;/**&#xA;    &#x9;&#x9; * This function makes the switcher strategy.&#xA;    &#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;&#x9;&#x9;&#x9;return new SwitcherStrategy();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_aObSYAsQEeiTNeZmJQOSSg" name="make">
          <ownedComment xmi:id="_aZq5GwsQEeiTNeZmJQOSSg">
            <body>This function allows IStrategyFac to make an IUpdateStrategy.
	 * @return An IUpdateStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_aVcgYAsQEeiTNeZmJQOSSg" type="_aOfj0AsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aOb5cAsQEeiTNeZmJQOSSg" name="makePaint">
          <ownedComment xmi:id="_aZq5HAsQEeiTNeZmJQOSSg">
            <body>This function allows IStrategyFac to make an IPaintStrategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_aVcgYQsQEeiTNeZmJQOSSg" type="_aOVLwAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_aOfj0AsQEeiTNeZmJQOSSg" name="IUpdateStrategy">
        <ownedComment xmi:id="_aZrgIAsQEeiTNeZmJQOSSg">
          <body>This interface defines the functions we want IUpdateStrategies to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedOperation xmi:id="_aVdHcAsQEeiTNeZmJQOSSg" name="updateState">
          <ownedParameter xmi:id="_aVdHcQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aVdHcgsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aOhZAAsQEeiTNeZmJQOSSg" name="ImagePaintStrategy">
        <ownedComment xmi:id="_aZrgIQsQEeiTNeZmJQOSSg">
          <body>This class defines a paint strategy for an image that extends APaintStrategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_aVlqUAsQEeiTNeZmJQOSSg" general="_aMzhwAsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aYMSYAsQEeiTNeZmJQOSSg" name="scaleFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYMSYQsQEeiTNeZmJQOSSg" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYM5cQsQEeiTNeZmJQOSSg" name="fillFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYM5cgsQEeiTNeZmJQOSSg" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYNggQsQEeiTNeZmJQOSSg" name="localAT" visibility="private" type="_aUgsQAsQEeiTNeZmJQOSSg" association="_aaTyQwsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYNgggsQEeiTNeZmJQOSSg" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYOHkQsQEeiTNeZmJQOSSg" name="tempAT" type="_aUgsQAsQEeiTNeZmJQOSSg" association="_aaUZUQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYOHkgsQEeiTNeZmJQOSSg" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYOHkwsQEeiTNeZmJQOSSg" name="filename" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYOuoAsQEeiTNeZmJQOSSg" name="image" visibility="private" type="_aVgKwAsQEeiTNeZmJQOSSg" association="_aaVAYQsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aYPVsAsQEeiTNeZmJQOSSg" name="imageObs" visibility="private" type="_aUbzwAsQEeiTNeZmJQOSSg" association="_aaVncQsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZRQcAsQEeiTNeZmJQOSSg" name="ImagePaintStrategy" specification="_aOj1QAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZRQcQsQEeiTNeZmJQOSSg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZRQcgsQEeiTNeZmJQOSSg" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZRQcwsQEeiTNeZmJQOSSg" type="_aOhZAAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>super (new AffineTransform());
		this.fillFactor = fillFactor;
		this.setFilename(filename);
				
		try {
			image =  Toolkit.getDefaultToolkit().getImage(filename);	
			
		} catch (Exception e) {
			System.out.println(&quot;failed&quot;);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZRQdAsQEeiTNeZmJQOSSg" name="ImagePaintStrategy" specification="_aXRFUAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZRQdQsQEeiTNeZmJQOSSg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZRQdgsQEeiTNeZmJQOSSg" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZRQdwsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZRQeAsQEeiTNeZmJQOSSg" type="_aOhZAAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.fillFactor = fillFactor;
		this.setFilename(filename);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZR3gAsQEeiTNeZmJQOSSg" name="init" specification="_aVkcMAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZR3gQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>imageObs = ball.getCon();
		MediaTracker mt = new MediaTracker(ball.getCon());
		mt.addImage(image, 1);
		try {
			mt.waitForAll();
		} catch(Exception e){
			System.out.println(&quot;ImagePaintStrategy.init(): Error waiting for image.  Exception = &quot;+e);
		}
		scaleFactor = 2.0/(fillFactor*(image.getWidth(imageObs)+image.getHeight(imageObs))/2.0); // this line is described below
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZR3ggsQEeiTNeZmJQOSSg" name="paintXfrm" specification="_aXRsYAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZR3gwsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZR3hAsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZR3hQsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>localAT.setToScale(scaleFactor, scaleFactor);
		localAT.translate(-image.getWidth(imageObs)/2.0, -image.getHeight(imageObs)/2.0);
		localAT.preConcatenate(at);
		((Graphics2D)g).drawImage(image, localAT, imageObs); 
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZR3hgsQEeiTNeZmJQOSSg" name="setFilename" specification="_aOm4kAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZR3hwsQEeiTNeZmJQOSSg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.filename = filename;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aOj1QAsQEeiTNeZmJQOSSg" name="ImagePaintStrategy" method="_aZRQcAsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aOkcUgsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aOkcUwsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_aZrgIgsQEeiTNeZmJQOSSg">
            <body>This is a constructor for the Image Paint Strategy that doesn't take an Affine Transform.
	 * @param filename String that is the path to the image file to load
	 * @param fillFactor A double that is the fill factor</body>
          </ownedComment>
          <ownedParameter xmi:id="_aOkcUAsQEeiTNeZmJQOSSg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aOkcUQsQEeiTNeZmJQOSSg" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aOkcVAsQEeiTNeZmJQOSSg" type="_aOhZAAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aOm4kAsQEeiTNeZmJQOSSg" name="setFilename" method="_aZR3hgsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZrgJQsQEeiTNeZmJQOSSg">
            <body>This function sets the filename.
	 * @param filename the filename to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_aOm4kQsQEeiTNeZmJQOSSg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_aVkcMAsQEeiTNeZmJQOSSg" name="init" method="_aZR3gAsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZrgJAsQEeiTNeZmJQOSSg">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aVlDQAsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXRFUAsQEeiTNeZmJQOSSg" name="ImagePaintStrategy" method="_aZRQdAsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aXRFVAsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aXRFVQsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_aZrgIwsQEeiTNeZmJQOSSg">
            <body>This is a constructor for Image Paint Strategy that takes an Affine Transform.
	 * @param filename String that is the path to the image file to load.
	 * @param fillFactor A double that is the fill factor
	 * @param at An Affine Transform.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aXRFUQsQEeiTNeZmJQOSSg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXRFUgsQEeiTNeZmJQOSSg" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXRFUwsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXRFVgsQEeiTNeZmJQOSSg" type="_aOhZAAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXRsYAsQEeiTNeZmJQOSSg" name="paintXfrm" method="_aZR3ggsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aXRsYQsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXRsYgsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXRsYwsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aOuNUAsQEeiTNeZmJQOSSg" name="MultiPaintStrategy">
        <ownedComment xmi:id="_aZrgJgsQEeiTNeZmJQOSSg">
          <body>This class defines a multi paint strategy which is the composition of other paint strategies.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_aVqi0AsQEeiTNeZmJQOSSg" general="_aMzhwAsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aYP8wAsQEeiTNeZmJQOSSg" name="pstrats" visibility="private" type="_aMzhwAsQEeiTNeZmJQOSSg" association="_aaWOgAsQEeiTNeZmJQOSSg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aYP8wQsQEeiTNeZmJQOSSg" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZSekAsQEeiTNeZmJQOSSg" name="MultiPaintStrategy" specification="_aVotoAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZSekQsQEeiTNeZmJQOSSg" name="pstrats" type="_aMzhwAsQEeiTNeZmJQOSSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aZSekgsQEeiTNeZmJQOSSg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZSekwsQEeiTNeZmJQOSSg" type="_aOuNUAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>super(new AffineTransform());&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZTFoAsQEeiTNeZmJQOSSg" name="MultiPaintStrategy" specification="_aXUIoAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZTFoQsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZTFogsQEeiTNeZmJQOSSg" name="pstrats" type="_aMzhwAsQEeiTNeZmJQOSSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aZTFowsQEeiTNeZmJQOSSg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZTFpAsQEeiTNeZmJQOSSg" type="_aOuNUAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>super(at);&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZTFpQsQEeiTNeZmJQOSSg" name="init" specification="_aVp7wAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZTFpgsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
		    strategy.init(ball);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZTFpwsQEeiTNeZmJQOSSg" name="paintXfrm" specification="_aXV90AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZTFqAsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZTFqQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZTFqgsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
			strategy.paintXfrm(g, ball, at);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aVotoAsQEeiTNeZmJQOSSg" name="MultiPaintStrategy" method="_aZSekAsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aVotogsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aVotowsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_aZrgJwsQEeiTNeZmJQOSSg">
            <body>This is a constructor that doesn't take in an affine transform.&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_aVotoQsQEeiTNeZmJQOSSg" name="pstrats" type="_aMzhwAsQEeiTNeZmJQOSSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aVpUsAsQEeiTNeZmJQOSSg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aVotpAsQEeiTNeZmJQOSSg" type="_aOuNUAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aVp7wAsQEeiTNeZmJQOSSg" name="init" method="_aZTFpQsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZrgKQsQEeiTNeZmJQOSSg">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aVp7wQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXUIoAsQEeiTNeZmJQOSSg" name="MultiPaintStrategy" method="_aZTFoAsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aXUIowsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aXUvsAsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_aZrgKAsQEeiTNeZmJQOSSg">
            <body>This is a constructor that does take in an affine transform.&#xD;
	 * @param at An affine transform&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_aXUIoQsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXUIogsQEeiTNeZmJQOSSg" name="pstrats" type="_aMzhwAsQEeiTNeZmJQOSSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aXVWwAsQEeiTNeZmJQOSSg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXUvsQsQEeiTNeZmJQOSSg" type="_aOuNUAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXV90AsQEeiTNeZmJQOSSg" name="paintXfrm" method="_aZTFpwsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aXWk4AsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXWk4QsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXWk4gsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aOzs4AsQEeiTNeZmJQOSSg" name="MultiStrategy">
        <ownedComment xmi:id="_aZrgKgsQEeiTNeZmJQOSSg">
          <body>This class defines a Multi Strategy which defines a movement strategy for a ball
is a combination of 2 other strategies.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_aYQj0QsQEeiTNeZmJQOSSg" name="s1" visibility="private" type="_aOfj0AsQEeiTNeZmJQOSSg" association="_aaW1kQsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aZrgKwsQEeiTNeZmJQOSSg" name="s2" visibility="private" type="_aOfj0AsQEeiTNeZmJQOSSg" association="_aarlsAsQEeiTNeZmJQOSSg"/>
        <interfaceRealization xmi:id="_aVrw8AsQEeiTNeZmJQOSSg" client="_aOzs4AsQEeiTNeZmJQOSSg" supplier="_aOfj0AsQEeiTNeZmJQOSSg" contract="_aOfj0AsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZTssAsQEeiTNeZmJQOSSg" name="MultiStrategy" specification="_aVs_EAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZTssQsQEeiTNeZmJQOSSg" name="s1" type="_aOfj0AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZTssgsQEeiTNeZmJQOSSg" name="s2" type="_aOfj0AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZTsswsQEeiTNeZmJQOSSg" type="_aOzs4AsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>this.s1 = s1;
		this.s2 = s2;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZUTwAsQEeiTNeZmJQOSSg" name="updateState" specification="_aVtmIQsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZUTwQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZUTwgsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					s1.updateState(ball, disp);
					s2.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aVs_EAsQEeiTNeZmJQOSSg" name="MultiStrategy" method="_aZTssAsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aVs_EwsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aVs_FAsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aVs_EQsQEeiTNeZmJQOSSg" name="s1" type="_aOfj0AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aVs_EgsQEeiTNeZmJQOSSg" name="s2" type="_aOfj0AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aVtmIAsQEeiTNeZmJQOSSg" type="_aOzs4AsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aVtmIQsQEeiTNeZmJQOSSg" name="updateState" method="_aZUTwAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aVuNMAsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aVuNMQsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aO2JIAsQEeiTNeZmJQOSSg" name="PolygonFactory">
        <ownedComment xmi:id="_aZsuQAsQEeiTNeZmJQOSSg">
          <body>This class defines a polygon factory, which makes polygons.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_aYTAEAsQEeiTNeZmJQOSSg" name="poly" visibility="package" type="_aVwpcAsQEeiTNeZmJQOSSg" association="_aaXcoQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYTAEQsQEeiTNeZmJQOSSg" value="new Polygon()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYUOMQsQEeiTNeZmJQOSSg" name="at" visibility="package" type="_aUgsQAsQEeiTNeZmJQOSSg" association="_aaYqwAsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aYU1QQsQEeiTNeZmJQOSSg" name="scaleFactor" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYU1QgsQEeiTNeZmJQOSSg" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYVcUQsQEeiTNeZmJQOSSg" name="pts" visibility="package" type="_aU0OQQsQEeiTNeZmJQOSSg" association="_aaZR0AsQEeiTNeZmJQOSSg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aYVcUgsQEeiTNeZmJQOSSg" value="*"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_aVyeoQsQEeiTNeZmJQOSSg" client="_aO2JIAsQEeiTNeZmJQOSSg" supplier="_aOXoAAsQEeiTNeZmJQOSSg" contract="_aOXoAAsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZU60AsQEeiTNeZmJQOSSg" name="PolygonFactory" specification="_aXZBIAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZU60QsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZU60gsQEeiTNeZmJQOSSg" name="scaleFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZU60wsQEeiTNeZmJQOSSg" name="pts" type="_aU0OQQsQEeiTNeZmJQOSSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aZU61AsQEeiTNeZmJQOSSg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZU61QsQEeiTNeZmJQOSSg" type="_aO2JIAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>this.at = at;
		this.scaleFactor = scaleFactor;
		this.pts = pts;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZVh4AsQEeiTNeZmJQOSSg" name="makeShape" specification="_aO3-UAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZVh4QsQEeiTNeZmJQOSSg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZVh4gsQEeiTNeZmJQOSSg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZVh4wsQEeiTNeZmJQOSSg" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZVh5AsQEeiTNeZmJQOSSg" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZVh5QsQEeiTNeZmJQOSSg" type="_aVTWcAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>at.setToTranslation(x, y);
		at.scale(xScale*scaleFactor, yScale*scaleFactor);  // optional rotation can be added as well
		return at.createTransformedShape(poly);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aO3-UAsQEeiTNeZmJQOSSg" name="makeShape" method="_aZVh4AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aO3-UQsQEeiTNeZmJQOSSg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aO3-UgsQEeiTNeZmJQOSSg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aO3-UwsQEeiTNeZmJQOSSg" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aO3-VAsQEeiTNeZmJQOSSg" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXZoMQsQEeiTNeZmJQOSSg" type="_aVTWcAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXZBIAsQEeiTNeZmJQOSSg" name="PolygonFactory" method="_aZU60AsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aXZBJAsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aXZBJQsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aXZBIQsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXZBIgsQEeiTNeZmJQOSSg" name="scaleFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXZBIwsQEeiTNeZmJQOSSg" name="pts" type="_aU0OQQsQEeiTNeZmJQOSSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aXZoMAsQEeiTNeZmJQOSSg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXZBJgsQEeiTNeZmJQOSSg" type="_aO2JIAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aO820AsQEeiTNeZmJQOSSg" name="RectanglePaintStrategy">
        <ownedComment xmi:id="_aZsuQQsQEeiTNeZmJQOSSg">
          <body>This class defines a Rectangle Paint Strategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_aV3-MAsQEeiTNeZmJQOSSg" general="_aPGAwAsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZVh5gsQEeiTNeZmJQOSSg" name="RectanglePaintStrategy" specification="_aO9d4AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZVh5wsQEeiTNeZmJQOSSg" type="_aO820AsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 3.0, 1.0);
	  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZWI8AsQEeiTNeZmJQOSSg" name="RectanglePaintStrategy" specification="_aXaPQAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZWI8QsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZWI8gsQEeiTNeZmJQOSSg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZWI8wsQEeiTNeZmJQOSSg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZWI9AsQEeiTNeZmJQOSSg" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZWI9QsQEeiTNeZmJQOSSg" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZWI9gsQEeiTNeZmJQOSSg" type="_aO820AsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>super(at, RectangleShapeFactory.Singleton.makeShape(x,y,width,height));
	  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aO9d4AsQEeiTNeZmJQOSSg" name="RectanglePaintStrategy" method="_aZVh5gsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aO-E8AsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aO-E8QsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aO-E8gsQEeiTNeZmJQOSSg" type="_aO820AsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXaPQAsQEeiTNeZmJQOSSg" name="RectanglePaintStrategy" method="_aZWI8AsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aXaPRgsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aXaPRwsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aXaPQQsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXaPQgsQEeiTNeZmJQOSSg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXaPQwsQEeiTNeZmJQOSSg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXaPRAsQEeiTNeZmJQOSSg" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXaPRQsQEeiTNeZmJQOSSg" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXa2UAsQEeiTNeZmJQOSSg" type="_aO820AsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aO_6IAsQEeiTNeZmJQOSSg" name="RectangleShapeFactory">
        <ownedComment xmi:id="_aZsuQgsQEeiTNeZmJQOSSg">
          <body>This class defines a factory that makes rectangles.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_aYX4kAsQEeiTNeZmJQOSSg" name="Singleton" isLeaf="true" isStatic="true" type="_aO_6IAsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aaZ44QsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYX4kQsQEeiTNeZmJQOSSg" value="new RectangleShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_aV4lQAsQEeiTNeZmJQOSSg" client="_aO_6IAsQEeiTNeZmJQOSSg" supplier="_aOXoAAsQEeiTNeZmJQOSSg" contract="_aOXoAAsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZWI9wsQEeiTNeZmJQOSSg" name="makeShape" specification="_aPBIQAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZWI-AsQEeiTNeZmJQOSSg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZWI-QsQEeiTNeZmJQOSSg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZWI-gsQEeiTNeZmJQOSSg" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZWI-wsQEeiTNeZmJQOSSg" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZWI_AsQEeiTNeZmJQOSSg" type="_aVTWcAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>Shape rec = new Rectangle((int) (x), (int) (y), (int) (xScale), (int) (yScale));
		return rec;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aPBIQAsQEeiTNeZmJQOSSg" name="makeShape" method="_aZWI9wsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aPBIQQsQEeiTNeZmJQOSSg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aPBvUAsQEeiTNeZmJQOSSg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aPBvUQsQEeiTNeZmJQOSSg" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aPCWYAsQEeiTNeZmJQOSSg" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXa2UQsQEeiTNeZmJQOSSg" type="_aVTWcAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aPGAwAsQEeiTNeZmJQOSSg" name="ShapePaintStrategy">
        <ownedComment xmi:id="_aZtVUAsQEeiTNeZmJQOSSg">
          <body>This class defines a shape paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_aV6acAsQEeiTNeZmJQOSSg" general="_aMzhwAsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aYYfoAsQEeiTNeZmJQOSSg" name="shape" visibility="package" type="_aVTWcAsQEeiTNeZmJQOSSg" association="_aaaf8QsQEeiTNeZmJQOSSg"/>
        <interfaceRealization xmi:id="_aV5zYAsQEeiTNeZmJQOSSg" client="_aPGAwAsQEeiTNeZmJQOSSg" supplier="_aOXoAAsQEeiTNeZmJQOSSg" contract="_aOXoAAsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZWwAAsQEeiTNeZmJQOSSg" name="ShapePaintStrategy" specification="_aXbdYAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZWwAQsQEeiTNeZmJQOSSg" name="shape" type="_aVTWcAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZWwAgsQEeiTNeZmJQOSSg" type="_aPGAwAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZWwAwsQEeiTNeZmJQOSSg" name="ShapePaintStrategy" specification="_aXcEcAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZWwBAsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZWwBQsQEeiTNeZmJQOSSg" name="shape" type="_aVTWcAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZWwBgsQEeiTNeZmJQOSSg" type="_aPGAwAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZXXEAsQEeiTNeZmJQOSSg" name="paintXfrm" specification="_aXcrgAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZXXEQsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZXXEgsQEeiTNeZmJQOSSg" name="host" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZXXEwsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>((Graphics2D) g).fill(at.createTransformedShape(shape));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZXXFAsQEeiTNeZmJQOSSg" name="makeShape" specification="_aPHO4AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZXXFQsQEeiTNeZmJQOSSg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZXXFgsQEeiTNeZmJQOSSg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZXXFwsQEeiTNeZmJQOSSg" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZXXGAsQEeiTNeZmJQOSSg" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZXXGQsQEeiTNeZmJQOSSg" type="_aVTWcAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>at.setToTranslation(x, y);
		at.scale(x * xScale, y * yScale);  // optional rotation can be added as well
		return at.createTransformedShape(shape);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aPHO4AsQEeiTNeZmJQOSSg" name="makeShape" method="_aZXXFAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aPH18AsQEeiTNeZmJQOSSg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aPH18QsQEeiTNeZmJQOSSg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aPH18gsQEeiTNeZmJQOSSg" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aPH18wsQEeiTNeZmJQOSSg" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXdSkAsQEeiTNeZmJQOSSg" type="_aVTWcAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXbdYAsQEeiTNeZmJQOSSg" name="ShapePaintStrategy" method="_aZWwAAsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aXbdYgsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aXbdYwsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aXbdYQsQEeiTNeZmJQOSSg" name="shape" type="_aVTWcAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXbdZAsQEeiTNeZmJQOSSg" type="_aPGAwAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXcEcAsQEeiTNeZmJQOSSg" name="ShapePaintStrategy" method="_aZWwAwsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aXcEcwsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aXcEdAsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aXcEcQsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXcEcgsQEeiTNeZmJQOSSg" name="shape" type="_aVTWcAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXcEdQsQEeiTNeZmJQOSSg" type="_aPGAwAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXcrgAsQEeiTNeZmJQOSSg" name="paintXfrm" method="_aZXXEAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aXcrgQsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXcrggsQEeiTNeZmJQOSSg" name="host" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXcrgwsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aPNVgAsQEeiTNeZmJQOSSg" name="SpawnStrategy">
        <ownedComment xmi:id="_aZtVUQsQEeiTNeZmJQOSSg">
          <body>This class defines a spawn strategy that interacts with other balls.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_aYZGsQsQEeiTNeZmJQOSSg" name="count" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYZGsgsQEeiTNeZmJQOSSg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYZtwQsQEeiTNeZmJQOSSg" name="delay" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYZtwgsQEeiTNeZmJQOSSg" value="100"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_aV8PoAsQEeiTNeZmJQOSSg" client="_aPNVgAsQEeiTNeZmJQOSSg" supplier="_aOfj0AsQEeiTNeZmJQOSSg" contract="_aOfj0AsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZX-IAsQEeiTNeZmJQOSSg" name="updateState" specification="_aV82sAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZX-IQsQEeiTNeZmJQOSSg" name="context" type="_aM-g4AsQEeiTNeZmJQOSSg">
            <eAnnotations xmi:id="_aZX-IgsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_aZX-IwsQEeiTNeZmJQOSSg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_aZX-JAsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>if (delay &lt; count++) {
			dispatcher.notifyAll(new IBallCmd() {
				/**
				 * This function applies this command to the correct ball using a dispatcher.
				 */
				@Override
				public void apply(Ball other, Dispatcher disp) {
					if (count != 0 &amp;&amp; context != other) {
						if ((context.getRad() + other.getRad()) > 
						    context.getLoc().distance(other.getLoc())) {
							disp.addObserver(new Ball(
									context.getCol(),
									new Point(context.getLoc()), 
									context.getRad(),
									new Point(-context.getVel().x+1,-context.getVel().y+1), 
									context.getCon(), 
									new SpawnStrategy(), 
									context.getPaintStrat()));
							count = 0;
							delay *= 5;
						}
					}
				}
			});
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aV82sAsQEeiTNeZmJQOSSg" name="updateState" method="_aZX-IAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aV82sQsQEeiTNeZmJQOSSg" name="context" type="_aM-g4AsQEeiTNeZmJQOSSg">
            <eAnnotations xmi:id="_aV-E0AsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_aV-E0QsQEeiTNeZmJQOSSg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_aV82sgsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aPPKsAsQEeiTNeZmJQOSSg" name="SquarePaintStrategy">
        <ownedComment xmi:id="_aZt8YAsQEeiTNeZmJQOSSg">
          <body>This is the square paint strategy that paints a square.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_aV-r4AsQEeiTNeZmJQOSSg" client="_aPPKsAsQEeiTNeZmJQOSSg" supplier="_aOVLwAsQEeiTNeZmJQOSSg" contract="_aOVLwAsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZYlMAsQEeiTNeZmJQOSSg" name="paint" specification="_aXd5oAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZYlMQsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZYlMgsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>int halfSide = ball.getRad();
		g.setColor(ball.getCol());
		g.fillRect(ball.getLoc().x - halfSide, ball.getLoc().y - halfSide, 2 * halfSide, 2 * halfSide);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aV_S8AsQEeiTNeZmJQOSSg" name="init">
          <ownedParameter xmi:id="_aV_S8QsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXd5oAsQEeiTNeZmJQOSSg" name="paint" method="_aZYlMAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aXd5oQsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXd5ogsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aPQ_4AsQEeiTNeZmJQOSSg" name="StraightStrategy">
        <ownedComment xmi:id="_aZt8YQsQEeiTNeZmJQOSSg">
          <body>This class defines a Straight Strategy which defines a movement strategy for a ball that just
moves by changing it's location by its velocity components.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_aWAhEAsQEeiTNeZmJQOSSg" client="_aPQ_4AsQEeiTNeZmJQOSSg" supplier="_aOfj0AsQEeiTNeZmJQOSSg" contract="_aOfj0AsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZYlMwsQEeiTNeZmJQOSSg" name="updateState" specification="_aWBIIAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZYlNAsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZYlNQsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aWBIIAsQEeiTNeZmJQOSSg" name="updateState" method="_aZYlMwsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aWBIIQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aWBIIgsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aPTcIAsQEeiTNeZmJQOSSg" name="SwellStrategy">
        <ownedComment xmi:id="_aZt8YgsQEeiTNeZmJQOSSg">
          <body>This class defines a Swell Strategy which defines a movement strategy for a ball that grows it
in size, and once it reaches a certain size, it changes colors, and then shrinks slowly and repeats.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_aWCWQgsQEeiTNeZmJQOSSg" client="_aPTcIAsQEeiTNeZmJQOSSg" supplier="_aOfj0AsQEeiTNeZmJQOSSg" contract="_aOfj0AsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZZMQAsQEeiTNeZmJQOSSg" name="updateState" specification="_aWC9UAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZZMQQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZZMQgsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getRad() >= 80) {
						ball.setRadDelta(1);
						ball.setRadDelta(ball.getRadDelta() * -1);
						ball.setCol(rzr.randomColor());
					} else if (ball.getRad() &lt;= 20) {
						ball.setRadDelta(-5);
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aWC9UAsQEeiTNeZmJQOSSg" name="updateState" method="_aZZMQAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aWC9UQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aWC9UgsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aPVRUAsQEeiTNeZmJQOSSg" name="SwitcherStrategy">
        <ownedComment xmi:id="_aZt8YwsQEeiTNeZmJQOSSg">
          <body>This class defines a Switcher Strategy which defines a strategy for a ball that can
change by updating the strategy.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_aYaU0AsQEeiTNeZmJQOSSg" name="strategy" visibility="private" isStatic="true" type="_aOfj0AsQEeiTNeZmJQOSSg" association="_aabHAQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYaU0QsQEeiTNeZmJQOSSg" value="new StraightStrategy()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_aWELcAsQEeiTNeZmJQOSSg" client="_aPVRUAsQEeiTNeZmJQOSSg" supplier="_aOfj0AsQEeiTNeZmJQOSSg" contract="_aOfj0AsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZZzUAsQEeiTNeZmJQOSSg" name="updateState" specification="_aWEygAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZZzUQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZZzUgsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					strategy.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZZzUwsQEeiTNeZmJQOSSg" name="setStrat" specification="_aWGAoAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZZzVAsQEeiTNeZmJQOSSg" name="strat" type="_aOfj0AsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>SwitcherStrategy.strategy = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZZzVQsQEeiTNeZmJQOSSg" name="getStrat" specification="_aPWfcAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZZzVgsQEeiTNeZmJQOSSg" type="_aOfj0AsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>return SwitcherStrategy.strategy;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aPWfcAsQEeiTNeZmJQOSSg" name="getStrat" isStatic="true" method="_aZZzVQsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZt8ZQsQEeiTNeZmJQOSSg">
            <body>This function returns the current strategy of the switcher balls.
	 * @return An IUpdateStrategy which is the current strategy of the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aWGAogsQEeiTNeZmJQOSSg" type="_aOfj0AsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aWEygAsQEeiTNeZmJQOSSg" name="updateState" method="_aZZzUAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aWEygQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aWEyggsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aWGAoAsQEeiTNeZmJQOSSg" name="setStrat" isStatic="true" method="_aZZzUwsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZt8ZAsQEeiTNeZmJQOSSg">
            <body>This function changes the strategy of all switcher balls to that of the parameter.
	 * @param strat An IUpdateStrategy which is the new strategy for all the balls to use</body>
          </ownedComment>
          <ownedParameter xmi:id="_aWGAoQsQEeiTNeZmJQOSSg" name="strat" type="_aOfj0AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aPY7sAsQEeiTNeZmJQOSSg" name="TeleportStrategy">
        <ownedComment xmi:id="_aZt8ZgsQEeiTNeZmJQOSSg">
          <body>This class defines a Teleport Strategy which defines a movement strategy for a ball that randomly
changes the location of it, so it teleports.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_aWGnsAsQEeiTNeZmJQOSSg" client="_aPY7sAsQEeiTNeZmJQOSSg" supplier="_aOfj0AsQEeiTNeZmJQOSSg" contract="_aOfj0AsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZaaYAsQEeiTNeZmJQOSSg" name="updateState" specification="_aWHOwAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZaaYQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZaaYgsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % 80 == 0) {
						ball.setLoc(rzr.randomLoc(new Rectangle(ball.getCon().getWidth() - ball.getRad(), ball.getCon().getHeight() - ball.getRad())));
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aWHOwAsQEeiTNeZmJQOSSg" name="updateState" method="_aZaaYAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aWHOwQsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aWHOwgsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aPbX8AsQEeiTNeZmJQOSSg" name="UprightCompositePaintStrategy">
        <ownedComment xmi:id="_aZt8ZwsQEeiTNeZmJQOSSg">
          <body>This classd defines an upright composite paint strategy.
@author sn32, ll45
 *</body>
        </ownedComment>
        <generalization xmi:id="_aWKSEAsQEeiTNeZmJQOSSg" general="_aN7jIAsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZaaYwsQEeiTNeZmJQOSSg" name="UprightCompositePaintStrategy" specification="_aWJD8AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZaaZAsQEeiTNeZmJQOSSg" name="pstrats" type="_aMzhwAsQEeiTNeZmJQOSSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aZaaZQsQEeiTNeZmJQOSSg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZaaZgsQEeiTNeZmJQOSSg" type="_aPbX8AsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>super(pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZbBcAsQEeiTNeZmJQOSSg" name="UprightCompositePaintStrategy" specification="_aXfu0AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZbBcQsQEeiTNeZmJQOSSg" name="pstrats" type="_aMzhwAsQEeiTNeZmJQOSSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aZbBcgsQEeiTNeZmJQOSSg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZbBcwsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZbBdAsQEeiTNeZmJQOSSg" type="_aPbX8AsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>super(at, pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZbBdQsQEeiTNeZmJQOSSg" name="paintCfg" specification="_aXgV4AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZbBdgsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZbBdwsQEeiTNeZmJQOSSg" name="host" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>super.paintCfg(g, host);
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {
			at.scale(1.0, -1.0);
		}        
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aWJD8AsQEeiTNeZmJQOSSg" name="UprightCompositePaintStrategy" method="_aZaaYwsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aWJD8gsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aWJD8wsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aWJD8QsQEeiTNeZmJQOSSg" name="pstrats" type="_aMzhwAsQEeiTNeZmJQOSSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aWJrAAsQEeiTNeZmJQOSSg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aWJD9AsQEeiTNeZmJQOSSg" type="_aPbX8AsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXfu0AsQEeiTNeZmJQOSSg" name="UprightCompositePaintStrategy" method="_aZbBcAsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aXfu0wsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aXfu1AsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aXfu0QsQEeiTNeZmJQOSSg" name="pstrats" type="_aMzhwAsQEeiTNeZmJQOSSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aXfu1gsQEeiTNeZmJQOSSg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXfu0gsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXfu1QsQEeiTNeZmJQOSSg" type="_aPbX8AsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXgV4AsQEeiTNeZmJQOSSg" name="paintCfg" visibility="protected" method="_aZbBdQsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aXgV4QsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXgV4gsQEeiTNeZmJQOSSg" name="host" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aPebQAsQEeiTNeZmJQOSSg" name="UprightImageStrategy">
        <ownedComment xmi:id="_aZujcAsQEeiTNeZmJQOSSg">
          <body>This class defines an upright image.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_aWLgMAsQEeiTNeZmJQOSSg" general="_aOhZAAsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZbBeAsQEeiTNeZmJQOSSg" name="UprightImageStrategy" specification="_aPfCUAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZbBeQsQEeiTNeZmJQOSSg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZbBegsQEeiTNeZmJQOSSg" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZbBewsQEeiTNeZmJQOSSg" type="_aPebQAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZbogAsQEeiTNeZmJQOSSg" name="UprightImageStrategy" specification="_aXg88AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZbogQsQEeiTNeZmJQOSSg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZboggsQEeiTNeZmJQOSSg" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZbogwsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZbohAsQEeiTNeZmJQOSSg" type="_aPebQAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor, at);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZbohQsQEeiTNeZmJQOSSg" name="paintCfg" specification="_aXhkAQsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZbohgsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZbohwsQEeiTNeZmJQOSSg" name="host" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>super.paintCfg(g, host);&#xD;
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {&#xD;
			at.scale(1.0, -1.0);&#xD;
		}       &#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aPfCUAsQEeiTNeZmJQOSSg" name="UprightImageStrategy" method="_aZbBeAsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aPfpYgsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aPfpYwsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aPfpYAsQEeiTNeZmJQOSSg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aPfpYQsQEeiTNeZmJQOSSg" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aPgQcAsQEeiTNeZmJQOSSg" type="_aPebQAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXg88AsQEeiTNeZmJQOSSg" name="UprightImageStrategy" method="_aZbogAsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aXg89AsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aXg89QsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aXg88QsQEeiTNeZmJQOSSg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXg88gsQEeiTNeZmJQOSSg" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXg88wsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXhkAAsQEeiTNeZmJQOSSg" type="_aPebQAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXhkAQsQEeiTNeZmJQOSSg" name="paintCfg" visibility="protected" method="_aZbohQsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aXhkAgsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXhkAwsQEeiTNeZmJQOSSg" name="host" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aPiFoAsQEeiTNeZmJQOSSg" name="UprightShapePaintStrategy">
        <ownedComment xmi:id="_aZujcQsQEeiTNeZmJQOSSg">
          <body>This class defines an upright shape paint strategy.
@author sn32, ll45
 *</body>
        </ownedComment>
        <generalization xmi:id="_aWMuUAsQEeiTNeZmJQOSSg" general="_aPGAwAsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZcPkAsQEeiTNeZmJQOSSg" name="UprightShapePaintStrategy" specification="_aXiLEAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZcPkQsQEeiTNeZmJQOSSg" name="shape" type="_aVTWcAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZcPkgsQEeiTNeZmJQOSSg" type="_aPiFoAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>super(shape);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZcPkwsQEeiTNeZmJQOSSg" name="UprightShapePaintStrategy" specification="_aXiyIQsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZcPlAsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZcPlQsQEeiTNeZmJQOSSg" name="shape" type="_aVTWcAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZcPlgsQEeiTNeZmJQOSSg" type="_aPiFoAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>super(at, shape);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aXiLEAsQEeiTNeZmJQOSSg" name="UprightShapePaintStrategy" method="_aZcPkAsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aXiLEgsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aXiLEwsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aXiLEQsQEeiTNeZmJQOSSg" name="shape" type="_aVTWcAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXiyIAsQEeiTNeZmJQOSSg" type="_aPiFoAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXiyIQsQEeiTNeZmJQOSSg" name="UprightShapePaintStrategy" method="_aZcPkwsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aXjZMAsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aXjZMQsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aXiyIgsQEeiTNeZmJQOSSg" name="at" type="_aUgsQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXiyIwsQEeiTNeZmJQOSSg" name="shape" type="_aVTWcAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXjZMgsQEeiTNeZmJQOSSg" type="_aPiFoAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aPkh4AsQEeiTNeZmJQOSSg" name="WiggleStrategy">
        <ownedComment xmi:id="_aZujcgsQEeiTNeZmJQOSSg">
          <body>This class defines a Wiggle Strategy which defines a movement strategy for a ball that randomly
changes the velocity direction, so it wiggles.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_aWN8cAsQEeiTNeZmJQOSSg" client="_aPkh4AsQEeiTNeZmJQOSSg" supplier="_aOfj0AsQEeiTNeZmJQOSSg" contract="_aOfj0AsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZcPlwsQEeiTNeZmJQOSSg" name="updateState" specification="_aWN8cQsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZcPmAsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZcPmQsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % rzr.randomInt(2,  100) == 0) {
						ball.setVel(new Point(ball.getVel().x, ball.getVel().y * -1));
					} else if (ball.getItr() % rzr.randomInt(2, 100) == 0){
						ball.setVel(new Point(ball.getVel().x * -1, ball.getVel().y));
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aWN8cQsQEeiTNeZmJQOSSg" name="updateState" method="_aZcPlwsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aWN8cgsQEeiTNeZmJQOSSg" name="ball" type="_aM-g4AsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aWOjgAsQEeiTNeZmJQOSSg" name="dispatcher" type="_aPmXEAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aZn1wAsQEeiTNeZmJQOSSg" name="" memberEnd="_aYEWkAsQEeiTNeZmJQOSSg _aZn1wQsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aZn1wQsQEeiTNeZmJQOSSg" name="" type="_aM-g4AsQEeiTNeZmJQOSSg" association="_aZn1wAsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aZoc0AsQEeiTNeZmJQOSSg" name="" memberEnd="_aYE9oAsQEeiTNeZmJQOSSg _aZoc0QsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aZoc0QsQEeiTNeZmJQOSSg" name="" type="_aM-g4AsQEeiTNeZmJQOSSg" association="_aZoc0AsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aZoc0gsQEeiTNeZmJQOSSg" name="" memberEnd="_aYFksgsQEeiTNeZmJQOSSg _aZoc0wsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aZoc0wsQEeiTNeZmJQOSSg" name="" type="_aM-g4AsQEeiTNeZmJQOSSg" association="_aZoc0gsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aZpD4AsQEeiTNeZmJQOSSg" name="" memberEnd="_aYGLwAsQEeiTNeZmJQOSSg _aZpD4QsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aZpD4QsQEeiTNeZmJQOSSg" name="" type="_aM-g4AsQEeiTNeZmJQOSSg" association="_aZpD4AsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaJaMAsQEeiTNeZmJQOSSg" name="" memberEnd="_aaJaMQsQEeiTNeZmJQOSSg _aOQ6UAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaJaMQsQEeiTNeZmJQOSSg" name="" type="_aOPFIAsQEeiTNeZmJQOSSg" association="_aaJaMAsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaLPYAsQEeiTNeZmJQOSSg" name="" memberEnd="_aaLPYQsQEeiTNeZmJQOSSg _aOSvgAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaLPYQsQEeiTNeZmJQOSSg" name="" type="_aOPFIAsQEeiTNeZmJQOSSg" association="_aaLPYAsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaMdgQsQEeiTNeZmJQOSSg" name="" memberEnd="_aaMdggsQEeiTNeZmJQOSSg _aOcggAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaMdggsQEeiTNeZmJQOSSg" name="" type="_aOarUAsQEeiTNeZmJQOSSg" association="_aaMdgQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaNEkQsQEeiTNeZmJQOSSg" name="" memberEnd="_aaNEkgsQEeiTNeZmJQOSSg _aOduoAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaNEkgsQEeiTNeZmJQOSSg" name="" type="_aOarUAsQEeiTNeZmJQOSSg" association="_aaNEkQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaO5wQsQEeiTNeZmJQOSSg" name="" memberEnd="_aaO5wgsQEeiTNeZmJQOSSg _aYChYQsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaO5wgsQEeiTNeZmJQOSSg" name="" type="_aMs0EAsQEeiTNeZmJQOSSg" association="_aaO5wQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaPg0QsQEeiTNeZmJQOSSg" name="" memberEnd="_aaPg0gsQEeiTNeZmJQOSSg _aYDvgAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaPg0gsQEeiTNeZmJQOSSg" name="" type="_aMzhwAsQEeiTNeZmJQOSSg" association="_aaPg0QsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaQH4QsQEeiTNeZmJQOSSg" name="" memberEnd="_aaQH4gsQEeiTNeZmJQOSSg _aYGLwQsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaQH4gsQEeiTNeZmJQOSSg" name="" type="_aM-g4AsQEeiTNeZmJQOSSg" association="_aaQH4QsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaQu8QsQEeiTNeZmJQOSSg" name="" memberEnd="_aaQu8gsQEeiTNeZmJQOSSg _aYGy0QsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaQu8gsQEeiTNeZmJQOSSg" name="" type="_aM-g4AsQEeiTNeZmJQOSSg" association="_aaQu8QsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaRWAQsQEeiTNeZmJQOSSg" name="" memberEnd="_aaRWAgsQEeiTNeZmJQOSSg _aYIoAAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaRWAgsQEeiTNeZmJQOSSg" name="" type="_aNZ-sAsQEeiTNeZmJQOSSg" association="_aaRWAQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaR9EQsQEeiTNeZmJQOSSg" name="" memberEnd="_aaR9EgsQEeiTNeZmJQOSSg _aYJ2IAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaR9EgsQEeiTNeZmJQOSSg" name="" type="_aNZ-sAsQEeiTNeZmJQOSSg" association="_aaR9EQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaTLMAsQEeiTNeZmJQOSSg" name="" memberEnd="_aaTLMQsQEeiTNeZmJQOSSg _aYJ2IwsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaTLMQsQEeiTNeZmJQOSSg" name="" type="_aNZ-sAsQEeiTNeZmJQOSSg" association="_aaTLMAsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaTyQAsQEeiTNeZmJQOSSg" name="" memberEnd="_aaTyQQsQEeiTNeZmJQOSSg _aYLrUAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaTyQQsQEeiTNeZmJQOSSg" name="" type="_aOEGAAsQEeiTNeZmJQOSSg" association="_aaTyQAsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaTyQwsQEeiTNeZmJQOSSg" name="" memberEnd="_aaTyRAsQEeiTNeZmJQOSSg _aYNggQsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaTyRAsQEeiTNeZmJQOSSg" name="" type="_aOhZAAsQEeiTNeZmJQOSSg" association="_aaTyQwsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaUZUQsQEeiTNeZmJQOSSg" name="" memberEnd="_aaUZUgsQEeiTNeZmJQOSSg _aYOHkQsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaUZUgsQEeiTNeZmJQOSSg" name="" type="_aOhZAAsQEeiTNeZmJQOSSg" association="_aaUZUQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaVAYQsQEeiTNeZmJQOSSg" name="" memberEnd="_aaVAYgsQEeiTNeZmJQOSSg _aYOuoAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaVAYgsQEeiTNeZmJQOSSg" name="" type="_aOhZAAsQEeiTNeZmJQOSSg" association="_aaVAYQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaVncQsQEeiTNeZmJQOSSg" name="" memberEnd="_aaVncgsQEeiTNeZmJQOSSg _aYPVsAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaVncgsQEeiTNeZmJQOSSg" name="" type="_aOhZAAsQEeiTNeZmJQOSSg" association="_aaVncQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaWOgAsQEeiTNeZmJQOSSg" name="" memberEnd="_aaWOgQsQEeiTNeZmJQOSSg _aYP8wAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaWOgQsQEeiTNeZmJQOSSg" name="" type="_aOuNUAsQEeiTNeZmJQOSSg" association="_aaWOgAsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaW1kQsQEeiTNeZmJQOSSg" name="" memberEnd="_aaW1kgsQEeiTNeZmJQOSSg _aYQj0QsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaW1kgsQEeiTNeZmJQOSSg" name="" type="_aOzs4AsQEeiTNeZmJQOSSg" association="_aaW1kQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaXcoQsQEeiTNeZmJQOSSg" name="" memberEnd="_aaXcogsQEeiTNeZmJQOSSg _aYTAEAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaXcogsQEeiTNeZmJQOSSg" name="" type="_aO2JIAsQEeiTNeZmJQOSSg" association="_aaXcoQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaYqwAsQEeiTNeZmJQOSSg" name="" memberEnd="_aaYqwQsQEeiTNeZmJQOSSg _aYUOMQsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaYqwQsQEeiTNeZmJQOSSg" name="" type="_aO2JIAsQEeiTNeZmJQOSSg" association="_aaYqwAsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaZR0AsQEeiTNeZmJQOSSg" name="" memberEnd="_aaZR0QsQEeiTNeZmJQOSSg _aYVcUQsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaZR0QsQEeiTNeZmJQOSSg" name="" type="_aO2JIAsQEeiTNeZmJQOSSg" association="_aaZR0AsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaZ44QsQEeiTNeZmJQOSSg" name="" memberEnd="_aaZ44gsQEeiTNeZmJQOSSg _aYX4kAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaZ44gsQEeiTNeZmJQOSSg" name="" type="_aO_6IAsQEeiTNeZmJQOSSg" association="_aaZ44QsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaaf8QsQEeiTNeZmJQOSSg" name="" memberEnd="_aaaf8gsQEeiTNeZmJQOSSg _aYYfoAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaaf8gsQEeiTNeZmJQOSSg" name="" type="_aPGAwAsQEeiTNeZmJQOSSg" association="_aaaf8QsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aabHAQsQEeiTNeZmJQOSSg" name="" memberEnd="_aabHAgsQEeiTNeZmJQOSSg _aYaU0AsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aabHAgsQEeiTNeZmJQOSSg" name="" type="_aPVRUAsQEeiTNeZmJQOSSg" association="_aabHAQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aarlsAsQEeiTNeZmJQOSSg" name="" memberEnd="_aarlsQsQEeiTNeZmJQOSSg _aZrgKwsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aarlsQsQEeiTNeZmJQOSSg" name="" type="_aOzs4AsQEeiTNeZmJQOSSg" association="_aarlsAsQEeiTNeZmJQOSSg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_aH5MkAsQEeiTNeZmJQOSSg" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_aQBN0AsQEeiTNeZmJQOSSg" name="BallWorldView">
        <ownedComment xmi:id="_aZvxkAsQEeiTNeZmJQOSSg">
          <body>This is the BallWorldView class, which has the frame on which our BallWorld is displayed.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <generalization xmi:id="_aXzQ0QsQEeiTNeZmJQOSSg" general="_aWWfUAsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aYgbcAsQEeiTNeZmJQOSSg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYgbcQsQEeiTNeZmJQOSSg" value="-7114823923004621639L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYgbcgsQEeiTNeZmJQOSSg" name="contentPane" visibility="private" type="_aWXGYQsQEeiTNeZmJQOSSg" association="_aac8MAsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aYhpkAsQEeiTNeZmJQOSSg" name="pnlControl" visibility="private" isLeaf="true" type="_aWXGYQsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aac8MwsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYhpkQsQEeiTNeZmJQOSSg" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYiQoQsQEeiTNeZmJQOSSg" name="tfClassname" visibility="private" isLeaf="true" type="_aWYUgQsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aaeKUAsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYiQogsQEeiTNeZmJQOSSg" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYi3sQsQEeiTNeZmJQOSSg" name="btnClearBalls" visibility="private" isLeaf="true" type="_aWawwQsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aaexYQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYi3sgsQEeiTNeZmJQOSSg" value="new JButton(&quot;Clear balls&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYjewQsQEeiTNeZmJQOSSg" name="adapter" visibility="private" type="_aQPQQAsQEeiTNeZmJQOSSg" association="_aafYcQsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aYks4QsQEeiTNeZmJQOSSg" name="pnlCanvas" visibility="private" isLeaf="true" type="_aWXGYQsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aaf_gQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYks4gsQEeiTNeZmJQOSSg" value="new JPanel() {&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * This is a private variable that gives the class an ID to serialize and deserialize.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;private static final long serialVersionUID = 8303517520311377718L;&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Overridden paintComponent method to paint a shape in the panel.&#xA;&#x9;&#x9; * @param g The Graphics object to paint on.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public void paintComponent(Graphics g) {&#xA;&#x9;&#x9;&#x9;super.paintComponent(g); // Do everything normally done first, e.g. clear the screen.&#xA;&#x9;&#x9;&#x9;adapter.paintBalls(g);&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYlT8QsQEeiTNeZmJQOSSg" name="btnAddToList" visibility="private" isLeaf="true" type="_aWawwQsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aagmkQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYlT8gsQEeiTNeZmJQOSSg" value="new JButton(&quot;Add to list&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYmiEQsQEeiTNeZmJQOSSg" name="btnCombine" visibility="private" isLeaf="true" type="_aWawwQsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aahNoQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYnJIAsQEeiTNeZmJQOSSg" value="new JButton(&quot;Combine&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYnwMAsQEeiTNeZmJQOSSg" name="btnMakeSelectedBall" visibility="private" isLeaf="true" type="_aWawwQsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aah0sQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYnwMQsQEeiTNeZmJQOSSg" value="new JButton(&quot;Make selected ball&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYoXQQsQEeiTNeZmJQOSSg" name="btnMakeSwitcher" visibility="private" isLeaf="true" type="_aWawwQsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aaibwQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYoXQgsQEeiTNeZmJQOSSg" value="new JButton(&quot;Make switcher&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYo-UAsQEeiTNeZmJQOSSg" name="btnSwitch" visibility="private" isLeaf="true" type="_aWawwQsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aajp4AsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYo-UQsQEeiTNeZmJQOSSg" value="new JButton(&quot;Switch&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYo-UwsQEeiTNeZmJQOSSg" name="comBoxTop" visibility="private" type="_aWdNAQsQEeiTNeZmJQOSSg" association="_aakQ8QsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYplYQsQEeiTNeZmJQOSSg" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYqMcQsQEeiTNeZmJQOSSg" name="comBoxBottom" visibility="private" type="_aWdNAQsQEeiTNeZmJQOSSg" association="_aak4AQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYqzgAsQEeiTNeZmJQOSSg" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYqzggsQEeiTNeZmJQOSSg" name="pnlChangeList" visibility="private" isLeaf="true" type="_aWXGYQsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aamGIQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYqzgwsQEeiTNeZmJQOSSg" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYrakQsQEeiTNeZmJQOSSg" name="pnlDropDowns" visibility="private" isLeaf="true" type="_aWXGYQsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aamtMQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYrakgsQEeiTNeZmJQOSSg" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYsBoAsQEeiTNeZmJQOSSg" name="pnlSwitching" visibility="private" isLeaf="true" type="_aWXGYQsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aanUQQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYsBoQsQEeiTNeZmJQOSSg" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYsBowsQEeiTNeZmJQOSSg" name="pnlPaintStrats" visibility="private" isLeaf="true" type="_aWXGYQsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aaoiYAsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYsosAsQEeiTNeZmJQOSSg" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYsosgsQEeiTNeZmJQOSSg" name="btnAddPaintStrat" visibility="private" isLeaf="true" type="_aWawwQsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aapJcQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYsoswsQEeiTNeZmJQOSSg" value="new JButton(&quot;Add&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYtPwQsQEeiTNeZmJQOSSg" name="txtPaintStrat" visibility="private" isLeaf="true" type="_aWYUgQsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aapwgQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYtPwgsQEeiTNeZmJQOSSg" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYt20QsQEeiTNeZmJQOSSg" name="comBoxStrats" visibility="private" isLeaf="true" type="_aWdNAQsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aaqXkQsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYud4QsQEeiTNeZmJQOSSg" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZf58AsQEeiTNeZmJQOSSg" name="getPanel" specification="_aQGGUAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZf58QsQEeiTNeZmJQOSSg" type="_aWXGYQsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>return pnlCanvas;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZghAAsQEeiTNeZmJQOSSg" name="BallWorldView" specification="_aWiskAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZghAQsQEeiTNeZmJQOSSg" name="adapter" type="_aQPQQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZghAgsQEeiTNeZmJQOSSg" type="_aQBN0AsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>txtPaintStrat.setToolTipText(&quot;This is the text field where you can add paint strategies.&quot;);
		pnlPaintStrats.setToolTipText(&quot;This is the panel that holds the components that let you add paint strategies and select them.&quot;);
		pnlPaintStrats.add(txtPaintStrat);
		txtPaintStrat.setColumns(10);
		this.adapter = adapter;
		initGUI();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZghAwsQEeiTNeZmJQOSSg" name="updateView" specification="_aQH7gAsQEeiTNeZmJQOSSg">
          <language>java</language>
          <body>repaint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZghBAsQEeiTNeZmJQOSSg" name="getCanvas" specification="_aQH7gQsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZghBQsQEeiTNeZmJQOSSg" type="_aUbzwAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>return getPanel();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZghBgsQEeiTNeZmJQOSSg" name="initGUI" specification="_aQIikAsQEeiTNeZmJQOSSg">
          <language>java</language>
          <body>setTitle(&quot;BallWorld&quot;);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setToolTipText(&quot;This is the content of the frame.&quot;);
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		pnlControl.setBackground(Color.DARK_GRAY);
		pnlControl.setToolTipText(&quot;This is the control panel that lets you create balls and clear them.&quot;);
		
		contentPane.add(pnlControl, BorderLayout.NORTH);
		pnlControl.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		pnlChangeList.setToolTipText(&quot;This panel is where you can add the type of ball you want to make to the drop down lists.&quot;);
		
		pnlControl.add(pnlChangeList);
		pnlChangeList.setLayout(new GridLayout(0, 1, 0, 0));
		
		pnlChangeList.add(tfClassname);
		tfClassname.setToolTipText(&quot;The type of the ball you want to make.&quot;);
		
		tfClassname.setColumns(10);
		btnAddToList.setToolTipText(&quot;This button adds the strategy type in the text field to the drop down boxes.&quot;);
		pnlChangeList.add(btnAddToList);
		btnAddToList.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (tfClassname.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem stratFac = adapter.addStrategy(tfClassname.getText());

             comBoxTop.insertItemAt(stratFac, 0);
             comBoxBottom.insertItemAt(stratFac, 0);
			}
		});
		pnlDropDowns.setToolTipText(&quot;This panel is for the drop down boxes, and buttons to make selected balls and combine strategies.&quot;);
		
		pnlControl.add(pnlDropDowns);
		pnlDropDowns.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSelectedBall.setToolTipText(&quot;This button makes a ball with the update strategy of the factory that's selected on the top drop down box.&quot;);
		pnlDropDowns.add(btnMakeSelectedBall);
		comBoxTop.setToolTipText(&quot;This is the drop down list on the top.&quot;);
		pnlDropDowns.add(comBoxTop);
		comBoxBottom.setToolTipText(&quot;This is the drop down list on the bottom.&quot;);
		pnlDropDowns.add(comBoxBottom);
		btnCombine.setToolTipText(&quot;This button combines the two strategy factories in the combo boxes.&quot;);
		pnlDropDowns.add(btnCombine);
		btnCombine.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem top = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem bottom = comBoxBottom.getItemAt(comBoxBottom.getSelectedIndex());
				
				if (top == null || bottom == null) {
					return;
				}
				
				TDropListItem combo = adapter.combineStrategies(top, bottom);
				comBoxTop.addItem(combo);
				comBoxBottom.addItem(combo);
			}
		});
		btnMakeSelectedBall.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem selected = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem paintFac = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (selected == null || paintFac == null) {
					return;
				}
				
				adapter.makeBall(selected, paintFac);
			}
		});
		pnlSwitching.setToolTipText(&quot;This panel is for the buttons related to making switcher balls and switching their strategies.&quot;);
		
		pnlControl.add(pnlSwitching);
		pnlSwitching.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSwitcher.setToolTipText(&quot;Click this item to make a switcher ball.&quot;);
		pnlSwitching.add(btnMakeSwitcher);
		btnSwitch.setToolTipText(&quot;Click this button to switch the switcher balls to the selected item in the top combo box.&quot;);
		pnlSwitching.add(btnSwitch);
		
		btnSwitch.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switchFac = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				
				if (switchFac == null) {
					return;
				}
				
				adapter.setSwitcherStrategy(switchFac);
			}
		});
		
		btnMakeSwitcher.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switcherStrat = adapter.getSwitcherFac();
				TDropListItem paintStrat = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (paintStrat == null) {
					return;
				}
				
				adapter.makeBall(switcherStrat, paintStrat);
			}
		});
		btnClearBalls.setToolTipText(&quot;Click this to clear the balls on the canvas.&quot;);
		btnClearBalls.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				adapter.clearBalls();
			}
		});
		
		pnlControl.add(btnClearBalls);
		
		pnlControl.add(pnlPaintStrats);
		pnlPaintStrats.setLayout(new GridLayout(0, 1, 0, 0));
		btnAddPaintStrat.setToolTipText(&quot;This is the button that lets you add paint strategies to the combo box below.&quot;);
		btnAddPaintStrat.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (txtPaintStrat.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem paintFac = adapter.addPaintFactory(txtPaintStrat.getText());
             comBoxStrats.insertItemAt(paintFac, 0);
			}
		});
		
		
		pnlPaintStrats.add(btnAddPaintStrat);
		comBoxStrats.setToolTipText(&quot;The is the combo box for the paint strategies that can be implemented.&quot;);
		
		pnlPaintStrats.add(comBoxStrats);
		pnlCanvas.setBackground(Color.LIGHT_GRAY);
		pnlCanvas.setToolTipText(&quot;This is the canvas where the balls move, and stay in.&quot;);
		
		contentPane.add(pnlCanvas, BorderLayout.CENTER);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZhIEAsQEeiTNeZmJQOSSg" name="start" specification="_aQJJoAsQEeiTNeZmJQOSSg">
          <language>java</language>
          <body>setExtendedState(JFrame.MAXIMIZED_BOTH);
		setVisible(true);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aQGGUAsQEeiTNeZmJQOSSg" name="getPanel" method="_aZf58AsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZvxkQsQEeiTNeZmJQOSSg">
            <body>This gets the canvas of the frame.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_aXypwAsQEeiTNeZmJQOSSg" type="_aWXGYQsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aQH7gAsQEeiTNeZmJQOSSg" name="updateView" method="_aZghAwsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZvxkwsQEeiTNeZmJQOSSg">
            <body>Update the view by repainting</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_aQH7gQsQEeiTNeZmJQOSSg" name="getCanvas" method="_aZghBAsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZvxlAsQEeiTNeZmJQOSSg">
            <body>This function returns the canvas panel.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_aXzQ0AsQEeiTNeZmJQOSSg" type="_aUbzwAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aQIikAsQEeiTNeZmJQOSSg" name="initGUI" visibility="private" method="_aZghBgsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZvxlQsQEeiTNeZmJQOSSg">
            <body>This private function initializes the GUI.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_aQJJoAsQEeiTNeZmJQOSSg" name="start" method="_aZhIEAsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZvxlgsQEeiTNeZmJQOSSg">
            <body>This function makes the frame visible after initializing it.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_aWiskAsQEeiTNeZmJQOSSg" name="BallWorldView" method="_aZghAAsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aWjToQsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aWjTogsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_aZvxkgsQEeiTNeZmJQOSSg">
            <body>Create the frame
	 * @param adapter An IView2ModelAdapter</body>
          </ownedComment>
          <ownedParameter xmi:id="_aWjToAsQEeiTNeZmJQOSSg" name="adapter" type="_aQPQQAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aWjTowsQEeiTNeZmJQOSSg" type="_aQBN0AsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_aQPQQAsQEeiTNeZmJQOSSg" name="IView2ModelAdapter">
        <ownedComment xmi:id="_aZvxlwsQEeiTNeZmJQOSSg">
          <body>This is an interface which has the functions that the view wants the model to have.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_aQSTkAsQEeiTNeZmJQOSSg" name="switcherFac" type="_aX27MAsQEeiTNeZmJQOSSg" isReadOnly="true" association="_aaNroQsQEeiTNeZmJQOSSg"/>
        <ownedOperation xmi:id="_aQRFcAsQEeiTNeZmJQOSSg" name="clearBalls">
          <ownedComment xmi:id="_aZvxmAsQEeiTNeZmJQOSSg">
            <body>This is a function that will tell the model to clear the balls.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_aQRFcQsQEeiTNeZmJQOSSg" name="addStrategy">
          <ownedComment xmi:id="_aZvxmgsQEeiTNeZmJQOSSg">
            <body>This function will take the given short strategy name and return a corresponding
     * something to put onto both drop lists.
     * @param classname The shortened class name of the desired strategy
     * @return Something to put onto both the drop lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aQRFcgsQEeiTNeZmJQOSSg" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aX3iQQsQEeiTNeZmJQOSSg" type="_aX27MAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aQS6oAsQEeiTNeZmJQOSSg" name="addPaintFactory">
          <ownedParameter xmi:id="_aQS6oQsQEeiTNeZmJQOSSg" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aX6lkAsQEeiTNeZmJQOSSg" type="_aX27MAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aX2UIAsQEeiTNeZmJQOSSg" name="paintBalls">
          <ownedComment xmi:id="_aZvxmQsQEeiTNeZmJQOSSg">
            <body>This is a function that will tell the model to paint the balls.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aX2UIQsQEeiTNeZmJQOSSg" name="g" type="_aUeQAQsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aX4JUAsQEeiTNeZmJQOSSg" name="makeBall">
          <ownedComment xmi:id="_aZwYoAsQEeiTNeZmJQOSSg">
            <body>This function will make a ball with the selected short strategy name.
     * @param selectedItem A shorten class name for the desired strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_aX4JUQsQEeiTNeZmJQOSSg" name="selectedItem" type="_aX27MAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aX4JUgsQEeiTNeZmJQOSSg" name="paintStrat" type="_aX27MAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aX4wYAsQEeiTNeZmJQOSSg" name="combineStrategies">
          <ownedComment xmi:id="_aZwYoQsQEeiTNeZmJQOSSg">
            <body>This function will return a new object to put on both lists, given two items from the lists.
     * @param selectedItem1 An object from one drop list
     * @param selectedItem2 An object from the other drop list
     * @return An object to put back on both lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aX4wYQsQEeiTNeZmJQOSSg" name="selectedItem1" type="_aX27MAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aX4wYgsQEeiTNeZmJQOSSg" name="selectedItem2" type="_aX27MAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aX4wYwsQEeiTNeZmJQOSSg" type="_aX27MAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aX5XcAsQEeiTNeZmJQOSSg" name="setSwitcherStrategy">
          <ownedComment xmi:id="_aZwYogsQEeiTNeZmJQOSSg">
            <body>This function will change the current strategy of the switcher balls to whatever
     * strategy is made by the factory in the parameter.
     * @param switchFac An object from the top drop list.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aX5-gAsQEeiTNeZmJQOSSg" name="switchFac" type="_aX27MAsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aX27MAsQEeiTNeZmJQOSSg" name="TDropListItem"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaNroQsQEeiTNeZmJQOSSg" name="" memberEnd="_aaNrogsQEeiTNeZmJQOSSg _aQSTkAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaNrogsQEeiTNeZmJQOSSg" name="" type="_aQPQQAsQEeiTNeZmJQOSSg" association="_aaNroQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aac8MAsQEeiTNeZmJQOSSg" name="" memberEnd="_aac8MQsQEeiTNeZmJQOSSg _aYgbcgsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aac8MQsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aac8MAsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aac8MwsQEeiTNeZmJQOSSg" name="" memberEnd="_aac8NAsQEeiTNeZmJQOSSg _aYhpkAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aac8NAsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aac8MwsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaeKUAsQEeiTNeZmJQOSSg" name="" memberEnd="_aaeKUQsQEeiTNeZmJQOSSg _aYiQoQsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaeKUQsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aaeKUAsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaexYQsQEeiTNeZmJQOSSg" name="" memberEnd="_aaexYgsQEeiTNeZmJQOSSg _aYi3sQsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaexYgsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aaexYQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aafYcQsQEeiTNeZmJQOSSg" name="" memberEnd="_aafYcgsQEeiTNeZmJQOSSg _aYjewQsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aafYcgsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aafYcQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaf_gQsQEeiTNeZmJQOSSg" name="" memberEnd="_aaf_ggsQEeiTNeZmJQOSSg _aYks4QsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaf_ggsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aaf_gQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aagmkQsQEeiTNeZmJQOSSg" name="" memberEnd="_aagmkgsQEeiTNeZmJQOSSg _aYlT8QsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aagmkgsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aagmkQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aahNoQsQEeiTNeZmJQOSSg" name="" memberEnd="_aahNogsQEeiTNeZmJQOSSg _aYmiEQsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aahNogsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aahNoQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aah0sQsQEeiTNeZmJQOSSg" name="" memberEnd="_aah0sgsQEeiTNeZmJQOSSg _aYnwMAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aah0sgsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aah0sQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaibwQsQEeiTNeZmJQOSSg" name="" memberEnd="_aaibwgsQEeiTNeZmJQOSSg _aYoXQQsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaibwgsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aaibwQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aajp4AsQEeiTNeZmJQOSSg" name="" memberEnd="_aajp4QsQEeiTNeZmJQOSSg _aYo-UAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aajp4QsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aajp4AsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aakQ8QsQEeiTNeZmJQOSSg" name="" memberEnd="_aakQ8gsQEeiTNeZmJQOSSg _aYo-UwsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aakQ8gsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aakQ8QsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aak4AQsQEeiTNeZmJQOSSg" name="" memberEnd="_aak4AgsQEeiTNeZmJQOSSg _aYqMcQsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aak4AgsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aak4AQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aamGIQsQEeiTNeZmJQOSSg" name="" memberEnd="_aamGIgsQEeiTNeZmJQOSSg _aYqzggsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aamGIgsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aamGIQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aamtMQsQEeiTNeZmJQOSSg" name="" memberEnd="_aamtMgsQEeiTNeZmJQOSSg _aYrakQsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aamtMgsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aamtMQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aanUQQsQEeiTNeZmJQOSSg" name="" memberEnd="_aanUQgsQEeiTNeZmJQOSSg _aYsBoAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aanUQgsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aanUQQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaoiYAsQEeiTNeZmJQOSSg" name="" memberEnd="_aaoiYQsQEeiTNeZmJQOSSg _aYsBowsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaoiYQsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aaoiYAsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aapJcQsQEeiTNeZmJQOSSg" name="" memberEnd="_aapJcgsQEeiTNeZmJQOSSg _aYsosgsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aapJcgsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aapJcQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aapwgQsQEeiTNeZmJQOSSg" name="" memberEnd="_aapwggsQEeiTNeZmJQOSSg _aYtPwQsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aapwggsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aapwgQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaqXkQsQEeiTNeZmJQOSSg" name="" memberEnd="_aaqXkgsQEeiTNeZmJQOSSg _aYt20QsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaqXkgsQEeiTNeZmJQOSSg" name="" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aaqXkQsQEeiTNeZmJQOSSg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_aIEywAsQEeiTNeZmJQOSSg" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_aMexoAsQEeiTNeZmJQOSSg" name="BallWorldController">
        <ownedComment xmi:id="_aZkLYAsQEeiTNeZmJQOSSg">
          <body>This is the BallWorldController, that has private variables for model and view,
and is able to interface between them.
@author sn32, kyl3, lka2, swong
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_aYAFIAsQEeiTNeZmJQOSSg" name="model" visibility="private" type="_aNZ-sAsQEeiTNeZmJQOSSg" association="_aaOSsAsQEeiTNeZmJQOSSg"/>
        <ownedAttribute xmi:id="_aYBTQAsQEeiTNeZmJQOSSg" name="view" visibility="private" type="_aQBN0AsQEeiTNeZmJQOSSg" association="_aaOSswsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZAKsAsQEeiTNeZmJQOSSg" name="main" specification="_aMlfUAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZAKsQsQEeiTNeZmJQOSSg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aZAKsgsQEeiTNeZmJQOSSg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(() -> {
			try {
				(new BallWorldController()).start();
			} catch (Exception e) {
				e.printStackTrace();
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZGRUAsQEeiTNeZmJQOSSg" name="BallWorldController" specification="_aMpJsAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZGRUQsQEeiTNeZmJQOSSg" type="_aMexoAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>model = new BallWorldModel(new IModel2ViewAdapter() {

			/**
			 * This function from the IModel2ViewAdapter allows the controller
			 * to tell the view to update.
			 */
			@Override
			public void update() {
				view.updateView();
			}

			/**
			 * This function from the IModel2ViewAdapter allows the controller to get
			 * the canvas from the view.
			 */
			@Override
			public Container getCanvas() {
				return view.getCanvas();
			}
		});
		
		view = new BallWorldView&lt;IStrategyFac>(new IView2ModelAdapter&lt;IStrategyFac>() {
	        /**
	         * Returns an IStrategyFac that can instantiate the strategy specified
	         * by classname. Returns the error strategy factory if classname is null.
	         * The toString() of the returned factory is the classname.
	         * @param classname Shortened name of desired strategy
	         * @return A factory to make that strategy
	         */
			@Override
	        public IStrategyFac addStrategy(String classname) {
	        		return model.makeStrategyFac(classname);
	        	}

	        /**
	         * Add a ball to the system with a strategy as given by the given IStrategyFac
	         * @param selectedItem The fully qualified name of the desired strategy.
	         */
	        @Override
	        public void makeBall(IStrategyFac selectedItem, IStrategyFac paintStrat) {
	        		if (null != selectedItem &amp;&amp; paintStrat != null) {
	        			model.makeBall(selectedItem.make(), paintStrat.makePaint());
	        		}
	        	}
			
			/**
			 * Returns an IStrategyFac that can instantiate a MultiStrategy with the
			 * two strategies made by the two given IStrategyFac objects. Returns
			 * the error strategy factory if either supplied factory is null. The
			 * toString() of the returned factory is the toString()'s of the two given
			 * factories, concatenated with &quot;-&quot;.
			 * @param selectedItem1 An IStrategyFac for a strategy
			 * @param selectedItem2 An IStrategyFac for a strategy
			 * @return An IStrategyFac for the composition of the two strategies
			 */
	        @Override
			public IStrategyFac combineStrategies(IStrategyFac selectedItem1, IStrategyFac selectedItem2) {
				return model.combineStrategyFacs(selectedItem1, selectedItem2);
			}
			
			/**
			 * This function tells the model to clear all the balls from the canvas.
			 */
			@Override
			public void clearBalls() {
				model.clearBalls();
			}
			
			/**
			 * This function tells the model to paint and update the status of all the balls.
			 */
			@Override 
			public void paintBalls(Graphics g) {
				model.update(g); // see is this is correct or if a paint method is needed
			}

			/**
			 * This function sets the strategy of the switcher balls to whatever is made by
			 * the input's make method.
			 * @param switchFac The new strategy factory whose make method returns the new strategy
			 * for the switcher balls
			 */
			@Override
			public void setSwitcherStrategy(IStrategyFac switchFac) {
				model.setSwitcherStrategy(switchFac);
			}

			/**
			 * This function returns the strategy factory that is making the switcher balls' current strategy.
			 * @return An IStrategyFactory that makes the current switcher balls' strategy.
			 */
			@Override
			public IStrategyFac getSwitcherFac() {
				return model.getSwitcherFac();
			}

			@Override
			public IStrategyFac addPaintFactory(String text) {
				return model.makePaintFactory(text);
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZG4YAsQEeiTNeZmJQOSSg" name="start" specification="_aMqX0AsQEeiTNeZmJQOSSg">
          <language>java</language>
          <body>view.start();
		model.start();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aMlfUAsQEeiTNeZmJQOSSg" name="main" isStatic="true" method="_aZAKsAsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZkycAsQEeiTNeZmJQOSSg">
            <body>This main method starts the BallWorldController.
	 * @param args Command line arguments.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aMlfUQsQEeiTNeZmJQOSSg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aMnUgAsQEeiTNeZmJQOSSg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_aMpJsAsQEeiTNeZmJQOSSg" name="BallWorldController" method="_aZGRUAsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aMpJsQsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aMpJsgsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_aZkycQsQEeiTNeZmJQOSSg">
            <body>This is the constructor for BallWorldController, which
	 * creates anonymous inner classes for the adapters, and defines their functions.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aMpwwAsQEeiTNeZmJQOSSg" type="_aMexoAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aMqX0AsQEeiTNeZmJQOSSg" name="start" method="_aZG4YAsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZkycgsQEeiTNeZmJQOSSg">
            <body>This function starts the view and model.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaOSsAsQEeiTNeZmJQOSSg" name="" memberEnd="_aaOSsQsQEeiTNeZmJQOSSg _aYAFIAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaOSsQsQEeiTNeZmJQOSSg" name="" type="_aMexoAsQEeiTNeZmJQOSSg" association="_aaOSsAsQEeiTNeZmJQOSSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aaOSswsQEeiTNeZmJQOSSg" name="" memberEnd="_aaOStAsQEeiTNeZmJQOSSg _aYBTQAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aaOStAsQEeiTNeZmJQOSSg" name="" type="_aMexoAsQEeiTNeZmJQOSSg" association="_aaOSswsQEeiTNeZmJQOSSg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_aIg3oQsQEeiTNeZmJQOSSg" name="util">
      <packagedElement xmi:type="uml:Class" xmi:id="_aPmXEAsQEeiTNeZmJQOSSg" name="Dispatcher">
        <ownedComment xmi:id="_aZujcwsQEeiTNeZmJQOSSg">
          <body>A simplified Observable class that immediately notifies its Observers when its
notifyAll() method is called. The changed state of the Dispatcher does not need
to be separately set.
@author sn32, kyl3</body>
        </ownedComment>
        <generalization xmi:id="_aXkAQgsQEeiTNeZmJQOSSg" general="_aU1cYQsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZc2oAsQEeiTNeZmJQOSSg" name="notifyAll" specification="_aXkAQAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZc2oQsQEeiTNeZmJQOSSg" name="param" type="_aXERAQsQEeiTNeZmJQOSSg"/>
          <language>java</language>
          <body>setChanged();
     notifyObservers(param);
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aXkAQAsQEeiTNeZmJQOSSg" name="notifyAll" method="_aZc2oAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aXkAQQsQEeiTNeZmJQOSSg" name="param" type="_aXERAQsQEeiTNeZmJQOSSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_aPrPkAsQEeiTNeZmJQOSSg" name="IRandomizer">
        <ownedOperation xmi:id="_aPtEwAsQEeiTNeZmJQOSSg" name="randomInt">
          <ownedComment xmi:id="_aZujdgsQEeiTNeZmJQOSSg">
            <body>Returns a random integer greater than or equal to min and less than or equal to max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return an int subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_aPtr0AsQEeiTNeZmJQOSSg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aPtr0QsQEeiTNeZmJQOSSg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aPtr0gsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_aPuS4AsQEeiTNeZmJQOSSg" name="randomDouble">
          <ownedComment xmi:id="_aZujdwsQEeiTNeZmJQOSSg">
            <body>Returns a random double greater than or equal to min and less than max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return a double subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_aPuS4QsQEeiTNeZmJQOSSg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aPuS4gsQEeiTNeZmJQOSSg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aPuS4wsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_aPvhAAsQEeiTNeZmJQOSSg" name="randomColor">
          <ownedComment xmi:id="_aZvKggsQEeiTNeZmJQOSSg">
            <body>Generates a random color
	 * @return a random Color object</body>
          </ownedComment>
          <ownedParameter xmi:id="_aXo4wAsQEeiTNeZmJQOSSg" type="_aUzAIAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXknUAsQEeiTNeZmJQOSSg" name="randomLoc">
          <ownedComment xmi:id="_aZujdAsQEeiTNeZmJQOSSg">
            <body>Generates a random location point subject to the constraint that 0 less than x less than rect.width
	 * and 0 less than y less than rect.height.
	 * @param rect The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_aXknUQsQEeiTNeZmJQOSSg" name="rect" type="_aVCQsAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXknUgsQEeiTNeZmJQOSSg" type="_aU0OQQsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXl1cQsQEeiTNeZmJQOSSg" name="randomLoc">
          <ownedComment xmi:id="_aZujdQsQEeiTNeZmJQOSSg">
            <body>Generates a random location point subject to the constraint that 0 less than x less than dim.width
	 * and 0 less than y less than dim.height.
	 * @param dim The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_aXmcgAsQEeiTNeZmJQOSSg" name="dim" type="_aXlOYAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXmcgQsQEeiTNeZmJQOSSg" type="_aU0OQQsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXmcggsQEeiTNeZmJQOSSg" name="randomVel">
          <ownedComment xmi:id="_aZujeAsQEeiTNeZmJQOSSg">
            <body>Returns a random velocity (as a Point) subject to the constraint that the absolute value
	 * of the velocity (speed) within the bound (inclusive) defined by rect. Thus the resultant
	 * velocity may be negative. The given Rectangle should use all positive values.
	 * @param rect The bounds for the absolute value of the velocity in the x and y directions.  
	 * @return a Point object with x and y subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aXmcgwsQEeiTNeZmJQOSSg" name="rect" type="_aVCQsAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXnDkAsQEeiTNeZmJQOSSg" type="_aU0OQQsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXnDkQsQEeiTNeZmJQOSSg" name="randomDim">
          <ownedComment xmi:id="_aZvKgAsQEeiTNeZmJQOSSg">
            <body>Returns a random square Dimension, whose width is maxDim.width/2 less than width less than maxDim.width
	 * @param maxDim  The bounds on the side of the created Dimension.
	 * @return A random square Dimension subject to the given bound</body>
          </ownedComment>
          <ownedParameter xmi:id="_aXnqoAsQEeiTNeZmJQOSSg" name="maxDim" type="_aXlOYAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXnqoQsQEeiTNeZmJQOSSg" type="_aXlOYAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXoRsAsQEeiTNeZmJQOSSg" name="randomBounds">
          <ownedComment xmi:id="_aZvKgQsQEeiTNeZmJQOSSg">
            <body>Generates a randomly located and sized rectangle
	 * @param rect  The bounds for the location of the created rectangle
	 * @param maxDim  The bounds for the dimensions of the create rectangle
	 * @return A Rectangle with location and dimensions subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aXoRsQsQEeiTNeZmJQOSSg" name="rect" type="_aVCQsAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXoRsgsQEeiTNeZmJQOSSg" name="maxDim" type="_aXlOYAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXoRswsQEeiTNeZmJQOSSg" type="_aVCQsAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXo4wQsQEeiTNeZmJQOSSg" name="randomChoice">
          <ownedComment xmi:id="_aZvKgwsQEeiTNeZmJQOSSg">
            <body>Returns a random choice of one of two objects, x and y, where probX is the probability 
	 * that x will be picked (0 less than x less than 1).
	 * @param x The first of two choices
	 * @param y The second of two choices
	 * @param probX  The probability of the first choice
	 * @return Either x or y as per the probability of choosing them.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aXo4wgsQEeiTNeZmJQOSSg" name="x" type="_aXERAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXo4wwsQEeiTNeZmJQOSSg" name="y" type="_aXERAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXo4xAsQEeiTNeZmJQOSSg" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXpf0AsQEeiTNeZmJQOSSg" type="_aXERAQsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aPzycAsQEeiTNeZmJQOSSg" name="Randomizer">
        <ownedComment xmi:id="_aZvKhAsQEeiTNeZmJQOSSg">
          <body>Utility class that supplies  class routines for generating various random values</body>
        </ownedComment>
        <ownedAttribute xmi:id="_aYcKAAsQEeiTNeZmJQOSSg" name="Singleton" isStatic="true" type="_aPzycAsQEeiTNeZmJQOSSg" association="_aacVIAsQEeiTNeZmJQOSSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYcKAQsQEeiTNeZmJQOSSg" value="new Randomizer()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_aWQYsAsQEeiTNeZmJQOSSg" client="_aPzycAsQEeiTNeZmJQOSSg" supplier="_aPrPkAsQEeiTNeZmJQOSSg" contract="_aPrPkAsQEeiTNeZmJQOSSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZc2ogsQEeiTNeZmJQOSSg" name="randomLoc" specification="_aXqG4AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZc2owsQEeiTNeZmJQOSSg" name="rect" type="_aVCQsAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZc2pAsQEeiTNeZmJQOSSg" type="_aU0OQQsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, rect.width), randomInt(0, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZc2pQsQEeiTNeZmJQOSSg" name="randomLoc" specification="_aXqt8QsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZc2pgsQEeiTNeZmJQOSSg" name="dim" type="_aXlOYAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZc2pwsQEeiTNeZmJQOSSg" type="_aU0OQQsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, dim.width), randomInt(0, dim.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZddsAsQEeiTNeZmJQOSSg" name="randomInt" specification="_aP2OsAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZddsQsQEeiTNeZmJQOSSg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZddsgsQEeiTNeZmJQOSSg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZddswsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int)Math.floor((Math.random()*(1+max-min))+min);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZddtAsQEeiTNeZmJQOSSg" name="randomDouble" specification="_aP21wAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZddtQsQEeiTNeZmJQOSSg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZddtgsQEeiTNeZmJQOSSg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZddtwsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return (Math.random()*(max-min))+min;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZdduAsQEeiTNeZmJQOSSg" name="randomVel" specification="_aXr8EAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZdduQsQEeiTNeZmJQOSSg" name="rect" type="_aVCQsAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZddugsQEeiTNeZmJQOSSg" type="_aU0OQQsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>return (new Point (randomInt(-rect.width, rect.width), randomInt(-rect.height, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZeEwAsQEeiTNeZmJQOSSg" name="randomDim" specification="_aXsjIAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZeEwQsQEeiTNeZmJQOSSg" name="maxDim" type="_aXlOYAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZeEwgsQEeiTNeZmJQOSSg" type="_aXlOYAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>int x =  randomInt(maxDim.width/2,maxDim.width);
		return new Dimension(x,x);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZeEwwsQEeiTNeZmJQOSSg" name="randomBounds" specification="_aXtxQAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZeExAsQEeiTNeZmJQOSSg" name="rect" type="_aVCQsAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZeExQsQEeiTNeZmJQOSSg" name="maxDim" type="_aXlOYAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZeExgsQEeiTNeZmJQOSSg" type="_aVCQsAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>return new Rectangle(randomLoc(rect), randomDim(maxDim));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZeExwsQEeiTNeZmJQOSSg" name="randomColor" specification="_aP4D4AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZeEyAsQEeiTNeZmJQOSSg" type="_aUzAIAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>return new Color( randomInt(0,255),randomInt(0,255),randomInt(0,255));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZer0AsQEeiTNeZmJQOSSg" name="randomChoice" specification="_aXuYUQsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZer0QsQEeiTNeZmJQOSSg" name="x" type="_aXERAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZer0gsQEeiTNeZmJQOSSg" name="y" type="_aXERAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aZer0wsQEeiTNeZmJQOSSg" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZer1AsQEeiTNeZmJQOSSg" type="_aXERAQsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>return (Math.random() &lt; probX) ? x: y;

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aP1AkAsQEeiTNeZmJQOSSg" name="Randomizer" visibility="private">
          <eAnnotations xmi:id="_aP1AkQsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aP1AkgsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_aP1noQsQEeiTNeZmJQOSSg" type="_aPzycAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aP2OsAsQEeiTNeZmJQOSSg" name="randomInt" method="_aZddsAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aP2OsQsQEeiTNeZmJQOSSg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aP2OsgsQEeiTNeZmJQOSSg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aP2OswsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_aP21wAsQEeiTNeZmJQOSSg" name="randomDouble" method="_aZddtAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aP21wQsQEeiTNeZmJQOSSg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aP21wgsQEeiTNeZmJQOSSg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aP3c0AsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_aP4D4AsQEeiTNeZmJQOSSg" name="randomColor" method="_aZeExwsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aXuYUAsQEeiTNeZmJQOSSg" type="_aUzAIAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXqG4AsQEeiTNeZmJQOSSg" name="randomLoc" method="_aZc2ogsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aXqG4QsQEeiTNeZmJQOSSg" name="rect" type="_aVCQsAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXqt8AsQEeiTNeZmJQOSSg" type="_aU0OQQsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXqt8QsQEeiTNeZmJQOSSg" name="randomLoc" method="_aZc2pQsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aXqt8gsQEeiTNeZmJQOSSg" name="dim" type="_aXlOYAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXrVAAsQEeiTNeZmJQOSSg" type="_aU0OQQsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXr8EAsQEeiTNeZmJQOSSg" name="randomVel" method="_aZdduAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aXr8EQsQEeiTNeZmJQOSSg" name="rect" type="_aVCQsAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXr8EgsQEeiTNeZmJQOSSg" type="_aU0OQQsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXsjIAsQEeiTNeZmJQOSSg" name="randomDim" method="_aZeEwAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aXsjIQsQEeiTNeZmJQOSSg" name="maxDim" type="_aXlOYAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXtKMAsQEeiTNeZmJQOSSg" type="_aXlOYAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXtxQAsQEeiTNeZmJQOSSg" name="randomBounds" method="_aZeEwwsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aXtxQQsQEeiTNeZmJQOSSg" name="rect" type="_aVCQsAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXtxQgsQEeiTNeZmJQOSSg" name="maxDim" type="_aXlOYAsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXtxQwsQEeiTNeZmJQOSSg" type="_aVCQsAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aXuYUQsQEeiTNeZmJQOSSg" name="randomChoice" method="_aZer0AsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aXuYUgsQEeiTNeZmJQOSSg" name="x" type="_aXERAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXu_YAsQEeiTNeZmJQOSSg" name="y" type="_aXERAQsQEeiTNeZmJQOSSg"/>
          <ownedParameter xmi:id="_aXu_YQsQEeiTNeZmJQOSSg" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aXu_YgsQEeiTNeZmJQOSSg" type="_aXERAQsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aP88YAsQEeiTNeZmJQOSSg" name="SineMaker">
        <ownedComment xmi:id="_aZvKhQsQEeiTNeZmJQOSSg">
          <body>A utility class that can be used to create smoothly varying sinusoidal
numerical data.
Note that this is not a singleton class nor does it have static methods as
its behavior depends on the minimum, maximum and delta values given to 
its constructor.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_aYdYIAsQEeiTNeZmJQOSSg" name="_mid" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYd_MQsQEeiTNeZmJQOSSg" name="_ampl" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYemQQsQEeiTNeZmJQOSSg" name="_delta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aYfNUQsQEeiTNeZmJQOSSg" name="_theta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aYfNUgsQEeiTNeZmJQOSSg" value="-Math.PI/2.0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZfS4AsQEeiTNeZmJQOSSg" name="SineMaker" specification="_aP-xkAsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZfS4QsQEeiTNeZmJQOSSg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZfS4gsQEeiTNeZmJQOSSg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZfS4wsQEeiTNeZmJQOSSg" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aZfS5AsQEeiTNeZmJQOSSg" type="_aP88YAsQEeiTNeZmJQOSSg" direction="return"/>
          <language>java</language>
          <body>_mid = (max+min)/2.0;
		_ampl = (max-min)/2.0;
		_delta = delta;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZfS5QsQEeiTNeZmJQOSSg" name="getDblVal" specification="_aP_YpQsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZfS5gsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double result = _mid + _ampl*Math.sin(_theta);
		_theta += _delta; // shorthand for _theta = _theta + _delta
		return result;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aZfS5wsQEeiTNeZmJQOSSg" name="getIntVal" specification="_aP__sQsQEeiTNeZmJQOSSg">
          <ownedParameter xmi:id="_aZfS6AsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int) Math.round(getDblVal());
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aP-xkAsQEeiTNeZmJQOSSg" name="SineMaker" method="_aZfS4AsQEeiTNeZmJQOSSg">
          <eAnnotations xmi:id="_aP_YogsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aP_YowsQEeiTNeZmJQOSSg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_aZvKhgsQEeiTNeZmJQOSSg">
            <body>The constructor takes several values to control the object's behavior.
	 * @param min The minimum and initial value to produce.
	 * @param max The maximum value to produce.
	 * @param delta The amount in radians that the generating angle is incremented each time
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_aP-xkQsQEeiTNeZmJQOSSg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aP_YoAsQEeiTNeZmJQOSSg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aP_YoQsQEeiTNeZmJQOSSg" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aP_YpAsQEeiTNeZmJQOSSg" type="_aP88YAsQEeiTNeZmJQOSSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aP_YpQsQEeiTNeZmJQOSSg" name="getDblVal" method="_aZfS5QsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZvKhwsQEeiTNeZmJQOSSg">
            <body>Returns a different value each time it is called.  The value varies smoothly in a 
	 * sinusoidal fashion, incrementing each time as per the above specified delta 
	 * angle increase.
	 * @return the next value as a double</body>
          </ownedComment>
          <ownedParameter xmi:id="_aP__sAsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_aP__sQsQEeiTNeZmJQOSSg" name="getIntVal" method="_aZfS5wsQEeiTNeZmJQOSSg">
          <ownedComment xmi:id="_aZvKiAsQEeiTNeZmJQOSSg">
            <body>Same as getDblVal, but returns the result rounded to the nearest integer.
	 * Note that getDblVal and getIntVal are not independent as getIntVal merely calls
	 * getDblVal.
	 * @return the next value as an int</body>
          </ownedComment>
          <ownedParameter xmi:id="_aP__sgsQEeiTNeZmJQOSSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aacVIAsQEeiTNeZmJQOSSg" name="" memberEnd="_aacVIQsQEeiTNeZmJQOSSg _aYcKAAsQEeiTNeZmJQOSSg">
        <ownedEnd xmi:id="_aacVIQsQEeiTNeZmJQOSSg" name="" type="_aPzycAsQEeiTNeZmJQOSSg" association="_aacVIAsQEeiTNeZmJQOSSg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_aI4rEAsQEeiTNeZmJQOSSg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_aI4rEQsQEeiTNeZmJQOSSg" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_aVDe0QsQEeiTNeZmJQOSSg" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aWWfUAsQEeiTNeZmJQOSSg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aWXGYQsQEeiTNeZmJQOSSg" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aWYUgQsQEeiTNeZmJQOSSg" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aWawwQsQEeiTNeZmJQOSSg" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aWdNAQsQEeiTNeZmJQOSSg" name="JComboBox"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_YkW9QAsQEeiTNeZmJQOSSg">
      <eAnnotations xmi:id="_YkuJoAsQEeiTNeZmJQOSSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_Yk6W4AsQEeiTNeZmJQOSSg" base_Package="_YNfVYAsQEeiTNeZmJQOSSg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Array xmi:id="_aMn7kAsQEeiTNeZmJQOSSg" base_Element="_aMlfUQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aM1-AAsQEeiTNeZmJQOSSg" base_Element="_aM1W8AsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aNW7YAsQEeiTNeZmJQOSSg" base_Element="_aNWUUAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aOF7MAsQEeiTNeZmJQOSSg" base_Element="_aOEtEAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aOI-gAsQEeiTNeZmJQOSSg" base_Element="_aOEtEAsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aOJlkAsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aON3AAsQEeiTNeZmJQOSSg" base_Element="_aONP8AsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aOdHkAsQEeiTNeZmJQOSSg" base_Element="_aOcggAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aOeVsAsQEeiTNeZmJQOSSg" base_Element="_aOduoAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aO4lYAsQEeiTNeZmJQOSSg" base_Element="_aO3-UAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aO5McAsQEeiTNeZmJQOSSg" base_Element="_aO3-UAsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aO5zgAsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aPELkAsQEeiTNeZmJQOSSg" base_Element="_aPBIQAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aPEyoAsQEeiTNeZmJQOSSg" base_Element="_aPBIQAsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aPEyoQsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aPIdAAsQEeiTNeZmJQOSSg" base_Element="_aPHO4AsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aPJrIAsQEeiTNeZmJQOSSg" base_Element="_aPHO4AsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aPJrIQsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aP1noAsQEeiTNeZmJQOSSg" base_Element="_aP1AkAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Generics xmi:id="_aQDDAAsQEeiTNeZmJQOSSg" genericsValue="TDropListItem" base_Element="_aQBN0AsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Generics xmi:id="_aQQeYAsQEeiTNeZmJQOSSg" genericsValue="TDropListItem" base_Element="_aQPQQAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aUdB4AsQEeiTNeZmJQOSSg" base_Element="_aUbzwAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aUeQAAsQEeiTNeZmJQOSSg" base_Element="_aUdB4QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aUfeIAsQEeiTNeZmJQOSSg" base_Element="_aUeQAQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aUh6YAsQEeiTNeZmJQOSSg" base_Element="_aUgsQAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aUkWoAsQEeiTNeZmJQOSSg" base_Element="_aUjvkwsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aUk9sAsQEeiTNeZmJQOSSg" base_Element="_aUjvkwsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aUk9sQsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aUv80AsQEeiTNeZmJQOSSg" base_Element="_aUvVwAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aU0OQAsQEeiTNeZmJQOSSg" base_Element="_aUzAIAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aU1cYAsQEeiTNeZmJQOSSg" base_Element="_aU0OQQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aU2qgAsQEeiTNeZmJQOSSg" base_Element="_aU1cYQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aU34oAsQEeiTNeZmJQOSSg" base_Element="_aU2qgQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aVBCkAsQEeiTNeZmJQOSSg" base_Element="_aVAbgAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aVBpoAsQEeiTNeZmJQOSSg" base_Element="_aVAbgAsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aVBpoQsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_aVDe0AsQEeiTNeZmJQOSSg" base_Element="_aVCQsAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aVEs8AsQEeiTNeZmJQOSSg" base_Element="_aVDe0QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aVLaoAsQEeiTNeZmJQOSSg" base_Element="_aVKzkAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aVLaoQsQEeiTNeZmJQOSSg" base_Element="_aVKzkAsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aVMBsAsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aVNP0AsQEeiTNeZmJQOSSg" base_Element="_aVMowAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aVN24AsQEeiTNeZmJQOSSg" base_Element="_aVMowAsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aVN24QsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aVRhQAsQEeiTNeZmJQOSSg" base_Element="_aVQTIQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aVSIUAsQEeiTNeZmJQOSSg" base_Element="_aVQTIQsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aVSIUQsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_aVVLoAsQEeiTNeZmJQOSSg" base_Element="_aVTWcAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aVWZwAsQEeiTNeZmJQOSSg" base_Element="_aVVysAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aVYO8QsQEeiTNeZmJQOSSg" base_Element="_aVXn4QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aVY2AAsQEeiTNeZmJQOSSg" base_Element="_aVXn4QsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aVY2AQsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_aVZdEwsQEeiTNeZmJQOSSg" base_Element="_aVZdEAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aVfjsAsQEeiTNeZmJQOSSg" base_Element="_aVdHcwsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aVgx0AsQEeiTNeZmJQOSSg" base_Element="_aVgKwAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aVh_8AsQEeiTNeZmJQOSSg" base_Element="_aVhY4AsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aVjOEAsQEeiTNeZmJQOSSg" base_Element="_aVh_8QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Array xmi:id="_aVpUsQsQEeiTNeZmJQOSSg" base_Element="_aVotoQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aVuNMgsQEeiTNeZmJQOSSg" base_Element="_aVtmIQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aVwCYAsQEeiTNeZmJQOSSg" base_Element="_aVtmIQsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aVwCYQsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_aVyeoAsQEeiTNeZmJQOSSg" base_Element="_aVwpcAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aV9dwAsQEeiTNeZmJQOSSg" base_Element="_aV82sAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aV-E0gsQEeiTNeZmJQOSSg" base_Element="_aV82sAsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aV-E0wsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aV_6AAsQEeiTNeZmJQOSSg" base_Element="_aV_S8AsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aWBvMAsQEeiTNeZmJQOSSg" base_Element="_aWBIIAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aWCWQAsQEeiTNeZmJQOSSg" base_Element="_aWBIIAsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aWCWQQsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aWC9UwsQEeiTNeZmJQOSSg" base_Element="_aWC9UAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aWDkYAsQEeiTNeZmJQOSSg" base_Element="_aWC9UAsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aWDkYQsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aWFZkAsQEeiTNeZmJQOSSg" base_Element="_aWEygAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aWFZkQsQEeiTNeZmJQOSSg" base_Element="_aWEygAsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aWFZkgsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aWH10AsQEeiTNeZmJQOSSg" base_Element="_aWHOwAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aWIc4AsQEeiTNeZmJQOSSg" base_Element="_aWHOwAsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aWIc4QsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aWOjgQsQEeiTNeZmJQOSSg" base_Element="_aWN8cQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aWPKkAsQEeiTNeZmJQOSSg" base_Element="_aWN8cQsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aWPKkQsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_aWV4QAsQEeiTNeZmJQOSSg" base_Element="_aWVRMAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aWXGYAsQEeiTNeZmJQOSSg" base_Element="_aWWfUAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aWYUgAsQEeiTNeZmJQOSSg" base_Element="_aWXGYQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aWawwAsQEeiTNeZmJQOSSg" base_Element="_aWYUgQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aWbX0AsQEeiTNeZmJQOSSg" base_Element="_aWawwQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aWb-4AsQEeiTNeZmJQOSSg" base_Element="_aWbX0QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aWdNAAsQEeiTNeZmJQOSSg" base_Element="_aWb-4QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aWebIAsQEeiTNeZmJQOSSg" base_Element="_aWdNAQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aWfpQAsQEeiTNeZmJQOSSg" base_Element="_aWebIQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aWg3YAsQEeiTNeZmJQOSSg" base_Element="_aWfpQQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Generics xmi:id="_aWkhwAsQEeiTNeZmJQOSSg" genericsValue="TDropListItem" base_Element="_aWjToAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aW6gAAsQEeiTNeZmJQOSSg" base_Element="_aW5R4AsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aW6gAQsQEeiTNeZmJQOSSg" base_Element="_aW5R4AsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aW7HEAsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aW7uIQsQEeiTNeZmJQOSSg" base_Element="_aW7HEQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aW8VMAsQEeiTNeZmJQOSSg" base_Element="_aW7HEQsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aW8VMQsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aW-KYwsQEeiTNeZmJQOSSg" base_Element="_aW-KYAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aXE4EAsQEeiTNeZmJQOSSg" base_Element="_aXERAQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aXJJgAsQEeiTNeZmJQOSSg" base_Element="_aXIicAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aXJwkAsQEeiTNeZmJQOSSg" base_Element="_aXIicAsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aXJwkQsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aXSTcAsQEeiTNeZmJQOSSg" base_Element="_aXRsYAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aXS6gAsQEeiTNeZmJQOSSg" base_Element="_aXRsYAsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aXS6gQsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aXXL8AsQEeiTNeZmJQOSSg" base_Element="_aXV90AsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aXXzAAsQEeiTNeZmJQOSSg" base_Element="_aXV90AsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aXXzAQsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aXd5owsQEeiTNeZmJQOSSg" base_Element="_aXd5oAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Annotations xmi:id="_aXegsAsQEeiTNeZmJQOSSg" base_Element="_aXd5oAsQEeiTNeZmJQOSSg">
    <annotations xmi:id="_aXegsQsQEeiTNeZmJQOSSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_aXl1cAsQEeiTNeZmJQOSSg" base_Element="_aXlOYAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aX3iQAsQEeiTNeZmJQOSSg" base_Element="_aX27MAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYAsMAsQEeiTNeZmJQOSSg" base_Element="_aYAFIAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Generics xmi:id="_aYB6UAsQEeiTNeZmJQOSSg" genericsValue="?" base_Element="_aYBTQAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYChYAsQEeiTNeZmJQOSSg" base_Element="_aYBTQAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYDIcAsQEeiTNeZmJQOSSg" base_Element="_aYChYQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYDvgQsQEeiTNeZmJQOSSg" base_Element="_aYDvgAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYFksQsQEeiTNeZmJQOSSg" base_Element="_aYFksAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYGy0AsQEeiTNeZmJQOSSg" base_Element="_aYGLwQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYHZ4AsQEeiTNeZmJQOSSg" base_Element="_aYGy0gsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYJPEAsQEeiTNeZmJQOSSg" base_Element="_aYIoAAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYJPEwsQEeiTNeZmJQOSSg" base_Element="_aYJPEQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYJ2IgsQEeiTNeZmJQOSSg" base_Element="_aYJ2IAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYKdMQsQEeiTNeZmJQOSSg" base_Element="_aYJ2IwsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYM5cAsQEeiTNeZmJQOSSg" base_Element="_aYMSYAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYNggAsQEeiTNeZmJQOSSg" base_Element="_aYM5cQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYOHkAsQEeiTNeZmJQOSSg" base_Element="_aYNggQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYOuoQsQEeiTNeZmJQOSSg" base_Element="_aYOuoAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYPVsQsQEeiTNeZmJQOSSg" base_Element="_aYPVsAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Array xmi:id="_aYP8wgsQEeiTNeZmJQOSSg" base_Element="_aYP8wAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYQj0AsQEeiTNeZmJQOSSg" base_Element="_aYP8wAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_aYRK4AsQEeiTNeZmJQOSSg" base_Property="_aYQj0QsQEeiTNeZmJQOSSg" siblings="_aZrgKwsQEeiTNeZmJQOSSg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYRx8AsQEeiTNeZmJQOSSg" base_Element="_aYQj0QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYUOMAsQEeiTNeZmJQOSSg" base_Element="_aYTAEAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYU1QAsQEeiTNeZmJQOSSg" base_Element="_aYUOMQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYVcUAsQEeiTNeZmJQOSSg" base_Element="_aYU1QQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Array xmi:id="_aYWDYAsQEeiTNeZmJQOSSg" base_Element="_aYVcUQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYXRgAsQEeiTNeZmJQOSSg" base_Element="_aYVcUQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYZGsAsQEeiTNeZmJQOSSg" base_Element="_aYYfoAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYZtwAsQEeiTNeZmJQOSSg" base_Element="_aYZGsQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYZtwwsQEeiTNeZmJQOSSg" base_Element="_aYZtwQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYa74AsQEeiTNeZmJQOSSg" base_Element="_aYaU0AsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYcxEAsQEeiTNeZmJQOSSg" base_Element="_aYcKAAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYd_MAsQEeiTNeZmJQOSSg" base_Element="_aYdYIAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYemQAsQEeiTNeZmJQOSSg" base_Element="_aYd_MQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYfNUAsQEeiTNeZmJQOSSg" base_Element="_aYemQQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYf0YAsQEeiTNeZmJQOSSg" base_Element="_aYfNUQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYhCgAsQEeiTNeZmJQOSSg" base_Element="_aYgbcgsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYiQoAsQEeiTNeZmJQOSSg" base_Element="_aYhpkAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYi3sAsQEeiTNeZmJQOSSg" base_Element="_aYiQoQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYjewAsQEeiTNeZmJQOSSg" base_Element="_aYi3sQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Generics xmi:id="_aYkF0AsQEeiTNeZmJQOSSg" genericsValue="TDropListItem" base_Element="_aYjewQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYks4AsQEeiTNeZmJQOSSg" base_Element="_aYjewQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYlT8AsQEeiTNeZmJQOSSg" base_Element="_aYks4QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYmiEAsQEeiTNeZmJQOSSg" base_Element="_aYlT8QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYnJIQsQEeiTNeZmJQOSSg" base_Element="_aYmiEQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYoXQAsQEeiTNeZmJQOSSg" base_Element="_aYnwMAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYoXQwsQEeiTNeZmJQOSSg" base_Element="_aYoXQQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYo-UgsQEeiTNeZmJQOSSg" base_Element="_aYo-UAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Generics xmi:id="_aYplYAsQEeiTNeZmJQOSSg" genericsValue="TDropListItem" base_Element="_aYo-UwsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYqMcAsQEeiTNeZmJQOSSg" base_Element="_aYo-UwsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Generics xmi:id="_aYqMcgsQEeiTNeZmJQOSSg" genericsValue="TDropListItem" base_Element="_aYqMcQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYqzgQsQEeiTNeZmJQOSSg" base_Element="_aYqMcQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYrakAsQEeiTNeZmJQOSSg" base_Element="_aYqzggsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYrakwsQEeiTNeZmJQOSSg" base_Element="_aYrakQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYsBogsQEeiTNeZmJQOSSg" base_Element="_aYsBoAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYsosQsQEeiTNeZmJQOSSg" base_Element="_aYsBowsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYtPwAsQEeiTNeZmJQOSSg" base_Element="_aYsosgsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYt20AsQEeiTNeZmJQOSSg" base_Element="_aYtPwQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Generics xmi:id="_aYud4AsQEeiTNeZmJQOSSg" genericsValue="TDropListItem" base_Element="_aYt20QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aYvE8AsQEeiTNeZmJQOSSg" base_Element="_aYt20QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_aZsHMAsQEeiTNeZmJQOSSg" base_Property="_aZrgKwsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aZsHMQsQEeiTNeZmJQOSSg" base_Element="_aZrgKwsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaKoUAsQEeiTNeZmJQOSSg" base_Element="_aaJaMAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaMdgAsQEeiTNeZmJQOSSg" base_Element="_aaLPYAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaNEkAsQEeiTNeZmJQOSSg" base_Element="_aaMdgQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaNroAsQEeiTNeZmJQOSSg" base_Element="_aaNEkQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaNrowsQEeiTNeZmJQOSSg" base_Element="_aaNroQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaOSsgsQEeiTNeZmJQOSSg" base_Element="_aaOSsAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaO5wAsQEeiTNeZmJQOSSg" base_Element="_aaOSswsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaPg0AsQEeiTNeZmJQOSSg" base_Element="_aaO5wQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaQH4AsQEeiTNeZmJQOSSg" base_Element="_aaPg0QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaQu8AsQEeiTNeZmJQOSSg" base_Element="_aaQH4QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaRWAAsQEeiTNeZmJQOSSg" base_Element="_aaQu8QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaR9EAsQEeiTNeZmJQOSSg" base_Element="_aaRWAQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaSkIAsQEeiTNeZmJQOSSg" base_Element="_aaR9EQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaTLMgsQEeiTNeZmJQOSSg" base_Element="_aaTLMAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaTyQgsQEeiTNeZmJQOSSg" base_Element="_aaTyQAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaUZUAsQEeiTNeZmJQOSSg" base_Element="_aaTyQwsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaVAYAsQEeiTNeZmJQOSSg" base_Element="_aaUZUQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaVncAsQEeiTNeZmJQOSSg" base_Element="_aaVAYQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaVncwsQEeiTNeZmJQOSSg" base_Element="_aaVncQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaW1kAsQEeiTNeZmJQOSSg" base_Element="_aaWOgAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaXcoAsQEeiTNeZmJQOSSg" base_Element="_aaW1kQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaYDsAsQEeiTNeZmJQOSSg" base_Element="_aaXcoQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaYqwgsQEeiTNeZmJQOSSg" base_Element="_aaYqwAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaZ44AsQEeiTNeZmJQOSSg" base_Element="_aaZR0AsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaaf8AsQEeiTNeZmJQOSSg" base_Element="_aaZ44QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aabHAAsQEeiTNeZmJQOSSg" base_Element="_aaaf8QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aabuEAsQEeiTNeZmJQOSSg" base_Element="_aabHAQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aacVIgsQEeiTNeZmJQOSSg" base_Element="_aacVIAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aac8MgsQEeiTNeZmJQOSSg" base_Element="_aac8MAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aadjQAsQEeiTNeZmJQOSSg" base_Element="_aac8MwsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaexYAsQEeiTNeZmJQOSSg" base_Element="_aaeKUAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aafYcAsQEeiTNeZmJQOSSg" base_Element="_aaexYQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaf_gAsQEeiTNeZmJQOSSg" base_Element="_aafYcQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aagmkAsQEeiTNeZmJQOSSg" base_Element="_aaf_gQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aahNoAsQEeiTNeZmJQOSSg" base_Element="_aagmkQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aah0sAsQEeiTNeZmJQOSSg" base_Element="_aahNoQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaibwAsQEeiTNeZmJQOSSg" base_Element="_aah0sQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aajC0AsQEeiTNeZmJQOSSg" base_Element="_aaibwQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aakQ8AsQEeiTNeZmJQOSSg" base_Element="_aajp4AsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aak4AAsQEeiTNeZmJQOSSg" base_Element="_aakQ8QsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aamGIAsQEeiTNeZmJQOSSg" base_Element="_aak4AQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aamtMAsQEeiTNeZmJQOSSg" base_Element="_aamGIQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aanUQAsQEeiTNeZmJQOSSg" base_Element="_aamtMQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aan7UAsQEeiTNeZmJQOSSg" base_Element="_aanUQQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aapJcAsQEeiTNeZmJQOSSg" base_Element="_aaoiYAsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aapwgAsQEeiTNeZmJQOSSg" base_Element="_aapJcQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaqXkAsQEeiTNeZmJQOSSg" base_Element="_aapwgQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aaq-oAsQEeiTNeZmJQOSSg" base_Element="_aaqXkQsQEeiTNeZmJQOSSg"/>
  <UMLLabProfile:Reference xmi:id="_aasMwAsQEeiTNeZmJQOSSg" base_Element="_aarlsAsQEeiTNeZmJQOSSg"/>
</xmi:XMI>
