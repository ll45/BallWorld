<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_VsyNYAt3EeiiCrav3vcpBQ" name="HW04">
    <eAnnotations xmi:id="_V3GnAAt3EeiiCrav3vcpBQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_V3HOEAt3EeiiCrav3vcpBQ" source="codegen">
        <details xmi:id="_V3HOEQt3EeiiCrav3vcpBQ" key="codegenDirectory" value="/HW04/src"/>
        <details xmi:id="_Xa8_YAt3EeiiCrav3vcpBQ" key="AssociatedSourceCode" value="/HW04/src/controller/BallWorldController.java;133705207/1;/HW04/src/model/ADecoratorPaintStrategy.java;3522512554/1;/HW04/src/model/APaintStrategy.java;1740869287/1;/HW04/src/model/Ball.java;544139014/1;/HW04/src/model/BallPaintStrategy.java;538568874/1;/HW04/src/model/BallWorldModel.java;3438198808/1;/HW04/src/model/BreathingStrategy.java;569949667/1;/HW04/src/model/ColorStrategy.java;783269627/1;/HW04/src/model/CompositePaintStrategy.java;2517148635/1;/HW04/src/model/CrashStrategy.java;4279759508/1;/HW04/src/model/EllipsePaintStrategy.java;292774861/1;/HW04/src/model/EllipseShapeFactory.java;1636135608/1;/HW04/src/model/FastStrategy.java;3009224450/1;/HW04/src/model/IBallCmd.java;2100560540/1;/HW04/src/model/IModel2ViewAdapter.java;715642539/1;/HW04/src/model/IPaintStrategy.java;556726924/1;/HW04/src/model/IShapeFactory.java;810833796/1;/HW04/src/model/IStrategyFac.java;3581042476/1;/HW04/src/model/IUpdateStrategy.java;1651050839/1;/HW04/src/model/ImagePaintStrategy.java;2009657845/1;/HW04/src/model/MultiPaintStrategy.java;843652504/1;/HW04/src/model/MultiStrategy.java;1636671415/1;/HW04/src/model/PolygonFactory.java;352231935/1;/HW04/src/model/RectanglePaintStrategy.java;952260073/1;/HW04/src/model/RectangleShapeFactory.java;3860937959/1;/HW04/src/model/ShapePaintStrategy.java;851889235/1;/HW04/src/model/SpawnStrategy.java;3065061180/1;/HW04/src/model/SquarePaintStrategy.java;3526266484/1;/HW04/src/model/StraightStrategy.java;3914615527/1;/HW04/src/model/SwellStrategy.java;1352457759/1;/HW04/src/model/SwitcherStrategy.java;2480375116/1;/HW04/src/model/TeleportStrategy.java;2565727986/1;/HW04/src/model/UprightCompositePaintStrategy.java;585067317/1;/HW04/src/model/UprightImageStrategy.java;3761235521/1;/HW04/src/model/UprightShapePaintStrategy.java;35762995/1;/HW04/src/model/WiggleStrategy.java;4246409471/1;/HW04/src/util/Dispatcher.java;77051068/1;/HW04/src/util/IRandomizer.java;4224991458/1;/HW04/src/util/SineMaker.java;1378225368/1;/HW04/src/util/Randomizer.java;1541548940/1;/HW04/src/view/BallWorldView.java;1506153628/1;/HW04/src/view/IView2ModelAdapter.java;637323524/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_W4ZE4At3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_W4Zr8At3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_W4Zr8Qt3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_W4Zr8gt3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_W4Zr8wt3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_W4Zr9At3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_W4Zr9Qt3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_W4Zr9gt3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_W4aTAAt3EeiiCrav3vcpBQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_W4a6EAt3EeiiCrav3vcpBQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_W4bhIAt3EeiiCrav3vcpBQ" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_W4iO0At3EeiiCrav3vcpBQ" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_XFhh8At3EeiiCrav3vcpBQ" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_XGGJsQt3EeiiCrav3vcpBQ" name="Ellipse2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_W6FuAAt3EeiiCrav3vcpBQ" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_XG6pEQt3EeiiCrav3vcpBQ" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_XG7QIQt3EeiiCrav3vcpBQ" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_XFdQgAt3EeiiCrav3vcpBQ" name="Container"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XFeeoQt3EeiiCrav3vcpBQ" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XFgT0At3EeiiCrav3vcpBQ" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XFqr4At3EeiiCrav3vcpBQ" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XFrS8Qt3EeiiCrav3vcpBQ" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XF3gMAt3EeiiCrav3vcpBQ" name="Rectangle"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_XGFioAt3EeiiCrav3vcpBQ" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XGNecAt3EeiiCrav3vcpBQ" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XGOFgQt3EeiiCrav3vcpBQ" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XGPToQt3EeiiCrav3vcpBQ" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XGP6sQt3EeiiCrav3vcpBQ" name="Toolkit"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XGbg4At3EeiiCrav3vcpBQ" name="Polygon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XG2-sAt3EeiiCrav3vcpBQ" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XG9FUAt3EeiiCrav3vcpBQ" name="FlowLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XG9sYQt3EeiiCrav3vcpBQ" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XH4SYQt3EeiiCrav3vcpBQ" name="Dimension"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_W4sm4At3EeiiCrav3vcpBQ" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_XFr6AQt3EeiiCrav3vcpBQ" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_XFtIIQt3EeiiCrav3vcpBQ" name="Observer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_XHZKMAt3EeiiCrav3vcpBQ" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_XHZKMQt3EeiiCrav3vcpBQ" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_W4cIMAt3EeiiCrav3vcpBQ" name="model">
      <packagedElement xmi:type="uml:Class" xmi:id="_W7T2AAt3EeiiCrav3vcpBQ" name="ADecoratorPaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_XJWSAwt3EeiiCrav3vcpBQ">
          <body>This is the ADecoratePaintStrategy class that is abstract. It has the basic functionality&#xD;
of a paint strategy, and the methods simply delegate to the decoree.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_XFlMUAt3EeiiCrav3vcpBQ" general="_W7Z8oAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XIQs4At3EeiiCrav3vcpBQ" name="decoree" visibility="private" type="_W7Z8oAt3EeiiCrav3vcpBQ" association="_XJwhsAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XI8pYAt3EeiiCrav3vcpBQ" name="ADecoratorPaintStrategy" specification="_XFiwEQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XI8pYQt3EeiiCrav3vcpBQ" name="decoree" type="_W7Z8oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XI8pYgt3EeiiCrav3vcpBQ" type="_W7T2AAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(new AffineTransform());&#xD;
		this.decoree = decoree;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XI8pYwt3EeiiCrav3vcpBQ" name="init" specification="_XFjXIwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XI8pZAt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>decoree.init(ball);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XI9QcAt3EeiiCrav3vcpBQ" name="paintXfrm" specification="_XHROYAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XI9QcQt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XI9Qcgt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XI9Qcwt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>decoree.paintXfrm(g, ball, at);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XI9QdAt3EeiiCrav3vcpBQ" name="paint" specification="_XHScgAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XI9QdQt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XI9Qdgt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>decoree.paint(g, ball);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XFiwEQt3EeiiCrav3vcpBQ" name="ADecoratorPaintStrategy" method="_XI8pYAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XFjXIAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XFjXIQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_XJWSBAt3EeiiCrav3vcpBQ">
            <body>This is the constructor for ADecoratorPaintStrategy, that calls the&#xD;
	 * super constructor with an affine transform, and sets the decoree.&#xD;
	 * @param decoree An APaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_XFiwEgt3EeiiCrav3vcpBQ" name="decoree" type="_W7Z8oAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XFjXIgt3EeiiCrav3vcpBQ" type="_W7T2AAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XFjXIwt3EeiiCrav3vcpBQ" name="init" method="_XI8pYwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XFjXJAt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHROYAt3EeiiCrav3vcpBQ" name="paintXfrm" method="_XI9QcAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XHROYQt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHROYgt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHROYwt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHScgAt3EeiiCrav3vcpBQ" name="paint" method="_XI9QdAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XHScgQt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHScggt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W7Z8oAt3EeiiCrav3vcpBQ" name="APaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_XJWSBQt3EeiiCrav3vcpBQ">
          <body>This is an abstract class that defines the top level affine transform based
paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_XIRT8At3EeiiCrav3vcpBQ" name="at" visibility="package" type="_XFhh8At3EeiiCrav3vcpBQ" association="_XJxIwQt3EeiiCrav3vcpBQ"/>
        <interfaceRealization xmi:id="_XFnBgAt3EeiiCrav3vcpBQ" client="_W7Z8oAt3EeiiCrav3vcpBQ" supplier="_W8I8cAt3EeiiCrav3vcpBQ" contract="_W8I8cAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XI93gAt3EeiiCrav3vcpBQ" name="APaintStrategy" specification="_XHTqoAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XI93gQt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XI93ggt3EeiiCrav3vcpBQ" type="_W7Z8oAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.at = at;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XI93gwt3EeiiCrav3vcpBQ" name="paint" specification="_XHURtAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XI93hAt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XI93hQt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>double scale = ball.getRad();
		at.setToTranslation(ball.getLoc().x, ball.getLoc().y);
		at.scale(scale, scale);
		at.rotate(ball.getVel().x, ball.getVel().y);
		g.setColor(ball.getCol());    
		paintCfg(g, ball);
		paintXfrm(g, ball, at);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XI-ekAt3EeiiCrav3vcpBQ" name="getAT" specification="_W7cY4At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XI-ekQt3EeiiCrav3vcpBQ" type="_XFhh8At3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return this.at;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W7ajsAt3EeiiCrav3vcpBQ" name="APaintStrategy">
          <eAnnotations xmi:id="_W7bKwAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_W7bKwQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_W7bx0Qt3EeiiCrav3vcpBQ" type="_W7Z8oAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_W7cY4At3EeiiCrav3vcpBQ" name="getAT" method="_XI-ekAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJW5EAt3EeiiCrav3vcpBQ">
            <body>This is a getter that returns the Affine Transform
	 * @return An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_XHWG4At3EeiiCrav3vcpBQ" type="_XFhh8At3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XFnokAt3EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_XFnokQt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHTqoAt3EeiiCrav3vcpBQ" name="APaintStrategy" method="_XI93gAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XHURsQt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XHURsgt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_XJWSBgt3EeiiCrav3vcpBQ">
            <body>This is the constructor that takes in Affine Transform.
	 * @param at</body>
          </ownedComment>
          <ownedParameter xmi:id="_XHURsAt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHURswt3EeiiCrav3vcpBQ" type="_W7Z8oAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHURtAt3EeiiCrav3vcpBQ" name="paint" method="_XI93gwt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJWSBwt3EeiiCrav3vcpBQ">
            <body>This function paints the ball on the passed in Graphics object.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XHU4wAt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHU4wQt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHU4wgt3EeiiCrav3vcpBQ" name="paintCfg" visibility="protected">
          <ownedParameter xmi:id="_XHU4wwt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHU4xAt3EeiiCrav3vcpBQ" name="host" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHWG4Qt3EeiiCrav3vcpBQ" name="paintXfrm" isAbstract="true">
          <ownedComment xmi:id="_XJW5EQt3EeiiCrav3vcpBQ">
            <body>This function is a secondary paint operation that is the last step of the above
	 * paint method, which does not calculate its own affine transform, but instead,
	 * uses a supplied affine transform.
	 * @param g A graphics object
	 * @param host The host ball
	 * @param at An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_XHWG4gt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHWG4wt3EeiiCrav3vcpBQ" name="host" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHWG5At3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W7fcMAt3EeiiCrav3vcpBQ" name="Ball">
        <ownedComment xmi:id="_XJW5Egt3EeiiCrav3vcpBQ">
          <body>This is the Ball class, which is what is drawn on the screen, and implements
Observer to use dispatching.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_XIR7AAt3EeiiCrav3vcpBQ" name="col" type="_XFqr4At3EeiiCrav3vcpBQ" association="_XJXgIAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XIR7AQt3EeiiCrav3vcpBQ" name="loc" type="_XFrS8Qt3EeiiCrav3vcpBQ" association="_XJYHMAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XISiEAt3EeiiCrav3vcpBQ" name="rad" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XISiEgt3EeiiCrav3vcpBQ" name="vel" type="_XFrS8Qt3EeiiCrav3vcpBQ" association="_XJYHMgt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XITJIAt3EeiiCrav3vcpBQ" name="con" type="_XFdQgAt3EeiiCrav3vcpBQ" association="_XJYuQQt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XITJIQt3EeiiCrav3vcpBQ" name="strat" visibility="private" type="_W8PqIAt3EeiiCrav3vcpBQ" association="_XJxv0Qt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XITwMAt3EeiiCrav3vcpBQ" name="paintStrat" type="_W8I8cAt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XJy98At3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XITwMQt3EeiiCrav3vcpBQ" name="itr" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XITwMgt3EeiiCrav3vcpBQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIUXQQt3EeiiCrav3vcpBQ" name="radDelta">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_XHXVAAt3EeiiCrav3vcpBQ" client="_W7fcMAt3EeiiCrav3vcpBQ" supplier="_XFtIIQt3EeiiCrav3vcpBQ" contract="_XFtIIQt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XI-ekgt3EeiiCrav3vcpBQ" name="Ball" specification="_XHX8EAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XI-ekwt3EeiiCrav3vcpBQ" name="col" type="_XFqr4At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XI-elAt3EeiiCrav3vcpBQ" name="loc" type="_XFrS8Qt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XI-elQt3EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XI-elgt3EeiiCrav3vcpBQ" name="vel" type="_XFrS8Qt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XI-elwt3EeiiCrav3vcpBQ" name="con" type="_XFdQgAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XI-emAt3EeiiCrav3vcpBQ" name="updateStrat" type="_W8PqIAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XI-emQt3EeiiCrav3vcpBQ" name="paintStrat" type="_W8I8cAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XI-emgt3EeiiCrav3vcpBQ" type="_W7fcMAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>setCol(col);
		setLoc(loc);
		setRad(rad);
		setVel(vel);
		setCon(con);
		setStrat(updateStrat);
		setRadDelta(5);
		setPaintStrat(paintStrat);
		paintStrat.init(this);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XI_FoAt3EeiiCrav3vcpBQ" name="getRad" specification="_W7ifgAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XI_FoQt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XI_Fogt3EeiiCrav3vcpBQ" name="setRad" specification="_W7jGkAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XI_Fowt3EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.rad = rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XI_ssAt3EeiiCrav3vcpBQ" name="move" specification="_W7jGkgt3EeiiCrav3vcpBQ">
          <language>java</language>
          <body>setLoc(new Point(getLoc().x + getVel().x, getLoc().y + getVel().y));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XI_ssQt3EeiiCrav3vcpBQ" name="update" specification="_XHZxQQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XI_ssgt3EeiiCrav3vcpBQ" name="o" type="_XFr6AQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XI_sswt3EeiiCrav3vcpBQ" name="cmd" type="_XHZKMQt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>((IBallCmd) cmd).apply(this, (Dispatcher) o);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJATwAt3EeiiCrav3vcpBQ" name="paint" specification="_XHaYUgt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJATwQt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>getPaintStrat().paint(g, this);
//		g.setColor(this.getCol());
//		g.fillOval(this.getLoc().x - getRad(), this.getLoc().y - getRad(), getRad() * 2, getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJATwgt3EeiiCrav3vcpBQ" name="getStrat" specification="_W7jtoAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJATwwt3EeiiCrav3vcpBQ" type="_W8PqIAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJATxAt3EeiiCrav3vcpBQ" name="setStrat" specification="_XFvkYQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJATxQt3EeiiCrav3vcpBQ" name="strat" type="_W8PqIAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>this.strat = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJA60At3EeiiCrav3vcpBQ" name="getItr" specification="_W7kUsAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJA60Qt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJA60gt3EeiiCrav3vcpBQ" name="setItr" specification="_W7k7wAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJA60wt3EeiiCrav3vcpBQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.itr = itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJA61At3EeiiCrav3vcpBQ" name="bounce" specification="_W7k7wgt3EeiiCrav3vcpBQ">
          <language>java</language>
          <body>// Boundaries of the window
		int rightWall = getCon().getWidth();
		int bottomWall = getCon().getHeight();
		int leftWall = 0;
		int topWall = 0;
		
		int leftX = getLoc().x - getRad();
		int rightX = getLoc().x + getRad();
		
		int bottomY = getLoc().y + getRad();
		int topY = getLoc().y - getRad();
		
		int maxX = rightWall - getRad();
		int minX = getRad();
		
		int maxY = bottomWall - getRad();
		int minY = getRad();

		// Collision detected with left or right wall.
		if (leftX == leftWall || rightX == rightWall) {
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond right wall.
		else if (rightX > rightWall) {
			int diff = getLoc().x - maxX;
			setLoc(new Point(maxX - diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond left wall.
		else if (leftX &lt; leftWall) {
			int diff = minX - getLoc().x;
			setLoc(new Point(minX + diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Collision detected with top or bottom wall.
		else if (topY == topWall || bottomY == bottomWall) {
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond bottom wall.
		else if (bottomY > bottomWall) {
			int diff = getLoc().y - maxY;
			setLoc(new Point(getLoc().x, maxY - diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond top wall.
		else if (topY &lt; topWall) {
			int diff = minY - getLoc().y;
			setLoc(new Point(getLoc().x, minY + diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJA61Qt3EeiiCrav3vcpBQ" name="setPaintStrat" specification="_XFwLcQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJA61gt3EeiiCrav3vcpBQ" name="paintStrat" type="_W8I8cAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>this.paintStrat = paintStrat;
		getPaintStrat().init(this);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W7ifgAt3EeiiCrav3vcpBQ" name="getRad" method="_XI_FoAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJYuRAt3EeiiCrav3vcpBQ">
            <body>This returns the radius of the ball.
	 * @return the rad</body>
          </ownedComment>
          <ownedParameter xmi:id="_W7ifgQt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_W7jGkAt3EeiiCrav3vcpBQ" name="setRad" method="_XI_Fogt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJYuRQt3EeiiCrav3vcpBQ">
            <body>This sets the radius of the ball.
	 * @param rad the rad to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_W7jGkQt3EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_W7jGkgt3EeiiCrav3vcpBQ" name="move" method="_XI_ssAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJYuRgt3EeiiCrav3vcpBQ">
            <body>This function tells the ball to update its current location by the respective velocity
	 * component.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_W7jtoAt3EeiiCrav3vcpBQ" name="getStrat" method="_XJATwgt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJYuSQt3EeiiCrav3vcpBQ">
            <body>This function returns the ball's movement strategy.
	 * @return the strat</body>
          </ownedComment>
          <ownedParameter xmi:id="_XFvkYAt3EeiiCrav3vcpBQ" type="_W8PqIAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_W7kUsAt3EeiiCrav3vcpBQ" name="getItr" method="_XJA60At3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJYuSwt3EeiiCrav3vcpBQ">
            <body>This function returns the current iteration of the ball.
	 * @return the itr</body>
          </ownedComment>
          <ownedParameter xmi:id="_W7kUsQt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_W7k7wAt3EeiiCrav3vcpBQ" name="setItr" method="_XJA60gt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJYuTAt3EeiiCrav3vcpBQ">
            <body>This function sets the current iteration of the ball.
	 * @param itr the itr to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_W7k7wQt3EeiiCrav3vcpBQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_W7k7wgt3EeiiCrav3vcpBQ" name="bounce" method="_XJA61At3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJYuTQt3EeiiCrav3vcpBQ">
            <body>This function checks to see if the ball has come into contact with one of the boundaries of the 
	 *  panel. If it has, this function reverses the velocity of the ball, simulating a rebound off
	 *  of the wall. If, due to the delay of the GUI thread, the ball has passed one of the panel
	 *  boundaries, this function moves the ball to the location it would be at if it had properly 
	 *  bounced off of the wall, and sets the velocity to its appropriate value.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_XFvkYQt3EeiiCrav3vcpBQ" name="setStrat" method="_XJATxAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJYuSgt3EeiiCrav3vcpBQ">
            <body>This function sets the ball's movement strategy.
	 * @param strat the strat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_XFwLcAt3EeiiCrav3vcpBQ" name="strat" type="_W8PqIAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XFwLcQt3EeiiCrav3vcpBQ" name="setPaintStrat" method="_XJA61Qt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJZVUAt3EeiiCrav3vcpBQ">
            <body>This function sets the paint strategy.
	 * @param paintStrat the paintStrat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_XFwLcgt3EeiiCrav3vcpBQ" name="paintStrat" type="_W8I8cAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHX8EAt3EeiiCrav3vcpBQ" name="Ball" method="_XI-ekgt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XHYjJgt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XHYjJwt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_XJYuQwt3EeiiCrav3vcpBQ">
            <body>This is the Ball constructor, which sets its initial values.
	 * @param col The color of the ball
	 * @param loc The initial location of the ball.
	 * @param rad The radius of the ball.
	 * @param vel The initial velocity of the ball.
	 * @param con The container (component) on which the ball is drawn.
	 * @param updateStrat The IUpdateStrategy that decides how to update the ball.
	 * @param paintStrat The IPaintStrategy that decides how to paint the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XHX8EQt3EeiiCrav3vcpBQ" name="col" type="_XFqr4At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHYjIAt3EeiiCrav3vcpBQ" name="loc" type="_XFrS8Qt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHYjIQt3EeiiCrav3vcpBQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHYjIgt3EeiiCrav3vcpBQ" name="vel" type="_XFrS8Qt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHYjIwt3EeiiCrav3vcpBQ" name="con" type="_XFdQgAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHYjJAt3EeiiCrav3vcpBQ" name="updateStrat" type="_W8PqIAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHYjJQt3EeiiCrav3vcpBQ" name="paintStrat" type="_W8I8cAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHYjKAt3EeiiCrav3vcpBQ" type="_W7fcMAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHZxQQt3EeiiCrav3vcpBQ" name="update" method="_XI_ssQt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJYuRwt3EeiiCrav3vcpBQ">
            <body>This function is required when implementing Observer, that tells the ball what to
	 * do when it is notified by the dispatcher.
	 * @param o An observable
	 * @param g An Object, which should be an IBallCmd</body>
          </ownedComment>
          <ownedParameter xmi:id="_XHaYUAt3EeiiCrav3vcpBQ" name="o" type="_XFr6AQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHaYUQt3EeiiCrav3vcpBQ" name="cmd" type="_XHZKMQt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHaYUgt3EeiiCrav3vcpBQ" name="paint" method="_XJATwAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJYuSAt3EeiiCrav3vcpBQ">
            <body>This function determines how to paint the ball, and it delegates
	 * to the paint strategy's paint.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XHaYUwt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W7rpcAt3EeiiCrav3vcpBQ" name="BallPaintStrategy">
        <ownedComment xmi:id="_XJZVUQt3EeiiCrav3vcpBQ">
          <body>This is the ball paint strategy, which implements a paint strategy for a ball.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_XF0c4At3EeiiCrav3vcpBQ" client="_W7rpcAt3EeiiCrav3vcpBQ" supplier="_W8I8cAt3EeiiCrav3vcpBQ" contract="_W8I8cAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJBh4At3EeiiCrav3vcpBQ" name="paint" specification="_XHc0kAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJBh4Qt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJBh4gt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>g.setColor(ball.getCol());
		g.fillOval(ball.getLoc().x - ball.getRad(), ball.getLoc().y - ball.getRad(),
				ball.getRad() * 2, ball.getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W7sQgAt3EeiiCrav3vcpBQ" name="BallPaintStrategy">
          <eAnnotations xmi:id="_W7sQgQt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_W7sQggt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_W7s3kQt3EeiiCrav3vcpBQ" type="_W7rpcAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XF1rAAt3EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_XF1rAQt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHc0kAt3EeiiCrav3vcpBQ" name="paint" method="_XJBh4At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XHc0kQt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHc0kgt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W7uswAt3EeiiCrav3vcpBQ" name="BallWorldModel">
        <ownedComment xmi:id="_XJZVUgt3EeiiCrav3vcpBQ">
          <body>This is the BallWorldModel class, which makes balls, clears balls, and updates the balls.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_XIVlYAt3EeiiCrav3vcpBQ" name="adapter" visibility="private" type="_W8GgMAt3EeiiCrav3vcpBQ" association="_XJzlAQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIVlYQt3EeiiCrav3vcpBQ" value="IModel2ViewAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIWMcQt3EeiiCrav3vcpBQ" name="timeSlice" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIWMcgt3EeiiCrav3vcpBQ" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIWzgQt3EeiiCrav3vcpBQ" name="dispatcher" visibility="private" type="_W9FXoAt3EeiiCrav3vcpBQ" association="_XJ0MEQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIWzggt3EeiiCrav3vcpBQ" value="new Dispatcher()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIXakQt3EeiiCrav3vcpBQ" name="timer" visibility="private" type="_XF4uUQt3EeiiCrav3vcpBQ" association="_XJ0zIQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIXakgt3EeiiCrav3vcpBQ" value="new Timer(timeSlice, (e) -> adapter.update())"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJCI8At3EeiiCrav3vcpBQ" name="BallWorldModel" specification="_XF58cAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJCI8Qt3EeiiCrav3vcpBQ" name="adapter" type="_W8GgMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJCI8gt3EeiiCrav3vcpBQ" type="_W7uswAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.adapter = adapter;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJCI8wt3EeiiCrav3vcpBQ" name="clearBalls" specification="_W7v64At3EeiiCrav3vcpBQ">
          <language>java</language>
          <body>dispatcher.deleteObservers();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJCwAAt3EeiiCrav3vcpBQ" name="start" specification="_W7v64Qt3EeiiCrav3vcpBQ">
          <language>java</language>
          <body>timer.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJCwAQt3EeiiCrav3vcpBQ" name="update" specification="_XHeCsAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJCwAgt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll((IBallCmd) (ball, disp)->{
         // Whatever you want to do with the context Ball!
			ball.setItr(ball.getItr() + 1);
			ball.getStrat().updateState(ball, disp);
			ball.move();
			ball.bounce();
			ball.paint((Graphics) g);
		});
//        dispatcher.notifyAll(g);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJCwAwt3EeiiCrav3vcpBQ" name="loadStrategy" specification="_W7wh8At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJCwBAt3EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJCwBQt3EeiiCrav3vcpBQ" type="_W8PqIAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>Object[] args =  new Object[]{};
		java.lang.reflect.Constructor&lt;?> cons[];
		try {
			cons = Class.forName(strat).getConstructors();
			return (IUpdateStrategy) cons[0].newInstance(args);
		} catch (Exception e) {
			return IStrategyFac._errorStrategyFac.make();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJDXEAt3EeiiCrav3vcpBQ" name="fixName" specification="_W7xJAAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJDXEQt3EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJDXEgt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;model.&quot; + classname.substring(0, 1).toUpperCase() + classname.substring(1).toLowerCase() + &quot;Strategy&quot;;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJDXEwt3EeiiCrav3vcpBQ" name="makeStrategyFac" specification="_W7xwEAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJDXFAt3EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJDXFQt3EeiiCrav3vcpBQ" type="_W8L_wAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>if (null == classname) {
			return IStrategyFac._errorStrategyFac;
		}
	    return new IStrategyFac() {
	        /**
	         * Instantiate a strategy corresponding to the given class name.
	         * @return An IUpdateStrategy instance
	         */
	        public IUpdateStrategy make() {
	        		return loadStrategy(fixName(classname));
	        }

	        /**
	         * Return the given class name string
	         */
	        public String toString() {
	            return classname;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJDXFgt3EeiiCrav3vcpBQ" name="makeBall" specification="_XF7KkAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJDXFwt3EeiiCrav3vcpBQ" name="make" type="_W8PqIAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJDXGAt3EeiiCrav3vcpBQ" name="paintStrat" type="_W8I8cAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>Container con = adapter.getCanvas();
		Randomizer rzr = Randomizer.Singleton;
		
		int startRad = rzr.randomInt(10, 45);
		Point randLoc = rzr.randomLoc(new Rectangle(con.getWidth() - startRad, con.getHeight() - startRad));
		Point startLoc = new Point(randLoc.x + startRad, randLoc.y + startRad);
		Point startVel = new Point(0, 0);

		// Handles case where both x- and y-components of velocity are 0 to prevent ball from starting stationary.
		while (startVel.x == 0 &amp;&amp; startVel.y == 0) {
			startVel = new Point(rzr.randomInt(-20, 20), rzr.randomInt(-20, 20));
		}
		Color startCol = rzr.randomColor();
		
		Ball loaded = new Ball(startCol, startLoc, startRad, startVel, con, make, paintStrat);
		dispatcher.addObserver(loaded);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJD-IAt3EeiiCrav3vcpBQ" name="combineStrategyFacs" specification="_XF7Kkwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJD-IQt3EeiiCrav3vcpBQ" name="stratFac1" type="_W8L_wAt3EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_XJD-Igt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_XJD-Iwt3EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_XJD-JAt3EeiiCrav3vcpBQ" name="stratFac2" type="_W8L_wAt3EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_XJD-JQt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_XJD-Jgt3EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_XJD-Jwt3EeiiCrav3vcpBQ" type="_W8L_wAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>if (null == stratFac1 || null == stratFac2) {
	    		return IStrategyFac._errorStrategyFac;
	    	}
	    
	    return new IStrategyFac() {
	        /**
	         * Instantiate a new MultiStrategy with the strategies from the given strategy factories
	         * @return A MultiStrategy instance
	         */
	        public IUpdateStrategy make() {
	            return new MultiStrategy(stratFac1.make(), stratFac2.make());
	        }

	        /**
	         * Return a string that is the toString()'s of the given strategy factories concatenated with a &quot;-&quot;
	         */
	        public String toString() {
	            return stratFac1.toString() + &quot;-&quot; + stratFac2.toString();
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJD-KAt3EeiiCrav3vcpBQ" name="setSwitcherStrategy" specification="_XF8YsQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJD-KQt3EeiiCrav3vcpBQ" name="switchFac" type="_W8L_wAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>SwitcherStrategy.setStrat(switchFac.make());
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJD-Kgt3EeiiCrav3vcpBQ" name="getSwitcherFac" specification="_W7y-MAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJD-Kwt3EeiiCrav3vcpBQ" type="_W8L_wAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return IStrategyFac.switcherStrat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJElMAt3EeiiCrav3vcpBQ" name="makePaintFactory" specification="_W7y-MQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJElMQt3EeiiCrav3vcpBQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJElMgt3EeiiCrav3vcpBQ" type="_W8L_wAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return new IStrategyFac() {
	        public IUpdateStrategy make() {
	        		return new StraightStrategy();
	        }
 
	        public String toString() {
	            return text;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return loadPaintStrat(fixPaintName(text));
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJElMwt3EeiiCrav3vcpBQ" name="loadPaintStrat" specification="_W7zlQAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJElNAt3EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJElNQt3EeiiCrav3vcpBQ" type="_W8I8cAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>if (strat.endsWith(&quot;ImagePaintStrategy&quot;)) {
			int imgInd = strat.indexOf(&quot;ImagePaintStrategy&quot;);
			String nameFile = strat.substring(6, imgInd);
			
			String filename = &quot;images/&quot; + nameFile + &quot;.gif&quot;;
			
			Object[] args =  new Object[]{filename, 1.0};
			java.lang.reflect.Constructor&lt;?> cons[];
			try {
				cons = Class.forName(&quot;model.ImagePaintStrategy&quot;).getConstructors();
				if (cons[0].getParameterCount() == 2) {
					return (IPaintStrategy) cons[0].newInstance(args);
				} else {
					return (IPaintStrategy) cons[1].newInstance(args);
				}
				
			} catch (Exception e) {
				System.out.println(e);
				return IStrategyFac._errorStrategyFac.makePaint();
			}
		} else if (strat.endsWith(&quot;CompositePaintStrategy&quot;)) {
			APaintStrategy[] pstrats = {new ImagePaintStrategy(&quot;images/Mars.gif&quot;, 1.0), new ImagePaintStrategy(&quot;images/Mario.gif&quot;, 1.0)};
			return new UprightCompositePaintStrategy(pstrats);
		} else {
			Object[] args =  new Object[]{};
			java.lang.reflect.Constructor&lt;?> cons[];
			try {
				cons = Class.forName(strat).getConstructors();
				return (IPaintStrategy) cons[0].newInstance(args);
			} catch (Exception e) {
				return IStrategyFac._errorStrategyFac.makePaint();
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJElNgt3EeiiCrav3vcpBQ" name="fixPaintName" specification="_W70MUQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJElNwt3EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJElOAt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String classnameLower = classname.toLowerCase();
		if (classnameLower.endsWith(&quot;image&quot;)) {
			int indImg = classnameLower.indexOf(&quot;image&quot;);
			String imgType = classnameLower.substring(0, indImg);
			return &quot;model.&quot; + imgType.substring(0, 1).toUpperCase() + imgType.substring(1).toLowerCase() + &quot;ImagePaintStrategy&quot;;
		}
		return &quot;model.&quot; + classname.substring(0, 1).toUpperCase() + classname.substring(1).toLowerCase() + &quot;PaintStrategy&quot;;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W7v64At3EeiiCrav3vcpBQ" name="clearBalls" method="_XJCI8wt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJZVVAt3EeiiCrav3vcpBQ">
            <body>This function clears all the balls from the canvas, by removing them as observers.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_W7v64Qt3EeiiCrav3vcpBQ" name="start" method="_XJCwAAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJZVVQt3EeiiCrav3vcpBQ">
            <body>This function starts the timer.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_W7wh8At3EeiiCrav3vcpBQ" name="loadStrategy" method="_XJCwAwt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJZVVwt3EeiiCrav3vcpBQ">
            <body>This function takes an input string and loads the associated IUpdateStrategy,
	 * and returns the error strategy if the strategy isn't available.
	 * @param strat A string of the strategy to be created.
	 * @return The IUpdateStrategy associated with the string, or the error strategy if
	 * there is no associated strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_W7wh8Qt3EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XF6jgwt3EeiiCrav3vcpBQ" type="_W8PqIAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_W7xJAAt3EeiiCrav3vcpBQ" name="fixName" method="_XJDXEAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJZVWAt3EeiiCrav3vcpBQ">
            <body>This function takes the input and confirms it to the required model.ClassStrategy format for
	 * dynamic class loading.
	 * @param classname The string that should be modified to conform to the model.ClassStrategy format.
	 * @return The class string in a model.ClassStrategy format.</body>
          </ownedComment>
          <ownedParameter xmi:id="_W7xJAQt3EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W7xJAgt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_W7xwEAt3EeiiCrav3vcpBQ" name="makeStrategyFac" method="_XJDXEwt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJZVWQt3EeiiCrav3vcpBQ">
            <body>This takes a class name, and creates a strategy factory for it, by loading the strategy and returning it
	 * in the make method.
	 * @param classname The class of strategy to make.
	 * @return An IStrategyFac whose make function calls the associated model.ClassStrategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_W7xwEQt3EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XF6jhAt3EeiiCrav3vcpBQ" type="_W8L_wAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_W7y-MAt3EeiiCrav3vcpBQ" name="getSwitcherFac" method="_XJD-Kgt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJZVXQt3EeiiCrav3vcpBQ">
            <body>This function returns a strategy factory, which makes the current switcher balls' update
	 * strategy
	 * @return An IStrategyFac, which makes the current strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XF8_wAt3EeiiCrav3vcpBQ" type="_W8L_wAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_W7y-MQt3EeiiCrav3vcpBQ" name="makePaintFactory" method="_XJElMAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJZ8YAt3EeiiCrav3vcpBQ">
            <body>This function returns an IStrategyFac to allow the Paint Strategies to be made later on.
	 * @param text The type of paint strategy.
	 * @return An IStrategyFac</body>
          </ownedComment>
          <ownedParameter xmi:id="_W7y-Mgt3EeiiCrav3vcpBQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XF8_wQt3EeiiCrav3vcpBQ" type="_W8L_wAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_W7zlQAt3EeiiCrav3vcpBQ" name="loadPaintStrat" method="_XJElMwt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJZ8YQt3EeiiCrav3vcpBQ">
            <body>This function loads an instance of an IPaintStrategy, given a classname.
	 * @param strat The type of paint strategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_W70MUAt3EeiiCrav3vcpBQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XF8_wgt3EeiiCrav3vcpBQ" type="_W8I8cAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_W70MUQt3EeiiCrav3vcpBQ" name="fixPaintName" method="_XJElNgt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJZ8Ygt3EeiiCrav3vcpBQ">
            <body>This function &quot;fixes&quot; the type passed in to create an IPaintStrategy.
	 * @param classname The type of paint strategy to create.
	 * @return The fixed paint strategy information as a string.</body>
          </ownedComment>
          <ownedParameter xmi:id="_W70MUgt3EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W70zYAt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_XF58cAt3EeiiCrav3vcpBQ" name="BallWorldModel" method="_XJCI8At3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XF6jgAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XF6jgQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_XJZVUwt3EeiiCrav3vcpBQ">
            <body>This is the BallWorldModel constructor, which creates a model for the controller to interact with.
	 * @param adapter An IModel2ViewAdapter.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XF58cQt3EeiiCrav3vcpBQ" name="adapter" type="_W8GgMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XF6jggt3EeiiCrav3vcpBQ" type="_W7uswAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XF7KkAt3EeiiCrav3vcpBQ" name="makeBall" method="_XJDXFgt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJZVWgt3EeiiCrav3vcpBQ">
            <body>This function randomizes parameters for the ball, and makes a ball with the parameter's update strategy.
	 * @param make The IUpdateStrategy that determines how the ball updates.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XF7KkQt3EeiiCrav3vcpBQ" name="make" type="_W8PqIAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XF7Kkgt3EeiiCrav3vcpBQ" name="paintStrat" type="_W8I8cAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XF7Kkwt3EeiiCrav3vcpBQ" name="combineStrategyFacs" method="_XJD-IAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJZVWwt3EeiiCrav3vcpBQ">
            <body>Returns an IStrategyFac that can instantiate a MultiStrategy with the two
	 * strategies made by the two given IStrategyFac objects. Returns null if
	 * either supplied factory is null. The toString() of the returned factory
	 * is the toString()'s of the two given factories, concatenated with &quot;-&quot;. 
	 * If either factory is null, then a factory for a beeping error strategy is returned.
	 * 
	 * @param stratFac1 An IStrategyFac for a strategy
	 * @param stratFac2 An IStrategyFac for a strategy
	 * @return An IStrategyFac for the composition of the two strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_XF7KlAt3EeiiCrav3vcpBQ" name="stratFac1" type="_W8L_wAt3EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_XF7xogt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_XF7xowt3EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_XF7xoAt3EeiiCrav3vcpBQ" name="stratFac2" type="_W8L_wAt3EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_XF7xpAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_XF8YsAt3EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_XF7xoQt3EeiiCrav3vcpBQ" type="_W8L_wAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XF8YsQt3EeiiCrav3vcpBQ" name="setSwitcherStrategy" method="_XJD-KAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJZVXAt3EeiiCrav3vcpBQ">
            <body>This function sets the switcher balls strategy to the one made by the input.
	 * @param switchFac IStrategyFac which makes the new update strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XF8Ysgt3EeiiCrav3vcpBQ" name="switchFac" type="_W8L_wAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHeCsAt3EeiiCrav3vcpBQ" name="update" method="_XJCwAQt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJZVVgt3EeiiCrav3vcpBQ">
            <body>This function updates all the balls by notifying them using the dispatcher
	 * and an IBallCmd
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XHeCsQt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W74dwAt3EeiiCrav3vcpBQ" name="BreathingStrategy">
        <ownedComment xmi:id="_XJZ8Ywt3EeiiCrav3vcpBQ">
          <body>This class defines a Breathing Strategy, which grows and shrinks the ball's radius.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_XF-08At3EeiiCrav3vcpBQ" client="_W74dwAt3EeiiCrav3vcpBQ" supplier="_W8PqIAt3EeiiCrav3vcpBQ" contract="_W8PqIAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJFMQAt3EeiiCrav3vcpBQ" name="updateState" specification="_XF-08Qt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJFMQQt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJFMQgt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getItr() % 5 == 0) {
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XF-08Qt3EeiiCrav3vcpBQ" name="updateState" method="_XJFMQAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XF-08gt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XF-08wt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W76S8At3EeiiCrav3vcpBQ" name="ColorStrategy">
        <ownedComment xmi:id="_XJZ8ZAt3EeiiCrav3vcpBQ">
          <body>This class defines a Color Strategy, which changes the ball's color.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_XGADEAt3EeiiCrav3vcpBQ" client="_W76S8At3EeiiCrav3vcpBQ" supplier="_W8PqIAt3EeiiCrav3vcpBQ" contract="_W8PqIAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJFMQwt3EeiiCrav3vcpBQ" name="updateState" specification="_XGADEQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJFMRAt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJFMRQt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (ball.getItr() % 10 == 0) {
						Color newColor = Randomizer.Singleton.randomColor();
						ball.setCol(newColor);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XGADEQt3EeiiCrav3vcpBQ" name="updateState" method="_XJFMQwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XGAqIAt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XGAqIQt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W766AAt3EeiiCrav3vcpBQ" name="CompositePaintStrategy">
        <ownedComment xmi:id="_XJZ8ZQt3EeiiCrav3vcpBQ">
          <body>This class defines a CompositePaintStrategy, which is a concrete class of MultiPaintStrategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_XGCfVQt3EeiiCrav3vcpBQ" general="_W8Y0EAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJFzUAt3EeiiCrav3vcpBQ" name="CompositePaintStrategy" specification="_XGB4QAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJFzUQt3EeiiCrav3vcpBQ" name="pstrats" type="_W7Z8oAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XJFzUgt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJFzUwt3EeiiCrav3vcpBQ" type="_W766AAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJFzVAt3EeiiCrav3vcpBQ" name="CompositePaintStrategy" specification="_XHfQ0At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJFzVQt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJFzVgt3EeiiCrav3vcpBQ" name="pstrats" type="_W7Z8oAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XJFzVwt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJFzWAt3EeiiCrav3vcpBQ" type="_W766AAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, pstrats);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XGB4QAt3EeiiCrav3vcpBQ" name="CompositePaintStrategy" method="_XJFzUAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XGCfUQt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XGCfUgt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_XGCfUAt3EeiiCrav3vcpBQ" name="pstrats" type="_W7Z8oAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XGCfVAt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XGCfUwt3EeiiCrav3vcpBQ" type="_W766AAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHfQ0At3EeiiCrav3vcpBQ" name="CompositePaintStrategy" method="_XJFzVAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XHf34gt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XHf34wt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_XHf34At3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHf34Qt3EeiiCrav3vcpBQ" name="pstrats" type="_W7Z8oAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XHf35Qt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHf35At3EeiiCrav3vcpBQ" type="_W766AAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W78vMAt3EeiiCrav3vcpBQ" name="CrashStrategy">
        <ownedComment xmi:id="_XJZ8Zgt3EeiiCrav3vcpBQ">
          <body>This class defines a Crash Strategy which makes the ball
change color when it bounces from the boundaries of the canvas.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_XGDGYAt3EeiiCrav3vcpBQ" client="_W78vMAt3EeiiCrav3vcpBQ" supplier="_W8PqIAt3EeiiCrav3vcpBQ" contract="_W8PqIAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJGaYAt3EeiiCrav3vcpBQ" name="updateState" specification="_XGDGYQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJGaYQt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJGaYgt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					
					if ((ball.getLoc().x + ball.getRad() + 8 >= ball.getCon().getWidth()) ||
							(ball.getLoc().x - ball.getRad() &lt;= 8) ||
							(ball.getLoc().y + ball.getRad() >= ball.getCon().getHeight() - 8) ||
							(ball.getLoc().y - ball.getRad() &lt;= 8)) {
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XGDGYQt3EeiiCrav3vcpBQ" name="updateState" method="_XJGaYAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XGDtcAt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XGEUgAt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W799UAt3EeiiCrav3vcpBQ" name="EllipsePaintStrategy">
        <ownedComment xmi:id="_XJZ8Zwt3EeiiCrav3vcpBQ">
          <body>This class defines a paint strategy to paint an ellipse shape.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_XGE7kgt3EeiiCrav3vcpBQ" general="_W8s9IAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJGaYwt3EeiiCrav3vcpBQ" name="EllipsePaintStrategy" specification="_W799UQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJGaZAt3EeiiCrav3vcpBQ" type="_W799UAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 4.0/3.0, 2.0/3.0);
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJHBcAt3EeiiCrav3vcpBQ" name="EllipsePaintStrategy" specification="_XHge8At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJHBcQt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJHBcgt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJHBcwt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJHBdAt3EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJHBdQt3EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJHBdgt3EeiiCrav3vcpBQ" type="_W799UAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, EllipseShapeFactory.Singleton.makeShape(x, y, width, height));
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W799UQt3EeiiCrav3vcpBQ" name="EllipsePaintStrategy" method="_XJGaYwt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_W7-kYAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_W7-kYQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_W7-kYgt3EeiiCrav3vcpBQ" type="_W799UAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHge8At3EeiiCrav3vcpBQ" name="EllipsePaintStrategy" method="_XJHBcAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XHhGAAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XHhGAQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_XHge8Qt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHge8gt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHge8wt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHge9At3EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHge9Qt3EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHhGAgt3EeiiCrav3vcpBQ" type="_W799UAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W7_LcAt3EeiiCrav3vcpBQ" name="EllipseShapeFactory">
        <ownedComment xmi:id="_XJZ8aAt3EeiiCrav3vcpBQ">
          <body>This class defines a shape factory to make Ellipses.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_XIZPwAt3EeiiCrav3vcpBQ" name="Singleton" isLeaf="true" isStatic="true" type="_W7_LcAt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XJ1aMQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIZPwQt3EeiiCrav3vcpBQ" value="new EllipseShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_XGGwwQt3EeiiCrav3vcpBQ" client="_W7_LcAt3EeiiCrav3vcpBQ" supplier="_W8KKkAt3EeiiCrav3vcpBQ" contract="_W8KKkAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJHBdwt3EeiiCrav3vcpBQ" name="makeShape" specification="_W8AZkAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJHBeAt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJHBeQt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJHBegt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJHBewt3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJHBfAt3EeiiCrav3vcpBQ" type="_XGFioAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>Shape ellipse = new Ellipse2D.Double(x, y, xScale, yScale);
		return ellipse;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W8AZkAt3EeiiCrav3vcpBQ" name="makeShape" method="_XJHBdwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_W8AZkQt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8AZkgt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8AZkwt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8AZlAt3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHhGAwt3EeiiCrav3vcpBQ" type="_XGFioAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W8Dc4At3EeiiCrav3vcpBQ" name="FastStrategy">
        <ownedComment xmi:id="_XJZ8aQt3EeiiCrav3vcpBQ">
          <body>This class defines a Fast Strategy that makes the ball's velocity increase and stop once it reaches
a pre defined max speed.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_XGH-4At3EeiiCrav3vcpBQ" client="_W8Dc4At3EeiiCrav3vcpBQ" supplier="_W8PqIAt3EeiiCrav3vcpBQ" contract="_W8PqIAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJHBfQt3EeiiCrav3vcpBQ" name="updateState" specification="_XGIl8At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJHBfgt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJHBfwt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (Math.abs(ball.getVel().x) &lt; 100 &amp;&amp; Math.abs(ball.getVel().y) &lt; 100) {
						if (ball.getItr() % 10 == 0) {
							if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y + 2));
							} else if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y - 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y + 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y - 2));
							}
						}
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XGIl8At3EeiiCrav3vcpBQ" name="updateState" method="_XJHBfQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XGIl8Qt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XGIl8gt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_W8ErAAt3EeiiCrav3vcpBQ" name="IBallCmd" isAbstract="true">
        <ownedOperation xmi:id="_XGJ0EAt3EeiiCrav3vcpBQ" name="apply" isAbstract="true">
          <ownedParameter xmi:id="_XGKbIAt3EeiiCrav3vcpBQ" name="context" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XGKbIQt3EeiiCrav3vcpBQ" name="disp" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_W8GgMAt3EeiiCrav3vcpBQ" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_XJZ8agt3EeiiCrav3vcpBQ">
          <body>This is an interface which defines the functions that the model wants the view to have/do.
@author sn32, kyl3</body>
        </ownedComment>
        <ownedAttribute xmi:id="_W8HHQQt3EeiiCrav3vcpBQ" name="canvas" type="_XFdQgAt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XJrpMAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_W8HuUAt3EeiiCrav3vcpBQ" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_W8GgMAt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XJsQQQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_W8IVYAt3EeiiCrav3vcpBQ" value="new IModel2ViewAdapter() {&#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is an update function that we want the view to have.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public void update() {&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9; &#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is a function that gets the canvas from the view.&#xA;&#x9;&#x9;  * @return A container that is initially null.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public Container getCanvas() {&#xA;&#x9;&#x9;&#x9; return null;&#xA;&#x9;&#x9; }&#xA;&#x9; }"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_W8HHQAt3EeiiCrav3vcpBQ" name="update">
          <ownedComment xmi:id="_XJZ8awt3EeiiCrav3vcpBQ">
            <body>This is an update function that we want the view to have.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_W8I8cAt3EeiiCrav3vcpBQ" name="IPaintStrategy">
        <ownedComment xmi:id="_XJZ8bAt3EeiiCrav3vcpBQ">
          <body>This is an interface for an IPaintStrategy that defines the methods we want it to have.
@author sn32, ll45</body>
        </ownedComment>
        <ownedOperation xmi:id="_XGLCMAt3EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_XGLpQAt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHiUIAt3EeiiCrav3vcpBQ" name="paint">
          <ownedParameter xmi:id="_XHiUIQt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHiUIgt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_W8KKkAt3EeiiCrav3vcpBQ" name="IShapeFactory">
        <ownedComment xmi:id="_XJZ8bQt3EeiiCrav3vcpBQ">
          <body>This interface defines the methods we want a shape factory to have.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_W8LYsAt3EeiiCrav3vcpBQ" name="makeShape">
          <ownedParameter xmi:id="_W8LYsQt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8LYsgt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8LYswt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8LYtAt3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHi7MAt3EeiiCrav3vcpBQ" type="_XGFioAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_W8L_wAt3EeiiCrav3vcpBQ" name="IStrategyFac">
        <ownedComment xmi:id="_XJZ8bgt3EeiiCrav3vcpBQ">
          <body>This interface defines the functions we want IStrategyFac to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_W8NN4Qt3EeiiCrav3vcpBQ" name="_errorStrategyFac" type="_W8L_wAt3EeiiCrav3vcpBQ" association="_XJs3UQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_W8N08At3EeiiCrav3vcpBQ" value="new IStrategyFac(){&#xA;        /**&#xA;         * Make the beeping error strategy&#xA;         * @return  An instance of a beeping error strategy&#xA;         */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;            return new IUpdateStrategy() {&#xA;                private int count = 0; // update counter&#xA;                &#xA;                /**&#xA;                 * Beep the speaker every 25 updates&#xA;                 */&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void updateState(Ball ball, Dispatcher dispatcher) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(25 &lt; count++){&#xA;                        java.awt.Toolkit.getDefaultToolkit().beep(); &#xA;                        count = 0;&#xA;                    }&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;            };&#xA;        }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;}&#xA;    }"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_W8OcAAt3EeiiCrav3vcpBQ" name="switcherStrat" type="_W8L_wAt3EeiiCrav3vcpBQ" association="_XJteYQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_W8OcAQt3EeiiCrav3vcpBQ" value="new IStrategyFac() {&#xA;    &#x9;&#x9;/**&#xA;    &#x9;&#x9; * This function makes the switcher strategy.&#xA;    &#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;&#x9;&#x9;&#x9;return new SwitcherStrategy();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_W8Mm0At3EeiiCrav3vcpBQ" name="make">
          <ownedComment xmi:id="_XJZ8bwt3EeiiCrav3vcpBQ">
            <body>This function allows IStrategyFac to make an IUpdateStrategy.
	 * @return An IUpdateStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_XGMQUAt3EeiiCrav3vcpBQ" type="_W8PqIAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_W8NN4At3EeiiCrav3vcpBQ" name="makePaint">
          <ownedComment xmi:id="_XJajcAt3EeiiCrav3vcpBQ">
            <body>This function allows IStrategyFac to make an IPaintStrategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_XGM3YAt3EeiiCrav3vcpBQ" type="_W8I8cAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_W8PqIAt3EeiiCrav3vcpBQ" name="IUpdateStrategy">
        <ownedComment xmi:id="_XJajcQt3EeiiCrav3vcpBQ">
          <body>This interface defines the functions we want IUpdateStrategies to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedOperation xmi:id="_XGM3YQt3EeiiCrav3vcpBQ" name="updateState">
          <ownedParameter xmi:id="_XGM3Ygt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XGM3Ywt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W8Q4QAt3EeiiCrav3vcpBQ" name="ImagePaintStrategy">
        <ownedComment xmi:id="_XJajcgt3EeiiCrav3vcpBQ">
          <body>This class defines a paint strategy for an image that extends APaintStrategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_XGS-AAt3EeiiCrav3vcpBQ" general="_W7Z8oAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XIZ20At3EeiiCrav3vcpBQ" name="scaleFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIZ20Qt3EeiiCrav3vcpBQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIad4Qt3EeiiCrav3vcpBQ" name="fillFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIad4gt3EeiiCrav3vcpBQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIbsAAt3EeiiCrav3vcpBQ" name="localAT" visibility="private" type="_XFhh8At3EeiiCrav3vcpBQ" association="_XJ2BQQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIbsAQt3EeiiCrav3vcpBQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIbsAwt3EeiiCrav3vcpBQ" name="tempAT" type="_XFhh8At3EeiiCrav3vcpBQ" association="_XJ2oUQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIbsBAt3EeiiCrav3vcpBQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIcTEAt3EeiiCrav3vcpBQ" name="filename" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIcTEQt3EeiiCrav3vcpBQ" name="image" visibility="private" type="_XGOFgQt3EeiiCrav3vcpBQ" association="_XJ3PYQt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XIc6IQt3EeiiCrav3vcpBQ" name="imageObs" visibility="private" type="_XFdQgAt3EeiiCrav3vcpBQ" association="_XJ32cQt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJIPkAt3EeiiCrav3vcpBQ" name="ImagePaintStrategy" specification="_W8StcAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJIPkQt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJIPkgt3EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJIPkwt3EeiiCrav3vcpBQ" type="_W8Q4QAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super (new AffineTransform());
		this.fillFactor = fillFactor;
		this.setFilename(filename);
				
		try {
			image =  Toolkit.getDefaultToolkit().getImage(filename);	
			
		} catch (Exception e) {
			System.out.println(&quot;failed&quot;);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJIPlAt3EeiiCrav3vcpBQ" name="ImagePaintStrategy" specification="_XHjiQAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJIPlQt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJIPlgt3EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJIPlwt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJIPmAt3EeiiCrav3vcpBQ" type="_W8Q4QAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.fillFactor = fillFactor;
		this.setFilename(filename);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJIPmQt3EeiiCrav3vcpBQ" name="init" specification="_XGSW8At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJIPmgt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>imageObs = ball.getCon();
		MediaTracker mt = new MediaTracker(ball.getCon());
		mt.addImage(image, 1);
		try {
			mt.waitForAll();
		} catch(Exception e){
			System.out.println(&quot;ImagePaintStrategy.init(): Error waiting for image.  Exception = &quot;+e);
		}
		scaleFactor = 2.0/(fillFactor*(image.getWidth(imageObs)+image.getHeight(imageObs))/2.0); // this line is described below
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJIPmwt3EeiiCrav3vcpBQ" name="paintXfrm" specification="_XHkwYAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJIPnAt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJIPnQt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJIPngt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>localAT.setToScale(scaleFactor, scaleFactor);
		localAT.translate(-image.getWidth(imageObs)/2.0, -image.getHeight(imageObs)/2.0);
		localAT.preConcatenate(at);
		((Graphics2D)g).drawImage(image, localAT, imageObs); 
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJIPnwt3EeiiCrav3vcpBQ" name="setFilename" specification="_W8UioAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJIPoAt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.filename = filename;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W8StcAt3EeiiCrav3vcpBQ" name="ImagePaintStrategy" method="_XJIPkAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_W8TUgAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_W8TUgQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_XJajcwt3EeiiCrav3vcpBQ">
            <body>This is a constructor for the Image Paint Strategy that doesn't take an Affine Transform.
	 * @param filename String that is the path to the image file to load
	 * @param fillFactor A double that is the fill factor</body>
          </ownedComment>
          <ownedParameter xmi:id="_W8StcQt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8Stcgt3EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8TUggt3EeiiCrav3vcpBQ" type="_W8Q4QAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_W8UioAt3EeiiCrav3vcpBQ" name="setFilename" method="_XJIPnwt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJajdgt3EeiiCrav3vcpBQ">
            <body>This function sets the filename.
	 * @param filename the filename to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_W8UioQt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_XGSW8At3EeiiCrav3vcpBQ" name="init" method="_XJIPmQt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJajdQt3EeiiCrav3vcpBQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XGSW8Qt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHjiQAt3EeiiCrav3vcpBQ" name="ImagePaintStrategy" method="_XJIPlAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XHkJUgt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XHkJUwt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_XJajdAt3EeiiCrav3vcpBQ">
            <body>This is a constructor for Image Paint Strategy that takes an Affine Transform.
	 * @param filename String that is the path to the image file to load.
	 * @param fillFactor A double that is the fill factor
	 * @param at An Affine Transform.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XHjiQQt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHkJUAt3EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHkJUQt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHkJVAt3EeiiCrav3vcpBQ" type="_W8Q4QAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHkwYAt3EeiiCrav3vcpBQ" name="paintXfrm" method="_XJIPmwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XHkwYQt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHkwYgt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHkwYwt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W8Y0EAt3EeiiCrav3vcpBQ" name="MultiPaintStrategy">
        <ownedComment xmi:id="_XJajdwt3EeiiCrav3vcpBQ">
          <body>This class defines a multi paint strategy which is the composition of other paint strategies.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_XGXPcQt3EeiiCrav3vcpBQ" general="_W7Z8oAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XIeIQAt3EeiiCrav3vcpBQ" name="pstrats" visibility="private" type="_W7Z8oAt3EeiiCrav3vcpBQ" association="_XJ4dgQt3EeiiCrav3vcpBQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XIeIQQt3EeiiCrav3vcpBQ" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJI2oAt3EeiiCrav3vcpBQ" name="MultiPaintStrategy" specification="_XGWBUAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJI2oQt3EeiiCrav3vcpBQ" name="pstrats" type="_W7Z8oAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XJI2ogt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJI2owt3EeiiCrav3vcpBQ" type="_W8Y0EAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(new AffineTransform());&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJI2pAt3EeiiCrav3vcpBQ" name="MultiPaintStrategy" specification="_XHmlkAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJI2pQt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJI2pgt3EeiiCrav3vcpBQ" name="pstrats" type="_W7Z8oAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XJI2pwt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJI2qAt3EeiiCrav3vcpBQ" type="_W8Y0EAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at);&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJJdsAt3EeiiCrav3vcpBQ" name="init" specification="_XGWoYQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJJdsQt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
		    strategy.init(ball);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJJdsgt3EeiiCrav3vcpBQ" name="paintXfrm" specification="_XHnzsAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJJdswt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJJdtAt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJJdtQt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
			strategy.paintXfrm(g, ball, at);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XGWBUAt3EeiiCrav3vcpBQ" name="MultiPaintStrategy" method="_XJI2oAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XGWBUgt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XGWBUwt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_XJajeAt3EeiiCrav3vcpBQ">
            <body>This is a constructor that doesn't take in an affine transform.&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_XGWBUQt3EeiiCrav3vcpBQ" name="pstrats" type="_W7Z8oAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XGWBVQt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XGWBVAt3EeiiCrav3vcpBQ" type="_W8Y0EAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XGWoYQt3EeiiCrav3vcpBQ" name="init" method="_XJJdsAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJajegt3EeiiCrav3vcpBQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XGXPcAt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHmlkAt3EeiiCrav3vcpBQ" name="MultiPaintStrategy" method="_XJI2pAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XHnMogt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XHnMowt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_XJajeQt3EeiiCrav3vcpBQ">
            <body>This is a constructor that does take in an affine transform.&#xD;
	 * @param at An affine transform&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_XHnMoAt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHnMoQt3EeiiCrav3vcpBQ" name="pstrats" type="_W7Z8oAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XHnMpQt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHnMpAt3EeiiCrav3vcpBQ" type="_W8Y0EAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHnzsAt3EeiiCrav3vcpBQ" name="paintXfrm" method="_XJJdsgt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XHnzsQt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHnzsgt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHnzswt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W8cecAt3EeiiCrav3vcpBQ" name="MultiStrategy">
        <ownedComment xmi:id="_XJajewt3EeiiCrav3vcpBQ">
          <body>This class defines a Multi Strategy which defines a movement strategy for a ball
is a combination of 2 other strategies.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_XIevUQt3EeiiCrav3vcpBQ" name="s1" visibility="private" type="_W8PqIAt3EeiiCrav3vcpBQ" association="_XJ4dhAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XJajfAt3EeiiCrav3vcpBQ" name="s2" visibility="private" type="_W8PqIAt3EeiiCrav3vcpBQ" association="_XKLYcAt3EeiiCrav3vcpBQ"/>
        <interfaceRealization xmi:id="_XGYdkAt3EeiiCrav3vcpBQ" client="_W8cecAt3EeiiCrav3vcpBQ" supplier="_W8PqIAt3EeiiCrav3vcpBQ" contract="_W8PqIAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJJdtgt3EeiiCrav3vcpBQ" name="MultiStrategy" specification="_XGZEoAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJJdtwt3EeiiCrav3vcpBQ" name="s1" type="_W8PqIAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJJduAt3EeiiCrav3vcpBQ" name="s2" type="_W8PqIAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJJduQt3EeiiCrav3vcpBQ" type="_W8cecAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.s1 = s1;
		this.s2 = s2;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJKEwAt3EeiiCrav3vcpBQ" name="updateState" specification="_XGZrsgt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJKEwQt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJKEwgt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					s1.updateState(ball, disp);
					s2.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XGZEoAt3EeiiCrav3vcpBQ" name="MultiStrategy" method="_XJJdtgt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XGZEowt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XGZrsAt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_XGZEoQt3EeiiCrav3vcpBQ" name="s1" type="_W8PqIAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XGZEogt3EeiiCrav3vcpBQ" name="s2" type="_W8PqIAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XGZrsQt3EeiiCrav3vcpBQ" type="_W8cecAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XGZrsgt3EeiiCrav3vcpBQ" name="updateState" method="_XJKEwAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XGZrswt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XGZrtAt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W8hW8At3EeiiCrav3vcpBQ" name="PolygonFactory">
        <ownedComment xmi:id="_XJbxkQt3EeiiCrav3vcpBQ">
          <body>This class defines a polygon factory, which makes polygons.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_XIf9cAt3EeiiCrav3vcpBQ" name="poly" visibility="package" type="_XGbg4At3EeiiCrav3vcpBQ" association="_XJ5EkQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIhyoAt3EeiiCrav3vcpBQ" value="new Polygon()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIiZsAt3EeiiCrav3vcpBQ" name="at" visibility="package" type="_XFhh8At3EeiiCrav3vcpBQ" association="_XJ5roQt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XIjn0At3EeiiCrav3vcpBQ" name="scaleFactor" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIjn0Qt3EeiiCrav3vcpBQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIkO4At3EeiiCrav3vcpBQ" name="pts" visibility="package" type="_XFrS8Qt3EeiiCrav3vcpBQ" association="_XJ6SsAt3EeiiCrav3vcpBQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XIkO4Qt3EeiiCrav3vcpBQ" value="*"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_XGcH8Qt3EeiiCrav3vcpBQ" client="_W8hW8At3EeiiCrav3vcpBQ" supplier="_W8KKkAt3EeiiCrav3vcpBQ" contract="_W8KKkAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJKEwwt3EeiiCrav3vcpBQ" name="PolygonFactory" specification="_XHpo4At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJKExAt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJKExQt3EeiiCrav3vcpBQ" name="scaleFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJKExgt3EeiiCrav3vcpBQ" name="pts" type="_XFrS8Qt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XJKExwt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJKEyAt3EeiiCrav3vcpBQ" type="_W8hW8At3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.at = at;
		this.scaleFactor = scaleFactor;
		this.pts = pts;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJKEyQt3EeiiCrav3vcpBQ" name="makeShape" specification="_W8ilEAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJKEygt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJKEywt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJKEzAt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJKEzQt3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJKEzgt3EeiiCrav3vcpBQ" type="_XGFioAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>at.setToTranslation(x, y);
		at.scale(xScale*scaleFactor, yScale*scaleFactor);  // optional rotation can be added as well
		return at.createTransformedShape(poly);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W8ilEAt3EeiiCrav3vcpBQ" name="makeShape" method="_XJKEyQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_W8jMIAt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8jMIQt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8jMIgt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8jMIwt3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHq3AAt3EeiiCrav3vcpBQ" type="_XGFioAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHpo4At3EeiiCrav3vcpBQ" name="PolygonFactory" method="_XJKEwwt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XHqP8gt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XHqP8wt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_XHpo4Qt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHqP8At3EeiiCrav3vcpBQ" name="scaleFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHqP8Qt3EeiiCrav3vcpBQ" name="pts" type="_XFrS8Qt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XHqP9Qt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHqP9At3EeiiCrav3vcpBQ" type="_W8hW8At3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W8m2gAt3EeiiCrav3vcpBQ" name="RectanglePaintStrategy">
        <ownedComment xmi:id="_XJbxkgt3EeiiCrav3vcpBQ">
          <body>This class defines a Rectangle Paint Strategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_XGd9IAt3EeiiCrav3vcpBQ" general="_W8s9IAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJKr0At3EeiiCrav3vcpBQ" name="RectanglePaintStrategy" specification="_W8ndkAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJKr0Qt3EeiiCrav3vcpBQ" type="_W8m2gAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 3.0, 1.0);
	  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJKr0gt3EeiiCrav3vcpBQ" name="RectanglePaintStrategy" specification="_XHreEAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJKr0wt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJKr1At3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJKr1Qt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJKr1gt3EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJKr1wt3EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJKr2At3EeiiCrav3vcpBQ" type="_W8m2gAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, RectangleShapeFactory.Singleton.makeShape(x,y,width,height));
	  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W8ndkAt3EeiiCrav3vcpBQ" name="RectanglePaintStrategy" method="_XJKr0At3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_W8oEoAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_W8oEoQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_W8oEogt3EeiiCrav3vcpBQ" type="_W8m2gAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHreEAt3EeiiCrav3vcpBQ" name="RectanglePaintStrategy" method="_XJKr0gt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XHreFgt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XHreFwt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_XHreEQt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHreEgt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHreEwt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHreFAt3EeiiCrav3vcpBQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHreFQt3EeiiCrav3vcpBQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHsFIAt3EeiiCrav3vcpBQ" type="_W8m2gAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W8pSwAt3EeiiCrav3vcpBQ" name="RectangleShapeFactory">
        <ownedComment xmi:id="_XJbxkwt3EeiiCrav3vcpBQ">
          <body>This class defines a factory that makes rectangles.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_XIk18At3EeiiCrav3vcpBQ" name="Singleton" isLeaf="true" isStatic="true" type="_W8pSwAt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XJ65wAt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIk18Qt3EeiiCrav3vcpBQ" value="new RectangleShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_XGekMAt3EeiiCrav3vcpBQ" client="_W8pSwAt3EeiiCrav3vcpBQ" supplier="_W8KKkAt3EeiiCrav3vcpBQ" contract="_W8KKkAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJKr2Qt3EeiiCrav3vcpBQ" name="makeShape" specification="_W8qg4At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJKr2gt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJKr2wt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJKr3At3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJKr3Qt3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJKr3gt3EeiiCrav3vcpBQ" type="_XGFioAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>Shape rec = new Rectangle((int) (x), (int) (y), (int) (xScale), (int) (yScale));
		return rec;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W8qg4At3EeiiCrav3vcpBQ" name="makeShape" method="_XJKr2Qt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_W8qg4Qt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8qg4gt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8qg4wt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8qg5At3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHsFIQt3EeiiCrav3vcpBQ" type="_XGFioAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W8s9IAt3EeiiCrav3vcpBQ" name="ShapePaintStrategy">
        <ownedComment xmi:id="_XJbxlAt3EeiiCrav3vcpBQ">
          <body>This class defines a shape paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_XGgZYAt3EeiiCrav3vcpBQ" general="_W7Z8oAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XIk18gt3EeiiCrav3vcpBQ" name="shape" visibility="package" type="_XGFioAt3EeiiCrav3vcpBQ" association="_XJ65wwt3EeiiCrav3vcpBQ"/>
        <interfaceRealization xmi:id="_XGfyUAt3EeiiCrav3vcpBQ" client="_W8s9IAt3EeiiCrav3vcpBQ" supplier="_W8KKkAt3EeiiCrav3vcpBQ" contract="_W8KKkAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJLS4At3EeiiCrav3vcpBQ" name="ShapePaintStrategy" specification="_XHssMAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJLS4Qt3EeiiCrav3vcpBQ" name="shape" type="_XGFioAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJLS4gt3EeiiCrav3vcpBQ" type="_W8s9IAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJL58At3EeiiCrav3vcpBQ" name="ShapePaintStrategy" specification="_XHt6UAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJL58Qt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJL58gt3EeiiCrav3vcpBQ" name="shape" type="_XGFioAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJL58wt3EeiiCrav3vcpBQ" type="_W8s9IAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJL59At3EeiiCrav3vcpBQ" name="paintXfrm" specification="_XHuhYAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJL59Qt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJL59gt3EeiiCrav3vcpBQ" name="host" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJL59wt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>((Graphics2D) g).fill(at.createTransformedShape(shape));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJL5-At3EeiiCrav3vcpBQ" name="makeShape" specification="_W8uyUAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJL5-Qt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJL5-gt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJL5-wt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJL5_At3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJL5_Qt3EeiiCrav3vcpBQ" type="_XGFioAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>at.setToTranslation(x, y);
		at.scale(x * xScale, y * yScale);  // optional rotation can be added as well
		return at.createTransformedShape(shape);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W8uyUAt3EeiiCrav3vcpBQ" name="makeShape" method="_XJL5-At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_W8uyUQt3EeiiCrav3vcpBQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8uyUgt3EeiiCrav3vcpBQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8uyUwt3EeiiCrav3vcpBQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8uyVAt3EeiiCrav3vcpBQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHvIcAt3EeiiCrav3vcpBQ" type="_XGFioAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHssMAt3EeiiCrav3vcpBQ" name="ShapePaintStrategy" method="_XJLS4At3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XHtTQQt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XHtTQgt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_XHtTQAt3EeiiCrav3vcpBQ" name="shape" type="_XGFioAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHtTQwt3EeiiCrav3vcpBQ" type="_W8s9IAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHt6UAt3EeiiCrav3vcpBQ" name="ShapePaintStrategy" method="_XJL58At3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XHt6Uwt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XHt6VAt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_XHt6UQt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHt6Ugt3EeiiCrav3vcpBQ" name="shape" type="_XGFioAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHt6VQt3EeiiCrav3vcpBQ" type="_W8s9IAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHuhYAt3EeiiCrav3vcpBQ" name="paintXfrm" method="_XJL59At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XHuhYQt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHuhYgt3EeiiCrav3vcpBQ" name="host" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHuhYwt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W8x1oAt3EeiiCrav3vcpBQ" name="SpawnStrategy">
        <ownedComment xmi:id="_XJbxlQt3EeiiCrav3vcpBQ">
          <body>This class defines a spawn strategy that interacts with other balls.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_XImEEAt3EeiiCrav3vcpBQ" name="count" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XImEEQt3EeiiCrav3vcpBQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XImrIAt3EeiiCrav3vcpBQ" name="delay" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XImrIQt3EeiiCrav3vcpBQ" value="100"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_XGiOkAt3EeiiCrav3vcpBQ" client="_W8x1oAt3EeiiCrav3vcpBQ" supplier="_W8PqIAt3EeiiCrav3vcpBQ" contract="_W8PqIAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJL5_gt3EeiiCrav3vcpBQ" name="updateState" specification="_XGi1oAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJL5_wt3EeiiCrav3vcpBQ" name="context" type="_W7fcMAt3EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_XJL6AAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_XJL6AQt3EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_XJL6Agt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>if (delay &lt; count++) {
			dispatcher.notifyAll(new IBallCmd() {
				/**
				 * This function applies this command to the correct ball using a dispatcher.
				 */
				@Override
				public void apply(Ball other, Dispatcher disp) {
					if (count != 0 &amp;&amp; context != other) {
						if ((context.getRad() + other.getRad()) > 
						    context.getLoc().distance(other.getLoc())) {
							disp.addObserver(new Ball(
									context.getCol(),
									new Point(context.getLoc()), 
									context.getRad(),
									new Point(-context.getVel().x+1,-context.getVel().y+1), 
									context.getCon(), 
									new SpawnStrategy(), 
									context.getPaintStrat()));
							count = 0;
							delay *= 5;
						}
					}
				}
			});
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XGi1oAt3EeiiCrav3vcpBQ" name="updateState" method="_XJL5_gt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XGi1oQt3EeiiCrav3vcpBQ" name="context" type="_W7fcMAt3EeiiCrav3vcpBQ">
            <eAnnotations xmi:id="_XGjcsQt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_XGjcsgt3EeiiCrav3vcpBQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_XGi1ogt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W8zq0At3EeiiCrav3vcpBQ" name="SquarePaintStrategy">
        <ownedComment xmi:id="_XJbxlgt3EeiiCrav3vcpBQ">
          <body>This is the square paint strategy that paints a square.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_XGkq0At3EeiiCrav3vcpBQ" client="_W8zq0At3EeiiCrav3vcpBQ" supplier="_W8I8cAt3EeiiCrav3vcpBQ" contract="_W8I8cAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJMhAAt3EeiiCrav3vcpBQ" name="paint" specification="_XHvvgAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJMhAQt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJMhAgt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>int halfSide = ball.getRad();
		g.setColor(ball.getCol());
		g.fillRect(ball.getLoc().x - halfSide, ball.getLoc().y - halfSide, 2 * halfSide, 2 * halfSide);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XGkq0Qt3EeiiCrav3vcpBQ" name="init">
          <ownedParameter xmi:id="_XGkq0gt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHvvgAt3EeiiCrav3vcpBQ" name="paint" method="_XJMhAAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XHvvgQt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHwWkAt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W8048At3EeiiCrav3vcpBQ" name="StraightStrategy">
        <ownedComment xmi:id="_XJbxlwt3EeiiCrav3vcpBQ">
          <body>This class defines a Straight Strategy which defines a movement strategy for a ball that just
moves by changing it's location by its velocity components.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_XGl48At3EeiiCrav3vcpBQ" client="_W8048At3EeiiCrav3vcpBQ" supplier="_W8PqIAt3EeiiCrav3vcpBQ" contract="_W8PqIAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJMhAwt3EeiiCrav3vcpBQ" name="updateState" specification="_XGmgAAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJMhBAt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJMhBQt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XGmgAAt3EeiiCrav3vcpBQ" name="updateState" method="_XJMhAwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XGmgAQt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XGmgAgt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W82HEAt3EeiiCrav3vcpBQ" name="SwellStrategy">
        <ownedComment xmi:id="_XJbxmAt3EeiiCrav3vcpBQ">
          <body>This class defines a Swell Strategy which defines a movement strategy for a ball that grows it
in size, and once it reaches a certain size, it changes colors, and then shrinks slowly and repeats.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_XGnuIAt3EeiiCrav3vcpBQ" client="_W82HEAt3EeiiCrav3vcpBQ" supplier="_W8PqIAt3EeiiCrav3vcpBQ" contract="_W8PqIAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJNIEAt3EeiiCrav3vcpBQ" name="updateState" specification="_XGnuIQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJNIEQt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJNIEgt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getRad() >= 80) {
						ball.setRadDelta(1);
						ball.setRadDelta(ball.getRadDelta() * -1);
						ball.setCol(rzr.randomColor());
					} else if (ball.getRad() &lt;= 20) {
						ball.setRadDelta(-5);
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XGnuIQt3EeiiCrav3vcpBQ" name="updateState" method="_XJNIEAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XGoVMAt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XGoVMQt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W83VMAt3EeiiCrav3vcpBQ" name="SwitcherStrategy">
        <ownedComment xmi:id="_XJbxmQt3EeiiCrav3vcpBQ">
          <body>This class defines a Switcher Strategy which defines a strategy for a ball that can
change by updating the strategy.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_XInSMAt3EeiiCrav3vcpBQ" name="strategy" visibility="private" isStatic="true" type="_W8PqIAt3EeiiCrav3vcpBQ" association="_XJ7g0Qt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XInSMQt3EeiiCrav3vcpBQ" value="new StraightStrategy()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_XGo8Qgt3EeiiCrav3vcpBQ" client="_W83VMAt3EeiiCrav3vcpBQ" supplier="_W8PqIAt3EeiiCrav3vcpBQ" contract="_W8PqIAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJNIEwt3EeiiCrav3vcpBQ" name="updateState" specification="_XGpjUAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJNIFAt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJNIFQt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					strategy.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJNvIAt3EeiiCrav3vcpBQ" name="setStrat" specification="_XGqxcgt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJNvIQt3EeiiCrav3vcpBQ" name="strat" type="_W8PqIAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>SwitcherStrategy.strategy = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJNvIgt3EeiiCrav3vcpBQ" name="getStrat" specification="_W84jUAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJNvIwt3EeiiCrav3vcpBQ" type="_W8PqIAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return SwitcherStrategy.strategy;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W84jUAt3EeiiCrav3vcpBQ" name="getStrat" isStatic="true" method="_XJNvIgt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJbxmwt3EeiiCrav3vcpBQ">
            <body>This function returns the current strategy of the switcher balls.
	 * @return An IUpdateStrategy which is the current strategy of the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XGqxdAt3EeiiCrav3vcpBQ" type="_W8PqIAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XGpjUAt3EeiiCrav3vcpBQ" name="updateState" method="_XJNIEwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XGpjUQt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XGpjUgt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XGqxcgt3EeiiCrav3vcpBQ" name="setStrat" isStatic="true" method="_XJNvIAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJbxmgt3EeiiCrav3vcpBQ">
            <body>This function changes the strategy of all switcher balls to that of the parameter.
	 * @param strat An IUpdateStrategy which is the new strategy for all the balls to use</body>
          </ownedComment>
          <ownedParameter xmi:id="_XGqxcwt3EeiiCrav3vcpBQ" name="strat" type="_W8PqIAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W86_kAt3EeiiCrav3vcpBQ" name="TeleportStrategy">
        <ownedComment xmi:id="_XJcYoAt3EeiiCrav3vcpBQ">
          <body>This class defines a Teleport Strategy which defines a movement strategy for a ball that randomly
changes the location of it, so it teleports.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_XGrYgAt3EeiiCrav3vcpBQ" client="_W86_kAt3EeiiCrav3vcpBQ" supplier="_W8PqIAt3EeiiCrav3vcpBQ" contract="_W8PqIAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJNvJAt3EeiiCrav3vcpBQ" name="updateState" specification="_XGr_kAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJNvJQt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJNvJgt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % 80 == 0) {
						ball.setLoc(rzr.randomLoc(new Rectangle(ball.getCon().getWidth() - ball.getRad(), ball.getCon().getHeight() - ball.getRad())));
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XGr_kAt3EeiiCrav3vcpBQ" name="updateState" method="_XJNvJAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XGr_kQt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XGr_kgt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W880wAt3EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy">
        <ownedComment xmi:id="_XJcYoQt3EeiiCrav3vcpBQ">
          <body>This classd defines an upright composite paint strategy.
@author sn32, ll45
 *</body>
        </ownedComment>
        <generalization xmi:id="_XGt0wAt3EeiiCrav3vcpBQ" general="_W766AAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJNvJwt3EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" specification="_XGtNsAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJNvKAt3EeiiCrav3vcpBQ" name="pstrats" type="_W7Z8oAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XJNvKQt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJNvKgt3EeiiCrav3vcpBQ" type="_W880wAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJOWMAt3EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" specification="_XHxksAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJOWMQt3EeiiCrav3vcpBQ" name="pstrats" type="_W7Z8oAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XJOWMgt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJOWMwt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJOWNAt3EeiiCrav3vcpBQ" type="_W880wAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, pstrats);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJOWNQt3EeiiCrav3vcpBQ" name="paintCfg" specification="_XHyy0At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJOWNgt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJOWNwt3EeiiCrav3vcpBQ" name="host" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>super.paintCfg(g, host);
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {
			at.scale(1.0, -1.0);
		}        
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XGtNsAt3EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" method="_XJNvJwt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XGtNsgt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XGtNswt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_XGtNsQt3EeiiCrav3vcpBQ" name="pstrats" type="_W7Z8oAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XGtNtQt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XGtNtAt3EeiiCrav3vcpBQ" type="_W880wAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHxksAt3EeiiCrav3vcpBQ" name="UprightCompositePaintStrategy" method="_XJOWMAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XHyLwgt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XHyLwwt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_XHyLwAt3EeiiCrav3vcpBQ" name="pstrats" type="_W7Z8oAt3EeiiCrav3vcpBQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XHyLxQt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XHyLwQt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHyLxAt3EeiiCrav3vcpBQ" type="_W880wAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHyy0At3EeiiCrav3vcpBQ" name="paintCfg" visibility="protected" method="_XJOWNQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XHyy0Qt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHyy0gt3EeiiCrav3vcpBQ" name="host" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W8_RAAt3EeiiCrav3vcpBQ" name="UprightImageStrategy">
        <ownedComment xmi:id="_XJcYogt3EeiiCrav3vcpBQ">
          <body>This class defines an upright image.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_XGvC4At3EeiiCrav3vcpBQ" general="_W8Q4QAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJOWOAt3EeiiCrav3vcpBQ" name="UprightImageStrategy" specification="_W8_4EAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJOWOQt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJOWOgt3EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJOWOwt3EeiiCrav3vcpBQ" type="_W8_RAAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJO9QAt3EeiiCrav3vcpBQ" name="UprightImageStrategy" specification="_XHzZ4At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJO9QQt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJO9Qgt3EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJO9Qwt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJO9RAt3EeiiCrav3vcpBQ" type="_W8_RAAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor, at);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJO9RQt3EeiiCrav3vcpBQ" name="paintCfg" specification="_XH0oAAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJO9Rgt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJO9Rwt3EeiiCrav3vcpBQ" name="host" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>super.paintCfg(g, host);&#xD;
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {&#xD;
			at.scale(1.0, -1.0);&#xD;
		}       &#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W8_4EAt3EeiiCrav3vcpBQ" name="UprightImageStrategy" method="_XJOWOAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_W9AfIAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_W9AfIQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_W8_4EQt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W8_4Egt3EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W9AfIgt3EeiiCrav3vcpBQ" type="_W8_RAAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XHzZ4At3EeiiCrav3vcpBQ" name="UprightImageStrategy" method="_XJO9QAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XH0A8gt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XH0A8wt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_XHzZ4Qt3EeiiCrav3vcpBQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XH0A8At3EeiiCrav3vcpBQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XH0A8Qt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XH0A9At3EeiiCrav3vcpBQ" type="_W8_RAAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XH0oAAt3EeiiCrav3vcpBQ" name="paintCfg" visibility="protected" method="_XJO9RQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XH0oAQt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XH0oAgt3EeiiCrav3vcpBQ" name="host" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W9CUUAt3EeiiCrav3vcpBQ" name="UprightShapePaintStrategy">
        <ownedComment xmi:id="_XJcYowt3EeiiCrav3vcpBQ">
          <body>This class defines an upright shape paint strategy.
@author sn32, ll45
 *</body>
        </ownedComment>
        <generalization xmi:id="_XGwRAAt3EeiiCrav3vcpBQ" general="_W8s9IAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJO9SAt3EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" specification="_XH1PEAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJO9SQt3EeiiCrav3vcpBQ" name="shape" type="_XGFioAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJO9Sgt3EeiiCrav3vcpBQ" type="_W9CUUAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(shape);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJPkUAt3EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" specification="_XH12IAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJPkUQt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJPkUgt3EeiiCrav3vcpBQ" name="shape" type="_XGFioAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJPkUwt3EeiiCrav3vcpBQ" type="_W9CUUAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>super(at, shape);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XH1PEAt3EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" method="_XJO9SAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XH1PEgt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XH1PEwt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_XH1PEQt3EeiiCrav3vcpBQ" name="shape" type="_XGFioAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XH1PFAt3EeiiCrav3vcpBQ" type="_W9CUUAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XH12IAt3EeiiCrav3vcpBQ" name="UprightShapePaintStrategy" method="_XJPkUAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XH12Iwt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XH12JAt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_XH12IQt3EeiiCrav3vcpBQ" name="at" type="_XFhh8At3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XH12Igt3EeiiCrav3vcpBQ" name="shape" type="_XGFioAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XH2dMAt3EeiiCrav3vcpBQ" type="_W9CUUAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W9EJgAt3EeiiCrav3vcpBQ" name="WiggleStrategy">
        <ownedComment xmi:id="_XJcYpAt3EeiiCrav3vcpBQ">
          <body>This class defines a Wiggle Strategy which defines a movement strategy for a ball that randomly
changes the velocity direction, so it wiggles.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_XGw4EAt3EeiiCrav3vcpBQ" client="_W9EJgAt3EeiiCrav3vcpBQ" supplier="_W8PqIAt3EeiiCrav3vcpBQ" contract="_W8PqIAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJPkVAt3EeiiCrav3vcpBQ" name="updateState" specification="_XGw4EQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJPkVQt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJPkVgt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % rzr.randomInt(2,  100) == 0) {
						ball.setVel(new Point(ball.getVel().x, ball.getVel().y * -1));
					} else if (ball.getItr() % rzr.randomInt(2, 100) == 0){
						ball.setVel(new Point(ball.getVel().x * -1, ball.getVel().y));
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XGw4EQt3EeiiCrav3vcpBQ" name="updateState" method="_XJPkVAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XGw4Egt3EeiiCrav3vcpBQ" name="ball" type="_W7fcMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XGxfIAt3EeiiCrav3vcpBQ" name="dispatcher" type="_W9FXoAt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJXgIAt3EeiiCrav3vcpBQ" name="" memberEnd="_XIR7AAt3EeiiCrav3vcpBQ _XJXgIQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJXgIQt3EeiiCrav3vcpBQ" name="" type="_W7fcMAt3EeiiCrav3vcpBQ" association="_XJXgIAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJYHMAt3EeiiCrav3vcpBQ" name="" memberEnd="_XIR7AQt3EeiiCrav3vcpBQ _XJYHMQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJYHMQt3EeiiCrav3vcpBQ" name="" type="_W7fcMAt3EeiiCrav3vcpBQ" association="_XJYHMAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJYHMgt3EeiiCrav3vcpBQ" name="" memberEnd="_XISiEgt3EeiiCrav3vcpBQ _XJYuQAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJYuQAt3EeiiCrav3vcpBQ" name="" type="_W7fcMAt3EeiiCrav3vcpBQ" association="_XJYHMgt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJYuQQt3EeiiCrav3vcpBQ" name="" memberEnd="_XITJIAt3EeiiCrav3vcpBQ _XJYuQgt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJYuQgt3EeiiCrav3vcpBQ" name="" type="_W7fcMAt3EeiiCrav3vcpBQ" association="_XJYuQQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJrpMAt3EeiiCrav3vcpBQ" name="" memberEnd="_XJrpMQt3EeiiCrav3vcpBQ _W8HHQQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJrpMQt3EeiiCrav3vcpBQ" name="" type="_W8GgMAt3EeiiCrav3vcpBQ" association="_XJrpMAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJsQQQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJsQQgt3EeiiCrav3vcpBQ _W8HuUAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJsQQgt3EeiiCrav3vcpBQ" name="" type="_W8GgMAt3EeiiCrav3vcpBQ" association="_XJsQQQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJs3UQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJs3Ugt3EeiiCrav3vcpBQ _W8NN4Qt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJs3Ugt3EeiiCrav3vcpBQ" name="" type="_W8L_wAt3EeiiCrav3vcpBQ" association="_XJs3UQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJteYQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJteYgt3EeiiCrav3vcpBQ _W8OcAAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJteYgt3EeiiCrav3vcpBQ" name="" type="_W8L_wAt3EeiiCrav3vcpBQ" association="_XJteYQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJwhsAt3EeiiCrav3vcpBQ" name="" memberEnd="_XJwhsQt3EeiiCrav3vcpBQ _XIQs4At3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJwhsQt3EeiiCrav3vcpBQ" name="" type="_W7T2AAt3EeiiCrav3vcpBQ" association="_XJwhsAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJxIwQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJxIwgt3EeiiCrav3vcpBQ _XIRT8At3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJxIwgt3EeiiCrav3vcpBQ" name="" type="_W7Z8oAt3EeiiCrav3vcpBQ" association="_XJxIwQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJxv0Qt3EeiiCrav3vcpBQ" name="" memberEnd="_XJxv0gt3EeiiCrav3vcpBQ _XITJIQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJxv0gt3EeiiCrav3vcpBQ" name="" type="_W7fcMAt3EeiiCrav3vcpBQ" association="_XJxv0Qt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJy98At3EeiiCrav3vcpBQ" name="" memberEnd="_XJy98Qt3EeiiCrav3vcpBQ _XITwMAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJy98Qt3EeiiCrav3vcpBQ" name="" type="_W7fcMAt3EeiiCrav3vcpBQ" association="_XJy98At3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJzlAQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJzlAgt3EeiiCrav3vcpBQ _XIVlYAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJzlAgt3EeiiCrav3vcpBQ" name="" type="_W7uswAt3EeiiCrav3vcpBQ" association="_XJzlAQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ0MEQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ0MEgt3EeiiCrav3vcpBQ _XIWzgQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ0MEgt3EeiiCrav3vcpBQ" name="" type="_W7uswAt3EeiiCrav3vcpBQ" association="_XJ0MEQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ0zIQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ0zIgt3EeiiCrav3vcpBQ _XIXakQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ0zIgt3EeiiCrav3vcpBQ" name="" type="_W7uswAt3EeiiCrav3vcpBQ" association="_XJ0zIQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ1aMQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ1aMgt3EeiiCrav3vcpBQ _XIZPwAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ1aMgt3EeiiCrav3vcpBQ" name="" type="_W7_LcAt3EeiiCrav3vcpBQ" association="_XJ1aMQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ2BQQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ2BQgt3EeiiCrav3vcpBQ _XIbsAAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ2BQgt3EeiiCrav3vcpBQ" name="" type="_W8Q4QAt3EeiiCrav3vcpBQ" association="_XJ2BQQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ2oUQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ2oUgt3EeiiCrav3vcpBQ _XIbsAwt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ2oUgt3EeiiCrav3vcpBQ" name="" type="_W8Q4QAt3EeiiCrav3vcpBQ" association="_XJ2oUQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ3PYQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ3PYgt3EeiiCrav3vcpBQ _XIcTEQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ3PYgt3EeiiCrav3vcpBQ" name="" type="_W8Q4QAt3EeiiCrav3vcpBQ" association="_XJ3PYQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ32cQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ32cgt3EeiiCrav3vcpBQ _XIc6IQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ32cgt3EeiiCrav3vcpBQ" name="" type="_W8Q4QAt3EeiiCrav3vcpBQ" association="_XJ32cQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ4dgQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ4dggt3EeiiCrav3vcpBQ _XIeIQAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ4dggt3EeiiCrav3vcpBQ" name="" type="_W8Y0EAt3EeiiCrav3vcpBQ" association="_XJ4dgQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ4dhAt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ4dhQt3EeiiCrav3vcpBQ _XIevUQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ4dhQt3EeiiCrav3vcpBQ" name="" type="_W8cecAt3EeiiCrav3vcpBQ" association="_XJ4dhAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ5EkQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ5Ekgt3EeiiCrav3vcpBQ _XIf9cAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ5Ekgt3EeiiCrav3vcpBQ" name="" type="_W8hW8At3EeiiCrav3vcpBQ" association="_XJ5EkQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ5roQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ5rogt3EeiiCrav3vcpBQ _XIiZsAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ5rogt3EeiiCrav3vcpBQ" name="" type="_W8hW8At3EeiiCrav3vcpBQ" association="_XJ5roQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ6SsAt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ6SsQt3EeiiCrav3vcpBQ _XIkO4At3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ6SsQt3EeiiCrav3vcpBQ" name="" type="_W8hW8At3EeiiCrav3vcpBQ" association="_XJ6SsAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ65wAt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ65wQt3EeiiCrav3vcpBQ _XIk18At3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ65wQt3EeiiCrav3vcpBQ" name="" type="_W8pSwAt3EeiiCrav3vcpBQ" association="_XJ65wAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ65wwt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ65xAt3EeiiCrav3vcpBQ _XIk18gt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ65xAt3EeiiCrav3vcpBQ" name="" type="_W8s9IAt3EeiiCrav3vcpBQ" association="_XJ65wwt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ7g0Qt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ7g0gt3EeiiCrav3vcpBQ _XInSMAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ7g0gt3EeiiCrav3vcpBQ" name="" type="_W83VMAt3EeiiCrav3vcpBQ" association="_XJ7g0Qt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XKLYcAt3EeiiCrav3vcpBQ" name="" memberEnd="_XKLYcQt3EeiiCrav3vcpBQ _XJajfAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XKLYcQt3EeiiCrav3vcpBQ" name="" type="_W8cecAt3EeiiCrav3vcpBQ" association="_XKLYcAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_W4cIMQt3EeiiCrav3vcpBQ" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_W9XEcAt3EeiiCrav3vcpBQ" name="BallWorldView">
        <ownedComment xmi:id="_XJc_twt3EeiiCrav3vcpBQ">
          <body>This is the BallWorldView class, which has the frame on which our BallWorld is displayed.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <generalization xmi:id="_XIFGsAt3EeiiCrav3vcpBQ" general="_XG4M0At3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XIrjoAt3EeiiCrav3vcpBQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIrjoQt3EeiiCrav3vcpBQ" value="-7114823923004621639L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIrjogt3EeiiCrav3vcpBQ" name="contentPane" visibility="private" type="_XG4z4Qt3EeiiCrav3vcpBQ" association="_XJ8u8Qt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XIsKsQt3EeiiCrav3vcpBQ" name="pnlControl" visibility="private" isLeaf="true" type="_XG4z4Qt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XJ9WAQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIsKsgt3EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XItY0At3EeiiCrav3vcpBQ" name="tfClassname" visibility="private" isLeaf="true" type="_XG5a8Qt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XJ99EQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XItY0Qt3EeiiCrav3vcpBQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XItY0wt3EeiiCrav3vcpBQ" name="btnClearBalls" visibility="private" isLeaf="true" type="_XG6CAQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XJ-kIQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XItY1At3EeiiCrav3vcpBQ" value="new JButton(&quot;Clear balls&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIt_4Qt3EeiiCrav3vcpBQ" name="adapter" visibility="private" type="_W9iDkAt3EeiiCrav3vcpBQ" association="_XJ_yQAt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XIvOAgt3EeiiCrav3vcpBQ" name="pnlCanvas" visibility="private" isLeaf="true" type="_XG4z4Qt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XKAZUQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIvOAwt3EeiiCrav3vcpBQ" value="new JPanel() {&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * This is a private variable that gives the class an ID to serialize and deserialize.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;private static final long serialVersionUID = 8303517520311377718L;&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Overridden paintComponent method to paint a shape in the panel.&#xA;&#x9;&#x9; * @param g The Graphics object to paint on.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public void paintComponent(Graphics g) {&#xA;&#x9;&#x9;&#x9;super.paintComponent(g); // Do everything normally done first, e.g. clear the screen.&#xA;&#x9;&#x9;&#x9;adapter.paintBalls(g);&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIvOBQt3EeiiCrav3vcpBQ" name="btnAddToList" visibility="private" isLeaf="true" type="_XG6CAQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XKBAYQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIvOBgt3EeiiCrav3vcpBQ" value="new JButton(&quot;Add to list&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIv1EQt3EeiiCrav3vcpBQ" name="btnCombine" visibility="private" isLeaf="true" type="_XG6CAQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XKBncQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIv1Egt3EeiiCrav3vcpBQ" value="new JButton(&quot;Combine&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIwcIQt3EeiiCrav3vcpBQ" name="btnMakeSelectedBall" visibility="private" isLeaf="true" type="_XG6CAQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XKC1kAt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIxDMAt3EeiiCrav3vcpBQ" value="new JButton(&quot;Make selected ball&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIxDMgt3EeiiCrav3vcpBQ" name="btnMakeSwitcher" visibility="private" isLeaf="true" type="_XG6CAQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XKDcoQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIxDMwt3EeiiCrav3vcpBQ" value="new JButton(&quot;Make switcher&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIxqQAt3EeiiCrav3vcpBQ" name="btnSwitch" visibility="private" isLeaf="true" type="_XG6CAQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XKEDsQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIxqQQt3EeiiCrav3vcpBQ" value="new JButton(&quot;Switch&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIyRUAt3EeiiCrav3vcpBQ" name="comBoxTop" visibility="private" type="_XG8eQAt3EeiiCrav3vcpBQ" association="_XKEqwQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIy4YQt3EeiiCrav3vcpBQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIy4Ywt3EeiiCrav3vcpBQ" name="comBoxBottom" visibility="private" type="_XG8eQAt3EeiiCrav3vcpBQ" association="_XKFR0Qt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIzfcQt3EeiiCrav3vcpBQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XI0GgQt3EeiiCrav3vcpBQ" name="pnlChangeList" visibility="private" isLeaf="true" type="_XG4z4Qt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XKF44Qt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XI0Gggt3EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XI0tkQt3EeiiCrav3vcpBQ" name="pnlDropDowns" visibility="private" isLeaf="true" type="_XG4z4Qt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XKGf8Qt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XI0tkgt3EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XI0tlAt3EeiiCrav3vcpBQ" name="pnlSwitching" visibility="private" isLeaf="true" type="_XG4z4Qt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XKHuEAt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XI1UoAt3EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XI1Uogt3EeiiCrav3vcpBQ" name="pnlPaintStrats" visibility="private" isLeaf="true" type="_XG4z4Qt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XKIVIQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XI1Uowt3EeiiCrav3vcpBQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XI2iwAt3EeiiCrav3vcpBQ" name="btnAddPaintStrat" visibility="private" isLeaf="true" type="_XG6CAQt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XKI8MQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XI2iwQt3EeiiCrav3vcpBQ" value="new JButton(&quot;Add&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XI2iwwt3EeiiCrav3vcpBQ" name="txtPaintStrat" visibility="private" isLeaf="true" type="_XG5a8Qt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XKJjQQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XI2ixAt3EeiiCrav3vcpBQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XI3J0Qt3EeiiCrav3vcpBQ" name="comBoxStrats" visibility="private" isLeaf="true" type="_XG8eQAt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XKKKUQt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XI4X8Qt3EeiiCrav3vcpBQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJSnoAt3EeiiCrav3vcpBQ" name="getPanel" specification="_W9aHwAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJSnoQt3EeiiCrav3vcpBQ" type="_XG4z4Qt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return pnlCanvas;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJSnogt3EeiiCrav3vcpBQ" name="BallWorldView" specification="_XHAIoAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJSnowt3EeiiCrav3vcpBQ" name="adapter" type="_W9iDkAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJSnpAt3EeiiCrav3vcpBQ" type="_W9XEcAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>txtPaintStrat.setToolTipText(&quot;This is the text field where you can add paint strategies.&quot;);
		pnlPaintStrats.setToolTipText(&quot;This is the panel that holds the components that let you add paint strategies and select them.&quot;);
		pnlPaintStrats.add(txtPaintStrat);
		txtPaintStrat.setColumns(10);
		this.adapter = adapter;
		initGUI();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJSnpQt3EeiiCrav3vcpBQ" name="updateView" specification="_W9au0At3EeiiCrav3vcpBQ">
          <language>java</language>
          <body>repaint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJSnpgt3EeiiCrav3vcpBQ" name="getCanvas" specification="_W9au0Qt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJSnpwt3EeiiCrav3vcpBQ" type="_XFdQgAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return getPanel();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJSnqAt3EeiiCrav3vcpBQ" name="initGUI" specification="_W9bV4At3EeiiCrav3vcpBQ">
          <language>java</language>
          <body>setTitle(&quot;BallWorld&quot;);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setToolTipText(&quot;This is the content of the frame.&quot;);
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		pnlControl.setBackground(Color.DARK_GRAY);
		pnlControl.setToolTipText(&quot;This is the control panel that lets you create balls and clear them.&quot;);
		
		contentPane.add(pnlControl, BorderLayout.NORTH);
		pnlControl.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		pnlChangeList.setToolTipText(&quot;This panel is where you can add the type of ball you want to make to the drop down lists.&quot;);
		
		pnlControl.add(pnlChangeList);
		pnlChangeList.setLayout(new GridLayout(0, 1, 0, 0));
		
		pnlChangeList.add(tfClassname);
		tfClassname.setToolTipText(&quot;The type of the ball you want to make.&quot;);
		
		tfClassname.setColumns(10);
		btnAddToList.setToolTipText(&quot;This button adds the strategy type in the text field to the drop down boxes.&quot;);
		pnlChangeList.add(btnAddToList);
		btnAddToList.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (tfClassname.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem stratFac = adapter.addStrategy(tfClassname.getText());

             comBoxTop.insertItemAt(stratFac, 0);
             comBoxBottom.insertItemAt(stratFac, 0);
			}
		});
		pnlDropDowns.setToolTipText(&quot;This panel is for the drop down boxes, and buttons to make selected balls and combine strategies.&quot;);
		
		pnlControl.add(pnlDropDowns);
		pnlDropDowns.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSelectedBall.setToolTipText(&quot;This button makes a ball with the update strategy of the factory that's selected on the top drop down box.&quot;);
		pnlDropDowns.add(btnMakeSelectedBall);
		comBoxTop.setToolTipText(&quot;This is the drop down list on the top.&quot;);
		pnlDropDowns.add(comBoxTop);
		comBoxBottom.setToolTipText(&quot;This is the drop down list on the bottom.&quot;);
		pnlDropDowns.add(comBoxBottom);
		btnCombine.setToolTipText(&quot;This button combines the two strategy factories in the combo boxes.&quot;);
		pnlDropDowns.add(btnCombine);
		btnCombine.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem top = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem bottom = comBoxBottom.getItemAt(comBoxBottom.getSelectedIndex());
				
				if (top == null || bottom == null) {
					return;
				}
				
				TDropListItem combo = adapter.combineStrategies(top, bottom);
				comBoxTop.addItem(combo);
				comBoxBottom.addItem(combo);
			}
		});
		btnMakeSelectedBall.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem selected = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem paintFac = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (selected == null || paintFac == null) {
					return;
				}
				
				adapter.makeBall(selected, paintFac);
			}
		});
		pnlSwitching.setToolTipText(&quot;This panel is for the buttons related to making switcher balls and switching their strategies.&quot;);
		
		pnlControl.add(pnlSwitching);
		pnlSwitching.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSwitcher.setToolTipText(&quot;Click this item to make a switcher ball.&quot;);
		pnlSwitching.add(btnMakeSwitcher);
		btnSwitch.setToolTipText(&quot;Click this button to switch the switcher balls to the selected item in the top combo box.&quot;);
		pnlSwitching.add(btnSwitch);
		
		btnSwitch.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switchFac = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				
				if (switchFac == null) {
					return;
				}
				
				adapter.setSwitcherStrategy(switchFac);
			}
		});
		
		btnMakeSwitcher.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switcherStrat = adapter.getSwitcherFac();
				TDropListItem paintStrat = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (paintStrat == null) {
					return;
				}
				
				adapter.makeBall(switcherStrat, paintStrat);
			}
		});
		btnClearBalls.setToolTipText(&quot;Click this to clear the balls on the canvas.&quot;);
		btnClearBalls.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				adapter.clearBalls();
			}
		});
		
		pnlControl.add(btnClearBalls);
		
		pnlControl.add(pnlPaintStrats);
		pnlPaintStrats.setLayout(new GridLayout(0, 1, 0, 0));
		btnAddPaintStrat.setToolTipText(&quot;This is the button that lets you add paint strategies to the combo box below.&quot;);
		btnAddPaintStrat.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (txtPaintStrat.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem paintFac = adapter.addPaintFactory(txtPaintStrat.getText());
             comBoxStrats.insertItemAt(paintFac, 0);
			}
		});
		
		
		pnlPaintStrats.add(btnAddPaintStrat);
		comBoxStrats.setToolTipText(&quot;The is the combo box for the paint strategies that can be implemented.&quot;);
		
		pnlPaintStrats.add(comBoxStrats);
		pnlCanvas.setBackground(Color.LIGHT_GRAY);
		pnlCanvas.setToolTipText(&quot;This is the canvas where the balls move, and stay in.&quot;);
		
		contentPane.add(pnlCanvas, BorderLayout.CENTER);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJTOsAt3EeiiCrav3vcpBQ" name="start" specification="_W9bV4Qt3EeiiCrav3vcpBQ">
          <language>java</language>
          <body>setExtendedState(JFrame.MAXIMIZED_BOTH);
		setVisible(true);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W9aHwAt3EeiiCrav3vcpBQ" name="getPanel" method="_XJSnoAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJc_uAt3EeiiCrav3vcpBQ">
            <body>This gets the canvas of the frame.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_XIEfoAt3EeiiCrav3vcpBQ" type="_XG4z4Qt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_W9au0At3EeiiCrav3vcpBQ" name="updateView" method="_XJSnpQt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJc_ugt3EeiiCrav3vcpBQ">
            <body>Update the view by repainting</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_W9au0Qt3EeiiCrav3vcpBQ" name="getCanvas" method="_XJSnpgt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJc_uwt3EeiiCrav3vcpBQ">
            <body>This function returns the canvas panel.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_XIEfoQt3EeiiCrav3vcpBQ" type="_XFdQgAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_W9bV4At3EeiiCrav3vcpBQ" name="initGUI" visibility="private" method="_XJSnqAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJdmwAt3EeiiCrav3vcpBQ">
            <body>This private function initializes the GUI.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_W9bV4Qt3EeiiCrav3vcpBQ" name="start" method="_XJTOsAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJdmwQt3EeiiCrav3vcpBQ">
            <body>This function makes the frame visible after initializing it.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_XHAIoAt3EeiiCrav3vcpBQ" name="BallWorldView" method="_XJSnogt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_XHAIogt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_XHAIowt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_XJc_uQt3EeiiCrav3vcpBQ">
            <body>Create the frame
	 * @param adapter An IView2ModelAdapter</body>
          </ownedComment>
          <ownedParameter xmi:id="_XHAIoQt3EeiiCrav3vcpBQ" name="adapter" type="_W9iDkAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XHAIpAt3EeiiCrav3vcpBQ" type="_W9XEcAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_W9iDkAt3EeiiCrav3vcpBQ" name="IView2ModelAdapter">
        <ownedComment xmi:id="_XJdmwgt3EeiiCrav3vcpBQ">
          <body>This is an interface which has the functions that the view wants the model to have.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_W9lG4At3EeiiCrav3vcpBQ" name="switcherFac" type="_XIHi8gt3EeiiCrav3vcpBQ" isReadOnly="true" association="_XJuFcQt3EeiiCrav3vcpBQ"/>
        <ownedOperation xmi:id="_W9j4wAt3EeiiCrav3vcpBQ" name="clearBalls">
          <ownedComment xmi:id="_XJeN0At3EeiiCrav3vcpBQ">
            <body>This is a function that will tell the model to clear the balls.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_W9kf0At3EeiiCrav3vcpBQ" name="addStrategy">
          <ownedComment xmi:id="_XJeN0gt3EeiiCrav3vcpBQ">
            <body>This function will take the given short strategy name and return a corresponding
     * something to put onto both drop lists.
     * @param classname The shortened class name of the desired strategy
     * @return Something to put onto both the drop lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_W9kf0Qt3EeiiCrav3vcpBQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XIIKAQt3EeiiCrav3vcpBQ" type="_XIHi8gt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_W9lt8At3EeiiCrav3vcpBQ" name="addPaintFactory">
          <ownedParameter xmi:id="_W9lt8Qt3EeiiCrav3vcpBQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XIJ_Mgt3EeiiCrav3vcpBQ" type="_XIHi8gt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XIHi8At3EeiiCrav3vcpBQ" name="paintBalls">
          <ownedComment xmi:id="_XJeN0Qt3EeiiCrav3vcpBQ">
            <body>This is a function that will tell the model to paint the balls.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XIHi8Qt3EeiiCrav3vcpBQ" name="g" type="_XFgT0At3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XIIxEAt3EeiiCrav3vcpBQ" name="makeBall">
          <ownedComment xmi:id="_XJeN0wt3EeiiCrav3vcpBQ">
            <body>This function will make a ball with the selected short strategy name.
     * @param selectedItem A shorten class name for the desired strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_XIIxEQt3EeiiCrav3vcpBQ" name="selectedItem" type="_XIHi8gt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XIIxEgt3EeiiCrav3vcpBQ" name="paintStrat" type="_XIHi8gt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XIJYIAt3EeiiCrav3vcpBQ" name="combineStrategies">
          <ownedComment xmi:id="_XJeN1At3EeiiCrav3vcpBQ">
            <body>This function will return a new object to put on both lists, given two items from the lists.
     * @param selectedItem1 An object from one drop list
     * @param selectedItem2 An object from the other drop list
     * @return An object to put back on both lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XIJYIQt3EeiiCrav3vcpBQ" name="selectedItem1" type="_XIHi8gt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XIJYIgt3EeiiCrav3vcpBQ" name="selectedItem2" type="_XIHi8gt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XIJYIwt3EeiiCrav3vcpBQ" type="_XIHi8gt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XIJ_MAt3EeiiCrav3vcpBQ" name="setSwitcherStrategy">
          <ownedComment xmi:id="_XJeN1Qt3EeiiCrav3vcpBQ">
            <body>This function will change the current strategy of the switcher balls to whatever
     * strategy is made by the factory in the parameter.
     * @param switchFac An object from the top drop list.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XIJ_MQt3EeiiCrav3vcpBQ" name="switchFac" type="_XIHi8gt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_XIHi8gt3EeiiCrav3vcpBQ" name="TDropListItem"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJuFcQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJuFcgt3EeiiCrav3vcpBQ _W9lG4At3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJuFcgt3EeiiCrav3vcpBQ" name="" type="_W9iDkAt3EeiiCrav3vcpBQ" association="_XJuFcQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ8u8Qt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ8u8gt3EeiiCrav3vcpBQ _XIrjogt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ8u8gt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XJ8u8Qt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ9WAQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ9WAgt3EeiiCrav3vcpBQ _XIsKsQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ9WAgt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XJ9WAQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ99EQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ99Egt3EeiiCrav3vcpBQ _XItY0At3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ99Egt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XJ99EQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ-kIQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ-kIgt3EeiiCrav3vcpBQ _XItY0wt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ-kIgt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XJ-kIQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ_yQAt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ_yQQt3EeiiCrav3vcpBQ _XIt_4Qt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ_yQQt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XJ_yQAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XKAZUQt3EeiiCrav3vcpBQ" name="" memberEnd="_XKAZUgt3EeiiCrav3vcpBQ _XIvOAgt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XKAZUgt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XKAZUQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XKBAYQt3EeiiCrav3vcpBQ" name="" memberEnd="_XKBAYgt3EeiiCrav3vcpBQ _XIvOBQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XKBAYgt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XKBAYQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XKBncQt3EeiiCrav3vcpBQ" name="" memberEnd="_XKBncgt3EeiiCrav3vcpBQ _XIv1EQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XKBncgt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XKBncQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XKC1kAt3EeiiCrav3vcpBQ" name="" memberEnd="_XKC1kQt3EeiiCrav3vcpBQ _XIwcIQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XKC1kQt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XKC1kAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XKDcoQt3EeiiCrav3vcpBQ" name="" memberEnd="_XKDcogt3EeiiCrav3vcpBQ _XIxDMgt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XKDcogt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XKDcoQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XKEDsQt3EeiiCrav3vcpBQ" name="" memberEnd="_XKEDsgt3EeiiCrav3vcpBQ _XIxqQAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XKEDsgt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XKEDsQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XKEqwQt3EeiiCrav3vcpBQ" name="" memberEnd="_XKEqwgt3EeiiCrav3vcpBQ _XIyRUAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XKEqwgt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XKEqwQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XKFR0Qt3EeiiCrav3vcpBQ" name="" memberEnd="_XKFR0gt3EeiiCrav3vcpBQ _XIy4Ywt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XKFR0gt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XKFR0Qt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XKF44Qt3EeiiCrav3vcpBQ" name="" memberEnd="_XKF44gt3EeiiCrav3vcpBQ _XI0GgQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XKF44gt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XKF44Qt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XKGf8Qt3EeiiCrav3vcpBQ" name="" memberEnd="_XKGf8gt3EeiiCrav3vcpBQ _XI0tkQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XKGf8gt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XKGf8Qt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XKHuEAt3EeiiCrav3vcpBQ" name="" memberEnd="_XKHuEQt3EeiiCrav3vcpBQ _XI0tlAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XKHuEQt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XKHuEAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XKIVIQt3EeiiCrav3vcpBQ" name="" memberEnd="_XKIVIgt3EeiiCrav3vcpBQ _XI1Uogt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XKIVIgt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XKIVIQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XKI8MQt3EeiiCrav3vcpBQ" name="" memberEnd="_XKI8Mgt3EeiiCrav3vcpBQ _XI2iwAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XKI8Mgt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XKI8MQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XKJjQQt3EeiiCrav3vcpBQ" name="" memberEnd="_XKJjQgt3EeiiCrav3vcpBQ _XI2iwwt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XKJjQgt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XKJjQQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XKKKUQt3EeiiCrav3vcpBQ" name="" memberEnd="_XKKKUgt3EeiiCrav3vcpBQ _XI3J0Qt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XKKKUgt3EeiiCrav3vcpBQ" name="" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XKKKUQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_W4fykAt3EeiiCrav3vcpBQ" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_W7NIUAt3EeiiCrav3vcpBQ" name="BallWorldController">
        <ownedComment xmi:id="_XJVq8At3EeiiCrav3vcpBQ">
          <body>This is the BallWorldController, that has private variables for model and view,
and is able to interface between them.
@author sn32, kyl3, lka2, swong
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_XIOQoAt3EeiiCrav3vcpBQ" name="model" visibility="private" type="_W7uswAt3EeiiCrav3vcpBQ" association="_XJusgQt3EeiiCrav3vcpBQ"/>
        <ownedAttribute xmi:id="_XIO3sQt3EeiiCrav3vcpBQ" name="view" visibility="private" type="_W9XEcAt3EeiiCrav3vcpBQ" association="_XJv6oAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XI7bQAt3EeiiCrav3vcpBQ" name="main" specification="_W7PkkAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XI7bQQt3EeiiCrav3vcpBQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XI7bQgt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(() -> {
			try {
				(new BallWorldController()).start();
			} catch (Exception e) {
				e.printStackTrace();
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XI8CUAt3EeiiCrav3vcpBQ" name="BallWorldController" specification="_W7RZwAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XI8CUQt3EeiiCrav3vcpBQ" type="_W7NIUAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>model = new BallWorldModel(new IModel2ViewAdapter() {

			/**
			 * This function from the IModel2ViewAdapter allows the controller
			 * to tell the view to update.
			 */
			@Override
			public void update() {
				view.updateView();
			}

			/**
			 * This function from the IModel2ViewAdapter allows the controller to get
			 * the canvas from the view.
			 */
			@Override
			public Container getCanvas() {
				return view.getCanvas();
			}
		});
		
		view = new BallWorldView&lt;IStrategyFac>(new IView2ModelAdapter&lt;IStrategyFac>() {
	        /**
	         * Returns an IStrategyFac that can instantiate the strategy specified
	         * by classname. Returns the error strategy factory if classname is null.
	         * The toString() of the returned factory is the classname.
	         * @param classname Shortened name of desired strategy
	         * @return A factory to make that strategy
	         */
			@Override
	        public IStrategyFac addStrategy(String classname) {
	        		return model.makeStrategyFac(classname);
	        	}

	        /**
	         * Add a ball to the system with a strategy as given by the given IStrategyFac
	         * @param selectedItem The fully qualified name of the desired strategy.
	         */
	        @Override
	        public void makeBall(IStrategyFac selectedItem, IStrategyFac paintStrat) {
	        		if (null != selectedItem &amp;&amp; paintStrat != null) {
	        			model.makeBall(selectedItem.make(), paintStrat.makePaint());
	        		}
	        	}
			
			/**
			 * Returns an IStrategyFac that can instantiate a MultiStrategy with the
			 * two strategies made by the two given IStrategyFac objects. Returns
			 * the error strategy factory if either supplied factory is null. The
			 * toString() of the returned factory is the toString()'s of the two given
			 * factories, concatenated with &quot;-&quot;.
			 * @param selectedItem1 An IStrategyFac for a strategy
			 * @param selectedItem2 An IStrategyFac for a strategy
			 * @return An IStrategyFac for the composition of the two strategies
			 */
	        @Override
			public IStrategyFac combineStrategies(IStrategyFac selectedItem1, IStrategyFac selectedItem2) {
				return model.combineStrategyFacs(selectedItem1, selectedItem2);
			}
			
			/**
			 * This function tells the model to clear all the balls from the canvas.
			 */
			@Override
			public void clearBalls() {
				model.clearBalls();
			}
			
			/**
			 * This function tells the model to paint and update the status of all the balls.
			 */
			@Override 
			public void paintBalls(Graphics g) {
				model.update(g); // see is this is correct or if a paint method is needed
			}

			/**
			 * This function sets the strategy of the switcher balls to whatever is made by
			 * the input's make method.
			 * @param switchFac The new strategy factory whose make method returns the new strategy
			 * for the switcher balls
			 */
			@Override
			public void setSwitcherStrategy(IStrategyFac switchFac) {
				model.setSwitcherStrategy(switchFac);
			}

			/**
			 * This function returns the strategy factory that is making the switcher balls' current strategy.
			 * @return An IStrategyFactory that makes the current switcher balls' strategy.
			 */
			@Override
			public IStrategyFac getSwitcherFac() {
				return model.getSwitcherFac();
			}

			@Override
			public IStrategyFac addPaintFactory(String text) {
				return model.makePaintFactory(text);
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XI8CUgt3EeiiCrav3vcpBQ" name="start" specification="_W7SA0wt3EeiiCrav3vcpBQ">
          <language>java</language>
          <body>view.start();
		model.start();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W7PkkAt3EeiiCrav3vcpBQ" name="main" isStatic="true" method="_XI7bQAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJWSAAt3EeiiCrav3vcpBQ">
            <body>This main method starts the BallWorldController.
	 * @param args Command line arguments.</body>
          </ownedComment>
          <ownedParameter xmi:id="_W7QLoAt3EeiiCrav3vcpBQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_W7QLoQt3EeiiCrav3vcpBQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_W7RZwAt3EeiiCrav3vcpBQ" name="BallWorldController" method="_XI8CUAt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_W7SA0At3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_W7SA0Qt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_XJWSAQt3EeiiCrav3vcpBQ">
            <body>This is the constructor for BallWorldController, which
	 * creates anonymous inner classes for the adapters, and defines their functions.</body>
          </ownedComment>
          <ownedParameter xmi:id="_W7SA0gt3EeiiCrav3vcpBQ" type="_W7NIUAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_W7SA0wt3EeiiCrav3vcpBQ" name="start" method="_XI8CUgt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJWSAgt3EeiiCrav3vcpBQ">
            <body>This function starts the view and model.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJusgQt3EeiiCrav3vcpBQ" name="" memberEnd="_XJusggt3EeiiCrav3vcpBQ _XIOQoAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJusggt3EeiiCrav3vcpBQ" name="" type="_W7NIUAt3EeiiCrav3vcpBQ" association="_XJusgQt3EeiiCrav3vcpBQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJv6oAt3EeiiCrav3vcpBQ" name="" memberEnd="_XJv6oQt3EeiiCrav3vcpBQ _XIO3sQt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJv6oQt3EeiiCrav3vcpBQ" name="" type="_W7NIUAt3EeiiCrav3vcpBQ" association="_XJv6oAt3EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_W4sm4Qt3EeiiCrav3vcpBQ" name="util">
      <packagedElement xmi:type="uml:Class" xmi:id="_W9FXoAt3EeiiCrav3vcpBQ" name="Dispatcher">
        <ownedComment xmi:id="_XJcYpQt3EeiiCrav3vcpBQ">
          <body>A simplified Observable class that immediately notifies its Observers when its
notifyAll() method is called. The changed state of the Dispatcher does not need
to be separately set.
@author sn32, kyl3</body>
        </ownedComment>
        <generalization xmi:id="_XH3EQQt3EeiiCrav3vcpBQ" general="_XFr6AQt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJQLYAt3EeiiCrav3vcpBQ" name="notifyAll" specification="_XH2dMQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJQLYQt3EeiiCrav3vcpBQ" name="param" type="_XHZKMQt3EeiiCrav3vcpBQ"/>
          <language>java</language>
          <body>setChanged();
     notifyObservers(param);
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_XH2dMQt3EeiiCrav3vcpBQ" name="notifyAll" method="_XJQLYAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XH3EQAt3EeiiCrav3vcpBQ" name="param" type="_XHZKMQt3EeiiCrav3vcpBQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_W9GlwAt3EeiiCrav3vcpBQ" name="IRandomizer">
        <ownedOperation xmi:id="_W9HM0At3EeiiCrav3vcpBQ" name="randomInt">
          <ownedComment xmi:id="_XJcYqAt3EeiiCrav3vcpBQ">
            <body>Returns a random integer greater than or equal to min and less than or equal to max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return an int subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_W9Hz4At3EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W9Hz4Qt3EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W9Hz4gt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_W9Ia8At3EeiiCrav3vcpBQ" name="randomDouble">
          <ownedComment xmi:id="_XJcYqQt3EeiiCrav3vcpBQ">
            <body>Returns a random double greater than or equal to min and less than max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return a double subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_W9Ia8Qt3EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W9Ia8gt3EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W9Ia8wt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_W9JCAAt3EeiiCrav3vcpBQ" name="randomColor">
          <ownedComment xmi:id="_XJc_sAt3EeiiCrav3vcpBQ">
            <body>Generates a random color
	 * @return a random Color object</body>
          </ownedComment>
          <ownedParameter xmi:id="_XH78wwt3EeiiCrav3vcpBQ" type="_XFqr4At3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XH3rUAt3EeiiCrav3vcpBQ" name="randomLoc">
          <ownedComment xmi:id="_XJcYpgt3EeiiCrav3vcpBQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than rect.width
	 * and 0 less than y less than rect.height.
	 * @param rect The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_XH3rUQt3EeiiCrav3vcpBQ" name="rect" type="_XF3gMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XH4SYAt3EeiiCrav3vcpBQ" type="_XFrS8Qt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XH5ggAt3EeiiCrav3vcpBQ" name="randomLoc">
          <ownedComment xmi:id="_XJcYpwt3EeiiCrav3vcpBQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than dim.width
	 * and 0 less than y less than dim.height.
	 * @param dim The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_XH5ggQt3EeiiCrav3vcpBQ" name="dim" type="_XH4SYQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XH5gggt3EeiiCrav3vcpBQ" type="_XFrS8Qt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XH6HkAt3EeiiCrav3vcpBQ" name="randomVel">
          <ownedComment xmi:id="_XJcYqgt3EeiiCrav3vcpBQ">
            <body>Returns a random velocity (as a Point) subject to the constraint that the absolute value
	 * of the velocity (speed) within the bound (inclusive) defined by rect. Thus the resultant
	 * velocity may be negative. The given Rectangle should use all positive values.
	 * @param rect The bounds for the absolute value of the velocity in the x and y directions.  
	 * @return a Point object with x and y subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XH6HkQt3EeiiCrav3vcpBQ" name="rect" type="_XF3gMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XH6Hkgt3EeiiCrav3vcpBQ" type="_XFrS8Qt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XH6uoAt3EeiiCrav3vcpBQ" name="randomDim">
          <ownedComment xmi:id="_XJcYqwt3EeiiCrav3vcpBQ">
            <body>Returns a random square Dimension, whose width is maxDim.width/2 less than width less than maxDim.width
	 * @param maxDim  The bounds on the side of the created Dimension.
	 * @return A random square Dimension subject to the given bound</body>
          </ownedComment>
          <ownedParameter xmi:id="_XH6uoQt3EeiiCrav3vcpBQ" name="maxDim" type="_XH4SYQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XH6uogt3EeiiCrav3vcpBQ" type="_XH4SYQt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XH7VsAt3EeiiCrav3vcpBQ" name="randomBounds">
          <ownedComment xmi:id="_XJcYrAt3EeiiCrav3vcpBQ">
            <body>Generates a randomly located and sized rectangle
	 * @param rect  The bounds for the location of the created rectangle
	 * @param maxDim  The bounds for the dimensions of the create rectangle
	 * @return A Rectangle with location and dimensions subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XH78wAt3EeiiCrav3vcpBQ" name="rect" type="_XF3gMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XH78wQt3EeiiCrav3vcpBQ" name="maxDim" type="_XH4SYQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XH78wgt3EeiiCrav3vcpBQ" type="_XF3gMAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XH8j0At3EeiiCrav3vcpBQ" name="randomChoice">
          <ownedComment xmi:id="_XJc_sQt3EeiiCrav3vcpBQ">
            <body>Returns a random choice of one of two objects, x and y, where probX is the probability 
	 * that x will be picked (0 less than x less than 1).
	 * @param x The first of two choices
	 * @param y The second of two choices
	 * @param probX  The probability of the first choice
	 * @return Either x or y as per the probability of choosing them.</body>
          </ownedComment>
          <ownedParameter xmi:id="_XH8j0Qt3EeiiCrav3vcpBQ" name="x" type="_XHZKMQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XH8j0gt3EeiiCrav3vcpBQ" name="y" type="_XHZKMQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XH8j0wt3EeiiCrav3vcpBQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XH8j1At3EeiiCrav3vcpBQ" type="_XHZKMQt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W9MFUAt3EeiiCrav3vcpBQ" name="SineMaker">
        <ownedComment xmi:id="_XJc_sgt3EeiiCrav3vcpBQ">
          <body>A utility class that can be used to create smoothly varying sinusoidal
numerical data.
Note that this is not a singleton class nor does it have static methods as
its behavior depends on the minimum, maximum and delta values given to 
its constructor.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_XIn5QAt3EeiiCrav3vcpBQ" name="_mid" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIogUQt3EeiiCrav3vcpBQ" name="_ampl" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIpHYQt3EeiiCrav3vcpBQ" name="_delta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_XIpucAt3EeiiCrav3vcpBQ" name="_theta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIpucQt3EeiiCrav3vcpBQ" value="-Math.PI/2.0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJQLYgt3EeiiCrav3vcpBQ" name="SineMaker" specification="_W9NTcAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJQLYwt3EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJQLZAt3EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJQLZQt3EeiiCrav3vcpBQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJQLZgt3EeiiCrav3vcpBQ" type="_W9MFUAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>_mid = (max+min)/2.0;
		_ampl = (max-min)/2.0;
		_delta = delta;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJQycAt3EeiiCrav3vcpBQ" name="getDblVal" specification="_W9N6gwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJQycQt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double result = _mid + _ampl*Math.sin(_theta);
		_theta += _delta; // shorthand for _theta = _theta + _delta
		return result;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJQycgt3EeiiCrav3vcpBQ" name="getIntVal" specification="_W9OhkQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJQycwt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int) Math.round(getDblVal());
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W9NTcAt3EeiiCrav3vcpBQ" name="SineMaker" method="_XJQLYgt3EeiiCrav3vcpBQ">
          <eAnnotations xmi:id="_W9N6gAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_W9N6gQt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_XJc_swt3EeiiCrav3vcpBQ">
            <body>The constructor takes several values to control the object's behavior.
	 * @param min The minimum and initial value to produce.
	 * @param max The maximum value to produce.
	 * @param delta The amount in radians that the generating angle is incremented each time
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_W9NTcQt3EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W9NTcgt3EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W9NTcwt3EeiiCrav3vcpBQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W9N6ggt3EeiiCrav3vcpBQ" type="_W9MFUAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_W9N6gwt3EeiiCrav3vcpBQ" name="getDblVal" method="_XJQycAt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJc_tAt3EeiiCrav3vcpBQ">
            <body>Returns a different value each time it is called.  The value varies smoothly in a 
	 * sinusoidal fashion, incrementing each time as per the above specified delta 
	 * angle increase.
	 * @return the next value as a double</body>
          </ownedComment>
          <ownedParameter xmi:id="_W9OhkAt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_W9OhkQt3EeiiCrav3vcpBQ" name="getIntVal" method="_XJQycgt3EeiiCrav3vcpBQ">
          <ownedComment xmi:id="_XJc_tQt3EeiiCrav3vcpBQ">
            <body>Same as getDblVal, but returns the result rounded to the nearest integer.
	 * Note that getDblVal and getIntVal are not independent as getIntVal merely calls
	 * getDblVal.
	 * @return the next value as an int</body>
          </ownedComment>
          <ownedParameter xmi:id="_W9Ohkgt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W9PIoAt3EeiiCrav3vcpBQ" name="Randomizer">
        <ownedComment xmi:id="_XJc_tgt3EeiiCrav3vcpBQ">
          <body>Utility class that supplies  class routines for generating various random values</body>
        </ownedComment>
        <ownedAttribute xmi:id="_XIqVgAt3EeiiCrav3vcpBQ" name="Singleton" isStatic="true" type="_W9PIoAt3EeiiCrav3vcpBQ" association="_XJ8H4Qt3EeiiCrav3vcpBQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_XIqVgQt3EeiiCrav3vcpBQ" value="new Randomizer()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_XGz7YAt3EeiiCrav3vcpBQ" client="_W9PIoAt3EeiiCrav3vcpBQ" supplier="_W9GlwAt3EeiiCrav3vcpBQ" contract="_W9GlwAt3EeiiCrav3vcpBQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJQydAt3EeiiCrav3vcpBQ" name="randomLoc" specification="_XH9x8At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJQydQt3EeiiCrav3vcpBQ" name="rect" type="_XF3gMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJQydgt3EeiiCrav3vcpBQ" type="_XFrS8Qt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, rect.width), randomInt(0, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJQydwt3EeiiCrav3vcpBQ" name="randomLoc" specification="_XH-ZAAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJQyeAt3EeiiCrav3vcpBQ" name="dim" type="_XH4SYQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJQyeQt3EeiiCrav3vcpBQ" type="_XFrS8Qt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, dim.width), randomInt(0, dim.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJRZgAt3EeiiCrav3vcpBQ" name="randomInt" specification="_W9Rk4At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJRZgQt3EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJRZggt3EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJRZgwt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int)Math.floor((Math.random()*(1+max-min))+min);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJSAkAt3EeiiCrav3vcpBQ" name="randomDouble" specification="_W9SL8At3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJSAkQt3EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJSAkgt3EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJSAkwt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return (Math.random()*(max-min))+min;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJSAlAt3EeiiCrav3vcpBQ" name="randomVel" specification="_XH_AEgt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJSAlQt3EeiiCrav3vcpBQ" name="rect" type="_XF3gMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJSAlgt3EeiiCrav3vcpBQ" type="_XFrS8Qt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (new Point (randomInt(-rect.width, rect.width), randomInt(-rect.height, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJSAlwt3EeiiCrav3vcpBQ" name="randomDim" specification="_XH_nIgt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJSAmAt3EeiiCrav3vcpBQ" name="maxDim" type="_XH4SYQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJSAmQt3EeiiCrav3vcpBQ" type="_XH4SYQt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>int x =  randomInt(maxDim.width/2,maxDim.width);
		return new Dimension(x,x);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJSAmgt3EeiiCrav3vcpBQ" name="randomBounds" specification="_XIAOMQt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJSAmwt3EeiiCrav3vcpBQ" name="rect" type="_XF3gMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJSAnAt3EeiiCrav3vcpBQ" name="maxDim" type="_XH4SYQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJSAnQt3EeiiCrav3vcpBQ" type="_XF3gMAt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return new Rectangle(randomLoc(rect), randomDim(maxDim));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJSAngt3EeiiCrav3vcpBQ" name="randomColor" specification="_W9TaEAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJSAnwt3EeiiCrav3vcpBQ" type="_XFqr4At3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return new Color( randomInt(0,255),randomInt(0,255),randomInt(0,255));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_XJSAoAt3EeiiCrav3vcpBQ" name="randomChoice" specification="_XIBcUAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XJSAoQt3EeiiCrav3vcpBQ" name="x" type="_XHZKMQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJSAogt3EeiiCrav3vcpBQ" name="y" type="_XHZKMQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XJSAowt3EeiiCrav3vcpBQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XJSApAt3EeiiCrav3vcpBQ" type="_XHZKMQt3EeiiCrav3vcpBQ" direction="return"/>
          <language>java</language>
          <body>return (Math.random() &lt; probX) ? x: y;

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_W9QWwAt3EeiiCrav3vcpBQ" name="Randomizer" visibility="private">
          <eAnnotations xmi:id="_W9QWwQt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_W9QWwgt3EeiiCrav3vcpBQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_W9Q90At3EeiiCrav3vcpBQ" type="_W9PIoAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_W9Rk4At3EeiiCrav3vcpBQ" name="randomInt" method="_XJRZgAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_W9Rk4Qt3EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W9Rk4gt3EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W9Rk4wt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_W9SL8At3EeiiCrav3vcpBQ" name="randomDouble" method="_XJSAkAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_W9SL8Qt3EeiiCrav3vcpBQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W9SL8gt3EeiiCrav3vcpBQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_W9SzAAt3EeiiCrav3vcpBQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_W9TaEAt3EeiiCrav3vcpBQ" name="randomColor" method="_XJSAngt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XIA1Qgt3EeiiCrav3vcpBQ" type="_XFqr4At3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XH9x8At3EeiiCrav3vcpBQ" name="randomLoc" method="_XJQydAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XH9x8Qt3EeiiCrav3vcpBQ" name="rect" type="_XF3gMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XH9x8gt3EeiiCrav3vcpBQ" type="_XFrS8Qt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XH-ZAAt3EeiiCrav3vcpBQ" name="randomLoc" method="_XJQydwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XH_AEAt3EeiiCrav3vcpBQ" name="dim" type="_XH4SYQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XH_AEQt3EeiiCrav3vcpBQ" type="_XFrS8Qt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XH_AEgt3EeiiCrav3vcpBQ" name="randomVel" method="_XJSAlAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XH_nIAt3EeiiCrav3vcpBQ" name="rect" type="_XF3gMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XH_nIQt3EeiiCrav3vcpBQ" type="_XFrS8Qt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XH_nIgt3EeiiCrav3vcpBQ" name="randomDim" method="_XJSAlwt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XH_nIwt3EeiiCrav3vcpBQ" name="maxDim" type="_XH4SYQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XIAOMAt3EeiiCrav3vcpBQ" type="_XH4SYQt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XIAOMQt3EeiiCrav3vcpBQ" name="randomBounds" method="_XJSAmgt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XIAOMgt3EeiiCrav3vcpBQ" name="rect" type="_XF3gMAt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XIA1QAt3EeiiCrav3vcpBQ" name="maxDim" type="_XH4SYQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XIA1QQt3EeiiCrav3vcpBQ" type="_XF3gMAt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_XIBcUAt3EeiiCrav3vcpBQ" name="randomChoice" method="_XJSAoAt3EeiiCrav3vcpBQ">
          <ownedParameter xmi:id="_XIBcUQt3EeiiCrav3vcpBQ" name="x" type="_XHZKMQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XIBcUgt3EeiiCrav3vcpBQ" name="y" type="_XHZKMQt3EeiiCrav3vcpBQ"/>
          <ownedParameter xmi:id="_XIBcUwt3EeiiCrav3vcpBQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_XIBcVAt3EeiiCrav3vcpBQ" type="_XHZKMQt3EeiiCrav3vcpBQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XJ8H4Qt3EeiiCrav3vcpBQ" name="" memberEnd="_XJ8H4gt3EeiiCrav3vcpBQ _XIqVgAt3EeiiCrav3vcpBQ">
        <ownedEnd xmi:id="_XJ8H4gt3EeiiCrav3vcpBQ" name="" type="_W9PIoAt3EeiiCrav3vcpBQ" association="_XJ8H4Qt3EeiiCrav3vcpBQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_W43mAAt3EeiiCrav3vcpBQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_W44NEAt3EeiiCrav3vcpBQ" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_XF4uUQt3EeiiCrav3vcpBQ" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XG4M0At3EeiiCrav3vcpBQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XG4z4Qt3EeiiCrav3vcpBQ" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XG5a8Qt3EeiiCrav3vcpBQ" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XG6CAQt3EeiiCrav3vcpBQ" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_XG8eQAt3EeiiCrav3vcpBQ" name="JComboBox"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_V3IcMAt3EeiiCrav3vcpBQ">
      <eAnnotations xmi:id="_V3VQgAt3EeiiCrav3vcpBQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_V3V3kAt3EeiiCrav3vcpBQ" base_Package="_VsyNYAt3EeiiCrav3vcpBQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Array xmi:id="_W7QysAt3EeiiCrav3vcpBQ" base_Element="_W7QLoAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_W7bx0At3EeiiCrav3vcpBQ" base_Element="_W7ajsAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_W7s3kAt3EeiiCrav3vcpBQ" base_Element="_W7sQgAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_W8BAoAt3EeiiCrav3vcpBQ" base_Element="_W8AZkAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_W8COwAt3EeiiCrav3vcpBQ" base_Element="_W8AZkAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_W8COwQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_W8F5IAt3EeiiCrav3vcpBQ" base_Element="_W8ErAAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_W8N08Qt3EeiiCrav3vcpBQ" base_Element="_W8NN4Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_W8PDEAt3EeiiCrav3vcpBQ" base_Element="_W8OcAAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_W8jzMAt3EeiiCrav3vcpBQ" base_Element="_W8ilEAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_W8kaQAt3EeiiCrav3vcpBQ" base_Element="_W8ilEAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_W8kaQQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_W8rH8At3EeiiCrav3vcpBQ" base_Element="_W8qg4At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_W8rvAAt3EeiiCrav3vcpBQ" base_Element="_W8qg4At3EeiiCrav3vcpBQ">
    <annotations xmi:id="_W8rvAQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_W8vZYAt3EeiiCrav3vcpBQ" base_Element="_W8uyUAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_W8wAcAt3EeiiCrav3vcpBQ" base_Element="_W8uyUAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_W8wAcQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_W9QWwwt3EeiiCrav3vcpBQ" base_Element="_W9QWwAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_W9XrgAt3EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_W9XEcAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_W9jRsAt3EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_W9iDkAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XFeeoAt3EeiiCrav3vcpBQ" base_Element="_XFdQgAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XFfswAt3EeiiCrav3vcpBQ" base_Element="_XFeeoQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XFg64At3EeiiCrav3vcpBQ" base_Element="_XFgT0At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XFiwEAt3EeiiCrav3vcpBQ" base_Element="_XFhh8At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XFj-MAt3EeiiCrav3vcpBQ" base_Element="_XFjXIwt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XFklQAt3EeiiCrav3vcpBQ" base_Element="_XFjXIwt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XFklQQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XFoPoAt3EeiiCrav3vcpBQ" base_Element="_XFnokAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XFrS8At3EeiiCrav3vcpBQ" base_Element="_XFqr4At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XFr6AAt3EeiiCrav3vcpBQ" base_Element="_XFrS8Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XFtIIAt3EeiiCrav3vcpBQ" base_Element="_XFr6AQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XFtvMAt3EeiiCrav3vcpBQ" base_Element="_XFtIIQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XF2SEAt3EeiiCrav3vcpBQ" base_Element="_XF1rAAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XF25IAt3EeiiCrav3vcpBQ" base_Element="_XF1rAAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XF25IQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_XF4uUAt3EeiiCrav3vcpBQ" base_Element="_XF3gMAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XF5VYAt3EeiiCrav3vcpBQ" base_Element="_XF4uUQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XF_cAAt3EeiiCrav3vcpBQ" base_Element="_XF-08Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XF_cAQt3EeiiCrav3vcpBQ" base_Element="_XF-08Qt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XF_cAgt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XGAqIgt3EeiiCrav3vcpBQ" base_Element="_XGADEQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XGBRMAt3EeiiCrav3vcpBQ" base_Element="_XGADEQt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XGBRMQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XGEUgQt3EeiiCrav3vcpBQ" base_Element="_XGDGYQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XGE7kAt3EeiiCrav3vcpBQ" base_Element="_XGDGYQt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XGE7kQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_XGGJsAt3EeiiCrav3vcpBQ" base_Element="_XGFioAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XGGwwAt3EeiiCrav3vcpBQ" base_Element="_XGGJsQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XGJNAAt3EeiiCrav3vcpBQ" base_Element="_XGIl8At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XGJNAQt3EeiiCrav3vcpBQ" base_Element="_XGIl8At3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XGJNAgt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_XGKbIgt3EeiiCrav3vcpBQ" base_Element="_XGJ0EAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XGOFgAt3EeiiCrav3vcpBQ" base_Element="_XGNecAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XGPToAt3EeiiCrav3vcpBQ" base_Element="_XGOFgQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XGP6sAt3EeiiCrav3vcpBQ" base_Element="_XGPToQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XGQhwAt3EeiiCrav3vcpBQ" base_Element="_XGP6sQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Array xmi:id="_XGWoYAt3EeiiCrav3vcpBQ" base_Element="_XGWBUQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XGaSwAt3EeiiCrav3vcpBQ" base_Element="_XGZrsgt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XGa50At3EeiiCrav3vcpBQ" base_Element="_XGZrsgt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XGa50Qt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_XGcH8At3EeiiCrav3vcpBQ" base_Element="_XGbg4At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XGjcsAt3EeiiCrav3vcpBQ" base_Element="_XGi1oAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XGkDwAt3EeiiCrav3vcpBQ" base_Element="_XGi1oAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XGkDwQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XGlR4At3EeiiCrav3vcpBQ" base_Element="_XGkq0Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XGmgAwt3EeiiCrav3vcpBQ" base_Element="_XGmgAAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XGnHEAt3EeiiCrav3vcpBQ" base_Element="_XGmgAAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XGnHEQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XGoVMgt3EeiiCrav3vcpBQ" base_Element="_XGnuIQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XGo8QAt3EeiiCrav3vcpBQ" base_Element="_XGnuIQt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XGo8QQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XGqKYAt3EeiiCrav3vcpBQ" base_Element="_XGpjUAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XGqxcAt3EeiiCrav3vcpBQ" base_Element="_XGpjUAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XGqxcQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XGr_kwt3EeiiCrav3vcpBQ" base_Element="_XGr_kAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XGsmoAt3EeiiCrav3vcpBQ" base_Element="_XGr_kAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XGsmoQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XGxfIQt3EeiiCrav3vcpBQ" base_Element="_XGw4EQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XGyGMAt3EeiiCrav3vcpBQ" base_Element="_XGw4EQt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XGyGMQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_XG3lwAt3EeiiCrav3vcpBQ" base_Element="_XG2-sAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XG4z4At3EeiiCrav3vcpBQ" base_Element="_XG4M0At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XG5a8At3EeiiCrav3vcpBQ" base_Element="_XG4z4Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XG6CAAt3EeiiCrav3vcpBQ" base_Element="_XG5a8Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XG6pEAt3EeiiCrav3vcpBQ" base_Element="_XG6CAQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XG7QIAt3EeiiCrav3vcpBQ" base_Element="_XG6pEQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XG73MAt3EeiiCrav3vcpBQ" base_Element="_XG7QIQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XG8eQQt3EeiiCrav3vcpBQ" base_Element="_XG8eQAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XG9sYAt3EeiiCrav3vcpBQ" base_Element="_XG9FUAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XG-TcAt3EeiiCrav3vcpBQ" base_Element="_XG9sYQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_XHAvsAt3EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_XHAIoQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XHROZAt3EeiiCrav3vcpBQ" base_Element="_XHROYAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XHR1cAt3EeiiCrav3vcpBQ" base_Element="_XHROYAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XHR1cQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XHTDkAt3EeiiCrav3vcpBQ" base_Element="_XHScgAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XHTDkQt3EeiiCrav3vcpBQ" base_Element="_XHScgAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XHTDkgt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XHVf0At3EeiiCrav3vcpBQ" base_Element="_XHU4wgt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XHZxQAt3EeiiCrav3vcpBQ" base_Element="_XHZKMQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XHc0kwt3EeiiCrav3vcpBQ" base_Element="_XHc0kAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XHdboAt3EeiiCrav3vcpBQ" base_Element="_XHc0kAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XHdboQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XHkwZAt3EeiiCrav3vcpBQ" base_Element="_XHkwYAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XHlXcAt3EeiiCrav3vcpBQ" base_Element="_XHkwYAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XHlXcQt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XHoawAt3EeiiCrav3vcpBQ" base_Element="_XHnzsAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XHoawQt3EeiiCrav3vcpBQ" base_Element="_XHnzsAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XHoawgt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XHw9oAt3EeiiCrav3vcpBQ" base_Element="_XHvvgAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Annotations xmi:id="_XHw9oQt3EeiiCrav3vcpBQ" base_Element="_XHvvgAt3EeiiCrav3vcpBQ">
    <annotations xmi:id="_XHw9ogt3EeiiCrav3vcpBQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_XH45cAt3EeiiCrav3vcpBQ" base_Element="_XH4SYQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XIIKAAt3EeiiCrav3vcpBQ" base_Element="_XIHi8gt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIO3sAt3EeiiCrav3vcpBQ" base_Element="_XIOQoAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_XIPewAt3EeiiCrav3vcpBQ" genericsValue="?" base_Element="_XIO3sQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIQF0At3EeiiCrav3vcpBQ" base_Element="_XIO3sQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIQs4Qt3EeiiCrav3vcpBQ" base_Element="_XIQs4At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIRT8Qt3EeiiCrav3vcpBQ" base_Element="_XIRT8At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XISiEQt3EeiiCrav3vcpBQ" base_Element="_XISiEAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XITJIgt3EeiiCrav3vcpBQ" base_Element="_XITJIQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIUXQAt3EeiiCrav3vcpBQ" base_Element="_XITwMQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIWMcAt3EeiiCrav3vcpBQ" base_Element="_XIVlYAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIWzgAt3EeiiCrav3vcpBQ" base_Element="_XIWMcQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIXakAt3EeiiCrav3vcpBQ" base_Element="_XIWzgQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIYBoAt3EeiiCrav3vcpBQ" base_Element="_XIXakQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIad4At3EeiiCrav3vcpBQ" base_Element="_XIZ20At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIbE8At3EeiiCrav3vcpBQ" base_Element="_XIad4Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIbsAgt3EeiiCrav3vcpBQ" base_Element="_XIbsAAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIc6IAt3EeiiCrav3vcpBQ" base_Element="_XIcTEQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIdhMAt3EeiiCrav3vcpBQ" base_Element="_XIc6IQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Array xmi:id="_XIeIQgt3EeiiCrav3vcpBQ" base_Element="_XIeIQAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIevUAt3EeiiCrav3vcpBQ" base_Element="_XIeIQAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_XIfWYAt3EeiiCrav3vcpBQ" base_Property="_XIevUQt3EeiiCrav3vcpBQ" siblings="_XJajfAt3EeiiCrav3vcpBQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIfWYQt3EeiiCrav3vcpBQ" base_Element="_XIevUQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIhyoQt3EeiiCrav3vcpBQ" base_Element="_XIf9cAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIjAwAt3EeiiCrav3vcpBQ" base_Element="_XIiZsAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIjn0gt3EeiiCrav3vcpBQ" base_Element="_XIjn0At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Array xmi:id="_XIkO4gt3EeiiCrav3vcpBQ" base_Element="_XIkO4At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIkO4wt3EeiiCrav3vcpBQ" base_Element="_XIkO4At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIldAAt3EeiiCrav3vcpBQ" base_Element="_XIk18gt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XImEEgt3EeiiCrav3vcpBQ" base_Element="_XImEEAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XImrIgt3EeiiCrav3vcpBQ" base_Element="_XImrIAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XInSMgt3EeiiCrav3vcpBQ" base_Element="_XInSMAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIogUAt3EeiiCrav3vcpBQ" base_Element="_XIn5QAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIpHYAt3EeiiCrav3vcpBQ" base_Element="_XIogUQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIpHYgt3EeiiCrav3vcpBQ" base_Element="_XIpHYQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIpucgt3EeiiCrav3vcpBQ" base_Element="_XIpucAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIq8kAt3EeiiCrav3vcpBQ" base_Element="_XIqVgAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIsKsAt3EeiiCrav3vcpBQ" base_Element="_XIrjogt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIsxwAt3EeiiCrav3vcpBQ" base_Element="_XIsKsQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XItY0gt3EeiiCrav3vcpBQ" base_Element="_XItY0At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIt_4At3EeiiCrav3vcpBQ" base_Element="_XItY0wt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_XIvOAAt3EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_XIt_4Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIvOAQt3EeiiCrav3vcpBQ" base_Element="_XIt_4Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIvOBAt3EeiiCrav3vcpBQ" base_Element="_XIvOAgt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIv1EAt3EeiiCrav3vcpBQ" base_Element="_XIvOBQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIwcIAt3EeiiCrav3vcpBQ" base_Element="_XIv1EQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIxDMQt3EeiiCrav3vcpBQ" base_Element="_XIwcIQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIxDNAt3EeiiCrav3vcpBQ" base_Element="_XIxDMgt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIxqQgt3EeiiCrav3vcpBQ" base_Element="_XIxqQAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_XIy4YAt3EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_XIyRUAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XIy4Ygt3EeiiCrav3vcpBQ" base_Element="_XIyRUAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_XIzfcAt3EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_XIy4Ywt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XI0GgAt3EeiiCrav3vcpBQ" base_Element="_XIy4Ywt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XI0tkAt3EeiiCrav3vcpBQ" base_Element="_XI0GgQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XI0tkwt3EeiiCrav3vcpBQ" base_Element="_XI0tkQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XI1UoQt3EeiiCrav3vcpBQ" base_Element="_XI0tlAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XI17sAt3EeiiCrav3vcpBQ" base_Element="_XI1Uogt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XI2iwgt3EeiiCrav3vcpBQ" base_Element="_XI2iwAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XI3J0At3EeiiCrav3vcpBQ" base_Element="_XI2iwwt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Generics xmi:id="_XI4X8At3EeiiCrav3vcpBQ" genericsValue="TDropListItem" base_Element="_XI3J0Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XI4X8gt3EeiiCrav3vcpBQ" base_Element="_XI3J0Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_XJbKgAt3EeiiCrav3vcpBQ" base_Property="_XJajfAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XJbxkAt3EeiiCrav3vcpBQ" base_Element="_XJajfAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJsQQAt3EeiiCrav3vcpBQ" base_Element="_XJrpMAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJs3UAt3EeiiCrav3vcpBQ" base_Element="_XJsQQQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJteYAt3EeiiCrav3vcpBQ" base_Element="_XJs3UQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJuFcAt3EeiiCrav3vcpBQ" base_Element="_XJteYQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJusgAt3EeiiCrav3vcpBQ" base_Element="_XJuFcQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJvTkAt3EeiiCrav3vcpBQ" base_Element="_XJusgQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJv6ogt3EeiiCrav3vcpBQ" base_Element="_XJv6oAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJxIwAt3EeiiCrav3vcpBQ" base_Element="_XJwhsAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJxv0At3EeiiCrav3vcpBQ" base_Element="_XJxIwQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJyW4At3EeiiCrav3vcpBQ" base_Element="_XJxv0Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJzlAAt3EeiiCrav3vcpBQ" base_Element="_XJy98At3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ0MEAt3EeiiCrav3vcpBQ" base_Element="_XJzlAQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ0zIAt3EeiiCrav3vcpBQ" base_Element="_XJ0MEQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ1aMAt3EeiiCrav3vcpBQ" base_Element="_XJ0zIQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ2BQAt3EeiiCrav3vcpBQ" base_Element="_XJ1aMQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ2oUAt3EeiiCrav3vcpBQ" base_Element="_XJ2BQQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ3PYAt3EeiiCrav3vcpBQ" base_Element="_XJ2oUQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ32cAt3EeiiCrav3vcpBQ" base_Element="_XJ3PYQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ4dgAt3EeiiCrav3vcpBQ" base_Element="_XJ32cQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ4dgwt3EeiiCrav3vcpBQ" base_Element="_XJ4dgQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ5EkAt3EeiiCrav3vcpBQ" base_Element="_XJ4dhAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ5roAt3EeiiCrav3vcpBQ" base_Element="_XJ5EkQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ5rowt3EeiiCrav3vcpBQ" base_Element="_XJ5roQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ6Ssgt3EeiiCrav3vcpBQ" base_Element="_XJ6SsAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ65wgt3EeiiCrav3vcpBQ" base_Element="_XJ65wAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ7g0At3EeiiCrav3vcpBQ" base_Element="_XJ65wwt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ8H4At3EeiiCrav3vcpBQ" base_Element="_XJ7g0Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ8u8At3EeiiCrav3vcpBQ" base_Element="_XJ8H4Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ9WAAt3EeiiCrav3vcpBQ" base_Element="_XJ8u8Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ99EAt3EeiiCrav3vcpBQ" base_Element="_XJ9WAQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ-kIAt3EeiiCrav3vcpBQ" base_Element="_XJ99EQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XJ_LMAt3EeiiCrav3vcpBQ" base_Element="_XJ-kIQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKAZUAt3EeiiCrav3vcpBQ" base_Element="_XJ_yQAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKBAYAt3EeiiCrav3vcpBQ" base_Element="_XKAZUQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKBncAt3EeiiCrav3vcpBQ" base_Element="_XKBAYQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKCOgAt3EeiiCrav3vcpBQ" base_Element="_XKBncQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKDcoAt3EeiiCrav3vcpBQ" base_Element="_XKC1kAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKEDsAt3EeiiCrav3vcpBQ" base_Element="_XKDcoQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKEqwAt3EeiiCrav3vcpBQ" base_Element="_XKEDsQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKFR0At3EeiiCrav3vcpBQ" base_Element="_XKEqwQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKF44At3EeiiCrav3vcpBQ" base_Element="_XKFR0Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKGf8At3EeiiCrav3vcpBQ" base_Element="_XKF44Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKHHAAt3EeiiCrav3vcpBQ" base_Element="_XKGf8Qt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKIVIAt3EeiiCrav3vcpBQ" base_Element="_XKHuEAt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKI8MAt3EeiiCrav3vcpBQ" base_Element="_XKIVIQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKJjQAt3EeiiCrav3vcpBQ" base_Element="_XKI8MQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKKKUAt3EeiiCrav3vcpBQ" base_Element="_XKJjQQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKKxYAt3EeiiCrav3vcpBQ" base_Element="_XKKKUQt3EeiiCrav3vcpBQ"/>
  <UMLLabProfile:Reference xmi:id="_XKL_gAt3EeiiCrav3vcpBQ" base_Element="_XKLYcAt3EeiiCrav3vcpBQ"/>
</xmi:XMI>
