/**
 * This is the model package, that has the model, ball, movement strategies, 
 * paint strategies, strategy factories, and adapter.
 */
package model;

import java.awt.Point;
import java.awt.Polygon;
import java.awt.Shape;
import java.awt.geom.AffineTransform;

/**
 * This class defines a polygon factory, which makes polygons.
 * @author sn32, ll45
 */
public class PolygonFactory implements IShapeFactory {
	/**
	 * The variable that holds the polygon.
	 */
	Polygon poly = new Polygon();
	
	/**
	 * The affine transform for the polygon.
	 */
	AffineTransform at;
	
	/**
	 * The scale factor for the polygon.
	 */
	double scaleFactor = 1.0;
	
	/**
	 * The points that make up the shape of the polygon.
	 */
	Point[] pts;
	
	/**
	 * This is a constructor for a polygon that takes in an Affine Transform.
	 * @param at An Affine Transform
	 * @param scaleFactor A scale factor
	 * @param pts An array of points.
	 */
	public PolygonFactory(AffineTransform at, double scaleFactor, Point[] pts) {
		this.at = at;
		this.scaleFactor = scaleFactor;
		this.pts = pts;
	}
	
	/**
	 * This is the function that makes the shape.
	 */
	@Override	
	public Shape makeShape(double x, double y, double xScale, double yScale) {
		at.setToTranslation(x, y);
		at.scale(xScale*scaleFactor, yScale*scaleFactor);  // optional rotation can be added as well
		return at.createTransformedShape(poly);
	}
}