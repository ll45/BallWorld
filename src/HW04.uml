<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_Hm45oAuLEei-6eSvavMBRQ" name="HW04">
    <eAnnotations xmi:id="_HshnkAuLEei-6eSvavMBRQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_HshnkQuLEei-6eSvavMBRQ" source="codegen">
        <details xmi:id="_HshnkguLEei-6eSvavMBRQ" key="codegenDirectory" value="/HW04/src"/>
        <details xmi:id="_Iuy84AuLEei-6eSvavMBRQ" key="AssociatedSourceCode" value="/HW04/src/controller/BallWorldController.java;133705207/1;/HW04/src/model/APaintStrategy.java;1740869287/1;/HW04/src/model/Ball.java;544139014/1;/HW04/src/model/BallPaintStrategy.java;538568874/1;/HW04/src/model/BallWorldModel.java;3314949356/1;/HW04/src/model/BreathingStrategy.java;569949667/1;/HW04/src/model/ColorStrategy.java;783269627/1;/HW04/src/model/CrashStrategy.java;4279759508/1;/HW04/src/model/EarthImagePaintStrategy.java;2510652715/1;/HW04/src/model/EllipsePaintStrategy.java;292774861/1;/HW04/src/model/EllipseShapeFactory.java;1636135608/1;/HW04/src/model/FastStrategy.java;3009224450/1;/HW04/src/model/HumbirdImagePaintStrategy.java;809236240/1;/HW04/src/model/IBallCmd.java;2100560540/1;/HW04/src/model/IModel2ViewAdapter.java;715642539/1;/HW04/src/model/IPaintStrategy.java;556726924/1;/HW04/src/model/IShapeFactory.java;810833796/1;/HW04/src/model/IStrategyFac.java;3581042476/1;/HW04/src/model/IUpdateStrategy.java;1651050839/1;/HW04/src/model/ImagePaintStrategy.java;2009657845/1;/HW04/src/model/JupiterImagePaintStrategy.java;1009556515/1;/HW04/src/model/MarioImagePaintStrategy.java;3709244018/1;/HW04/src/model/MarioMarsImagePaintStrategy.java;418883682/1;/HW04/src/model/MarsImagePaintStrategy.java;165975352/1;/HW04/src/model/MultiPaintStrategy.java;695036297/1;/HW04/src/model/MultiStrategy.java;1636671415/1;/HW04/src/model/ReefImagePaintStrategy.java;4190647735/1;/HW04/src/model/SaturnImagePaintStrategy.java;2198019520/1;/HW04/src/model/ShapePaintStrategy.java;851889235/1;/HW04/src/model/SheepImagePaintStrategy.java;3440385665/1;/HW04/src/model/SoccerImagePaintStrategy.java;2105681093/1;/HW04/src/model/SonicImagePaintStrategy.java;867235411/1;/HW04/src/model/SpawnStrategy.java;3065061180/1;/HW04/src/model/SquarePaintStrategy.java;3526266484/1;/HW04/src/model/StraightStrategy.java;3914615527/1;/HW04/src/model/SwellStrategy.java;1352457759/1;/HW04/src/model/SwitcherStrategy.java;2480375116/1;/HW04/src/model/TeleportStrategy.java;2565727986/1;/HW04/src/model/UprightImagePaintStrategy.java;3704479299/1;/HW04/src/model/VenusImagePaintStrategy.java;2287123255/1;/HW04/src/model/WiggleStrategy.java;4246409471/1;/HW04/src/util/Dispatcher.java;77051068/1;/HW04/src/util/IRandomizer.java;4224991458/1;/HW04/src/util/Randomizer.java;1541548940/1;/HW04/src/util/SineMaker.java;1378225368/1;/HW04/src/view/BallWorldView.java;1506153628/1;/HW04/src/view/IView2ModelAdapter.java;637323524/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_IV24cAuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_IV24cQuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_IV24cguLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_IV24cwuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_IV24dAuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_IV24dQuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_IV24dguLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_IV24dwuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_IV3fgAuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_IV4GkAuLEei-6eSvavMBRQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_IV4GkQuLEei-6eSvavMBRQ" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_IV8YAAuLEei-6eSvavMBRQ" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_Igmv4AuLEei-6eSvavMBRQ" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_IhKJgQuLEei-6eSvavMBRQ" name="Ellipse2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_IXxkAAuLEei-6eSvavMBRQ" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_Ih6-gQuLEei-6eSvavMBRQ" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ih6-gwuLEei-6eSvavMBRQ" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_IgjFgAuLEei-6eSvavMBRQ" name="Container"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_IgkToAuLEei-6eSvavMBRQ" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Igk6sQuLEei-6eSvavMBRQ" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_IgursAuLEei-6eSvavMBRQ" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_IgvSwQuLEei-6eSvavMBRQ" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ig7gAAuLEei-6eSvavMBRQ" name="Rectangle"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_IhJicAuLEei-6eSvavMBRQ" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_IhUhkAuLEei-6eSvavMBRQ" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_IhVIoQuLEei-6eSvavMBRQ" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_IhVvsQuLEei-6eSvavMBRQ" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_IhWWwQuLEei-6eSvavMBRQ" name="Toolkit"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ih4iQAuLEei-6eSvavMBRQ" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ih8MoAuLEei-6eSvavMBRQ" name="FlowLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ih8MoguLEei-6eSvavMBRQ" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Iie_MwuLEei-6eSvavMBRQ" name="Dimension"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_IWDswAuLEei-6eSvavMBRQ" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_Igv50QuLEei-6eSvavMBRQ" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Igwg4QuLEei-6eSvavMBRQ" name="Observer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_IiN5dQuLEei-6eSvavMBRQ" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_IiOggAuLEei-6eSvavMBRQ" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_IV4toAuLEei-6eSvavMBRQ" name="model">
      <packagedElement xmi:type="uml:Class" xmi:id="_IZQKsAuLEei-6eSvavMBRQ" name="APaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_IjiIEAuLEei-6eSvavMBRQ">
          <body>This is an abstract class that defines the top level affine transform based
paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_IizIQguLEei-6eSvavMBRQ" name="at" visibility="package" type="_Igmv4AuLEei-6eSvavMBRQ" association="_Ij1qEQuLEei-6eSvavMBRQ"/>
        <interfaceRealization xmi:id="_Ign-AQuLEei-6eSvavMBRQ" client="_IZQKsAuLEei-6eSvavMBRQ" supplier="_IaGfQAuLEei-6eSvavMBRQ" contract="_IaGfQAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjP0MAuLEei-6eSvavMBRQ" name="APaintStrategy" specification="_IiJoAAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjP0MQuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjP0MguLEei-6eSvavMBRQ" type="_IZQKsAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this.at = at;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjP0MwuLEei-6eSvavMBRQ" name="paint" specification="_IiKPEwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjP0NAuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjP0NQuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>double scale = ball.getRad();
		at.setToTranslation(ball.getLoc().x, ball.getLoc().y);
		at.scale(scale, scale);
		at.rotate(ball.getVel().x, ball.getVel().y);
		g.setColor(ball.getCol());    
		paintCfg(g, ball);
		paintXfrm(g, ball, at);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjP0NguLEei-6eSvavMBRQ" name="getAT" specification="_IZSm8AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjP0NwuLEei-6eSvavMBRQ" type="_Igmv4AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return this.at;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IZQxwAuLEei-6eSvavMBRQ" name="APaintStrategy">
          <eAnnotations xmi:id="_IZQxwQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IZRY0AuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IZRY0guLEei-6eSvavMBRQ" type="_IZQKsAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IZSm8AuLEei-6eSvavMBRQ" name="getAT" method="_IjP0NguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjiIEwuLEei-6eSvavMBRQ">
            <body>This is a getter that returns the Affine Transform
	 * @return An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_IiLdMAuLEei-6eSvavMBRQ" type="_Igmv4AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IgsPcAuLEei-6eSvavMBRQ" name="init">
          <ownedParameter xmi:id="_IgsPcQuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiJoAAuLEei-6eSvavMBRQ" name="APaintStrategy" method="_IjP0MAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IiKPEAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IiKPEQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_IjiIEQuLEei-6eSvavMBRQ">
            <body>This is the constructor that takes in Affine Transform.
	 * @param at</body>
          </ownedComment>
          <ownedParameter xmi:id="_IiJoAQuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiKPEguLEei-6eSvavMBRQ" type="_IZQKsAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiKPEwuLEei-6eSvavMBRQ" name="paint" method="_IjP0MwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjiIEguLEei-6eSvavMBRQ">
            <body>This function paints the ball on the passed in Graphics object.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IiKPFAuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiKPFQuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiK2IAuLEei-6eSvavMBRQ" name="paintCfg" visibility="protected">
          <ownedParameter xmi:id="_IiK2IQuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiK2IguLEei-6eSvavMBRQ" name="host" type="_IZWRUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiLdMQuLEei-6eSvavMBRQ" name="paintXfrm" isAbstract="true">
          <ownedComment xmi:id="_IjiIFAuLEei-6eSvavMBRQ">
            <body>This function is a secondary paint operation that is the last step of the above
	 * paint method, which does not calculate its own affine transform, but instead,
	 * uses a supplied affine transform.
	 * @param g A graphics object
	 * @param host The host ball
	 * @param at An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_IiLdMguLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiLdMwuLEei-6eSvavMBRQ" name="host" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiLdNAuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IZWRUAuLEei-6eSvavMBRQ" name="Ball">
        <ownedComment xmi:id="_IjiIFQuLEei-6eSvavMBRQ">
          <body>This is the Ball class, which is what is drawn on the screen, and implements
Observer to use dispatching.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Ii0WYAuLEei-6eSvavMBRQ" name="col" type="_IgursAuLEei-6eSvavMBRQ" association="_Ijj9QAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_Ii09cAuLEei-6eSvavMBRQ" name="loc" type="_IgvSwQuLEei-6eSvavMBRQ" association="_Ijj9QguLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_Ii09cQuLEei-6eSvavMBRQ" name="rad" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ii1kgQuLEei-6eSvavMBRQ" name="vel" type="_IgvSwQuLEei-6eSvavMBRQ" association="_IjkkUQuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_Ii1kgguLEei-6eSvavMBRQ" name="con" type="_IgjFgAuLEei-6eSvavMBRQ" association="_IjkkUwuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_Ii1kgwuLEei-6eSvavMBRQ" name="strat" visibility="private" type="_IaNM8AuLEei-6eSvavMBRQ" association="_Ij2RIQuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_Ii2LkQuLEei-6eSvavMBRQ" name="paintStrat" type="_IaGfQAuLEei-6eSvavMBRQ" isReadOnly="true" association="_Ij24MQuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_Ii2yoAuLEei-6eSvavMBRQ" name="itr" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ii2yoQuLEei-6eSvavMBRQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ii2yowuLEei-6eSvavMBRQ" name="radDelta">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_IiMEQAuLEei-6eSvavMBRQ" client="_IZWRUAuLEei-6eSvavMBRQ" supplier="_Igwg4QuLEei-6eSvavMBRQ" contract="_Igwg4QuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjQbQAuLEei-6eSvavMBRQ" name="Ball" specification="_IiNSYAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjQbQQuLEei-6eSvavMBRQ" name="col" type="_IgursAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjQbQguLEei-6eSvavMBRQ" name="loc" type="_IgvSwQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjQbQwuLEei-6eSvavMBRQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjQbRAuLEei-6eSvavMBRQ" name="vel" type="_IgvSwQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjQbRQuLEei-6eSvavMBRQ" name="con" type="_IgjFgAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjQbRguLEei-6eSvavMBRQ" name="updateStrat" type="_IaNM8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjQbRwuLEei-6eSvavMBRQ" name="paintStrat" type="_IaGfQAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjQbSAuLEei-6eSvavMBRQ" type="_IZWRUAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>setCol(col);
		setLoc(loc);
		setRad(rad);
		setVel(vel);
		setCon(con);
		setStrat(updateStrat);
		setRadDelta(5);
		setPaintStrat(paintStrat);
		paintStrat.init(this);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjQbSQuLEei-6eSvavMBRQ" name="getRad" specification="_IZZUoAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjQbSguLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjQbSwuLEei-6eSvavMBRQ" name="setRad" specification="_IZZ7sQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjQbTAuLEei-6eSvavMBRQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.rad = rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjQbTQuLEei-6eSvavMBRQ" name="move" specification="_IZaiwAuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>setLoc(new Point(getLoc().x + getVel().x, getLoc().y + getVel().y));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjRCUAuLEei-6eSvavMBRQ" name="update" specification="_IiOggguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjRCUQuLEei-6eSvavMBRQ" name="o" type="_Igv50QuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjRCUguLEei-6eSvavMBRQ" name="cmd" type="_IiOggAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>((IBallCmd) cmd).apply(this, (Dispatcher) o);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjRCUwuLEei-6eSvavMBRQ" name="paint" specification="_IiPHkguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjRCVAuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>getPaintStrat().paint(g, this);
//		g.setColor(this.getCol());
//		g.fillOval(this.getLoc().x - getRad(), this.getLoc().y - getRad(), getRad() * 2, getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjRpYAuLEei-6eSvavMBRQ" name="getStrat" specification="_IZbJ0AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjRpYQuLEei-6eSvavMBRQ" type="_IaNM8AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjRpYguLEei-6eSvavMBRQ" name="setStrat" specification="_IgzkMAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjRpYwuLEei-6eSvavMBRQ" name="strat" type="_IaNM8AuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>this.strat = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjRpZAuLEei-6eSvavMBRQ" name="getItr" specification="_IZbJ0QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjRpZQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjRpZguLEei-6eSvavMBRQ" name="setItr" specification="_IZcX8QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjRpZwuLEei-6eSvavMBRQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.itr = itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjRpaAuLEei-6eSvavMBRQ" name="bounce" specification="_IZc_AAuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>// Boundaries of the window
		int rightWall = getCon().getWidth();
		int bottomWall = getCon().getHeight();
		int leftWall = 0;
		int topWall = 0;
		
		int leftX = getLoc().x - getRad();
		int rightX = getLoc().x + getRad();
		
		int bottomY = getLoc().y + getRad();
		int topY = getLoc().y - getRad();
		
		int maxX = rightWall - getRad();
		int minX = getRad();
		
		int maxY = bottomWall - getRad();
		int minY = getRad();

		// Collision detected with left or right wall.
		if (leftX == leftWall || rightX == rightWall) {
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond right wall.
		else if (rightX > rightWall) {
			int diff = getLoc().x - maxX;
			setLoc(new Point(maxX - diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond left wall.
		else if (leftX &lt; leftWall) {
			int diff = minX - getLoc().x;
			setLoc(new Point(minX + diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Collision detected with top or bottom wall.
		else if (topY == topWall || bottomY == bottomWall) {
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond bottom wall.
		else if (bottomY > bottomWall) {
			int diff = getLoc().y - maxY;
			setLoc(new Point(getLoc().x, maxY - diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond top wall.
		else if (topY &lt; topWall) {
			int diff = minY - getLoc().y;
			setLoc(new Point(getLoc().x, minY + diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjSQcAuLEei-6eSvavMBRQ" name="setPaintStrat" specification="_IgzkMguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjSQcQuLEei-6eSvavMBRQ" name="paintStrat" type="_IaGfQAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>this.paintStrat = paintStrat;
		getPaintStrat().init(this);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IZZUoAuLEei-6eSvavMBRQ" name="getRad" method="_IjQbSQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjkkVguLEei-6eSvavMBRQ">
            <body>This returns the radius of the ball.
	 * @return the rad</body>
          </ownedComment>
          <ownedParameter xmi:id="_IZZ7sAuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_IZZ7sQuLEei-6eSvavMBRQ" name="setRad" method="_IjQbSwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlLYAuLEei-6eSvavMBRQ">
            <body>This sets the radius of the ball.
	 * @param rad the rad to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_IZZ7sguLEei-6eSvavMBRQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_IZaiwAuLEei-6eSvavMBRQ" name="move" method="_IjQbTQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlLYQuLEei-6eSvavMBRQ">
            <body>This function tells the ball to update its current location by the respective velocity
	 * component.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_IZbJ0AuLEei-6eSvavMBRQ" name="getStrat" method="_IjRpYAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlLZAuLEei-6eSvavMBRQ">
            <body>This function returns the ball's movement strategy.
	 * @return the strat</body>
          </ownedComment>
          <ownedParameter xmi:id="_Igy9IAuLEei-6eSvavMBRQ" type="_IaNM8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IZbJ0QuLEei-6eSvavMBRQ" name="getItr" method="_IjRpZAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlLZguLEei-6eSvavMBRQ">
            <body>This function returns the current iteration of the ball.
	 * @return the itr</body>
          </ownedComment>
          <ownedParameter xmi:id="_IZcX8AuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_IZcX8QuLEei-6eSvavMBRQ" name="setItr" method="_IjRpZguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlLZwuLEei-6eSvavMBRQ">
            <body>This function sets the current iteration of the ball.
	 * @param itr the itr to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_IZcX8guLEei-6eSvavMBRQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_IZc_AAuLEei-6eSvavMBRQ" name="bounce" method="_IjRpaAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlLaAuLEei-6eSvavMBRQ">
            <body>This function checks to see if the ball has come into contact with one of the boundaries of the 
	 *  panel. If it has, this function reverses the velocity of the ball, simulating a rebound off
	 *  of the wall. If, due to the delay of the GUI thread, the ball has passed one of the panel
	 *  boundaries, this function moves the ball to the location it would be at if it had properly 
	 *  bounced off of the wall, and sets the velocity to its appropriate value.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_IgzkMAuLEei-6eSvavMBRQ" name="setStrat" method="_IjRpYguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlLZQuLEei-6eSvavMBRQ">
            <body>This function sets the ball's movement strategy.
	 * @param strat the strat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_IgzkMQuLEei-6eSvavMBRQ" name="strat" type="_IaNM8AuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IgzkMguLEei-6eSvavMBRQ" name="setPaintStrat" method="_IjSQcAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlLaQuLEei-6eSvavMBRQ">
            <body>This function sets the paint strategy.
	 * @param paintStrat the paintStrat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_IgzkMwuLEei-6eSvavMBRQ" name="paintStrat" type="_IaGfQAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiNSYAuLEei-6eSvavMBRQ" name="Ball" method="_IjQbQAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IiN5cguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IiN5cwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_IjkkVQuLEei-6eSvavMBRQ">
            <body>This is the Ball constructor, which sets its initial values.
	 * @param col The color of the ball
	 * @param loc The initial location of the ball.
	 * @param rad The radius of the ball.
	 * @param vel The initial velocity of the ball.
	 * @param con The container (component) on which the ball is drawn.
	 * @param updateStrat The IUpdateStrategy that decides how to update the ball.
	 * @param paintStrat The IPaintStrategy that decides how to paint the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IiNSYQuLEei-6eSvavMBRQ" name="col" type="_IgursAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiNSYguLEei-6eSvavMBRQ" name="loc" type="_IgvSwQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiNSYwuLEei-6eSvavMBRQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IiNSZAuLEei-6eSvavMBRQ" name="vel" type="_IgvSwQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiNSZQuLEei-6eSvavMBRQ" name="con" type="_IgjFgAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiN5cAuLEei-6eSvavMBRQ" name="updateStrat" type="_IaNM8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiN5cQuLEei-6eSvavMBRQ" name="paintStrat" type="_IaGfQAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiN5dAuLEei-6eSvavMBRQ" type="_IZWRUAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiOggguLEei-6eSvavMBRQ" name="update" method="_IjRCUAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlLYguLEei-6eSvavMBRQ">
            <body>This function is required when implementing Observer, that tells the ball what to
	 * do when it is notified by the dispatcher.
	 * @param o An observable
	 * @param g An Object, which should be an IBallCmd</body>
          </ownedComment>
          <ownedParameter xmi:id="_IiPHkAuLEei-6eSvavMBRQ" name="o" type="_Igv50QuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiPHkQuLEei-6eSvavMBRQ" name="cmd" type="_IiOggAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiPHkguLEei-6eSvavMBRQ" name="paint" method="_IjRCUwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlLYwuLEei-6eSvavMBRQ">
            <body>This function determines how to paint the ball, and it delegates
	 * to the paint strategy's paint.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IiPHkwuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IZlh4AuLEei-6eSvavMBRQ" name="BallPaintStrategy">
        <ownedComment xmi:id="_IjlLaguLEei-6eSvavMBRQ">
          <body>This is the ball paint strategy, which implements a paint strategy for a ball.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_Ig5DwAuLEei-6eSvavMBRQ" client="_IZlh4AuLEei-6eSvavMBRQ" supplier="_IaGfQAuLEei-6eSvavMBRQ" contract="_IaGfQAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjSQcguLEei-6eSvavMBRQ" name="paint" specification="_IiQVsAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjSQcwuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjSQdAuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>g.setColor(ball.getCol());
		g.fillOval(ball.getLoc().x - ball.getRad(), ball.getLoc().y - ball.getRad(),
				ball.getRad() * 2, ball.getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IZmI8AuLEei-6eSvavMBRQ" name="BallPaintStrategy">
          <eAnnotations xmi:id="_IZmI8QuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IZmI8guLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IZmI9AuLEei-6eSvavMBRQ" type="_IZlh4AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Ig6R4AuLEei-6eSvavMBRQ" name="init">
          <ownedParameter xmi:id="_Ig6R4QuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiQVsAuLEei-6eSvavMBRQ" name="paint" method="_IjSQcguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IiQVsQuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiQ8wAuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IZolMAuLEei-6eSvavMBRQ" name="BallWorldModel">
        <ownedComment xmi:id="_IjlycAuLEei-6eSvavMBRQ">
          <body>This is the BallWorldModel class, which makes balls, clears balls, and updates the balls.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Ii4AwAuLEei-6eSvavMBRQ" name="adapter" visibility="private" type="_IaEDAAuLEei-6eSvavMBRQ" association="_Ij3fQAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ii4AwQuLEei-6eSvavMBRQ" value="IModel2ViewAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ii4AwwuLEei-6eSvavMBRQ" name="timeSlice" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ii4n0AuLEei-6eSvavMBRQ" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ii4n0guLEei-6eSvavMBRQ" name="dispatcher" visibility="private" type="_Ia_QEAuLEei-6eSvavMBRQ" association="_Ij3fQwuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ii4n0wuLEei-6eSvavMBRQ" value="new Dispatcher()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ii5O4AuLEei-6eSvavMBRQ" name="timer" visibility="private" type="_Ig8uIAuLEei-6eSvavMBRQ" association="_Ij4GUQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ii5O4QuLEei-6eSvavMBRQ" value="new Timer(timeSlice, (e) -> adapter.update())"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjS3gAuLEei-6eSvavMBRQ" name="BallWorldModel" specification="_Ig9VMAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjS3gQuLEei-6eSvavMBRQ" name="adapter" type="_IaEDAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjS3gguLEei-6eSvavMBRQ" type="_IZolMAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this.adapter = adapter;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjS3gwuLEei-6eSvavMBRQ" name="clearBalls" specification="_IZpzUAuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>dispatcher.deleteObservers();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjS3hAuLEei-6eSvavMBRQ" name="start" specification="_IZpzUQuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>timer.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjS3hQuLEei-6eSvavMBRQ" name="update" specification="_IiRj0AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjS3hguLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll((IBallCmd) (ball, disp)->{
         // Whatever you want to do with the context Ball!
			ball.setItr(ball.getItr() + 1);
			ball.getStrat().updateState(ball, disp);
			ball.move();
			ball.bounce();
			ball.paint((Graphics) g);
		});
//        dispatcher.notifyAll(g);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjS3hwuLEei-6eSvavMBRQ" name="loadStrategy" specification="_IZqaYAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjS3iAuLEei-6eSvavMBRQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjS3iQuLEei-6eSvavMBRQ" type="_IaNM8AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>Object[] args =  new Object[]{};
		java.lang.reflect.Constructor&lt;?> cons[];
		try {
			cons = Class.forName(strat).getConstructors();
			return (IUpdateStrategy) cons[0].newInstance(args);
		} catch (Exception e) {
			return IStrategyFac._errorStrategyFac.make();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjTekAuLEei-6eSvavMBRQ" name="fixName" specification="_IZrBcAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjTekQuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjTekguLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;model.&quot; + classname.substring(0, 1).toUpperCase() + classname.substring(1).toLowerCase() + &quot;Strategy&quot;;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjTekwuLEei-6eSvavMBRQ" name="makeStrategyFac" specification="_IZrogAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjTelAuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjTelQuLEei-6eSvavMBRQ" type="_IaKJoAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>if (null == classname) {
			return IStrategyFac._errorStrategyFac;
		}
	    return new IStrategyFac() {
	        /**
	         * Instantiate a strategy corresponding to the given class name.
	         * @return An IUpdateStrategy instance
	         */
	        public IUpdateStrategy make() {
	        		return loadStrategy(fixName(classname));
	        }

	        /**
	         * Return the given class name string
	         */
	        public String toString() {
	            return classname;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjTelguLEei-6eSvavMBRQ" name="makeBall" specification="_Ig-jUguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjTelwuLEei-6eSvavMBRQ" name="make" type="_IaNM8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjTemAuLEei-6eSvavMBRQ" name="paintStrat" type="_IaGfQAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>Container con = adapter.getCanvas();
		Randomizer rzr = Randomizer.Singleton;
		
		int startRad = rzr.randomInt(10, 45);
		Point randLoc = rzr.randomLoc(new Rectangle(con.getWidth() - startRad, con.getHeight() - startRad));
		Point startLoc = new Point(randLoc.x + startRad, randLoc.y + startRad);
		Point startVel = new Point(0, 0);

		// Handles case where both x- and y-components of velocity are 0 to prevent ball from starting stationary.
		while (startVel.x == 0 &amp;&amp; startVel.y == 0) {
			startVel = new Point(rzr.randomInt(-20, 20), rzr.randomInt(-20, 20));
		}
		Color startCol = rzr.randomColor();
		
		Ball loaded = new Ball(startCol, startLoc, startRad, startVel, con, make, paintStrat);
		dispatcher.addObserver(loaded);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjTemQuLEei-6eSvavMBRQ" name="combineStrategyFacs" specification="_Ig_KYAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjTemguLEei-6eSvavMBRQ" name="stratFac1" type="_IaKJoAuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_IjTemwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_IjUFoAuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_IjUFoQuLEei-6eSvavMBRQ" name="stratFac2" type="_IaKJoAuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_IjUFoguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_IjUFowuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_IjUFpAuLEei-6eSvavMBRQ" type="_IaKJoAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>if (null == stratFac1 || null == stratFac2) {
	    		return IStrategyFac._errorStrategyFac;
	    	}
	    
	    return new IStrategyFac() {
	        /**
	         * Instantiate a new MultiStrategy with the strategies from the given strategy factories
	         * @return A MultiStrategy instance
	         */
	        public IUpdateStrategy make() {
	            return new MultiStrategy(stratFac1.make(), stratFac2.make());
	        }

	        /**
	         * Return a string that is the toString()'s of the given strategy factories concatenated with a &quot;-&quot;
	         */
	        public String toString() {
	            return stratFac1.toString() + &quot;-&quot; + stratFac2.toString();
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjUFpQuLEei-6eSvavMBRQ" name="setSwitcherStrategy" specification="_Ig_xdQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjUFpguLEei-6eSvavMBRQ" name="switchFac" type="_IaKJoAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>SwitcherStrategy.setStrat(switchFac.make());
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjUFpwuLEei-6eSvavMBRQ" name="getSwitcherFac" specification="_IZs2oAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjUFqAuLEei-6eSvavMBRQ" type="_IaKJoAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return IStrategyFac.switcherStrat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjUFqQuLEei-6eSvavMBRQ" name="makePaintFactory" specification="_IZs2oQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjUFqguLEei-6eSvavMBRQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjUFqwuLEei-6eSvavMBRQ" type="_IaKJoAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return new IStrategyFac() {
	        public IUpdateStrategy make() {
	        		return new StraightStrategy();
	        }
 
	        public String toString() {
	            return text;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return loadPaintStrat(fixPaintName(text));
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjUFrAuLEei-6eSvavMBRQ" name="loadPaintStrat" specification="_IZtdsQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjUFrQuLEei-6eSvavMBRQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjUFrguLEei-6eSvavMBRQ" type="_IaGfQAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>Object[] args =  new Object[]{};
		java.lang.reflect.Constructor&lt;?> cons[];
		try {
			cons = Class.forName(strat).getConstructors();
			return (IPaintStrategy) cons[0].newInstance(args);
		} catch (Exception e) {
			return IStrategyFac._errorStrategyFac.makePaint();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjUFrwuLEei-6eSvavMBRQ" name="fixPaintName" specification="_IZuEwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjUFsAuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjUFsQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;model.&quot; + classname + &quot;PaintStrategy&quot;;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IZpzUAuLEei-6eSvavMBRQ" name="clearBalls" method="_IjS3gwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlycguLEei-6eSvavMBRQ">
            <body>This function clears all the balls from the canvas, by removing them as observers.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_IZpzUQuLEei-6eSvavMBRQ" name="start" method="_IjS3hAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlycwuLEei-6eSvavMBRQ">
            <body>This function starts the timer.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_IZqaYAuLEei-6eSvavMBRQ" name="loadStrategy" method="_IjS3hwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlydQuLEei-6eSvavMBRQ">
            <body>This function takes an input string and loads the associated IUpdateStrategy,
	 * and returns the error strategy if the strategy isn't available.
	 * @param strat A string of the strategy to be created.
	 * @return The IUpdateStrategy associated with the string, or the error strategy if
	 * there is no associated strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IZqaYQuLEei-6eSvavMBRQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Ig-jUAuLEei-6eSvavMBRQ" type="_IaNM8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IZrBcAuLEei-6eSvavMBRQ" name="fixName" method="_IjTekAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlydguLEei-6eSvavMBRQ">
            <body>This function takes the input and confirms it to the required model.ClassStrategy format for
	 * dynamic class loading.
	 * @param classname The string that should be modified to conform to the model.ClassStrategy format.
	 * @return The class string in a model.ClassStrategy format.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IZrBcQuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IZrBcguLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_IZrogAuLEei-6eSvavMBRQ" name="makeStrategyFac" method="_IjTekwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlydwuLEei-6eSvavMBRQ">
            <body>This takes a class name, and creates a strategy factory for it, by loading the strategy and returning it
	 * in the make method.
	 * @param classname The class of strategy to make.
	 * @return An IStrategyFac whose make function calls the associated model.ClassStrategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IZrogQuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Ig-jUQuLEei-6eSvavMBRQ" type="_IaKJoAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IZs2oAuLEei-6eSvavMBRQ" name="getSwitcherFac" method="_IjUFpwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlyewuLEei-6eSvavMBRQ">
            <body>This function returns a strategy factory, which makes the current switcher balls' update
	 * strategy
	 * @return An IStrategyFac, which makes the current strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IhAYgQuLEei-6eSvavMBRQ" type="_IaKJoAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IZs2oQuLEei-6eSvavMBRQ" name="makePaintFactory" method="_IjUFqQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlyfAuLEei-6eSvavMBRQ">
            <body>This function returns an IStrategyFac to allow the Paint Strategies to be made later on.
	 * @param text The type of paint strategy.
	 * @return An IStrategyFac</body>
          </ownedComment>
          <ownedParameter xmi:id="_IZtdsAuLEei-6eSvavMBRQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IhAYgguLEei-6eSvavMBRQ" type="_IaKJoAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IZtdsQuLEei-6eSvavMBRQ" name="loadPaintStrat" method="_IjUFrAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjmZgAuLEei-6eSvavMBRQ">
            <body>This function loads an instance of an IPaintStrategy, given a classname.
	 * @param strat The type of paint strategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_IZtdsguLEei-6eSvavMBRQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IhAYgwuLEei-6eSvavMBRQ" type="_IaGfQAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IZuEwAuLEei-6eSvavMBRQ" name="fixPaintName" method="_IjUFrwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjmZgQuLEei-6eSvavMBRQ">
            <body>This function &quot;fixes&quot; the type passed in to create an IPaintStrategy.
	 * @param classname The type of paint strategy to create.
	 * @return The fixed paint strategy information as a string.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IZuEwQuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IZur0AuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Ig9VMAuLEei-6eSvavMBRQ" name="BallWorldModel" method="_IjS3gAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_Ig98QQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Ig98QguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_IjlycQuLEei-6eSvavMBRQ">
            <body>This is the BallWorldModel constructor, which creates a model for the controller to interact with.
	 * @param adapter An IModel2ViewAdapter.</body>
          </ownedComment>
          <ownedParameter xmi:id="_Ig98QAuLEei-6eSvavMBRQ" name="adapter" type="_IaEDAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_Ig98QwuLEei-6eSvavMBRQ" type="_IZolMAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Ig-jUguLEei-6eSvavMBRQ" name="makeBall" method="_IjTelguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlyeAuLEei-6eSvavMBRQ">
            <body>This function randomizes parameters for the ball, and makes a ball with the parameter's update strategy.
	 * @param make The IUpdateStrategy that determines how the ball updates.</body>
          </ownedComment>
          <ownedParameter xmi:id="_Ig-jUwuLEei-6eSvavMBRQ" name="make" type="_IaNM8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_Ig-jVAuLEei-6eSvavMBRQ" name="paintStrat" type="_IaGfQAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Ig_KYAuLEei-6eSvavMBRQ" name="combineStrategyFacs" method="_IjTemQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlyeQuLEei-6eSvavMBRQ">
            <body>Returns an IStrategyFac that can instantiate a MultiStrategy with the two
	 * strategies made by the two given IStrategyFac objects. Returns null if
	 * either supplied factory is null. The toString() of the returned factory
	 * is the toString()'s of the two given factories, concatenated with &quot;-&quot;. 
	 * If either factory is null, then a factory for a beeping error strategy is returned.
	 * 
	 * @param stratFac1 An IStrategyFac for a strategy
	 * @param stratFac2 An IStrategyFac for a strategy
	 * @return An IStrategyFac for the composition of the two strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_Ig_KYQuLEei-6eSvavMBRQ" name="stratFac1" type="_IaKJoAuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_Ig_xcQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Ig_xcguLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_Ig_KYguLEei-6eSvavMBRQ" name="stratFac2" type="_IaKJoAuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_Ig_xcwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Ig_xdAuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_Ig_xcAuLEei-6eSvavMBRQ" type="_IaKJoAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Ig_xdQuLEei-6eSvavMBRQ" name="setSwitcherStrategy" method="_IjUFpQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlyeguLEei-6eSvavMBRQ">
            <body>This function sets the switcher balls strategy to the one made by the input.
	 * @param switchFac IStrategyFac which makes the new update strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IhAYgAuLEei-6eSvavMBRQ" name="switchFac" type="_IaKJoAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiRj0AuLEei-6eSvavMBRQ" name="update" method="_IjS3hQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjlydAuLEei-6eSvavMBRQ">
            <body>This function updates all the balls by notifying them using the dispatcher
	 * and an IBallCmd
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IiRj0QuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IZ0LYAuLEei-6eSvavMBRQ" name="BreathingStrategy">
        <ownedComment xmi:id="_IjmZgguLEei-6eSvavMBRQ">
          <body>This class defines a Breathing Strategy, which grows and shrinks the ball's radius.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_IhC0wAuLEei-6eSvavMBRQ" client="_IZ0LYAuLEei-6eSvavMBRQ" supplier="_IaNM8AuLEei-6eSvavMBRQ" contract="_IaNM8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjUssAuLEei-6eSvavMBRQ" name="updateState" specification="_IhDb0AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjUssQuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjUssguLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getItr() % 5 == 0) {
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IhDb0AuLEei-6eSvavMBRQ" name="updateState" method="_IjUssAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IhDb0QuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IhDb0guLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IZ2AkAuLEei-6eSvavMBRQ" name="ColorStrategy">
        <ownedComment xmi:id="_IjmZgwuLEei-6eSvavMBRQ">
          <body>This class defines a Color Strategy, which changes the ball's color.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_IhEp8AuLEei-6eSvavMBRQ" client="_IZ2AkAuLEei-6eSvavMBRQ" supplier="_IaNM8AuLEei-6eSvavMBRQ" contract="_IaNM8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjUsswuLEei-6eSvavMBRQ" name="updateState" specification="_IhEp8QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjUstAuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjUstQuLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (ball.getItr() % 10 == 0) {
						Color newColor = Randomizer.Singleton.randomColor();
						ball.setCol(newColor);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IhEp8QuLEei-6eSvavMBRQ" name="updateState" method="_IjUsswuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IhEp8guLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IhFRAAuLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IZ3OsAuLEei-6eSvavMBRQ" name="CrashStrategy">
        <ownedComment xmi:id="_IjmZhAuLEei-6eSvavMBRQ">
          <body>This class defines a Crash Strategy which makes the ball
change color when it bounces from the boundaries of the canvas.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_IhGfIAuLEei-6eSvavMBRQ" client="_IZ3OsAuLEei-6eSvavMBRQ" supplier="_IaNM8AuLEei-6eSvavMBRQ" contract="_IaNM8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjVTwAuLEei-6eSvavMBRQ" name="updateState" specification="_IhGfIQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjVTwQuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjVTwguLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					
					if ((ball.getLoc().x + ball.getRad() + 8 >= ball.getCon().getWidth()) ||
							(ball.getLoc().x - ball.getRad() &lt;= 8) ||
							(ball.getLoc().y + ball.getRad() >= ball.getCon().getHeight() - 8) ||
							(ball.getLoc().y - ball.getRad() &lt;= 8)) {
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IhGfIQuLEei-6eSvavMBRQ" name="updateState" method="_IjVTwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IhGfIguLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IhGfIwuLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IZ4c0AuLEei-6eSvavMBRQ" name="EarthImagePaintStrategy">
        <generalization xmi:id="_IhHtQguLEei-6eSvavMBRQ" general="_IaPCIAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjVTwwuLEei-6eSvavMBRQ" name="EarthImagePaintStrategy" specification="_IZ5q8AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjVTxAuLEei-6eSvavMBRQ" type="_IZ4c0AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Earth.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IZ5q8AuLEei-6eSvavMBRQ" name="EarthImagePaintStrategy" method="_IjVTwwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IZ5q8QuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IZ5q8guLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IZ5q8wuLEei-6eSvavMBRQ" type="_IZ4c0AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IZ6SAAuLEei-6eSvavMBRQ" name="EllipsePaintStrategy">
        <ownedComment xmi:id="_IjmZhQuLEei-6eSvavMBRQ">
          <body>This class defines a paint strategy to paint an ellipse shape.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_IhI7YAuLEei-6eSvavMBRQ" general="_Iam1kAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjVTxQuLEei-6eSvavMBRQ" name="EllipsePaintStrategy" specification="_IZ65EAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjVTxguLEei-6eSvavMBRQ" type="_IZ6SAAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 4.0/3.0, 2.0/3.0);
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjVTxwuLEei-6eSvavMBRQ" name="EllipsePaintStrategy" specification="_IiSK4AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjVTyAuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjVTyQuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjVTyguLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjVTywuLEei-6eSvavMBRQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjVTzAuLEei-6eSvavMBRQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjVTzQuLEei-6eSvavMBRQ" type="_IZ6SAAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(at, EllipseShapeFactory.Singleton.makeShape(x, y, width, height));
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IZ65EAuLEei-6eSvavMBRQ" name="EllipsePaintStrategy" method="_IjVTxQuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IZ65EQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IZ65EguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IZ65EwuLEei-6eSvavMBRQ" type="_IZ6SAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiSK4AuLEei-6eSvavMBRQ" name="EllipsePaintStrategy" method="_IjVTxwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IiSx8QuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IiSx8guLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IiSK4QuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiSK4guLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IiSK4wuLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IiSK5AuLEei-6eSvavMBRQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IiSx8AuLEei-6eSvavMBRQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IiSx8wuLEei-6eSvavMBRQ" type="_IZ6SAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IZ8HMAuLEei-6eSvavMBRQ" name="EllipseShapeFactory">
        <ownedComment xmi:id="_IjmZhguLEei-6eSvavMBRQ">
          <body>This class defines a shape factory to make Ellipses.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Ii518AuLEei-6eSvavMBRQ" name="Singleton" isLeaf="true" isStatic="true" type="_IZ8HMAuLEei-6eSvavMBRQ" isReadOnly="true" association="_Ij4tYQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ii518QuLEei-6eSvavMBRQ" value="new EllipseShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_IhKwkQuLEei-6eSvavMBRQ" client="_IZ8HMAuLEei-6eSvavMBRQ" supplier="_IaHtYAuLEei-6eSvavMBRQ" contract="_IaHtYAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjV60AuLEei-6eSvavMBRQ" name="makeShape" specification="_IZ8uQAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjV60QuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjV60guLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjV60wuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjV61AuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjV61QuLEei-6eSvavMBRQ" type="_IhJicAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>Shape ellipse = new Ellipse2D.Double(x, y, xScale, yScale);
		return ellipse;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IZ8uQAuLEei-6eSvavMBRQ" name="makeShape" method="_IjV60AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IZ9VUAuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IZ9VUQuLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IZ9VUguLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IZ9VUwuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IiSx9AuLEei-6eSvavMBRQ" type="_IhJicAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IZ_xkAuLEei-6eSvavMBRQ" name="FastStrategy">
        <ownedComment xmi:id="_IjmZhwuLEei-6eSvavMBRQ">
          <body>This class defines a Fast Strategy that makes the ball's velocity increase and stop once it reaches
a pre defined max speed.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_IhLXoAuLEei-6eSvavMBRQ" client="_IZ_xkAuLEei-6eSvavMBRQ" supplier="_IaNM8AuLEei-6eSvavMBRQ" contract="_IaNM8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjV61guLEei-6eSvavMBRQ" name="updateState" specification="_IhL-sAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjV61wuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjV62AuLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (Math.abs(ball.getVel().x) &lt; 100 &amp;&amp; Math.abs(ball.getVel().y) &lt; 100) {
						if (ball.getItr() % 10 == 0) {
							if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y + 2));
							} else if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y - 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y + 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y - 2));
							}
						}
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IhL-sAuLEei-6eSvavMBRQ" name="updateState" method="_IjV61guLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IhL-sQuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IhL-sguLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IaA_sAuLEei-6eSvavMBRQ" name="HumbirdImagePaintStrategy">
        <generalization xmi:id="_IhQQIAuLEei-6eSvavMBRQ" general="_Ia6XkAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjV62QuLEei-6eSvavMBRQ" name="HumbirdImagePaintStrategy" specification="_IaBmwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjV62guLEei-6eSvavMBRQ" type="_IaA_sAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Humbird.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IaBmwAuLEei-6eSvavMBRQ" name="HumbirdImagePaintStrategy" method="_IjV62QuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IaBmwQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IaBmwguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IaBmwwuLEei-6eSvavMBRQ" type="_IaA_sAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_IaCN0AuLEei-6eSvavMBRQ" name="IBallCmd" isAbstract="true">
        <ownedOperation xmi:id="_IhQ3MAuLEei-6eSvavMBRQ" name="apply" isAbstract="true">
          <ownedParameter xmi:id="_IhReQAuLEei-6eSvavMBRQ" name="context" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IhReQQuLEei-6eSvavMBRQ" name="disp" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_IaEDAAuLEei-6eSvavMBRQ" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_IjmZiAuLEei-6eSvavMBRQ">
          <body>This is an interface which defines the functions that the model wants the view to have/do.
@author sn32, kyl3</body>
        </ownedComment>
        <ownedAttribute xmi:id="_IaFRIAuLEei-6eSvavMBRQ" name="canvas" type="_IgjFgAuLEei-6eSvavMBRQ" isReadOnly="true" association="_Ijx_sAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_IaF4MAuLEei-6eSvavMBRQ" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_IaEDAAuLEei-6eSvavMBRQ" isReadOnly="true" association="_IjymwQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IaF4MQuLEei-6eSvavMBRQ" value="new IModel2ViewAdapter() {&#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is an update function that we want the view to have.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public void update() {&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9; &#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is a function that gets the canvas from the view.&#xA;&#x9;&#x9;  * @return A container that is initially null.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public Container getCanvas() {&#xA;&#x9;&#x9;&#x9; return null;&#xA;&#x9;&#x9; }&#xA;&#x9; }"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_IaEqEAuLEei-6eSvavMBRQ" name="update">
          <ownedComment xmi:id="_IjmZiQuLEei-6eSvavMBRQ">
            <body>This is an update function that we want the view to have.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_IaGfQAuLEei-6eSvavMBRQ" name="IPaintStrategy">
        <ownedComment xmi:id="_IjmZiguLEei-6eSvavMBRQ">
          <body>This is an interface for an IPaintStrategy that defines the methods we want it to have.
@author sn32, ll45</body>
        </ownedComment>
        <ownedOperation xmi:id="_IhSFUAuLEei-6eSvavMBRQ" name="init">
          <ownedParameter xmi:id="_IhSsYAuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiTZAAuLEei-6eSvavMBRQ" name="paint">
          <ownedParameter xmi:id="_IiTZAQuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiTZAguLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_IaHtYAuLEei-6eSvavMBRQ" name="IShapeFactory">
        <ownedComment xmi:id="_IjnAkAuLEei-6eSvavMBRQ">
          <body>This interface defines the methods we want a shape factory to have.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_IaI7gAuLEei-6eSvavMBRQ" name="makeShape">
          <ownedParameter xmi:id="_IaI7gQuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IaI7gguLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IaI7gwuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IaI7hAuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IiTZAwuLEei-6eSvavMBRQ" type="_IhJicAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_IaKJoAuLEei-6eSvavMBRQ" name="IStrategyFac">
        <ownedComment xmi:id="_IjnAkQuLEei-6eSvavMBRQ">
          <body>This interface defines the functions we want IStrategyFac to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_IaLXwAuLEei-6eSvavMBRQ" name="_errorStrategyFac" type="_IaKJoAuLEei-6eSvavMBRQ" association="_IjzN0QuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IaLXwQuLEei-6eSvavMBRQ" value="new IStrategyFac(){&#xA;        /**&#xA;         * Make the beeping error strategy&#xA;         * @return  An instance of a beeping error strategy&#xA;         */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;            return new IUpdateStrategy() {&#xA;                private int count = 0; // update counter&#xA;                &#xA;                /**&#xA;                 * Beep the speaker every 25 updates&#xA;                 */&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void updateState(Ball ball, Dispatcher dispatcher) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(25 &lt; count++){&#xA;                        java.awt.Toolkit.getDefaultToolkit().beep(); &#xA;                        count = 0;&#xA;                    }&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;            };&#xA;        }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;}&#xA;    }"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IaL-0AuLEei-6eSvavMBRQ" name="switcherStrat" type="_IaKJoAuLEei-6eSvavMBRQ" association="_Ijz04AuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IaL-0QuLEei-6eSvavMBRQ" value="new IStrategyFac() {&#xA;    &#x9;&#x9;/**&#xA;    &#x9;&#x9; * This function makes the switcher strategy.&#xA;    &#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;&#x9;&#x9;&#x9;return new SwitcherStrategy();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_IaKwsAuLEei-6eSvavMBRQ" name="make">
          <ownedComment xmi:id="_IjnAkguLEei-6eSvavMBRQ">
            <body>This function allows IStrategyFac to make an IUpdateStrategy.
	 * @return An IUpdateStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_IhTTcAuLEei-6eSvavMBRQ" type="_IaNM8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IaKwsQuLEei-6eSvavMBRQ" name="makePaint">
          <ownedComment xmi:id="_IjnAkwuLEei-6eSvavMBRQ">
            <body>This function allows IStrategyFac to make an IPaintStrategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_IhTTcQuLEei-6eSvavMBRQ" type="_IaGfQAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_IaNM8AuLEei-6eSvavMBRQ" name="IUpdateStrategy">
        <ownedComment xmi:id="_IjnAlAuLEei-6eSvavMBRQ">
          <body>This interface defines the functions we want IUpdateStrategies to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedOperation xmi:id="_IhT6gAuLEei-6eSvavMBRQ" name="updateState">
          <ownedParameter xmi:id="_IhT6gQuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IhT6gguLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IaPCIAuLEei-6eSvavMBRQ" name="ImagePaintStrategy">
        <ownedComment xmi:id="_IjnAlQuLEei-6eSvavMBRQ">
          <body>This class defines a paint strategy for an image that extends APaintStrategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_IhYL8AuLEei-6eSvavMBRQ" general="_IZQKsAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_Ii6dAAuLEei-6eSvavMBRQ" name="scaleFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ii6dAQuLEei-6eSvavMBRQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ii7EEQuLEei-6eSvavMBRQ" name="fillFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ii7rIAuLEei-6eSvavMBRQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ii7rIguLEei-6eSvavMBRQ" name="localAT" visibility="private" type="_Igmv4AuLEei-6eSvavMBRQ" association="_Ij5UcQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ii7rIwuLEei-6eSvavMBRQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ii8SMQuLEei-6eSvavMBRQ" name="tempAT" type="_Igmv4AuLEei-6eSvavMBRQ" association="_Ij5UdAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ii8SMguLEei-6eSvavMBRQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ii8SMwuLEei-6eSvavMBRQ" name="filename" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ii85QAuLEei-6eSvavMBRQ" name="image" visibility="private" type="_IhVIoQuLEei-6eSvavMBRQ" association="_Ij57gguLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_Ii85QguLEei-6eSvavMBRQ" name="imageObs" visibility="private" type="_IgjFgAuLEei-6eSvavMBRQ" association="_Ij6ikQuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjWh4AuLEei-6eSvavMBRQ" name="ImagePaintStrategy" specification="_IaQQQAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjWh4QuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjWh4guLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjWh4wuLEei-6eSvavMBRQ" type="_IaPCIAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super (new AffineTransform());
		this.fillFactor = fillFactor;
		this.setFilename(filename);
				
		try {
			image =  Toolkit.getDefaultToolkit().getImage(filename);	
			
		} catch (Exception e) {
			System.out.println(&quot;failed&quot;);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjWh5AuLEei-6eSvavMBRQ" name="ImagePaintStrategy" specification="_IiUnIAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjWh5QuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjWh5guLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjWh5wuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjWh6AuLEei-6eSvavMBRQ" type="_IaPCIAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.fillFactor = fillFactor;
		this.setFilename(filename);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjWh6QuLEei-6eSvavMBRQ" name="init" specification="_IhXk4AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjWh6guLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>imageObs = ball.getCon();
		MediaTracker mt = new MediaTracker(ball.getCon());
		mt.addImage(image, 1);
		try {
			mt.waitForAll();
		} catch(Exception e){
			System.out.println(&quot;ImagePaintStrategy.init(): Error waiting for image.  Exception = &quot;+e);
		}
		scaleFactor = 2.0/(fillFactor*(image.getWidth(imageObs)+image.getHeight(imageObs))/2.0); // this line is described below
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjWh6wuLEei-6eSvavMBRQ" name="paintXfrm" specification="_IiVOMAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjWh7AuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjWh7QuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjWh7guLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>localAT.setToScale(scaleFactor, scaleFactor);
		localAT.translate(-image.getWidth(imageObs)/2.0, -image.getHeight(imageObs)/2.0);
		localAT.preConcatenate(at);
		((Graphics2D)g).drawImage(image, localAT, imageObs); 
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjXI8AuLEei-6eSvavMBRQ" name="setFilename" specification="_IaSFcAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjXI8QuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.filename = filename;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IaQQQAuLEei-6eSvavMBRQ" name="ImagePaintStrategy" method="_IjWh4AuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IaQ3UAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IaQ3UQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_IjnAlguLEei-6eSvavMBRQ">
            <body>This is a constructor for the Image Paint Strategy that doesn't take an Affine Transform.
	 * @param filename String that is the path to the image file to load
	 * @param fillFactor A double that is the fill factor</body>
          </ownedComment>
          <ownedParameter xmi:id="_IaQQQQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IaQQQguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IaQ3UguLEei-6eSvavMBRQ" type="_IaPCIAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IaSFcAuLEei-6eSvavMBRQ" name="setFilename" method="_IjXI8AuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjnAmQuLEei-6eSvavMBRQ">
            <body>This function sets the filename.
	 * @param filename the filename to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_IaSFcQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_IhXk4AuLEei-6eSvavMBRQ" name="init" method="_IjWh6QuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjnAmAuLEei-6eSvavMBRQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IhXk4QuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiUnIAuLEei-6eSvavMBRQ" name="ImagePaintStrategy" method="_IjWh5AuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IiUnJAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IiUnJQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_IjnAlwuLEei-6eSvavMBRQ">
            <body>This is a constructor for Image Paint Strategy that takes an Affine Transform.
	 * @param filename String that is the path to the image file to load.
	 * @param fillFactor A double that is the fill factor
	 * @param at An Affine Transform.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IiUnIQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IiUnIguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IiUnIwuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiUnJguLEei-6eSvavMBRQ" type="_IaPCIAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiVOMAuLEei-6eSvavMBRQ" name="paintXfrm" method="_IjWh6wuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IiVOMQuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiVOMguLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiVOMwuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IaW98AuLEei-6eSvavMBRQ" name="JupiterImagePaintStrategy">
        <generalization xmi:id="_IhaoMAuLEei-6eSvavMBRQ" general="_IaPCIAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjXI8guLEei-6eSvavMBRQ" name="JupiterImagePaintStrategy" specification="_IaXlAAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjXI8wuLEei-6eSvavMBRQ" type="_IaW98AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Jupiter.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IaXlAAuLEei-6eSvavMBRQ" name="JupiterImagePaintStrategy" method="_IjXI8guLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IaXlAQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IaXlAguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IaXlAwuLEei-6eSvavMBRQ" type="_IaW98AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IaYMEAuLEei-6eSvavMBRQ" name="MarioImagePaintStrategy">
        <generalization xmi:id="_IhaoMQuLEei-6eSvavMBRQ" general="_Ia6XkAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjXI9AuLEei-6eSvavMBRQ" name="MarioImagePaintStrategy" specification="_IaYzIAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjXI9QuLEei-6eSvavMBRQ" type="_IaYMEAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Mario.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IaYzIAuLEei-6eSvavMBRQ" name="MarioImagePaintStrategy" method="_IjXI9AuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IaYzIQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IaYzIguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IaYzIwuLEei-6eSvavMBRQ" type="_IaYMEAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IaZaMAuLEei-6eSvavMBRQ" name="MarioMarsImagePaintStrategy">
        <generalization xmi:id="_IhbPQAuLEei-6eSvavMBRQ" general="_IabPYAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjXwAAuLEei-6eSvavMBRQ" name="MarioMarsImagePaintStrategy" specification="_IaZaMQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjXwAQuLEei-6eSvavMBRQ" type="_IaZaMAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(new APaintStrategy[]{new UprightImagePaintStrategy(&quot;images/Mars.gif&quot;, 1.0),
				new UprightImagePaintStrategy(&quot;images/Mario.gif&quot;, 1.0)});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IaZaMQuLEei-6eSvavMBRQ" name="MarioMarsImagePaintStrategy" method="_IjXwAAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IaaBQAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IaaBQQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IaaBQguLEei-6eSvavMBRQ" type="_IaZaMAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IaaBQwuLEei-6eSvavMBRQ" name="MarsImagePaintStrategy">
        <generalization xmi:id="_IhbPQQuLEei-6eSvavMBRQ" general="_IaPCIAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjXwAguLEei-6eSvavMBRQ" name="MarsImagePaintStrategy" specification="_IaaoUAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjXwAwuLEei-6eSvavMBRQ" type="_IaaBQwuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Mars.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IaaoUAuLEei-6eSvavMBRQ" name="MarsImagePaintStrategy" method="_IjXwAguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IaaoUQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IaaoUguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IaaoUwuLEei-6eSvavMBRQ" type="_IaaBQwuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IabPYAuLEei-6eSvavMBRQ" name="MultiPaintStrategy">
        <ownedComment xmi:id="_IjnAmguLEei-6eSvavMBRQ">
          <body>This class defines a multi paint strategy which is the composition of other paint strategies.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_Ihh88AuLEei-6eSvavMBRQ" general="_IZQKsAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_Ii9gUAuLEei-6eSvavMBRQ" name="pstrats" visibility="private" type="_IZQKsAuLEei-6eSvavMBRQ" association="_Ij7JoQuLEei-6eSvavMBRQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ii-HYAuLEei-6eSvavMBRQ" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjXwBAuLEei-6eSvavMBRQ" name="MultiPaintStrategy" specification="_IhgHwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjXwBQuLEei-6eSvavMBRQ" name="pstrats" type="_IZQKsAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IjXwBguLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjXwBwuLEei-6eSvavMBRQ" type="_IabPYAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(new AffineTransform());&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjXwCAuLEei-6eSvavMBRQ" name="MultiPaintStrategy" specification="_IiXqcAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjXwCQuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjXwCguLEei-6eSvavMBRQ" name="pstrats" type="_IZQKsAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IjXwCwuLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjXwDAuLEei-6eSvavMBRQ" type="_IabPYAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(at);&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjYXEAuLEei-6eSvavMBRQ" name="init" specification="_IhhV4AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjYXEQuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
		    strategy.init(ball);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjYXEguLEei-6eSvavMBRQ" name="paintXfrm" specification="_IiYRgAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjYXEwuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjYXFAuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjYXFQuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
			strategy.paintXfrm(g, ball, at);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Iab2cAuLEei-6eSvavMBRQ" name="MultiPaintStrategy">
          <eAnnotations xmi:id="_Iab2cQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IacdgAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IacdgguLEei-6eSvavMBRQ" type="_IabPYAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IhgHwAuLEei-6eSvavMBRQ" name="MultiPaintStrategy" method="_IjXwBAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_Ihgu0AuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Ihgu0QuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_IjnnoAuLEei-6eSvavMBRQ">
            <body>This is a constructor that doesn't take in an affine transform.&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_IhgHwQuLEei-6eSvavMBRQ" name="pstrats" type="_IZQKsAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ihgu0wuLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Ihgu0guLEei-6eSvavMBRQ" type="_IabPYAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IhhV4AuLEei-6eSvavMBRQ" name="init" method="_IjYXEAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjnnoguLEei-6eSvavMBRQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IhhV4QuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiXqcAuLEei-6eSvavMBRQ" name="MultiPaintStrategy" method="_IjXwCAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IiXqcwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IiXqdAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_IjnnoQuLEei-6eSvavMBRQ">
            <body>This is a constructor that does take in an affine transform.&#xD;
	 * @param at An affine transform&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_IiXqcQuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiXqcguLEei-6eSvavMBRQ" name="pstrats" type="_IZQKsAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IiXqdguLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IiXqdQuLEei-6eSvavMBRQ" type="_IabPYAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiYRgAuLEei-6eSvavMBRQ" name="paintXfrm" method="_IjYXEguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IiYRgQuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiYRgguLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiYRgwuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Iagu8AuLEei-6eSvavMBRQ" name="MultiStrategy">
        <ownedComment xmi:id="_IjnnowuLEei-6eSvavMBRQ">
          <body>This class defines a Multi Strategy which defines a movement strategy for a ball
is a combination of 2 other strategies.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Ii-ucAuLEei-6eSvavMBRQ" name="s1" visibility="private" type="_IaNM8AuLEei-6eSvavMBRQ" association="_Ij7wsQuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_IjnnpAuLEei-6eSvavMBRQ" name="s2" visibility="private" type="_IaNM8AuLEei-6eSvavMBRQ" association="_IkH98QuLEei-6eSvavMBRQ"/>
        <interfaceRealization xmi:id="_IhikAAuLEei-6eSvavMBRQ" client="_Iagu8AuLEei-6eSvavMBRQ" supplier="_IaNM8AuLEei-6eSvavMBRQ" contract="_IaNM8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjYXFguLEei-6eSvavMBRQ" name="MultiStrategy" specification="_IhjLEAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjYXFwuLEei-6eSvavMBRQ" name="s1" type="_IaNM8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjYXGAuLEei-6eSvavMBRQ" name="s2" type="_IaNM8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjYXGQuLEei-6eSvavMBRQ" type="_Iagu8AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this.s1 = s1;
		this.s2 = s2;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjY-IAuLEei-6eSvavMBRQ" name="updateState" specification="_IhjyIAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjY-IQuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjY-IguLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					s1.updateState(ball, disp);
					s2.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IhjLEAuLEei-6eSvavMBRQ" name="MultiStrategy" method="_IjYXFguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IhjLEwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IhjLFAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IhjLEQuLEei-6eSvavMBRQ" name="s1" type="_IaNM8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IhjLEguLEei-6eSvavMBRQ" name="s2" type="_IaNM8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IhjLFQuLEei-6eSvavMBRQ" type="_Iagu8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IhjyIAuLEei-6eSvavMBRQ" name="updateState" method="_IjY-IAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IhjyIQuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IhjyIguLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IakZUAuLEei-6eSvavMBRQ" name="ReefImagePaintStrategy">
        <generalization xmi:id="_IhlAQAuLEei-6eSvavMBRQ" general="_Ia6XkAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjY-IwuLEei-6eSvavMBRQ" name="ReefImagePaintStrategy" specification="_IalAYAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjY-JAuLEei-6eSvavMBRQ" type="_IakZUAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Reef.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IalAYAuLEei-6eSvavMBRQ" name="ReefImagePaintStrategy" method="_IjY-IwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IalAYQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IalAYguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IalAYwuLEei-6eSvavMBRQ" type="_IakZUAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IalncAuLEei-6eSvavMBRQ" name="SaturnImagePaintStrategy">
        <generalization xmi:id="_IhlAQQuLEei-6eSvavMBRQ" general="_IaPCIAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjY-JQuLEei-6eSvavMBRQ" name="SaturnImagePaintStrategy" specification="_IamOgAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjY-JguLEei-6eSvavMBRQ" type="_IalncAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Saturn.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IamOgAuLEei-6eSvavMBRQ" name="SaturnImagePaintStrategy" method="_IjY-JQuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IamOgQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IamOgguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IamOgwuLEei-6eSvavMBRQ" type="_IalncAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Iam1kAuLEei-6eSvavMBRQ" name="ShapePaintStrategy">
        <ownedComment xmi:id="_IjoOsQuLEei-6eSvavMBRQ">
          <body>This class defines a shape paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_IhmOYAuLEei-6eSvavMBRQ" general="_IZQKsAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_Ii_8kAuLEei-6eSvavMBRQ" name="shape" visibility="package" type="_IhJicAuLEei-6eSvavMBRQ" association="_Ij8XwQuLEei-6eSvavMBRQ"/>
        <interfaceRealization xmi:id="_IhlAQguLEei-6eSvavMBRQ" client="_Iam1kAuLEei-6eSvavMBRQ" supplier="_IaHtYAuLEei-6eSvavMBRQ" contract="_IaHtYAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjY-JwuLEei-6eSvavMBRQ" name="ShapePaintStrategy" specification="_IiaGsAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjY-KAuLEei-6eSvavMBRQ" name="shape" type="_IhJicAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjY-KQuLEei-6eSvavMBRQ" type="_Iam1kAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjZlMAuLEei-6eSvavMBRQ" name="ShapePaintStrategy" specification="_IiatwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjZlMQuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjZlMguLEei-6eSvavMBRQ" name="shape" type="_IhJicAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjZlMwuLEei-6eSvavMBRQ" type="_Iam1kAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjZlNAuLEei-6eSvavMBRQ" name="paintXfrm" specification="_IiatxguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjZlNQuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjZlNguLEei-6eSvavMBRQ" name="host" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjZlNwuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>((Graphics2D) g).fill(at.createTransformedShape(shape));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjZlOAuLEei-6eSvavMBRQ" name="makeShape" specification="_IaoqwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjZlOQuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjZlOguLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjZlOwuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjZlPAuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjZlPQuLEei-6eSvavMBRQ" type="_IhJicAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>at.setToTranslation(x, y);
		at.scale(x * xScale, y * yScale);  // optional rotation can be added as well
		return at.createTransformedShape(shape);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IaoqwAuLEei-6eSvavMBRQ" name="makeShape" method="_IjZlOAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IaoqwQuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IaoqwguLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IaoqwwuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IaoqxAuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IibU0wuLEei-6eSvavMBRQ" type="_IhJicAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiaGsAuLEei-6eSvavMBRQ" name="ShapePaintStrategy" method="_IjY-JwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IiaGsguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IiaGswuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IiaGsQuLEei-6eSvavMBRQ" name="shape" type="_IhJicAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiaGtAuLEei-6eSvavMBRQ" type="_Iam1kAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiatwAuLEei-6eSvavMBRQ" name="ShapePaintStrategy" method="_IjZlMAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IiatwwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IiatxAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IiatwQuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiatwguLEei-6eSvavMBRQ" name="shape" type="_IhJicAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiatxQuLEei-6eSvavMBRQ" type="_Iam1kAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiatxguLEei-6eSvavMBRQ" name="paintXfrm" method="_IjZlNAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IibU0AuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IibU0QuLEei-6eSvavMBRQ" name="host" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IibU0guLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IaruEAuLEei-6eSvavMBRQ" name="SheepImagePaintStrategy">
        <generalization xmi:id="_IhncgAuLEei-6eSvavMBRQ" general="_Ia6XkAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjaMQAuLEei-6eSvavMBRQ" name="SheepImagePaintStrategy" specification="_IasVIAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjaMQQuLEei-6eSvavMBRQ" type="_IaruEAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Sheep.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IasVIAuLEei-6eSvavMBRQ" name="SheepImagePaintStrategy" method="_IjaMQAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IasVIQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IasVIguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IasVIwuLEei-6eSvavMBRQ" type="_IaruEAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Ias8MAuLEei-6eSvavMBRQ" name="SoccerImagePaintStrategy">
        <generalization xmi:id="_IhncgQuLEei-6eSvavMBRQ" general="_IaPCIAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjaMQguLEei-6eSvavMBRQ" name="SoccerImagePaintStrategy" specification="_Ias8MQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjaMQwuLEei-6eSvavMBRQ" type="_Ias8MAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Soccer.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Ias8MQuLEei-6eSvavMBRQ" name="SoccerImagePaintStrategy" method="_IjaMQguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IatjQAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IatjQQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IatjQguLEei-6eSvavMBRQ" type="_Ias8MAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IatjQwuLEei-6eSvavMBRQ" name="SonicImagePaintStrategy">
        <generalization xmi:id="_IhoDkAuLEei-6eSvavMBRQ" general="_Ia6XkAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjaMRAuLEei-6eSvavMBRQ" name="SonicImagePaintStrategy" specification="_IauKUAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjaMRQuLEei-6eSvavMBRQ" type="_IatjQwuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Sonic.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IauKUAuLEei-6eSvavMBRQ" name="SonicImagePaintStrategy" method="_IjaMRAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IauKUQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IauKUguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IauKUwuLEei-6eSvavMBRQ" type="_IatjQwuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IauxYAuLEei-6eSvavMBRQ" name="SpawnStrategy">
        <ownedComment xmi:id="_IjoOsguLEei-6eSvavMBRQ">
          <body>This class defines a spawn strategy that interacts with other balls.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_IjAjoAuLEei-6eSvavMBRQ" name="count" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjAjoQuLEei-6eSvavMBRQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjAjowuLEei-6eSvavMBRQ" name="delay" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjAjpAuLEei-6eSvavMBRQ" value="100"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_IhoDkQuLEei-6eSvavMBRQ" client="_IauxYAuLEei-6eSvavMBRQ" supplier="_IaNM8AuLEei-6eSvavMBRQ" contract="_IaNM8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjaMRguLEei-6eSvavMBRQ" name="updateState" specification="_IhoqoAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjaMRwuLEei-6eSvavMBRQ" name="context" type="_IZWRUAuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_IjaMSAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_IjaMSQuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_IjaMSguLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>if (delay &lt; count++) {
			dispatcher.notifyAll(new IBallCmd() {
				/**
				 * This function applies this command to the correct ball using a dispatcher.
				 */
				@Override
				public void apply(Ball other, Dispatcher disp) {
					if (count != 0 &amp;&amp; context != other) {
						if ((context.getRad() + other.getRad()) > 
						    context.getLoc().distance(other.getLoc())) {
							disp.addObserver(new Ball(
									context.getCol(),
									new Point(context.getLoc()), 
									context.getRad(),
									new Point(-context.getVel().x+1,-context.getVel().y+1), 
									context.getCon(), 
									new SpawnStrategy(), 
									context.getPaintStrat()));
							count = 0;
							delay *= 5;
						}
					}
				}
			});
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IhoqoAuLEei-6eSvavMBRQ" name="updateState" method="_IjaMRguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IhoqoQuLEei-6eSvavMBRQ" name="context" type="_IZWRUAuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_IhoqpAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_IhoqpQuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_IhoqoguLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Iax0sAuLEei-6eSvavMBRQ" name="SquarePaintStrategy">
        <ownedComment xmi:id="_IjoOswuLEei-6eSvavMBRQ">
          <body>This is the square paint strategy that paints a square.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_IhpRsguLEei-6eSvavMBRQ" client="_Iax0sAuLEei-6eSvavMBRQ" supplier="_IaGfQAuLEei-6eSvavMBRQ" contract="_IaGfQAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjazUAuLEei-6eSvavMBRQ" name="paint" specification="_Iib74AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjazUQuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjazUguLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>int halfSide = ball.getRad();
		g.setColor(ball.getCol());
		g.fillRect(ball.getLoc().x - halfSide, ball.getLoc().y - halfSide, 2 * halfSide, 2 * halfSide);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Ihp4wAuLEei-6eSvavMBRQ" name="init">
          <ownedParameter xmi:id="_Ihp4wQuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Iib74AuLEei-6eSvavMBRQ" name="paint" method="_IjazUAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_Iib74QuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_Iib74guLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Iazp4AuLEei-6eSvavMBRQ" name="StraightStrategy">
        <ownedComment xmi:id="_Ijo1wAuLEei-6eSvavMBRQ">
          <body>This class defines a Straight Strategy which defines a movement strategy for a ball that just
moves by changing it's location by its velocity components.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_Ihqf0AuLEei-6eSvavMBRQ" client="_Iazp4AuLEei-6eSvavMBRQ" supplier="_IaNM8AuLEei-6eSvavMBRQ" contract="_IaNM8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjazUwuLEei-6eSvavMBRQ" name="updateState" specification="_IhrG4AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjazVAuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjazVQuLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IhrG4AuLEei-6eSvavMBRQ" name="updateState" method="_IjazUwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IhrG4QuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IhrG4guLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Ia1fEAuLEei-6eSvavMBRQ" name="SwellStrategy">
        <ownedComment xmi:id="_Ijo1wQuLEei-6eSvavMBRQ">
          <body>This class defines a Swell Strategy which defines a movement strategy for a ball that grows it
in size, and once it reaches a certain size, it changes colors, and then shrinks slowly and repeats.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_Ihrt8guLEei-6eSvavMBRQ" client="_Ia1fEAuLEei-6eSvavMBRQ" supplier="_IaNM8AuLEei-6eSvavMBRQ" contract="_IaNM8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjazVguLEei-6eSvavMBRQ" name="updateState" specification="_IhsVAAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjazVwuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjazWAuLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getRad() >= 80) {
						ball.setRadDelta(1);
						ball.setRadDelta(ball.getRadDelta() * -1);
						ball.setCol(rzr.randomColor());
					} else if (ball.getRad() &lt;= 20) {
						ball.setRadDelta(-5);
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IhsVAAuLEei-6eSvavMBRQ" name="updateState" method="_IjazVguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IhsVAQuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IhsVAguLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Ia3UQAuLEei-6eSvavMBRQ" name="SwitcherStrategy">
        <ownedComment xmi:id="_Ijo1wguLEei-6eSvavMBRQ">
          <body>This class defines a Switcher Strategy which defines a strategy for a ball that can
change by updating the strategy.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_IjBKsAuLEei-6eSvavMBRQ" name="strategy" visibility="private" isStatic="true" type="_IaNM8AuLEei-6eSvavMBRQ" association="_Ij8-0AuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjBKsQuLEei-6eSvavMBRQ" value="new StraightStrategy()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_Ihs8EguLEei-6eSvavMBRQ" client="_Ia3UQAuLEei-6eSvavMBRQ" supplier="_IaNM8AuLEei-6eSvavMBRQ" contract="_IaNM8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjazWQuLEei-6eSvavMBRQ" name="updateState" specification="_IhtjIAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjazWguLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjazWwuLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					strategy.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjbaYAuLEei-6eSvavMBRQ" name="setStrat" specification="_IhuKMguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjbaYQuLEei-6eSvavMBRQ" name="strat" type="_IaNM8AuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>SwitcherStrategy.strategy = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjbaYguLEei-6eSvavMBRQ" name="getStrat" specification="_Ia37UAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjbaYwuLEei-6eSvavMBRQ" type="_IaNM8AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return SwitcherStrategy.strategy;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Ia37UAuLEei-6eSvavMBRQ" name="getStrat" isStatic="true" method="_IjbaYguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_Ijo1xAuLEei-6eSvavMBRQ">
            <body>This function returns the current strategy of the switcher balls.
	 * @return An IUpdateStrategy which is the current strategy of the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IhuxQAuLEei-6eSvavMBRQ" type="_IaNM8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IhtjIAuLEei-6eSvavMBRQ" name="updateState" method="_IjazWQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IhtjIQuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IhtjIguLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IhuKMguLEei-6eSvavMBRQ" name="setStrat" isStatic="true" method="_IjbaYAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_Ijo1wwuLEei-6eSvavMBRQ">
            <body>This function changes the strategy of all switcher balls to that of the parameter.
	 * @param strat An IUpdateStrategy which is the new strategy for all the balls to use</body>
          </ownedComment>
          <ownedParameter xmi:id="_IhuKMwuLEei-6eSvavMBRQ" name="strat" type="_IaNM8AuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Ia5JcAuLEei-6eSvavMBRQ" name="TeleportStrategy">
        <ownedComment xmi:id="_Ijo1xQuLEei-6eSvavMBRQ">
          <body>This class defines a Teleport Strategy which defines a movement strategy for a ball that randomly
changes the location of it, so it teleports.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_IhuxQQuLEei-6eSvavMBRQ" client="_Ia5JcAuLEei-6eSvavMBRQ" supplier="_IaNM8AuLEei-6eSvavMBRQ" contract="_IaNM8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjbaZAuLEei-6eSvavMBRQ" name="updateState" specification="_IhvYUAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjbaZQuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjbaZguLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % 80 == 0) {
						ball.setLoc(rzr.randomLoc(new Rectangle(ball.getCon().getWidth() - ball.getRad(), ball.getCon().getHeight() - ball.getRad())));
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IhvYUAuLEei-6eSvavMBRQ" name="updateState" method="_IjbaZAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IhvYUQuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IhvYUguLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Ia6XkAuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy">
        <ownedComment xmi:id="_Ijo1xguLEei-6eSvavMBRQ">
          <body>This class defines an upright image.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_IhwmcAuLEei-6eSvavMBRQ" general="_IaPCIAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjbaZwuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy" specification="_Ia6-oAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjbaaAuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjbaaQuLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjbaaguLEei-6eSvavMBRQ" type="_Ia6XkAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjcBcAuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy" specification="_IidKAAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjcBcQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjcBcguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjcBcwuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjcBdAuLEei-6eSvavMBRQ" type="_Ia6XkAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor, at);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjcBdQuLEei-6eSvavMBRQ" name="paintCfg" specification="_IidxEwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjcBdguLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjcBdwuLEei-6eSvavMBRQ" name="host" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>super.paintCfg(g, host);&#xD;
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {&#xD;
			at.scale(1.0, -1.0);&#xD;
		}       &#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Ia6-oAuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy" method="_IjbaZwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_Ia6-owuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Ia6-pAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_Ia6-oQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Ia6-oguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Ia6-pQuLEei-6eSvavMBRQ" type="_Ia6XkAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IidKAAuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy" method="_IjcBcAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IidxEAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IidxEQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IidKAQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IidKAguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IidKAwuLEei-6eSvavMBRQ" name="at" type="_Igmv4AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IidxEguLEei-6eSvavMBRQ" type="_Ia6XkAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IidxEwuLEei-6eSvavMBRQ" name="paintCfg" visibility="protected" method="_IjcBdQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IidxFAuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IidxFQuLEei-6eSvavMBRQ" name="host" type="_IZWRUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Ia8z0AuLEei-6eSvavMBRQ" name="VenusImagePaintStrategy">
        <generalization xmi:id="_Ih0Q0AuLEei-6eSvavMBRQ" general="_IaPCIAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjcBeAuLEei-6eSvavMBRQ" name="VenusImagePaintStrategy" specification="_Ia8z0QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjcBeQuLEei-6eSvavMBRQ" type="_Ia8z0AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Venus.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Ia8z0QuLEei-6eSvavMBRQ" name="VenusImagePaintStrategy" method="_IjcBeAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_Ia9a4AuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Ia9a4QuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_Ia9a4guLEei-6eSvavMBRQ" type="_Ia8z0AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Ia-B8AuLEei-6eSvavMBRQ" name="WiggleStrategy">
        <ownedComment xmi:id="_Ijo1xwuLEei-6eSvavMBRQ">
          <body>This class defines a Wiggle Strategy which defines a movement strategy for a ball that randomly
changes the velocity direction, so it wiggles.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_Ih034AuLEei-6eSvavMBRQ" client="_Ia-B8AuLEei-6eSvavMBRQ" supplier="_IaNM8AuLEei-6eSvavMBRQ" contract="_IaNM8AuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjcBeguLEei-6eSvavMBRQ" name="updateState" specification="_Ih034QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjcBewuLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjcBfAuLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % rzr.randomInt(2,  100) == 0) {
						ball.setVel(new Point(ball.getVel().x, ball.getVel().y * -1));
					} else if (ball.getItr() % rzr.randomInt(2, 100) == 0){
						ball.setVel(new Point(ball.getVel().x * -1, ball.getVel().y));
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Ih034QuLEei-6eSvavMBRQ" name="updateState" method="_IjcBeguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_Ih034guLEei-6eSvavMBRQ" name="ball" type="_IZWRUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_Ih034wuLEei-6eSvavMBRQ" name="dispatcher" type="_Ia_QEAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ijj9QAuLEei-6eSvavMBRQ" name="" memberEnd="_Ii0WYAuLEei-6eSvavMBRQ _Ijj9QQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ijj9QQuLEei-6eSvavMBRQ" name="" type="_IZWRUAuLEei-6eSvavMBRQ" association="_Ijj9QAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ijj9QguLEei-6eSvavMBRQ" name="" memberEnd="_Ii09cAuLEei-6eSvavMBRQ _IjkkUAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IjkkUAuLEei-6eSvavMBRQ" name="" type="_IZWRUAuLEei-6eSvavMBRQ" association="_Ijj9QguLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IjkkUQuLEei-6eSvavMBRQ" name="" memberEnd="_Ii1kgQuLEei-6eSvavMBRQ _IjkkUguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IjkkUguLEei-6eSvavMBRQ" name="" type="_IZWRUAuLEei-6eSvavMBRQ" association="_IjkkUQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IjkkUwuLEei-6eSvavMBRQ" name="" memberEnd="_Ii1kgguLEei-6eSvavMBRQ _IjkkVAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IjkkVAuLEei-6eSvavMBRQ" name="" type="_IZWRUAuLEei-6eSvavMBRQ" association="_IjkkUwuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ijx_sAuLEei-6eSvavMBRQ" name="" memberEnd="_Ijx_sQuLEei-6eSvavMBRQ _IaFRIAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ijx_sQuLEei-6eSvavMBRQ" name="" type="_IaEDAAuLEei-6eSvavMBRQ" association="_Ijx_sAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IjymwQuLEei-6eSvavMBRQ" name="" memberEnd="_IjymwguLEei-6eSvavMBRQ _IaF4MAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IjymwguLEei-6eSvavMBRQ" name="" type="_IaEDAAuLEei-6eSvavMBRQ" association="_IjymwQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IjzN0QuLEei-6eSvavMBRQ" name="" memberEnd="_IjzN0guLEei-6eSvavMBRQ _IaLXwAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IjzN0guLEei-6eSvavMBRQ" name="" type="_IaKJoAuLEei-6eSvavMBRQ" association="_IjzN0QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ijz04AuLEei-6eSvavMBRQ" name="" memberEnd="_Ijz04QuLEei-6eSvavMBRQ _IaL-0AuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ijz04QuLEei-6eSvavMBRQ" name="" type="_IaKJoAuLEei-6eSvavMBRQ" association="_Ijz04AuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij1qEQuLEei-6eSvavMBRQ" name="" memberEnd="_Ij1qEguLEei-6eSvavMBRQ _IizIQguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij1qEguLEei-6eSvavMBRQ" name="" type="_IZQKsAuLEei-6eSvavMBRQ" association="_Ij1qEQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij2RIQuLEei-6eSvavMBRQ" name="" memberEnd="_Ij2RIguLEei-6eSvavMBRQ _Ii1kgwuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij2RIguLEei-6eSvavMBRQ" name="" type="_IZWRUAuLEei-6eSvavMBRQ" association="_Ij2RIQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij24MQuLEei-6eSvavMBRQ" name="" memberEnd="_Ij24MguLEei-6eSvavMBRQ _Ii2LkQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij24MguLEei-6eSvavMBRQ" name="" type="_IZWRUAuLEei-6eSvavMBRQ" association="_Ij24MQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij3fQAuLEei-6eSvavMBRQ" name="" memberEnd="_Ij3fQQuLEei-6eSvavMBRQ _Ii4AwAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij3fQQuLEei-6eSvavMBRQ" name="" type="_IZolMAuLEei-6eSvavMBRQ" association="_Ij3fQAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij3fQwuLEei-6eSvavMBRQ" name="" memberEnd="_Ij3fRAuLEei-6eSvavMBRQ _Ii4n0guLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij3fRAuLEei-6eSvavMBRQ" name="" type="_IZolMAuLEei-6eSvavMBRQ" association="_Ij3fQwuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij4GUQuLEei-6eSvavMBRQ" name="" memberEnd="_Ij4GUguLEei-6eSvavMBRQ _Ii5O4AuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij4GUguLEei-6eSvavMBRQ" name="" type="_IZolMAuLEei-6eSvavMBRQ" association="_Ij4GUQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij4tYQuLEei-6eSvavMBRQ" name="" memberEnd="_Ij4tYguLEei-6eSvavMBRQ _Ii518AuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij4tYguLEei-6eSvavMBRQ" name="" type="_IZ8HMAuLEei-6eSvavMBRQ" association="_Ij4tYQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij5UcQuLEei-6eSvavMBRQ" name="" memberEnd="_Ij5UcguLEei-6eSvavMBRQ _Ii7rIguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij5UcguLEei-6eSvavMBRQ" name="" type="_IaPCIAuLEei-6eSvavMBRQ" association="_Ij5UcQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij5UdAuLEei-6eSvavMBRQ" name="" memberEnd="_Ij57gAuLEei-6eSvavMBRQ _Ii8SMQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij57gAuLEei-6eSvavMBRQ" name="" type="_IaPCIAuLEei-6eSvavMBRQ" association="_Ij5UdAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij57gguLEei-6eSvavMBRQ" name="" memberEnd="_Ij57gwuLEei-6eSvavMBRQ _Ii85QAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij57gwuLEei-6eSvavMBRQ" name="" type="_IaPCIAuLEei-6eSvavMBRQ" association="_Ij57gguLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij6ikQuLEei-6eSvavMBRQ" name="" memberEnd="_Ij6ikguLEei-6eSvavMBRQ _Ii85QguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij6ikguLEei-6eSvavMBRQ" name="" type="_IaPCIAuLEei-6eSvavMBRQ" association="_Ij6ikQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij7JoQuLEei-6eSvavMBRQ" name="" memberEnd="_Ij7JoguLEei-6eSvavMBRQ _Ii9gUAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij7JoguLEei-6eSvavMBRQ" name="" type="_IabPYAuLEei-6eSvavMBRQ" association="_Ij7JoQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij7wsQuLEei-6eSvavMBRQ" name="" memberEnd="_Ij7wsguLEei-6eSvavMBRQ _Ii-ucAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij7wsguLEei-6eSvavMBRQ" name="" type="_Iagu8AuLEei-6eSvavMBRQ" association="_Ij7wsQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij8XwQuLEei-6eSvavMBRQ" name="" memberEnd="_Ij8XwguLEei-6eSvavMBRQ _Ii_8kAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij8XwguLEei-6eSvavMBRQ" name="" type="_Iam1kAuLEei-6eSvavMBRQ" association="_Ij8XwQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij8-0AuLEei-6eSvavMBRQ" name="" memberEnd="_Ij8-0QuLEei-6eSvavMBRQ _IjBKsAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij8-0QuLEei-6eSvavMBRQ" name="" type="_Ia3UQAuLEei-6eSvavMBRQ" association="_Ij8-0AuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IkH98QuLEei-6eSvavMBRQ" name="" memberEnd="_IkH98guLEei-6eSvavMBRQ _IjnnpAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IkH98guLEei-6eSvavMBRQ" name="" type="_Iagu8AuLEei-6eSvavMBRQ" association="_IkH98QuLEei-6eSvavMBRQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_IV4toQuLEei-6eSvavMBRQ" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_IbUAMAuLEei-6eSvavMBRQ" name="BallWorldView">
        <ownedComment xmi:id="_IjqD4QuLEei-6eSvavMBRQ">
          <body>This is the BallWorldView class, which has the frame on which our BallWorld is displayed.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <generalization xmi:id="_IioJIguLEei-6eSvavMBRQ" general="_Ih5JUQuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_IjDm8QuLEei-6eSvavMBRQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjDm8guLEei-6eSvavMBRQ" value="-7114823923004621639L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjDm8wuLEei-6eSvavMBRQ" name="contentPane" visibility="private" type="_Ih5wYQuLEei-6eSvavMBRQ" association="_Ij9l4QuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_IjEOAQuLEei-6eSvavMBRQ" name="pnlControl" visibility="private" isLeaf="true" type="_Ih5wYQuLEei-6eSvavMBRQ" isReadOnly="true" association="_Ij-M8QuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjEOAguLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjE1EAuLEei-6eSvavMBRQ" name="tfClassname" visibility="private" isLeaf="true" type="_Ih5wYwuLEei-6eSvavMBRQ" isReadOnly="true" association="_Ij-0AQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjE1EQuLEei-6eSvavMBRQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjE1EwuLEei-6eSvavMBRQ" name="btnClearBalls" visibility="private" isLeaf="true" type="_Ih6XcQuLEei-6eSvavMBRQ" isReadOnly="true" association="_Ij_bEAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjE1FAuLEei-6eSvavMBRQ" value="new JButton(&quot;Clear balls&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjFcIAuLEei-6eSvavMBRQ" name="adapter" visibility="private" type="_IbjQwAuLEei-6eSvavMBRQ" association="_Ij_bEwuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_IjGDMAuLEei-6eSvavMBRQ" name="pnlCanvas" visibility="private" isLeaf="true" type="_Ih5wYQuLEei-6eSvavMBRQ" isReadOnly="true" association="_IkACIQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjGDMQuLEei-6eSvavMBRQ" value="new JPanel() {&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * This is a private variable that gives the class an ID to serialize and deserialize.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;private static final long serialVersionUID = 8303517520311377718L;&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Overridden paintComponent method to paint a shape in the panel.&#xA;&#x9;&#x9; * @param g The Graphics object to paint on.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public void paintComponent(Graphics g) {&#xA;&#x9;&#x9;&#x9;super.paintComponent(g); // Do everything normally done first, e.g. clear the screen.&#xA;&#x9;&#x9;&#x9;adapter.paintBalls(g);&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjGDMwuLEei-6eSvavMBRQ" name="btnAddToList" visibility="private" isLeaf="true" type="_Ih6XcQuLEei-6eSvavMBRQ" isReadOnly="true" association="_IkApMQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjGDNAuLEei-6eSvavMBRQ" value="new JButton(&quot;Add to list&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjGDNguLEei-6eSvavMBRQ" name="btnCombine" visibility="private" isLeaf="true" type="_Ih6XcQuLEei-6eSvavMBRQ" isReadOnly="true" association="_IkBQQQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjGqQAuLEei-6eSvavMBRQ" value="new JButton(&quot;Combine&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjGqQguLEei-6eSvavMBRQ" name="btnMakeSelectedBall" visibility="private" isLeaf="true" type="_Ih6XcQuLEei-6eSvavMBRQ" isReadOnly="true" association="_IkB3UAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjGqQwuLEei-6eSvavMBRQ" value="new JButton(&quot;Make selected ball&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjGqRQuLEei-6eSvavMBRQ" name="btnMakeSwitcher" visibility="private" isLeaf="true" type="_Ih6XcQuLEei-6eSvavMBRQ" isReadOnly="true" association="_IkB3UwuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjHRUAuLEei-6eSvavMBRQ" value="new JButton(&quot;Make switcher&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjHRUguLEei-6eSvavMBRQ" name="btnSwitch" visibility="private" isLeaf="true" type="_Ih6XcQuLEei-6eSvavMBRQ" isReadOnly="true" association="_IkCeYQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjHRUwuLEei-6eSvavMBRQ" value="new JButton(&quot;Switch&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjHRVQuLEei-6eSvavMBRQ" name="comBoxTop" visibility="private" type="_Ih7lkQuLEei-6eSvavMBRQ" association="_IkDFcQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjH4YQuLEei-6eSvavMBRQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjH4YwuLEei-6eSvavMBRQ" name="comBoxBottom" visibility="private" type="_Ih7lkQuLEei-6eSvavMBRQ" association="_IkDsgQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjIfcQuLEei-6eSvavMBRQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjJGgAuLEei-6eSvavMBRQ" name="pnlChangeList" visibility="private" isLeaf="true" type="_Ih5wYQuLEei-6eSvavMBRQ" isReadOnly="true" association="_IkETkQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjJGgQuLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjJGgwuLEei-6eSvavMBRQ" name="pnlDropDowns" visibility="private" isLeaf="true" type="_Ih5wYQuLEei-6eSvavMBRQ" isReadOnly="true" association="_IkE6oQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjJGhAuLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjJtkQuLEei-6eSvavMBRQ" name="pnlSwitching" visibility="private" isLeaf="true" type="_Ih5wYQuLEei-6eSvavMBRQ" isReadOnly="true" association="_IkFhsAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjJtkguLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjJtlAuLEei-6eSvavMBRQ" name="pnlPaintStrats" visibility="private" isLeaf="true" type="_Ih5wYQuLEei-6eSvavMBRQ" isReadOnly="true" association="_IkFhswuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjJtlQuLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjKUoQuLEei-6eSvavMBRQ" name="btnAddPaintStrat" visibility="private" isLeaf="true" type="_Ih6XcQuLEei-6eSvavMBRQ" isReadOnly="true" association="_IkGIwQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjKUoguLEei-6eSvavMBRQ" value="new JButton(&quot;Add&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjKUpAuLEei-6eSvavMBRQ" name="txtPaintStrat" visibility="private" isLeaf="true" type="_Ih5wYwuLEei-6eSvavMBRQ" isReadOnly="true" association="_IkGv0QuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjK7sAuLEei-6eSvavMBRQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjK7sguLEei-6eSvavMBRQ" name="comBoxStrats" visibility="private" isLeaf="true" type="_Ih7lkQuLEei-6eSvavMBRQ" isReadOnly="true" association="_IkHW4QuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjLiwQuLEei-6eSvavMBRQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjfEwAuLEei-6eSvavMBRQ" name="getPanel" specification="_IbXqkAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjfEwQuLEei-6eSvavMBRQ" type="_Ih5wYQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return pnlCanvas;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjfEwguLEei-6eSvavMBRQ" name="BallWorldView" specification="_Ih9awAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjfEwwuLEei-6eSvavMBRQ" name="adapter" type="_IbjQwAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjfExAuLEei-6eSvavMBRQ" type="_IbUAMAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>txtPaintStrat.setToolTipText(&quot;This is the text field where you can add paint strategies.&quot;);
		pnlPaintStrats.setToolTipText(&quot;This is the panel that holds the components that let you add paint strategies and select them.&quot;);
		pnlPaintStrats.add(txtPaintStrat);
		txtPaintStrat.setColumns(10);
		this.adapter = adapter;
		initGUI();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjfExQuLEei-6eSvavMBRQ" name="updateView" specification="_IbYRoAuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>repaint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjfExguLEei-6eSvavMBRQ" name="getCanvas" specification="_IbYRoQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjfExwuLEei-6eSvavMBRQ" type="_IgjFgAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return getPanel();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjfEyAuLEei-6eSvavMBRQ" name="initGUI" specification="_IbY4sAuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>setTitle(&quot;BallWorld&quot;);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setToolTipText(&quot;This is the content of the frame.&quot;);
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		pnlControl.setBackground(Color.DARK_GRAY);
		pnlControl.setToolTipText(&quot;This is the control panel that lets you create balls and clear them.&quot;);
		
		contentPane.add(pnlControl, BorderLayout.NORTH);
		pnlControl.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		pnlChangeList.setToolTipText(&quot;This panel is where you can add the type of ball you want to make to the drop down lists.&quot;);
		
		pnlControl.add(pnlChangeList);
		pnlChangeList.setLayout(new GridLayout(0, 1, 0, 0));
		
		pnlChangeList.add(tfClassname);
		tfClassname.setToolTipText(&quot;The type of the ball you want to make.&quot;);
		
		tfClassname.setColumns(10);
		btnAddToList.setToolTipText(&quot;This button adds the strategy type in the text field to the drop down boxes.&quot;);
		pnlChangeList.add(btnAddToList);
		btnAddToList.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (tfClassname.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem stratFac = adapter.addStrategy(tfClassname.getText());

             comBoxTop.insertItemAt(stratFac, 0);
             comBoxBottom.insertItemAt(stratFac, 0);
			}
		});
		pnlDropDowns.setToolTipText(&quot;This panel is for the drop down boxes, and buttons to make selected balls and combine strategies.&quot;);
		
		pnlControl.add(pnlDropDowns);
		pnlDropDowns.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSelectedBall.setToolTipText(&quot;This button makes a ball with the update strategy of the factory that's selected on the top drop down box.&quot;);
		pnlDropDowns.add(btnMakeSelectedBall);
		comBoxTop.setToolTipText(&quot;This is the drop down list on the top.&quot;);
		pnlDropDowns.add(comBoxTop);
		comBoxBottom.setToolTipText(&quot;This is the drop down list on the bottom.&quot;);
		pnlDropDowns.add(comBoxBottom);
		btnCombine.setToolTipText(&quot;This button combines the two strategy factories in the combo boxes.&quot;);
		pnlDropDowns.add(btnCombine);
		btnCombine.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem top = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem bottom = comBoxBottom.getItemAt(comBoxBottom.getSelectedIndex());
				
				if (top == null || bottom == null) {
					return;
				}
				
				TDropListItem combo = adapter.combineStrategies(top, bottom);
				comBoxTop.addItem(combo);
				comBoxBottom.addItem(combo);
			}
		});
		btnMakeSelectedBall.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem selected = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem paintFac = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (selected == null || paintFac == null) {
					return;
				}
				
				adapter.makeBall(selected, paintFac);
			}
		});
		pnlSwitching.setToolTipText(&quot;This panel is for the buttons related to making switcher balls and switching their strategies.&quot;);
		
		pnlControl.add(pnlSwitching);
		pnlSwitching.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSwitcher.setToolTipText(&quot;Click this item to make a switcher ball.&quot;);
		pnlSwitching.add(btnMakeSwitcher);
		btnSwitch.setToolTipText(&quot;Click this button to switch the switcher balls to the selected item in the top combo box.&quot;);
		pnlSwitching.add(btnSwitch);
		
		btnSwitch.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switchFac = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				
				if (switchFac == null) {
					return;
				}
				
				adapter.setSwitcherStrategy(switchFac);
			}
		});
		
		btnMakeSwitcher.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switcherStrat = adapter.getSwitcherFac();
				TDropListItem paintStrat = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (paintStrat == null) {
					return;
				}
				
				adapter.makeBall(switcherStrat, paintStrat);
			}
		});
		btnClearBalls.setToolTipText(&quot;Click this to clear the balls on the canvas.&quot;);
		btnClearBalls.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				adapter.clearBalls();
			}
		});
		
		pnlControl.add(btnClearBalls);
		
		pnlControl.add(pnlPaintStrats);
		pnlPaintStrats.setLayout(new GridLayout(0, 1, 0, 0));
		btnAddPaintStrat.setToolTipText(&quot;This is the button that lets you add paint strategies to the combo box below.&quot;);
		btnAddPaintStrat.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (txtPaintStrat.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem paintFac = adapter.addPaintFactory(txtPaintStrat.getText());
             comBoxStrats.insertItemAt(paintFac, 0);
			}
		});
		
		
		pnlPaintStrats.add(btnAddPaintStrat);
		comBoxStrats.setToolTipText(&quot;The is the combo box for the paint strategies that can be implemented.&quot;);
		
		pnlPaintStrats.add(comBoxStrats);
		pnlCanvas.setBackground(Color.LIGHT_GRAY);
		pnlCanvas.setToolTipText(&quot;This is the canvas where the balls move, and stay in.&quot;);
		
		contentPane.add(pnlCanvas, BorderLayout.CENTER);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjfEyQuLEei-6eSvavMBRQ" name="start" specification="_IbY4sQuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>setExtendedState(JFrame.MAXIMIZED_BOTH);
		setVisible(true);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IbXqkAuLEei-6eSvavMBRQ" name="getPanel" method="_IjfEwAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjqD4guLEei-6eSvavMBRQ">
            <body>This gets the canvas of the frame.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_IioJIAuLEei-6eSvavMBRQ" type="_Ih5wYQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IbYRoAuLEei-6eSvavMBRQ" name="updateView" method="_IjfExQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjqD5AuLEei-6eSvavMBRQ">
            <body>Update the view by repainting</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_IbYRoQuLEei-6eSvavMBRQ" name="getCanvas" method="_IjfExguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjqD5QuLEei-6eSvavMBRQ">
            <body>This function returns the canvas panel.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_IioJIQuLEei-6eSvavMBRQ" type="_IgjFgAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IbY4sAuLEei-6eSvavMBRQ" name="initGUI" visibility="private" method="_IjfEyAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjqD5guLEei-6eSvavMBRQ">
            <body>This private function initializes the GUI.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_IbY4sQuLEei-6eSvavMBRQ" name="start" method="_IjfEyQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjqD5wuLEei-6eSvavMBRQ">
            <body>This function makes the frame visible after initializing it.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_Ih9awAuLEei-6eSvavMBRQ" name="BallWorldView" method="_IjfEwguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_Ih9awguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Ih9awwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_IjqD4wuLEei-6eSvavMBRQ">
            <body>Create the frame
	 * @param adapter An IView2ModelAdapter</body>
          </ownedComment>
          <ownedParameter xmi:id="_Ih9awQuLEei-6eSvavMBRQ" name="adapter" type="_IbjQwAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_Ih9axAuLEei-6eSvavMBRQ" type="_IbUAMAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_IbjQwAuLEei-6eSvavMBRQ" name="IView2ModelAdapter">
        <ownedComment xmi:id="_IjqD6AuLEei-6eSvavMBRQ">
          <body>This is an interface which has the functions that the view wants the model to have.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_IbmUEAuLEei-6eSvavMBRQ" name="switcherFac" type="_IirMcguLEei-6eSvavMBRQ" isReadOnly="true" association="_Ij0b8AuLEei-6eSvavMBRQ"/>
        <ownedOperation xmi:id="_Ibke4QuLEei-6eSvavMBRQ" name="clearBalls">
          <ownedComment xmi:id="_IjqD6QuLEei-6eSvavMBRQ">
            <body>This is a function that will tell the model to clear the balls.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_IblF8AuLEei-6eSvavMBRQ" name="addStrategy">
          <ownedComment xmi:id="_IjqD6wuLEei-6eSvavMBRQ">
            <body>This function will take the given short strategy name and return a corresponding
     * something to put onto both drop lists.
     * @param classname The shortened class name of the desired strategy
     * @return Something to put onto both the drop lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IblF8QuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IirzgQuLEei-6eSvavMBRQ" type="_IirMcguLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Ibm7IAuLEei-6eSvavMBRQ" name="addPaintFactory">
          <ownedParameter xmi:id="_Ibm7IQuLEei-6eSvavMBRQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IitosAuLEei-6eSvavMBRQ" type="_IirMcguLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IirMcAuLEei-6eSvavMBRQ" name="paintBalls">
          <ownedComment xmi:id="_IjqD6guLEei-6eSvavMBRQ">
            <body>This is a function that will tell the model to paint the balls.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IirMcQuLEei-6eSvavMBRQ" name="g" type="_Igk6sQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IisakAuLEei-6eSvavMBRQ" name="makeBall">
          <ownedComment xmi:id="_IjqD7AuLEei-6eSvavMBRQ">
            <body>This function will make a ball with the selected short strategy name.
     * @param selectedItem A shorten class name for the desired strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_IisakQuLEei-6eSvavMBRQ" name="selectedItem" type="_IirMcguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IisakguLEei-6eSvavMBRQ" name="paintStrat" type="_IirMcguLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IisakwuLEei-6eSvavMBRQ" name="combineStrategies">
          <ownedComment xmi:id="_Ijqq8AuLEei-6eSvavMBRQ">
            <body>This function will return a new object to put on both lists, given two items from the lists.
     * @param selectedItem1 An object from one drop list
     * @param selectedItem2 An object from the other drop list
     * @return An object to put back on both lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IisalAuLEei-6eSvavMBRQ" name="selectedItem1" type="_IirMcguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IitBoAuLEei-6eSvavMBRQ" name="selectedItem2" type="_IirMcguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IitBoQuLEei-6eSvavMBRQ" type="_IirMcguLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IitBoguLEei-6eSvavMBRQ" name="setSwitcherStrategy">
          <ownedComment xmi:id="_Ijqq8QuLEei-6eSvavMBRQ">
            <body>This function will change the current strategy of the switcher balls to whatever
     * strategy is made by the factory in the parameter.
     * @param switchFac An object from the top drop list.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IitBowuLEei-6eSvavMBRQ" name="switchFac" type="_IirMcguLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IirMcguLEei-6eSvavMBRQ" name="TDropListItem"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij0b8AuLEei-6eSvavMBRQ" name="" memberEnd="_Ij0b8QuLEei-6eSvavMBRQ _IbmUEAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij0b8QuLEei-6eSvavMBRQ" name="" type="_IbjQwAuLEei-6eSvavMBRQ" association="_Ij0b8AuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij9l4QuLEei-6eSvavMBRQ" name="" memberEnd="_Ij9l4guLEei-6eSvavMBRQ _IjDm8wuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij9l4guLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_Ij9l4QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij-M8QuLEei-6eSvavMBRQ" name="" memberEnd="_Ij-M8guLEei-6eSvavMBRQ _IjEOAQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij-M8guLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_Ij-M8QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij-0AQuLEei-6eSvavMBRQ" name="" memberEnd="_Ij-0AguLEei-6eSvavMBRQ _IjE1EAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij-0AguLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_Ij-0AQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij_bEAuLEei-6eSvavMBRQ" name="" memberEnd="_Ij_bEQuLEei-6eSvavMBRQ _IjE1EwuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij_bEQuLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_Ij_bEAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij_bEwuLEei-6eSvavMBRQ" name="" memberEnd="_Ij_bFAuLEei-6eSvavMBRQ _IjFcIAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij_bFAuLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_Ij_bEwuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IkACIQuLEei-6eSvavMBRQ" name="" memberEnd="_IkACIguLEei-6eSvavMBRQ _IjGDMAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IkACIguLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_IkACIQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IkApMQuLEei-6eSvavMBRQ" name="" memberEnd="_IkApMguLEei-6eSvavMBRQ _IjGDMwuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IkApMguLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_IkApMQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IkBQQQuLEei-6eSvavMBRQ" name="" memberEnd="_IkBQQguLEei-6eSvavMBRQ _IjGDNguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IkBQQguLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_IkBQQQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IkB3UAuLEei-6eSvavMBRQ" name="" memberEnd="_IkB3UQuLEei-6eSvavMBRQ _IjGqQguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IkB3UQuLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_IkB3UAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IkB3UwuLEei-6eSvavMBRQ" name="" memberEnd="_IkB3VAuLEei-6eSvavMBRQ _IjGqRQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IkB3VAuLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_IkB3UwuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IkCeYQuLEei-6eSvavMBRQ" name="" memberEnd="_IkCeYguLEei-6eSvavMBRQ _IjHRUguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IkCeYguLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_IkCeYQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IkDFcQuLEei-6eSvavMBRQ" name="" memberEnd="_IkDFcguLEei-6eSvavMBRQ _IjHRVQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IkDFcguLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_IkDFcQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IkDsgQuLEei-6eSvavMBRQ" name="" memberEnd="_IkDsgguLEei-6eSvavMBRQ _IjH4YwuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IkDsgguLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_IkDsgQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IkETkQuLEei-6eSvavMBRQ" name="" memberEnd="_IkETkguLEei-6eSvavMBRQ _IjJGgAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IkETkguLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_IkETkQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IkE6oQuLEei-6eSvavMBRQ" name="" memberEnd="_IkE6oguLEei-6eSvavMBRQ _IjJGgwuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IkE6oguLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_IkE6oQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IkFhsAuLEei-6eSvavMBRQ" name="" memberEnd="_IkFhsQuLEei-6eSvavMBRQ _IjJtkQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IkFhsQuLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_IkFhsAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IkFhswuLEei-6eSvavMBRQ" name="" memberEnd="_IkFhtAuLEei-6eSvavMBRQ _IjJtlAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IkFhtAuLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_IkFhswuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IkGIwQuLEei-6eSvavMBRQ" name="" memberEnd="_IkGIwguLEei-6eSvavMBRQ _IjKUoQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IkGIwguLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_IkGIwQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IkGv0QuLEei-6eSvavMBRQ" name="" memberEnd="_IkGv0guLEei-6eSvavMBRQ _IjKUpAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IkGv0guLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_IkGv0QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IkHW4QuLEei-6eSvavMBRQ" name="" memberEnd="_IkHW4guLEei-6eSvavMBRQ _IjK7sguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_IkHW4guLEei-6eSvavMBRQ" name="" type="_IbUAMAuLEei-6eSvavMBRQ" association="_IkHW4QuLEei-6eSvavMBRQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_IV6i0AuLEei-6eSvavMBRQ" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_IZL5QAuLEei-6eSvavMBRQ" name="BallWorldController">
        <ownedComment xmi:id="_IjhhAAuLEei-6eSvavMBRQ">
          <body>This is the BallWorldController, that has private variables for model and view,
and is able to interface between them.
@author sn32, kyl3, lka2, swong
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Iix6IAuLEei-6eSvavMBRQ" name="model" visibility="private" type="_IZolMAuLEei-6eSvavMBRQ" association="_Ij1DAAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_IiyhMQuLEei-6eSvavMBRQ" name="view" visibility="private" type="_IbUAMAuLEei-6eSvavMBRQ" association="_Ij1DAwuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjPNIAuLEei-6eSvavMBRQ" name="main" specification="_IZNHYAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjPNIQuLEei-6eSvavMBRQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IjPNIguLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(() -> {
			try {
				(new BallWorldController()).start();
			} catch (Exception e) {
				e.printStackTrace();
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjPNIwuLEei-6eSvavMBRQ" name="BallWorldController" specification="_IZOVgQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjPNJAuLEei-6eSvavMBRQ" type="_IZL5QAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>model = new BallWorldModel(new IModel2ViewAdapter() {

			/**
			 * This function from the IModel2ViewAdapter allows the controller
			 * to tell the view to update.
			 */
			@Override
			public void update() {
				view.updateView();
			}

			/**
			 * This function from the IModel2ViewAdapter allows the controller to get
			 * the canvas from the view.
			 */
			@Override
			public Container getCanvas() {
				return view.getCanvas();
			}
		});
		
		view = new BallWorldView&lt;IStrategyFac>(new IView2ModelAdapter&lt;IStrategyFac>() {
	        /**
	         * Returns an IStrategyFac that can instantiate the strategy specified
	         * by classname. Returns the error strategy factory if classname is null.
	         * The toString() of the returned factory is the classname.
	         * @param classname Shortened name of desired strategy
	         * @return A factory to make that strategy
	         */
			@Override
	        public IStrategyFac addStrategy(String classname) {
	        		return model.makeStrategyFac(classname);
	        	}

	        /**
	         * Add a ball to the system with a strategy as given by the given IStrategyFac
	         * @param selectedItem The fully qualified name of the desired strategy.
	         */
	        @Override
	        public void makeBall(IStrategyFac selectedItem, IStrategyFac paintStrat) {
	        		if (null != selectedItem &amp;&amp; paintStrat != null) {
	        			model.makeBall(selectedItem.make(), paintStrat.makePaint());
	        		}
	        	}
			
			/**
			 * Returns an IStrategyFac that can instantiate a MultiStrategy with the
			 * two strategies made by the two given IStrategyFac objects. Returns
			 * the error strategy factory if either supplied factory is null. The
			 * toString() of the returned factory is the toString()'s of the two given
			 * factories, concatenated with &quot;-&quot;.
			 * @param selectedItem1 An IStrategyFac for a strategy
			 * @param selectedItem2 An IStrategyFac for a strategy
			 * @return An IStrategyFac for the composition of the two strategies
			 */
	        @Override
			public IStrategyFac combineStrategies(IStrategyFac selectedItem1, IStrategyFac selectedItem2) {
				return model.combineStrategyFacs(selectedItem1, selectedItem2);
			}
			
			/**
			 * This function tells the model to clear all the balls from the canvas.
			 */
			@Override
			public void clearBalls() {
				model.clearBalls();
			}
			
			/**
			 * This function tells the model to paint and update the status of all the balls.
			 */
			@Override 
			public void paintBalls(Graphics g) {
				model.update(g); // see is this is correct or if a paint method is needed
			}

			/**
			 * This function sets the strategy of the switcher balls to whatever is made by
			 * the input's make method.
			 * @param switchFac The new strategy factory whose make method returns the new strategy
			 * for the switcher balls
			 */
			@Override
			public void setSwitcherStrategy(IStrategyFac switchFac) {
				model.setSwitcherStrategy(switchFac);
			}

			/**
			 * This function returns the strategy factory that is making the switcher balls' current strategy.
			 * @return An IStrategyFactory that makes the current switcher balls' strategy.
			 */
			@Override
			public IStrategyFac getSwitcherFac() {
				return model.getSwitcherFac();
			}

			@Override
			public IStrategyFac addPaintFactory(String text) {
				return model.makePaintFactory(text);
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjPNJQuLEei-6eSvavMBRQ" name="start" specification="_IZO8kQuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>view.start();
		model.start();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IZNHYAuLEei-6eSvavMBRQ" name="main" isStatic="true" method="_IjPNIAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjhhAQuLEei-6eSvavMBRQ">
            <body>This main method starts the BallWorldController.
	 * @param args Command line arguments.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IZNHYQuLEei-6eSvavMBRQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IZNucAuLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_IZOVgQuLEei-6eSvavMBRQ" name="BallWorldController" method="_IjPNIwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IZOVgguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IZOVgwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_IjhhAguLEei-6eSvavMBRQ">
            <body>This is the constructor for BallWorldController, which
	 * creates anonymous inner classes for the adapters, and defines their functions.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IZO8kAuLEei-6eSvavMBRQ" type="_IZL5QAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IZO8kQuLEei-6eSvavMBRQ" name="start" method="_IjPNJQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjhhAwuLEei-6eSvavMBRQ">
            <body>This function starts the view and model.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij1DAAuLEei-6eSvavMBRQ" name="" memberEnd="_Ij1DAQuLEei-6eSvavMBRQ _Iix6IAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij1DAQuLEei-6eSvavMBRQ" name="" type="_IZL5QAuLEei-6eSvavMBRQ" association="_Ij1DAAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij1DAwuLEei-6eSvavMBRQ" name="" memberEnd="_Ij1DBAuLEei-6eSvavMBRQ _IiyhMQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij1DBAuLEei-6eSvavMBRQ" name="" type="_IZL5QAuLEei-6eSvavMBRQ" association="_Ij1DAwuLEei-6eSvavMBRQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_IWET0AuLEei-6eSvavMBRQ" name="util">
      <packagedElement xmi:type="uml:Class" xmi:id="_Ia_QEAuLEei-6eSvavMBRQ" name="Dispatcher">
        <ownedComment xmi:id="_Ijo1yAuLEei-6eSvavMBRQ">
          <body>A simplified Observable class that immediately notifies its Observers when its
notifyAll() method is called. The changed state of the Dispatcher does not need
to be separately set.
@author sn32, kyl3</body>
        </ownedComment>
        <generalization xmi:id="_IieYIguLEei-6eSvavMBRQ" general="_Igv50QuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjcogAuLEei-6eSvavMBRQ" name="notifyAll" specification="_IieYIAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjcogQuLEei-6eSvavMBRQ" name="param" type="_IiOggAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>setChanged();
     notifyObservers(param);
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IieYIAuLEei-6eSvavMBRQ" name="notifyAll" method="_IjcogAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IieYIQuLEei-6eSvavMBRQ" name="param" type="_IiOggAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_IbAeMAuLEei-6eSvavMBRQ" name="IRandomizer">
        <ownedOperation xmi:id="_IbBsUAuLEei-6eSvavMBRQ" name="randomInt">
          <ownedComment xmi:id="_Ijpc0AuLEei-6eSvavMBRQ">
            <body>Returns a random integer greater than or equal to min and less than or equal to max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return an int subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_IbBsUQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IbBsUguLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IbBsUwuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_IbCTYAuLEei-6eSvavMBRQ" name="randomDouble">
          <ownedComment xmi:id="_Ijpc0QuLEei-6eSvavMBRQ">
            <body>Returns a random double greater than or equal to min and less than max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return a double subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_IbCTYQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IbCTYguLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IbCTYwuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_IbDhgAuLEei-6eSvavMBRQ" name="randomColor">
          <ownedComment xmi:id="_Ijpc1QuLEei-6eSvavMBRQ">
            <body>Generates a random color
	 * @return a random Color object</body>
          </ownedComment>
          <ownedParameter xmi:id="_IihbdAuLEei-6eSvavMBRQ" type="_IgursAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Iie_MAuLEei-6eSvavMBRQ" name="randomLoc">
          <ownedComment xmi:id="_Ijo1yQuLEei-6eSvavMBRQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than rect.width
	 * and 0 less than y less than rect.height.
	 * @param rect The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_Iie_MQuLEei-6eSvavMBRQ" name="rect" type="_Ig7gAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_Iie_MguLEei-6eSvavMBRQ" type="_IgvSwQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IifmQQuLEei-6eSvavMBRQ" name="randomLoc">
          <ownedComment xmi:id="_Ijo1yguLEei-6eSvavMBRQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than dim.width
	 * and 0 less than y less than dim.height.
	 * @param dim The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_IifmQguLEei-6eSvavMBRQ" name="dim" type="_Iie_MwuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IigNUAuLEei-6eSvavMBRQ" type="_IgvSwQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IigNUQuLEei-6eSvavMBRQ" name="randomVel">
          <ownedComment xmi:id="_Ijpc0guLEei-6eSvavMBRQ">
            <body>Returns a random velocity (as a Point) subject to the constraint that the absolute value
	 * of the velocity (speed) within the bound (inclusive) defined by rect. Thus the resultant
	 * velocity may be negative. The given Rectangle should use all positive values.
	 * @param rect The bounds for the absolute value of the velocity in the x and y directions.  
	 * @return a Point object with x and y subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IigNUguLEei-6eSvavMBRQ" name="rect" type="_Ig7gAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IigNUwuLEei-6eSvavMBRQ" type="_IgvSwQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Iig0YAuLEei-6eSvavMBRQ" name="randomDim">
          <ownedComment xmi:id="_Ijpc0wuLEei-6eSvavMBRQ">
            <body>Returns a random square Dimension, whose width is maxDim.width/2 less than width less than maxDim.width
	 * @param maxDim  The bounds on the side of the created Dimension.
	 * @return A random square Dimension subject to the given bound</body>
          </ownedComment>
          <ownedParameter xmi:id="_Iig0YQuLEei-6eSvavMBRQ" name="maxDim" type="_Iie_MwuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_Iig0YguLEei-6eSvavMBRQ" type="_Iie_MwuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IihbcAuLEei-6eSvavMBRQ" name="randomBounds">
          <ownedComment xmi:id="_Ijpc1AuLEei-6eSvavMBRQ">
            <body>Generates a randomly located and sized rectangle
	 * @param rect  The bounds for the location of the created rectangle
	 * @param maxDim  The bounds for the dimensions of the create rectangle
	 * @return A Rectangle with location and dimensions subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IihbcQuLEei-6eSvavMBRQ" name="rect" type="_Ig7gAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IihbcguLEei-6eSvavMBRQ" name="maxDim" type="_Iie_MwuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IihbcwuLEei-6eSvavMBRQ" type="_Ig7gAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiiCgAuLEei-6eSvavMBRQ" name="randomChoice">
          <ownedComment xmi:id="_Ijpc1guLEei-6eSvavMBRQ">
            <body>Returns a random choice of one of two objects, x and y, where probX is the probability 
	 * that x will be picked (0 less than x less than 1).
	 * @param x The first of two choices
	 * @param y The second of two choices
	 * @param probX  The probability of the first choice
	 * @return Either x or y as per the probability of choosing them.</body>
          </ownedComment>
          <ownedParameter xmi:id="_IiiCgQuLEei-6eSvavMBRQ" name="x" type="_IiOggAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiiCgguLEei-6eSvavMBRQ" name="y" type="_IiOggAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiiCgwuLEei-6eSvavMBRQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IiiChAuLEei-6eSvavMBRQ" type="_IiOggAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IbHL4AuLEei-6eSvavMBRQ" name="Randomizer">
        <ownedComment xmi:id="_Ijpc1wuLEei-6eSvavMBRQ">
          <body>Utility class that supplies  class routines for generating various random values</body>
        </ownedComment>
        <ownedAttribute xmi:id="_IjBxwAuLEei-6eSvavMBRQ" name="Singleton" isStatic="true" type="_IbHL4AuLEei-6eSvavMBRQ" association="_Ij8-0wuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjBxwQuLEei-6eSvavMBRQ" value="new Randomizer()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_Ih2tEAuLEei-6eSvavMBRQ" client="_IbHL4AuLEei-6eSvavMBRQ" supplier="_IbAeMAuLEei-6eSvavMBRQ" contract="_IbAeMAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjcogguLEei-6eSvavMBRQ" name="randomLoc" specification="_IiipkAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjcogwuLEei-6eSvavMBRQ" name="rect" type="_Ig7gAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjcohAuLEei-6eSvavMBRQ" type="_IgvSwQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, rect.width), randomInt(0, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjcohQuLEei-6eSvavMBRQ" name="randomLoc" specification="_IijQoAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjcohguLEei-6eSvavMBRQ" name="dim" type="_Iie_MwuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjcohwuLEei-6eSvavMBRQ" type="_IgvSwQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, dim.width), randomInt(0, dim.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjcoiAuLEei-6eSvavMBRQ" name="randomInt" specification="_IbJBEAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjcoiQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjcoiguLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjcoiwuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int)Math.floor((Math.random()*(1+max-min))+min);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjdPkAuLEei-6eSvavMBRQ" name="randomDouble" specification="_IbJoIAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjdPkQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjdPkguLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjdPkwuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return (Math.random()*(max-min))+min;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjdPlAuLEei-6eSvavMBRQ" name="randomVel" specification="_Iij3sAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjdPlQuLEei-6eSvavMBRQ" name="rect" type="_Ig7gAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjdPlguLEei-6eSvavMBRQ" type="_IgvSwQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return (new Point (randomInt(-rect.width, rect.width), randomInt(-rect.height, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjdPlwuLEei-6eSvavMBRQ" name="randomDim" specification="_Iij3swuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjdPmAuLEei-6eSvavMBRQ" name="maxDim" type="_Iie_MwuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjdPmQuLEei-6eSvavMBRQ" type="_Iie_MwuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>int x =  randomInt(maxDim.width/2,maxDim.width);
		return new Dimension(x,x);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjdPmguLEei-6eSvavMBRQ" name="randomBounds" specification="_IikewAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjdPmwuLEei-6eSvavMBRQ" name="rect" type="_Ig7gAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjdPnAuLEei-6eSvavMBRQ" name="maxDim" type="_Iie_MwuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IjdPnQuLEei-6eSvavMBRQ" type="_Ig7gAAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return new Rectangle(randomLoc(rect), randomDim(maxDim));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ijd2oAuLEei-6eSvavMBRQ" name="randomColor" specification="_IbKPMAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_Ijd2oQuLEei-6eSvavMBRQ" type="_IgursAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return new Color( randomInt(0,255),randomInt(0,255),randomInt(0,255));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ijd2oguLEei-6eSvavMBRQ" name="randomChoice" specification="_IilF0QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_Ijd2owuLEei-6eSvavMBRQ" name="x" type="_IiOggAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_Ijd2pAuLEei-6eSvavMBRQ" name="y" type="_IiOggAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_Ijd2pQuLEei-6eSvavMBRQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Ijd2pguLEei-6eSvavMBRQ" type="_IiOggAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return (Math.random() &lt; probX) ? x: y;

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IbHy8AuLEei-6eSvavMBRQ" name="Randomizer" visibility="private">
          <eAnnotations xmi:id="_IbHy8QuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IbHy8guLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_IbIaAQuLEei-6eSvavMBRQ" type="_IbHL4AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IbJBEAuLEei-6eSvavMBRQ" name="randomInt" method="_IjcoiAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IbJBEQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IbJBEguLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IbJBEwuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_IbJoIAuLEei-6eSvavMBRQ" name="randomDouble" method="_IjdPkAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IbJoIQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IbJoIguLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IbJoIwuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_IbKPMAuLEei-6eSvavMBRQ" name="randomColor" method="_Ijd2oAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IilF0AuLEei-6eSvavMBRQ" type="_IgursAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IiipkAuLEei-6eSvavMBRQ" name="randomLoc" method="_IjcogguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IiipkQuLEei-6eSvavMBRQ" name="rect" type="_Ig7gAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IiipkguLEei-6eSvavMBRQ" type="_IgvSwQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IijQoAuLEei-6eSvavMBRQ" name="randomLoc" method="_IjcohQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IijQoQuLEei-6eSvavMBRQ" name="dim" type="_Iie_MwuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IijQoguLEei-6eSvavMBRQ" type="_IgvSwQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Iij3sAuLEei-6eSvavMBRQ" name="randomVel" method="_IjdPlAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_Iij3sQuLEei-6eSvavMBRQ" name="rect" type="_Ig7gAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_Iij3sguLEei-6eSvavMBRQ" type="_IgvSwQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Iij3swuLEei-6eSvavMBRQ" name="randomDim" method="_IjdPlwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_Iij3tAuLEei-6eSvavMBRQ" name="maxDim" type="_Iie_MwuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_Iij3tQuLEei-6eSvavMBRQ" type="_Iie_MwuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IikewAuLEei-6eSvavMBRQ" name="randomBounds" method="_IjdPmguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IikewQuLEei-6eSvavMBRQ" name="rect" type="_Ig7gAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IikewguLEei-6eSvavMBRQ" name="maxDim" type="_Iie_MwuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IikewwuLEei-6eSvavMBRQ" type="_Ig7gAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IilF0QuLEei-6eSvavMBRQ" name="randomChoice" method="_Ijd2oguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IilF0guLEei-6eSvavMBRQ" name="x" type="_IiOggAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IilF0wuLEei-6eSvavMBRQ" name="y" type="_IiOggAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_IilF1AuLEei-6eSvavMBRQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IilF1QuLEei-6eSvavMBRQ" type="_IiOggAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_IbQ84AuLEei-6eSvavMBRQ" name="SineMaker">
        <ownedComment xmi:id="_Ijpc2AuLEei-6eSvavMBRQ">
          <body>A utility class that can be used to create smoothly varying sinusoidal
numerical data.
Note that this is not a singleton class nor does it have static methods as
its behavior depends on the minimum, maximum and delta values given to 
its constructor.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_IjCY0AuLEei-6eSvavMBRQ" name="_mid" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjCY0guLEei-6eSvavMBRQ" name="_ampl" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjC_4QuLEei-6eSvavMBRQ" name="_delta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_IjC_4wuLEei-6eSvavMBRQ" name="_theta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_IjC_5AuLEei-6eSvavMBRQ" value="-Math.PI/2.0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjedsAuLEei-6eSvavMBRQ" name="SineMaker" specification="_IbRj8AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjedsQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjedsguLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjedswuLEei-6eSvavMBRQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IjedtAuLEei-6eSvavMBRQ" type="_IbQ84AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>_mid = (max+min)/2.0;
		_ampl = (max-min)/2.0;
		_delta = delta;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjedtQuLEei-6eSvavMBRQ" name="getDblVal" specification="_IbSLBguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjedtguLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double result = _mid + _ampl*Math.sin(_theta);
		_theta += _delta; // shorthand for _theta = _theta + _delta
		return result;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IjedtwuLEei-6eSvavMBRQ" name="getIntVal" specification="_IbSyEQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_IjeduAuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int) Math.round(getDblVal());
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_IbRj8AuLEei-6eSvavMBRQ" name="SineMaker" method="_IjedsAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_IbSLAwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_IbSLBAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_Ijpc2QuLEei-6eSvavMBRQ">
            <body>The constructor takes several values to control the object's behavior.
	 * @param min The minimum and initial value to produce.
	 * @param max The maximum value to produce.
	 * @param delta The amount in radians that the generating angle is incremented each time
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_IbSLAAuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IbSLAQuLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IbSLAguLEei-6eSvavMBRQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_IbSLBQuLEei-6eSvavMBRQ" type="_IbQ84AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_IbSLBguLEei-6eSvavMBRQ" name="getDblVal" method="_IjedtQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_Ijpc2guLEei-6eSvavMBRQ">
            <body>Returns a different value each time it is called.  The value varies smoothly in a 
	 * sinusoidal fashion, incrementing each time as per the above specified delta 
	 * angle increase.
	 * @return the next value as a double</body>
          </ownedComment>
          <ownedParameter xmi:id="_IbSyEAuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_IbSyEQuLEei-6eSvavMBRQ" name="getIntVal" method="_IjedtwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_IjqD4AuLEei-6eSvavMBRQ">
            <body>Same as getDblVal, but returns the result rounded to the nearest integer.
	 * Note that getDblVal and getIntVal are not independent as getIntVal merely calls
	 * getDblVal.
	 * @return the next value as an int</body>
          </ownedComment>
          <ownedParameter xmi:id="_IbSyEguLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ij8-0wuLEei-6eSvavMBRQ" name="" memberEnd="_Ij8-1AuLEei-6eSvavMBRQ _IjBxwAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_Ij8-1AuLEei-6eSvavMBRQ" name="" type="_IbHL4AuLEei-6eSvavMBRQ" association="_Ij8-0wuLEei-6eSvavMBRQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_IWULcAuLEei-6eSvavMBRQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_IWULcQuLEei-6eSvavMBRQ" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_Ig8uIAuLEei-6eSvavMBRQ" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ih5JUQuLEei-6eSvavMBRQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ih5wYQuLEei-6eSvavMBRQ" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ih5wYwuLEei-6eSvavMBRQ" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ih6XcQuLEei-6eSvavMBRQ" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ih7lkQuLEei-6eSvavMBRQ" name="JComboBox"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_Hsi1sAuLEei-6eSvavMBRQ">
      <eAnnotations xmi:id="_Hso8UAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_HspjYAuLEei-6eSvavMBRQ" base_Package="_Hm45oAuLEei-6eSvavMBRQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Array xmi:id="_IZOVgAuLEei-6eSvavMBRQ" base_Element="_IZNHYQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IZRY0QuLEei-6eSvavMBRQ" base_Element="_IZQxwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IZmI8wuLEei-6eSvavMBRQ" base_Element="_IZmI8AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IZ98YAuLEei-6eSvavMBRQ" base_Element="_IZ8uQAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_IZ-jcAuLEei-6eSvavMBRQ" base_Element="_IZ8uQAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_IZ-jcQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IaDb8AuLEei-6eSvavMBRQ" base_Element="_IaCN0AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IaLXwguLEei-6eSvavMBRQ" base_Element="_IaLXwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IaL-0guLEei-6eSvavMBRQ" base_Element="_IaL-0AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IacdgQuLEei-6eSvavMBRQ" base_Element="_Iab2cAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IaoqxQuLEei-6eSvavMBRQ" base_Element="_IaoqwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_IapR0AuLEei-6eSvavMBRQ" base_Element="_IaoqwAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_IapR0QuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IbIaAAuLEei-6eSvavMBRQ" base_Element="_IbHy8AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_IbUnQAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_IbUAMAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_Ibke4AuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_IbjQwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IgjskAuLEei-6eSvavMBRQ" base_Element="_IgjFgAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Igk6sAuLEei-6eSvavMBRQ" base_Element="_IgkToAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IglhwAuLEei-6eSvavMBRQ" base_Element="_Igk6sQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ign-AAuLEei-6eSvavMBRQ" base_Element="_Igmv4AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Igs2gAuLEei-6eSvavMBRQ" base_Element="_IgsPcAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IgvSwAuLEei-6eSvavMBRQ" base_Element="_IgursAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Igv50AuLEei-6eSvavMBRQ" base_Element="_IgvSwQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Igwg4AuLEei-6eSvavMBRQ" base_Element="_Igv50QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IgxH8AuLEei-6eSvavMBRQ" base_Element="_Igwg4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ig6R4guLEei-6eSvavMBRQ" base_Element="_Ig6R4AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_Ig648AuLEei-6eSvavMBRQ" base_Element="_Ig6R4AuLEei-6eSvavMBRQ">
    <annotations xmi:id="_Ig648QuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Ig8HEAuLEei-6eSvavMBRQ" base_Element="_Ig7gAAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ig8uIQuLEei-6eSvavMBRQ" base_Element="_Ig8uIAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IhDb0wuLEei-6eSvavMBRQ" base_Element="_IhDb0AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_IhEC4AuLEei-6eSvavMBRQ" base_Element="_IhDb0AuLEei-6eSvavMBRQ">
    <annotations xmi:id="_IhEC4QuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IhFRAQuLEei-6eSvavMBRQ" base_Element="_IhEp8QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_IhF4EAuLEei-6eSvavMBRQ" base_Element="_IhEp8QuLEei-6eSvavMBRQ">
    <annotations xmi:id="_IhF4EQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IhHGMAuLEei-6eSvavMBRQ" base_Element="_IhGfIQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_IhHtQAuLEei-6eSvavMBRQ" base_Element="_IhGfIQuLEei-6eSvavMBRQ">
    <annotations xmi:id="_IhHtQQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_IhKJgAuLEei-6eSvavMBRQ" base_Element="_IhJicAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IhKwkAuLEei-6eSvavMBRQ" base_Element="_IhKJgQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IhMlwAuLEei-6eSvavMBRQ" base_Element="_IhL-sAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_IhMlwQuLEei-6eSvavMBRQ" base_Element="_IhL-sAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_IhNM0AuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_IhReQguLEei-6eSvavMBRQ" base_Element="_IhQ3MAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IhVIoAuLEei-6eSvavMBRQ" base_Element="_IhUhkAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IhVvsAuLEei-6eSvavMBRQ" base_Element="_IhVIoQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IhWWwAuLEei-6eSvavMBRQ" base_Element="_IhVvsQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IhW90AuLEei-6eSvavMBRQ" base_Element="_IhWWwQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IhjyIwuLEei-6eSvavMBRQ" base_Element="_IhjyIAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_IhkZMAuLEei-6eSvavMBRQ" base_Element="_IhjyIAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_IhkZMQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IhoqowuLEei-6eSvavMBRQ" base_Element="_IhoqoAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_IhpRsAuLEei-6eSvavMBRQ" base_Element="_IhoqoAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_IhpRsQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ihp4wguLEei-6eSvavMBRQ" base_Element="_Ihp4wAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IhrG4wuLEei-6eSvavMBRQ" base_Element="_IhrG4AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_Ihrt8AuLEei-6eSvavMBRQ" base_Element="_IhrG4AuLEei-6eSvavMBRQ">
    <annotations xmi:id="_Ihrt8QuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IhsVAwuLEei-6eSvavMBRQ" base_Element="_IhsVAAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_Ihs8EAuLEei-6eSvavMBRQ" base_Element="_IhsVAAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_Ihs8EQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IhtjIwuLEei-6eSvavMBRQ" base_Element="_IhtjIAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_IhuKMAuLEei-6eSvavMBRQ" base_Element="_IhtjIAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_IhuKMQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IhvYUwuLEei-6eSvavMBRQ" base_Element="_IhvYUAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_Ihv_YAuLEei-6eSvavMBRQ" base_Element="_IhvYUAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_Ihv_YQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ih1e8AuLEei-6eSvavMBRQ" base_Element="_Ih034QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_Ih1e8QuLEei-6eSvavMBRQ" base_Element="_Ih034QuLEei-6eSvavMBRQ">
    <annotations xmi:id="_Ih1e8guLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Ih5JUAuLEei-6eSvavMBRQ" base_Element="_Ih4iQAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ih5wYAuLEei-6eSvavMBRQ" base_Element="_Ih5JUQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ih5wYguLEei-6eSvavMBRQ" base_Element="_Ih5wYQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ih6XcAuLEei-6eSvavMBRQ" base_Element="_Ih5wYwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ih6-gAuLEei-6eSvavMBRQ" base_Element="_Ih6XcQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ih6-gguLEei-6eSvavMBRQ" base_Element="_Ih6-gQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ih7lkAuLEei-6eSvavMBRQ" base_Element="_Ih6-gwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ih7lkguLEei-6eSvavMBRQ" base_Element="_Ih7lkQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ih8MoQuLEei-6eSvavMBRQ" base_Element="_Ih8MoAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ih8MowuLEei-6eSvavMBRQ" base_Element="_Ih8MoguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_Ih-B0AuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_Ih9awQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IiK2IwuLEei-6eSvavMBRQ" base_Element="_IiK2IAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IiOggQuLEei-6eSvavMBRQ" base_Element="_IiOggAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IiQ8wQuLEei-6eSvavMBRQ" base_Element="_IiQVsAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_IiQ8wguLEei-6eSvavMBRQ" base_Element="_IiQVsAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_IiQ8wwuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IiV1QAuLEei-6eSvavMBRQ" base_Element="_IiVOMAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_IiV1QQuLEei-6eSvavMBRQ" base_Element="_IiVOMAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_IiV1QguLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IiY4kAuLEei-6eSvavMBRQ" base_Element="_IiYRgAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_IiY4kQuLEei-6eSvavMBRQ" base_Element="_IiYRgAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_IiY4kguLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Iici8AuLEei-6eSvavMBRQ" base_Element="_Iib74AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_Iici8QuLEei-6eSvavMBRQ" base_Element="_Iib74AuLEei-6eSvavMBRQ">
    <annotations xmi:id="_Iici8guLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_IifmQAuLEei-6eSvavMBRQ" base_Element="_Iie_MwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IirzgAuLEei-6eSvavMBRQ" base_Element="_IirMcguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IiyhMAuLEei-6eSvavMBRQ" base_Element="_Iix6IAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_IizIQAuLEei-6eSvavMBRQ" genericsValue="?" base_Element="_IiyhMQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IizIQQuLEei-6eSvavMBRQ" base_Element="_IiyhMQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IizvUAuLEei-6eSvavMBRQ" base_Element="_IizIQguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ii1kgAuLEei-6eSvavMBRQ" base_Element="_Ii09cQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ii2LkAuLEei-6eSvavMBRQ" base_Element="_Ii1kgwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ii2yoguLEei-6eSvavMBRQ" base_Element="_Ii2yoAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ii4AwguLEei-6eSvavMBRQ" base_Element="_Ii4AwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ii4n0QuLEei-6eSvavMBRQ" base_Element="_Ii4AwwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ii4n1AuLEei-6eSvavMBRQ" base_Element="_Ii4n0guLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ii5O4guLEei-6eSvavMBRQ" base_Element="_Ii5O4AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ii7EEAuLEei-6eSvavMBRQ" base_Element="_Ii6dAAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ii7rIQuLEei-6eSvavMBRQ" base_Element="_Ii7EEQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ii8SMAuLEei-6eSvavMBRQ" base_Element="_Ii7rIguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ii85QQuLEei-6eSvavMBRQ" base_Element="_Ii85QAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ii85QwuLEei-6eSvavMBRQ" base_Element="_Ii85QguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Array xmi:id="_Ii-HYQuLEei-6eSvavMBRQ" base_Element="_Ii9gUAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ii-HYguLEei-6eSvavMBRQ" base_Element="_Ii9gUAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_Ii-ucQuLEei-6eSvavMBRQ" base_Property="_Ii-ucAuLEei-6eSvavMBRQ" siblings="_IjnnpAuLEei-6eSvavMBRQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ii_VgAuLEei-6eSvavMBRQ" base_Element="_Ii-ucAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ii_8kQuLEei-6eSvavMBRQ" base_Element="_Ii_8kAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjAjoguLEei-6eSvavMBRQ" base_Element="_IjAjoAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjAjpQuLEei-6eSvavMBRQ" base_Element="_IjAjowuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjBKsguLEei-6eSvavMBRQ" base_Element="_IjBKsAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjBxwguLEei-6eSvavMBRQ" base_Element="_IjBxwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjCY0QuLEei-6eSvavMBRQ" base_Element="_IjCY0AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjC_4AuLEei-6eSvavMBRQ" base_Element="_IjCY0guLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjC_4guLEei-6eSvavMBRQ" base_Element="_IjC_4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjDm8AuLEei-6eSvavMBRQ" base_Element="_IjC_4wuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjEOAAuLEei-6eSvavMBRQ" base_Element="_IjDm8wuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjEOAwuLEei-6eSvavMBRQ" base_Element="_IjEOAQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjE1EguLEei-6eSvavMBRQ" base_Element="_IjE1EAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjE1FQuLEei-6eSvavMBRQ" base_Element="_IjE1EwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_IjFcIQuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_IjFcIAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjFcIguLEei-6eSvavMBRQ" base_Element="_IjFcIAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjGDMguLEei-6eSvavMBRQ" base_Element="_IjGDMAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjGDNQuLEei-6eSvavMBRQ" base_Element="_IjGDMwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjGqQQuLEei-6eSvavMBRQ" base_Element="_IjGDNguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjGqRAuLEei-6eSvavMBRQ" base_Element="_IjGqQguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjHRUQuLEei-6eSvavMBRQ" base_Element="_IjGqRQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjHRVAuLEei-6eSvavMBRQ" base_Element="_IjHRUguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_IjH4YAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_IjHRVQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjH4YguLEei-6eSvavMBRQ" base_Element="_IjHRVQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_IjIfcAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_IjH4YwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjIfcguLEei-6eSvavMBRQ" base_Element="_IjH4YwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjJGgguLEei-6eSvavMBRQ" base_Element="_IjJGgAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjJtkAuLEei-6eSvavMBRQ" base_Element="_IjJGgwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjJtkwuLEei-6eSvavMBRQ" base_Element="_IjJtkQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjKUoAuLEei-6eSvavMBRQ" base_Element="_IjJtlAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjKUowuLEei-6eSvavMBRQ" base_Element="_IjKUoQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjK7sQuLEei-6eSvavMBRQ" base_Element="_IjKUpAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_IjLiwAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_IjK7sguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjLiwguLEei-6eSvavMBRQ" base_Element="_IjK7sguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_IjnnpQuLEei-6eSvavMBRQ" base_Property="_IjnnpAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_IjoOsAuLEei-6eSvavMBRQ" base_Element="_IjnnpAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IjymwAuLEei-6eSvavMBRQ" base_Element="_Ijx_sAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IjzN0AuLEei-6eSvavMBRQ" base_Element="_IjymwQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IjzN0wuLEei-6eSvavMBRQ" base_Element="_IjzN0QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ijz04guLEei-6eSvavMBRQ" base_Element="_Ijz04AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij0b8guLEei-6eSvavMBRQ" base_Element="_Ij0b8AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij1DAguLEei-6eSvavMBRQ" base_Element="_Ij1DAAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij1qEAuLEei-6eSvavMBRQ" base_Element="_Ij1DAwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij2RIAuLEei-6eSvavMBRQ" base_Element="_Ij1qEQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij24MAuLEei-6eSvavMBRQ" base_Element="_Ij2RIQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij24MwuLEei-6eSvavMBRQ" base_Element="_Ij24MQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij3fQguLEei-6eSvavMBRQ" base_Element="_Ij3fQAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij4GUAuLEei-6eSvavMBRQ" base_Element="_Ij3fQwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij4tYAuLEei-6eSvavMBRQ" base_Element="_Ij4GUQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij5UcAuLEei-6eSvavMBRQ" base_Element="_Ij4tYQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij5UcwuLEei-6eSvavMBRQ" base_Element="_Ij5UcQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij57gQuLEei-6eSvavMBRQ" base_Element="_Ij5UdAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij6ikAuLEei-6eSvavMBRQ" base_Element="_Ij57gguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij7JoAuLEei-6eSvavMBRQ" base_Element="_Ij6ikQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij7wsAuLEei-6eSvavMBRQ" base_Element="_Ij7JoQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij8XwAuLEei-6eSvavMBRQ" base_Element="_Ij7wsQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij8XwwuLEei-6eSvavMBRQ" base_Element="_Ij8XwQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij8-0guLEei-6eSvavMBRQ" base_Element="_Ij8-0AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij9l4AuLEei-6eSvavMBRQ" base_Element="_Ij8-0wuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij-M8AuLEei-6eSvavMBRQ" base_Element="_Ij9l4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij-0AAuLEei-6eSvavMBRQ" base_Element="_Ij-M8QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij-0AwuLEei-6eSvavMBRQ" base_Element="_Ij-0AQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_Ij_bEguLEei-6eSvavMBRQ" base_Element="_Ij_bEAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkACIAuLEei-6eSvavMBRQ" base_Element="_Ij_bEwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkApMAuLEei-6eSvavMBRQ" base_Element="_IkACIQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkBQQAuLEei-6eSvavMBRQ" base_Element="_IkApMQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkBQQwuLEei-6eSvavMBRQ" base_Element="_IkBQQQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkB3UguLEei-6eSvavMBRQ" base_Element="_IkB3UAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkCeYAuLEei-6eSvavMBRQ" base_Element="_IkB3UwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkDFcAuLEei-6eSvavMBRQ" base_Element="_IkCeYQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkDsgAuLEei-6eSvavMBRQ" base_Element="_IkDFcQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkETkAuLEei-6eSvavMBRQ" base_Element="_IkDsgQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkE6oAuLEei-6eSvavMBRQ" base_Element="_IkETkQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkE6owuLEei-6eSvavMBRQ" base_Element="_IkE6oQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkFhsguLEei-6eSvavMBRQ" base_Element="_IkFhsAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkGIwAuLEei-6eSvavMBRQ" base_Element="_IkFhswuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkGv0AuLEei-6eSvavMBRQ" base_Element="_IkGIwQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkHW4AuLEei-6eSvavMBRQ" base_Element="_IkGv0QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkH98AuLEei-6eSvavMBRQ" base_Element="_IkHW4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_IkIlAAuLEei-6eSvavMBRQ" base_Element="_IkH98QuLEei-6eSvavMBRQ"/>
</xmi:XMI>
