<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_gDBRUAuLEei-6eSvavMBRQ" name="util">
    <eAnnotations xmi:id="_gL3rUAuLEei-6eSvavMBRQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_gL3rUQuLEei-6eSvavMBRQ" source="codegen">
        <details xmi:id="_gL3rUguLEei-6eSvavMBRQ" key="codegenDirectory" value="/HW04/src"/>
        <details xmi:id="_g4YMAAuLEei-6eSvavMBRQ" key="AssociatedSourceCode" value="/HW04/src/controller/BallWorldController.java;133705207/1;/HW04/src/model/APaintStrategy.java;1740869287/1;/HW04/src/model/Ball.java;544139014/1;/HW04/src/model/BallPaintStrategy.java;538568874/1;/HW04/src/model/BallWorldModel.java;3314949356/1;/HW04/src/model/BreathingStrategy.java;569949667/1;/HW04/src/model/ColorStrategy.java;783269627/1;/HW04/src/model/CrashStrategy.java;4279759508/1;/HW04/src/model/EarthImagePaintStrategy.java;2510652715/1;/HW04/src/model/EllipsePaintStrategy.java;292774861/1;/HW04/src/model/EllipseShapeFactory.java;1636135608/1;/HW04/src/model/FastStrategy.java;3009224450/1;/HW04/src/model/HumbirdImagePaintStrategy.java;809236240/1;/HW04/src/model/IBallCmd.java;2100560540/1;/HW04/src/model/IModel2ViewAdapter.java;715642539/1;/HW04/src/model/IPaintStrategy.java;556726924/1;/HW04/src/model/IShapeFactory.java;810833796/1;/HW04/src/model/IStrategyFac.java;3581042476/1;/HW04/src/model/IUpdateStrategy.java;1651050839/1;/HW04/src/model/ImagePaintStrategy.java;2009657845/1;/HW04/src/model/JupiterImagePaintStrategy.java;1009556515/1;/HW04/src/model/MarioImagePaintStrategy.java;3709244018/1;/HW04/src/model/MarioMarsImagePaintStrategy.java;418883682/1;/HW04/src/model/MarsImagePaintStrategy.java;165975352/1;/HW04/src/model/MultiPaintStrategy.java;695036297/1;/HW04/src/model/MultiStrategy.java;1636671415/1;/HW04/src/model/ReefImagePaintStrategy.java;4190647735/1;/HW04/src/model/SaturnImagePaintStrategy.java;2198019520/1;/HW04/src/model/ShapePaintStrategy.java;851889235/1;/HW04/src/model/SheepImagePaintStrategy.java;3440385665/1;/HW04/src/model/SoccerImagePaintStrategy.java;2105681093/1;/HW04/src/model/SonicImagePaintStrategy.java;867235411/1;/HW04/src/model/SpawnStrategy.java;3065061180/1;/HW04/src/model/SquarePaintStrategy.java;3526266484/1;/HW04/src/model/StraightStrategy.java;3914615527/1;/HW04/src/model/SwellStrategy.java;1352457759/1;/HW04/src/model/SwitcherStrategy.java;2480375116/1;/HW04/src/model/TeleportStrategy.java;2565727986/1;/HW04/src/model/UprightImagePaintStrategy.java;3704479299/1;/HW04/src/model/VenusImagePaintStrategy.java;2287123255/1;/HW04/src/model/WiggleStrategy.java;4246409471/1;/HW04/src/util/Dispatcher.java;77051068/1;/HW04/src/util/IRandomizer.java;4224991458/1;/HW04/src/util/Randomizer.java;1541548940/1;/HW04/src/util/SineMaker.java;1378225368/1;/HW04/src/view/BallWorldView.java;1506153628/1;/HW04/src/view/IView2ModelAdapter.java;637323524/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_gk3aIAuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_gk3aIQuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_gk3aIguLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_gk3aIwuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_gk3aJAuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_gk3aJQuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_gk4BMAuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_gk4BMQuLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_gk4BMguLEei-6eSvavMBRQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_gk4oQAuLEei-6eSvavMBRQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_gk4oQQuLEei-6eSvavMBRQ" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_gk85sAuLEei-6eSvavMBRQ" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_gtH-QAuLEei-6eSvavMBRQ" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_gtZEAAuLEei-6eSvavMBRQ" name="Ellipse2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_glvj4AuLEei-6eSvavMBRQ" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_gtyFkQuLEei-6eSvavMBRQ" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_gtysoAuLEei-6eSvavMBRQ" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtFiAAuLEei-6eSvavMBRQ" name="Container"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtGJEQuLEei-6eSvavMBRQ" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtGwIQuLEei-6eSvavMBRQ" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtKagAuLEei-6eSvavMBRQ" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtLBkQuLEei-6eSvavMBRQ" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtRvQguLEei-6eSvavMBRQ" name="Rectangle"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_gtYc8AuLEei-6eSvavMBRQ" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtcuYAuLEei-6eSvavMBRQ" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtcuYguLEei-6eSvavMBRQ" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtdVcQuLEei-6eSvavMBRQ" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtd8gQuLEei-6eSvavMBRQ" name="Toolkit"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtvCQAuLEei-6eSvavMBRQ" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtzTsQuLEei-6eSvavMBRQ" name="FlowLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtz6wQuLEei-6eSvavMBRQ" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_guTqAQuLEei-6eSvavMBRQ" name="Dimension"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_gk_9AAuLEei-6eSvavMBRQ" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_gtLooQuLEei-6eSvavMBRQ" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_gtMPsQuLEei-6eSvavMBRQ" name="Observer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_guFnkAuLEei-6eSvavMBRQ" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_guFnkQuLEei-6eSvavMBRQ" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gk5PUAuLEei-6eSvavMBRQ" name="model">
      <packagedElement xmi:type="uml:Class" xmi:id="_gmd8oAuLEei-6eSvavMBRQ" name="APaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_gvQsRAuLEei-6eSvavMBRQ">
          <body>This is an abstract class that defines the top level affine transform based
paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_gumk8QuLEei-6eSvavMBRQ" name="at" visibility="package" type="_gtH-QAuLEei-6eSvavMBRQ" association="_gwKEIQuLEei-6eSvavMBRQ"/>
        <interfaceRealization xmi:id="_gtIlUQuLEei-6eSvavMBRQ" client="_gmd8oAuLEei-6eSvavMBRQ" supplier="_gnJSEAuLEei-6eSvavMBRQ" contract="_gnJSEAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvBbsAuLEei-6eSvavMBRQ" name="APaintStrategy" specification="_guBWIAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvBbsQuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvBbsguLEei-6eSvavMBRQ" type="_gmd8oAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this.at = at;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvBbswuLEei-6eSvavMBRQ" name="paint" specification="_guB9MAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvBbtAuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvBbtQuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>double scale = ball.getRad();
		at.setToTranslation(ball.getLoc().x, ball.getLoc().y);
		at.scale(scale, scale);
		at.rotate(ball.getVel().x, ball.getVel().y);
		g.setColor(ball.getCol());    
		paintCfg(g, ball);
		paintXfrm(g, ball, at);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvBbtguLEei-6eSvavMBRQ" name="getAT" specification="_gmfx0AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvBbtwuLEei-6eSvavMBRQ" type="_gtH-QAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return this.at;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gmejsAuLEei-6eSvavMBRQ" name="APaintStrategy">
          <eAnnotations xmi:id="_gmejsQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gmejsguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gmfKwAuLEei-6eSvavMBRQ" type="_gmd8oAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gmfx0AuLEei-6eSvavMBRQ" name="getAT" method="_gvBbtguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvQsRwuLEei-6eSvavMBRQ">
            <body>This is a getter that returns the Affine Transform
	 * @return An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_guDLUAuLEei-6eSvavMBRQ" type="_gtH-QAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gtJMYAuLEei-6eSvavMBRQ" name="init">
          <ownedParameter xmi:id="_gtJMYQuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guBWIAuLEei-6eSvavMBRQ" name="APaintStrategy" method="_gvBbsAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_guBWIguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_guBWIwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_gvQsRQuLEei-6eSvavMBRQ">
            <body>This is the constructor that takes in Affine Transform.
	 * @param at</body>
          </ownedComment>
          <ownedParameter xmi:id="_guBWIQuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guBWJAuLEei-6eSvavMBRQ" type="_gmd8oAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guB9MAuLEei-6eSvavMBRQ" name="paint" method="_gvBbswuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvQsRguLEei-6eSvavMBRQ">
            <body>This function paints the ball on the passed in Graphics object.</body>
          </ownedComment>
          <ownedParameter xmi:id="_guB9MQuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guB9MguLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guCkQAuLEei-6eSvavMBRQ" name="paintCfg" visibility="protected">
          <ownedParameter xmi:id="_guCkQQuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guCkQguLEei-6eSvavMBRQ" name="host" type="_gmkqUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guDLUQuLEei-6eSvavMBRQ" name="paintXfrm" isAbstract="true">
          <ownedComment xmi:id="_gvQsSAuLEei-6eSvavMBRQ">
            <body>This function is a secondary paint operation that is the last step of the above
	 * paint method, which does not calculate its own affine transform, but instead,
	 * uses a supplied affine transform.
	 * @param g A graphics object
	 * @param host The host ball
	 * @param at An Affine Transform</body>
          </ownedComment>
          <ownedParameter xmi:id="_guDLUguLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guDLUwuLEei-6eSvavMBRQ" name="host" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guDLVAuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gmkqUAuLEei-6eSvavMBRQ" name="Ball">
        <ownedComment xmi:id="_gvQsSQuLEei-6eSvavMBRQ">
          <body>This is the Ball class, which is what is drawn on the screen, and implements
Observer to use dispatching.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_gunMAAuLEei-6eSvavMBRQ" name="col" type="_gtKagAuLEei-6eSvavMBRQ" association="_gvRTUAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_gunMAQuLEei-6eSvavMBRQ" name="loc" type="_gtLBkQuLEei-6eSvavMBRQ" association="_gvR6YAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_gunzEAuLEei-6eSvavMBRQ" name="rad" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gunzEguLEei-6eSvavMBRQ" name="vel" type="_gtLBkQuLEei-6eSvavMBRQ" association="_gvR6YguLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_gunzEwuLEei-6eSvavMBRQ" name="con" type="_gtFiAAuLEei-6eSvavMBRQ" association="_gvR6ZAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_gunzFAuLEei-6eSvavMBRQ" name="strat" visibility="private" type="_gnNjgAuLEei-6eSvavMBRQ" association="_gwKEJAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_guoaIQuLEei-6eSvavMBRQ" name="paintStrat" type="_gnJSEAuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwKrMQuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_guoaIguLEei-6eSvavMBRQ" name="itr" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gupBMAuLEei-6eSvavMBRQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gupBMguLEei-6eSvavMBRQ" name="radDelta">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_guDyYAuLEei-6eSvavMBRQ" client="_gmkqUAuLEei-6eSvavMBRQ" supplier="_gtMPsQuLEei-6eSvavMBRQ" contract="_gtMPsQuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvCCwAuLEei-6eSvavMBRQ" name="Ball" specification="_guFAgAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvCCwQuLEei-6eSvavMBRQ" name="col" type="_gtKagAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvCCwguLEei-6eSvavMBRQ" name="loc" type="_gtLBkQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvCCwwuLEei-6eSvavMBRQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvCCxAuLEei-6eSvavMBRQ" name="vel" type="_gtLBkQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvCCxQuLEei-6eSvavMBRQ" name="con" type="_gtFiAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvCCxguLEei-6eSvavMBRQ" name="updateStrat" type="_gnNjgAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvCCxwuLEei-6eSvavMBRQ" name="paintStrat" type="_gnJSEAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvCCyAuLEei-6eSvavMBRQ" type="_gmkqUAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>setCol(col);
		setLoc(loc);
		setRad(rad);
		setVel(vel);
		setCon(con);
		setStrat(updateStrat);
		setRadDelta(5);
		setPaintStrat(paintStrat);
		paintStrat.init(this);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvCCyQuLEei-6eSvavMBRQ" name="getRad" specification="_gmmfgAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvCCyguLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvCCywuLEei-6eSvavMBRQ" name="setRad" specification="_gmmfgguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvCCzAuLEei-6eSvavMBRQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.rad = rad;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvCp0AuLEei-6eSvavMBRQ" name="move" specification="_gmnGkAuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>setLoc(new Point(getLoc().x + getVel().x, getLoc().y + getVel().y));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvCp0QuLEei-6eSvavMBRQ" name="update" specification="_guGOoAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvCp0guLEei-6eSvavMBRQ" name="o" type="_gtLooQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvCp0wuLEei-6eSvavMBRQ" name="cmd" type="_guFnkQuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>((IBallCmd) cmd).apply(this, (Dispatcher) o);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvCp1AuLEei-6eSvavMBRQ" name="paint" specification="_guGOowuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvCp1QuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>getPaintStrat().paint(g, this);
//		g.setColor(this.getCol());
//		g.fillOval(this.getLoc().x - getRad(), this.getLoc().y - getRad(), getRad() * 2, getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvCp1guLEei-6eSvavMBRQ" name="getStrat" specification="_gmnGkQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvCp1wuLEei-6eSvavMBRQ" type="_gnNjgAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvCp2AuLEei-6eSvavMBRQ" name="setStrat" specification="_gtNd0QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvCp2QuLEei-6eSvavMBRQ" name="strat" type="_gnNjgAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>this.strat = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvCp2guLEei-6eSvavMBRQ" name="getItr" specification="_gmntoAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvCp2wuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvDQ4AuLEei-6eSvavMBRQ" name="setItr" specification="_gmntoguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvDQ4QuLEei-6eSvavMBRQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.itr = itr;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvDQ4guLEei-6eSvavMBRQ" name="bounce" specification="_gmntpAuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>// Boundaries of the window
		int rightWall = getCon().getWidth();
		int bottomWall = getCon().getHeight();
		int leftWall = 0;
		int topWall = 0;
		
		int leftX = getLoc().x - getRad();
		int rightX = getLoc().x + getRad();
		
		int bottomY = getLoc().y + getRad();
		int topY = getLoc().y - getRad();
		
		int maxX = rightWall - getRad();
		int minX = getRad();
		
		int maxY = bottomWall - getRad();
		int minY = getRad();

		// Collision detected with left or right wall.
		if (leftX == leftWall || rightX == rightWall) {
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond right wall.
		else if (rightX > rightWall) {
			int diff = getLoc().x - maxX;
			setLoc(new Point(maxX - diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Animation goes beyond left wall.
		else if (leftX &lt; leftWall) {
			int diff = minX - getLoc().x;
			setLoc(new Point(minX + diff, getLoc().y));
			setVel(new Point(getVel().x * -1, getVel().y));
		}
		// Collision detected with top or bottom wall.
		else if (topY == topWall || bottomY == bottomWall) {
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond bottom wall.
		else if (bottomY > bottomWall) {
			int diff = getLoc().y - maxY;
			setLoc(new Point(getLoc().x, maxY - diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
		// Animation goes beyond top wall.
		else if (topY &lt; topWall) {
			int diff = minY - getLoc().y;
			setLoc(new Point(getLoc().x, minY + diff));
			setVel(new Point(getVel().x, getVel().y * -1));
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvDQ4wuLEei-6eSvavMBRQ" name="setPaintStrat" specification="_gtOE4QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvDQ5AuLEei-6eSvavMBRQ" name="paintStrat" type="_gnJSEAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>this.paintStrat = paintStrat;
		getPaintStrat().init(this);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gmmfgAuLEei-6eSvavMBRQ" name="getRad" method="_gvCCyQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvShcguLEei-6eSvavMBRQ">
            <body>This returns the radius of the ball.
	 * @return the rad</body>
          </ownedComment>
          <ownedParameter xmi:id="_gmmfgQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gmmfgguLEei-6eSvavMBRQ" name="setRad" method="_gvCCywuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvShcwuLEei-6eSvavMBRQ">
            <body>This sets the radius of the ball.
	 * @param rad the rad to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_gmmfgwuLEei-6eSvavMBRQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gmnGkAuLEei-6eSvavMBRQ" name="move" method="_gvCp0AuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvShdAuLEei-6eSvavMBRQ">
            <body>This function tells the ball to update its current location by the respective velocity
	 * component.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_gmnGkQuLEei-6eSvavMBRQ" name="getStrat" method="_gvCp1guLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvShdwuLEei-6eSvavMBRQ">
            <body>This function returns the ball's movement strategy.
	 * @return the strat</body>
          </ownedComment>
          <ownedParameter xmi:id="_gtNd0AuLEei-6eSvavMBRQ" type="_gnNjgAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gmntoAuLEei-6eSvavMBRQ" name="getItr" method="_gvCp2guLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvSheQuLEei-6eSvavMBRQ">
            <body>This function returns the current iteration of the ball.
	 * @return the itr</body>
          </ownedComment>
          <ownedParameter xmi:id="_gmntoQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gmntoguLEei-6eSvavMBRQ" name="setItr" method="_gvDQ4AuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvSheguLEei-6eSvavMBRQ">
            <body>This function sets the current iteration of the ball.
	 * @param itr the itr to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_gmntowuLEei-6eSvavMBRQ" name="itr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gmntpAuLEei-6eSvavMBRQ" name="bounce" method="_gvDQ4guLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvShewuLEei-6eSvavMBRQ">
            <body>This function checks to see if the ball has come into contact with one of the boundaries of the 
	 *  panel. If it has, this function reverses the velocity of the ball, simulating a rebound off
	 *  of the wall. If, due to the delay of the GUI thread, the ball has passed one of the panel
	 *  boundaries, this function moves the ball to the location it would be at if it had properly 
	 *  bounced off of the wall, and sets the velocity to its appropriate value.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_gtNd0QuLEei-6eSvavMBRQ" name="setStrat" method="_gvCp2AuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvSheAuLEei-6eSvavMBRQ">
            <body>This function sets the ball's movement strategy.
	 * @param strat the strat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_gtOE4AuLEei-6eSvavMBRQ" name="strat" type="_gnNjgAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gtOE4QuLEei-6eSvavMBRQ" name="setPaintStrat" method="_gvDQ4wuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvShfAuLEei-6eSvavMBRQ">
            <body>This function sets the paint strategy.
	 * @param paintStrat the paintStrat to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_gtOE4guLEei-6eSvavMBRQ" name="paintStrat" type="_gnJSEAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guFAgAuLEei-6eSvavMBRQ" name="Ball" method="_gvCCwAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_guFAiAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_guFAiQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_gvShcQuLEei-6eSvavMBRQ">
            <body>This is the Ball constructor, which sets its initial values.
	 * @param col The color of the ball
	 * @param loc The initial location of the ball.
	 * @param rad The radius of the ball.
	 * @param vel The initial velocity of the ball.
	 * @param con The container (component) on which the ball is drawn.
	 * @param updateStrat The IUpdateStrategy that decides how to update the ball.
	 * @param paintStrat The IPaintStrategy that decides how to paint the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_guFAgQuLEei-6eSvavMBRQ" name="col" type="_gtKagAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guFAgguLEei-6eSvavMBRQ" name="loc" type="_gtLBkQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guFAgwuLEei-6eSvavMBRQ" name="rad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_guFAhAuLEei-6eSvavMBRQ" name="vel" type="_gtLBkQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guFAhQuLEei-6eSvavMBRQ" name="con" type="_gtFiAAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guFAhguLEei-6eSvavMBRQ" name="updateStrat" type="_gnNjgAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guFAhwuLEei-6eSvavMBRQ" name="paintStrat" type="_gnJSEAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guFAiguLEei-6eSvavMBRQ" type="_gmkqUAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guGOoAuLEei-6eSvavMBRQ" name="update" method="_gvCp0QuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvShdQuLEei-6eSvavMBRQ">
            <body>This function is required when implementing Observer, that tells the ball what to
	 * do when it is notified by the dispatcher.
	 * @param o An observable
	 * @param g An Object, which should be an IBallCmd</body>
          </ownedComment>
          <ownedParameter xmi:id="_guGOoQuLEei-6eSvavMBRQ" name="o" type="_gtLooQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guGOoguLEei-6eSvavMBRQ" name="cmd" type="_guFnkQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guGOowuLEei-6eSvavMBRQ" name="paint" method="_gvCp1AuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvShdguLEei-6eSvavMBRQ">
            <body>This function determines how to paint the ball, and it delegates
	 * to the paint strategy's paint.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_guGOpAuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gmubUAuLEei-6eSvavMBRQ" name="BallPaintStrategy">
        <ownedComment xmi:id="_gvTIgAuLEei-6eSvavMBRQ">
          <body>This is the ball paint strategy, which implements a paint strategy for a ball.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_gtQhIAuLEei-6eSvavMBRQ" client="_gmubUAuLEei-6eSvavMBRQ" supplier="_gnJSEAuLEei-6eSvavMBRQ" contract="_gnJSEAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvD38AuLEei-6eSvavMBRQ" name="paint" specification="_guHcwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvD38QuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvD38guLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>g.setColor(ball.getCol());
		g.fillOval(ball.getLoc().x - ball.getRad(), ball.getLoc().y - ball.getRad(),
				ball.getRad() * 2, ball.getRad() * 2);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gmvCYAuLEei-6eSvavMBRQ" name="BallPaintStrategy">
          <eAnnotations xmi:id="_gmvpcAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gmvpcQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gmvpcwuLEei-6eSvavMBRQ" type="_gmubUAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gtRIMAuLEei-6eSvavMBRQ" name="init">
          <ownedParameter xmi:id="_gtRIMQuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guHcwAuLEei-6eSvavMBRQ" name="paint" method="_gvD38AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_guHcwQuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guHcwguLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gmw3kAuLEei-6eSvavMBRQ" name="BallWorldModel">
        <ownedComment xmi:id="_gvTIgQuLEei-6eSvavMBRQ">
          <body>This is the BallWorldModel class, which makes balls, clears balls, and updates the balls.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_gupoQAuLEei-6eSvavMBRQ" name="adapter" visibility="private" type="_gnID8AuLEei-6eSvavMBRQ" association="_gwLSQAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gupoQQuLEei-6eSvavMBRQ" value="IModel2ViewAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gupoQwuLEei-6eSvavMBRQ" name="timeSlice" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_guqPUAuLEei-6eSvavMBRQ" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_guqPUguLEei-6eSvavMBRQ" name="dispatcher" visibility="private" type="_gn7VMAuLEei-6eSvavMBRQ" association="_gwLSQwuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_guqPUwuLEei-6eSvavMBRQ" value="new Dispatcher()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_guqPVQuLEei-6eSvavMBRQ" name="timer" visibility="private" type="_gtSWUQuLEei-6eSvavMBRQ" association="_gwL5UQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_guq2YAuLEei-6eSvavMBRQ" value="new Timer(timeSlice, (e) -> adapter.update())"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvD38wuLEei-6eSvavMBRQ" name="BallWorldModel" specification="_gtS9YQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvD39AuLEei-6eSvavMBRQ" name="adapter" type="_gnID8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvD39QuLEei-6eSvavMBRQ" type="_gmw3kAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this.adapter = adapter;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvD39guLEei-6eSvavMBRQ" name="clearBalls" specification="_gmzT0AuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>dispatcher.deleteObservers();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvD39wuLEei-6eSvavMBRQ" name="start" specification="_gmz64AuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>timer.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvD3-AuLEei-6eSvavMBRQ" name="update" specification="_guID0AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvD3-QuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll((IBallCmd) (ball, disp)->{
         // Whatever you want to do with the context Ball!
			ball.setItr(ball.getItr() + 1);
			ball.getStrat().updateState(ball, disp);
			ball.move();
			ball.bounce();
			ball.paint((Graphics) g);
		});
//        dispatcher.notifyAll(g);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvD3-guLEei-6eSvavMBRQ" name="loadStrategy" specification="_gmz64QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvD3-wuLEei-6eSvavMBRQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvD3_AuLEei-6eSvavMBRQ" type="_gnNjgAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>Object[] args =  new Object[]{};
		java.lang.reflect.Constructor&lt;?> cons[];
		try {
			cons = Class.forName(strat).getConstructors();
			return (IUpdateStrategy) cons[0].newInstance(args);
		} catch (Exception e) {
			return IStrategyFac._errorStrategyFac.make();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvEfAAuLEei-6eSvavMBRQ" name="fixName" specification="_gm0h8AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvEfAQuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvEfAguLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;model.&quot; + classname.substring(0, 1).toUpperCase() + classname.substring(1).toLowerCase() + &quot;Strategy&quot;;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvEfAwuLEei-6eSvavMBRQ" name="makeStrategyFac" specification="_gm0h8wuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvEfBAuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvEfBQuLEei-6eSvavMBRQ" type="_gnLHQAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>if (null == classname) {
			return IStrategyFac._errorStrategyFac;
		}
	    return new IStrategyFac() {
	        /**
	         * Instantiate a strategy corresponding to the given class name.
	         * @return An IUpdateStrategy instance
	         */
	        public IUpdateStrategy make() {
	        		return loadStrategy(fixName(classname));
	        }

	        /**
	         * Return the given class name string
	         */
	        public String toString() {
	            return classname;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvEfBguLEei-6eSvavMBRQ" name="makeBall" specification="_gtTkdQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvEfBwuLEei-6eSvavMBRQ" name="make" type="_gnNjgAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvEfCAuLEei-6eSvavMBRQ" name="paintStrat" type="_gnJSEAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>Container con = adapter.getCanvas();
		Randomizer rzr = Randomizer.Singleton;
		
		int startRad = rzr.randomInt(10, 45);
		Point randLoc = rzr.randomLoc(new Rectangle(con.getWidth() - startRad, con.getHeight() - startRad));
		Point startLoc = new Point(randLoc.x + startRad, randLoc.y + startRad);
		Point startVel = new Point(0, 0);

		// Handles case where both x- and y-components of velocity are 0 to prevent ball from starting stationary.
		while (startVel.x == 0 &amp;&amp; startVel.y == 0) {
			startVel = new Point(rzr.randomInt(-20, 20), rzr.randomInt(-20, 20));
		}
		Color startCol = rzr.randomColor();
		
		Ball loaded = new Ball(startCol, startLoc, startRad, startVel, con, make, paintStrat);
		dispatcher.addObserver(loaded);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvEfCQuLEei-6eSvavMBRQ" name="combineStrategyFacs" specification="_gtULgQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvEfCguLEei-6eSvavMBRQ" name="stratFac1" type="_gnLHQAuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_gvEfCwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gvEfDAuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_gvEfDQuLEei-6eSvavMBRQ" name="stratFac2" type="_gnLHQAuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_gvEfDguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gvEfDwuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_gvEfEAuLEei-6eSvavMBRQ" type="_gnLHQAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>if (null == stratFac1 || null == stratFac2) {
	    		return IStrategyFac._errorStrategyFac;
	    	}
	    
	    return new IStrategyFac() {
	        /**
	         * Instantiate a new MultiStrategy with the strategies from the given strategy factories
	         * @return A MultiStrategy instance
	         */
	        public IUpdateStrategy make() {
	            return new MultiStrategy(stratFac1.make(), stratFac2.make());
	        }

	        /**
	         * Return a string that is the toString()'s of the given strategy factories concatenated with a &quot;-&quot;
	         */
	        public String toString() {
	            return stratFac1.toString() + &quot;-&quot; + stratFac2.toString();
	        }

			@Override
			public IPaintStrategy makePaint() {
				return new BallPaintStrategy();
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvEfEQuLEei-6eSvavMBRQ" name="setSwitcherStrategy" specification="_gtULiQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvEfEguLEei-6eSvavMBRQ" name="switchFac" type="_gnLHQAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>SwitcherStrategy.setStrat(switchFac.make());
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvFGEAuLEei-6eSvavMBRQ" name="getSwitcherFac" specification="_gm1JAAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvFGEQuLEei-6eSvavMBRQ" type="_gnLHQAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return IStrategyFac.switcherStrat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvFGEguLEei-6eSvavMBRQ" name="makePaintFactory" specification="_gm1wEAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvFGEwuLEei-6eSvavMBRQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvFGFAuLEei-6eSvavMBRQ" type="_gnLHQAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return new IStrategyFac() {
	        public IUpdateStrategy make() {
	        		return new StraightStrategy();
	        }
 
	        public String toString() {
	            return text;
	        }

			@Override
			public IPaintStrategy makePaint() {
				return loadPaintStrat(fixPaintName(text));
			}
	    };
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvFtIAuLEei-6eSvavMBRQ" name="loadPaintStrat" specification="_gm1wEguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvFtIQuLEei-6eSvavMBRQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvFtIguLEei-6eSvavMBRQ" type="_gnJSEAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>Object[] args =  new Object[]{};
		java.lang.reflect.Constructor&lt;?> cons[];
		try {
			cons = Class.forName(strat).getConstructors();
			return (IPaintStrategy) cons[0].newInstance(args);
		} catch (Exception e) {
			return IStrategyFac._errorStrategyFac.makePaint();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvFtIwuLEei-6eSvavMBRQ" name="fixPaintName" specification="_gm2XIAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvFtJAuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvFtJQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;model.&quot; + classname + &quot;PaintStrategy&quot;;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gmzT0AuLEei-6eSvavMBRQ" name="clearBalls" method="_gvD39guLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvTIgwuLEei-6eSvavMBRQ">
            <body>This function clears all the balls from the canvas, by removing them as observers.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_gmz64AuLEei-6eSvavMBRQ" name="start" method="_gvD39wuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvTIhAuLEei-6eSvavMBRQ">
            <body>This function starts the timer.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_gmz64QuLEei-6eSvavMBRQ" name="loadStrategy" method="_gvD3-guLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvTIhguLEei-6eSvavMBRQ">
            <body>This function takes an input string and loads the associated IUpdateStrategy,
	 * and returns the error strategy if the strategy isn't available.
	 * @param strat A string of the strategy to be created.
	 * @return The IUpdateStrategy associated with the string, or the error strategy if
	 * there is no associated strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gmz64guLEei-6eSvavMBRQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gtTkcwuLEei-6eSvavMBRQ" type="_gnNjgAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gm0h8AuLEei-6eSvavMBRQ" name="fixName" method="_gvEfAAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvTIhwuLEei-6eSvavMBRQ">
            <body>This function takes the input and confirms it to the required model.ClassStrategy format for
	 * dynamic class loading.
	 * @param classname The string that should be modified to conform to the model.ClassStrategy format.
	 * @return The class string in a model.ClassStrategy format.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gm0h8QuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gm0h8guLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gm0h8wuLEei-6eSvavMBRQ" name="makeStrategyFac" method="_gvEfAwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvTIiAuLEei-6eSvavMBRQ">
            <body>This takes a class name, and creates a strategy factory for it, by loading the strategy and returning it
	 * in the make method.
	 * @param classname The class of strategy to make.
	 * @return An IStrategyFac whose make function calls the associated model.ClassStrategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gm0h9AuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gtTkdAuLEei-6eSvavMBRQ" type="_gnLHQAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gm1JAAuLEei-6eSvavMBRQ" name="getSwitcherFac" method="_gvFGEAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvTvkQuLEei-6eSvavMBRQ">
            <body>This function returns a strategy factory, which makes the current switcher balls' update
	 * strategy
	 * @return An IStrategyFac, which makes the current strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gtUykAuLEei-6eSvavMBRQ" type="_gnLHQAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gm1wEAuLEei-6eSvavMBRQ" name="makePaintFactory" method="_gvFGEguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvTvkguLEei-6eSvavMBRQ">
            <body>This function returns an IStrategyFac to allow the Paint Strategies to be made later on.
	 * @param text The type of paint strategy.
	 * @return An IStrategyFac</body>
          </ownedComment>
          <ownedParameter xmi:id="_gm1wEQuLEei-6eSvavMBRQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gtUykQuLEei-6eSvavMBRQ" type="_gnLHQAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gm1wEguLEei-6eSvavMBRQ" name="loadPaintStrat" method="_gvFtIAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvTvkwuLEei-6eSvavMBRQ">
            <body>This function loads an instance of an IPaintStrategy, given a classname.
	 * @param strat The type of paint strategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_gm1wEwuLEei-6eSvavMBRQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gtUykguLEei-6eSvavMBRQ" type="_gnJSEAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gm2XIAuLEei-6eSvavMBRQ" name="fixPaintName" method="_gvFtIwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvTvlAuLEei-6eSvavMBRQ">
            <body>This function &quot;fixes&quot; the type passed in to create an IPaintStrategy.
	 * @param classname The type of paint strategy to create.
	 * @return The fixed paint strategy information as a string.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gm2XIQuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gm2XIguLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gtS9YQuLEei-6eSvavMBRQ" name="BallWorldModel" method="_gvD38wuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gtTkcAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gtTkcQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_gvTIgguLEei-6eSvavMBRQ">
            <body>This is the BallWorldModel constructor, which creates a model for the controller to interact with.
	 * @param adapter An IModel2ViewAdapter.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gtS9YguLEei-6eSvavMBRQ" name="adapter" type="_gnID8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gtTkcguLEei-6eSvavMBRQ" type="_gmw3kAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gtTkdQuLEei-6eSvavMBRQ" name="makeBall" method="_gvEfBguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvTIiQuLEei-6eSvavMBRQ">
            <body>This function randomizes parameters for the ball, and makes a ball with the parameter's update strategy.
	 * @param make The IUpdateStrategy that determines how the ball updates.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gtTkdguLEei-6eSvavMBRQ" name="make" type="_gnNjgAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gtULgAuLEei-6eSvavMBRQ" name="paintStrat" type="_gnJSEAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gtULgQuLEei-6eSvavMBRQ" name="combineStrategyFacs" method="_gvEfCQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvTIiguLEei-6eSvavMBRQ">
            <body>Returns an IStrategyFac that can instantiate a MultiStrategy with the two
	 * strategies made by the two given IStrategyFac objects. Returns null if
	 * either supplied factory is null. The toString() of the returned factory
	 * is the toString()'s of the two given factories, concatenated with &quot;-&quot;. 
	 * If either factory is null, then a factory for a beeping error strategy is returned.
	 * 
	 * @param stratFac1 An IStrategyFac for a strategy
	 * @param stratFac2 An IStrategyFac for a strategy
	 * @return An IStrategyFac for the composition of the two strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_gtULgguLEei-6eSvavMBRQ" name="stratFac1" type="_gnLHQAuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_gtULhQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gtULhguLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_gtULgwuLEei-6eSvavMBRQ" name="stratFac2" type="_gnLHQAuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_gtULhwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gtULiAuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_gtULhAuLEei-6eSvavMBRQ" type="_gnLHQAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gtULiQuLEei-6eSvavMBRQ" name="setSwitcherStrategy" method="_gvEfEQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvTvkAuLEei-6eSvavMBRQ">
            <body>This function sets the switcher balls strategy to the one made by the input.
	 * @param switchFac IStrategyFac which makes the new update strategy for the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gtULiguLEei-6eSvavMBRQ" name="switchFac" type="_gnLHQAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guID0AuLEei-6eSvavMBRQ" name="update" method="_gvD3-AuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvTIhQuLEei-6eSvavMBRQ">
            <body>This function updates all the balls by notifying them using the dispatcher
	 * and an IBallCmd
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_guID0QuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gm6BgAuLEei-6eSvavMBRQ" name="BreathingStrategy">
        <ownedComment xmi:id="_gvTvlQuLEei-6eSvavMBRQ">
          <body>This class defines a Breathing Strategy, which grows and shrinks the ball's radius.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_gtVZoAuLEei-6eSvavMBRQ" client="_gm6BgAuLEei-6eSvavMBRQ" supplier="_gnNjgAuLEei-6eSvavMBRQ" contract="_gnNjgAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvGUMAuLEei-6eSvavMBRQ" name="updateState" specification="_gtVZoQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvGUMQuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvGUMguLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getItr() % 5 == 0) {
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gtVZoQuLEei-6eSvavMBRQ" name="updateState" method="_gvGUMAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gtVZoguLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gtWAsAuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gm7PoAuLEei-6eSvavMBRQ" name="ColorStrategy">
        <ownedComment xmi:id="_gvTvlguLEei-6eSvavMBRQ">
          <body>This class defines a Color Strategy, which changes the ball's color.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_gtWnwAuLEei-6eSvavMBRQ" client="_gm7PoAuLEei-6eSvavMBRQ" supplier="_gnNjgAuLEei-6eSvavMBRQ" contract="_gnNjgAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvGUMwuLEei-6eSvavMBRQ" name="updateState" specification="_gtWnwQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvGUNAuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvGUNQuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (ball.getItr() % 10 == 0) {
						Color newColor = Randomizer.Singleton.randomColor();
						ball.setCol(newColor);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gtWnwQuLEei-6eSvavMBRQ" name="updateState" method="_gvGUMwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gtWnwguLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gtWnwwuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gm8dwAuLEei-6eSvavMBRQ" name="CrashStrategy">
        <ownedComment xmi:id="_gvTvlwuLEei-6eSvavMBRQ">
          <body>This class defines a Crash Strategy which makes the ball
change color when it bounces from the boundaries of the canvas.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_gtXO0AuLEei-6eSvavMBRQ" client="_gm8dwAuLEei-6eSvavMBRQ" supplier="_gnNjgAuLEei-6eSvavMBRQ" contract="_gnNjgAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvGUNguLEei-6eSvavMBRQ" name="updateState" specification="_gtXO0QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvGUNwuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvGUOAuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					
					if ((ball.getLoc().x + ball.getRad() + 8 >= ball.getCon().getWidth()) ||
							(ball.getLoc().x - ball.getRad() &lt;= 8) ||
							(ball.getLoc().y + ball.getRad() >= ball.getCon().getHeight() - 8) ||
							(ball.getLoc().y - ball.getRad() &lt;= 8)) {
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gtXO0QuLEei-6eSvavMBRQ" name="updateState" method="_gvGUNguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gtXO0guLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gtXO0wuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gm9r4AuLEei-6eSvavMBRQ" name="EarthImagePaintStrategy">
        <generalization xmi:id="_gtX14guLEei-6eSvavMBRQ" general="_gnOKkAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvGUOQuLEei-6eSvavMBRQ" name="EarthImagePaintStrategy" specification="_gm-S8AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvGUOguLEei-6eSvavMBRQ" type="_gm9r4AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Earth.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gm-S8AuLEei-6eSvavMBRQ" name="EarthImagePaintStrategy" method="_gvGUOQuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gm-S8QuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gm-S8guLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gm-S8wuLEei-6eSvavMBRQ" type="_gm9r4AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gm-6AAuLEei-6eSvavMBRQ" name="EllipsePaintStrategy">
        <ownedComment xmi:id="_gvTvmAuLEei-6eSvavMBRQ">
          <body>This class defines a paint strategy to paint an ellipse shape.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_gtX14wuLEei-6eSvavMBRQ" general="_gnkI0guLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvG7QAuLEei-6eSvavMBRQ" name="EllipsePaintStrategy" specification="_gm-6AQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvG7QQuLEei-6eSvavMBRQ" type="_gm-6AAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 4.0/3.0, 2.0/3.0);
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvG7QguLEei-6eSvavMBRQ" name="EllipsePaintStrategy" specification="_guIq4AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvG7QwuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvG7RAuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvG7RQuLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvG7RguLEei-6eSvavMBRQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvG7RwuLEei-6eSvavMBRQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvG7SAuLEei-6eSvavMBRQ" type="_gm-6AAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(at, EllipseShapeFactory.Singleton.makeShape(x, y, width, height));
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gm-6AQuLEei-6eSvavMBRQ" name="EllipsePaintStrategy" method="_gvG7QAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gm_hEAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gm_hEQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gm_hEguLEei-6eSvavMBRQ" type="_gm-6AAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guIq4AuLEei-6eSvavMBRQ" name="EllipsePaintStrategy" method="_gvG7QguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_guIq5guLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_guIq5wuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_guIq4QuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guIq4guLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_guIq4wuLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_guIq5AuLEei-6eSvavMBRQ" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_guIq5QuLEei-6eSvavMBRQ" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_guIq6AuLEei-6eSvavMBRQ" type="_gm-6AAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnB9UAuLEei-6eSvavMBRQ" name="EllipseShapeFactory">
        <ownedComment xmi:id="_gvTvmQuLEei-6eSvavMBRQ">
          <body>This class defines a shape factory to make Ellipses.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_gurdcAuLEei-6eSvavMBRQ" name="Singleton" isLeaf="true" isStatic="true" type="_gnB9UAuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwMgYQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gurdcQuLEei-6eSvavMBRQ" value="new EllipseShapeFactory()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_gtZEAguLEei-6eSvavMBRQ" client="_gnB9UAuLEei-6eSvavMBRQ" supplier="_gnJ5IAuLEei-6eSvavMBRQ" contract="_gnJ5IAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvG7SQuLEei-6eSvavMBRQ" name="makeShape" specification="_gnCkYAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvG7SguLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvG7SwuLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvG7TAuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvG7TQuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvG7TguLEei-6eSvavMBRQ" type="_gtYc8AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>Shape ellipse = new Ellipse2D.Double(x, y, xScale, yScale);
		return ellipse;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gnCkYAuLEei-6eSvavMBRQ" name="makeShape" method="_gvG7SQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gnCkYQuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gnCkYguLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gnCkYwuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gnCkZAuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_guJR8AuLEei-6eSvavMBRQ" type="_gtYc8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnEZkAuLEei-6eSvavMBRQ" name="FastStrategy">
        <ownedComment xmi:id="_gvTvmguLEei-6eSvavMBRQ">
          <body>This class defines a Fast Strategy that makes the ball's velocity increase and stop once it reaches
a pre defined max speed.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_gtZrEAuLEei-6eSvavMBRQ" client="_gnEZkAuLEei-6eSvavMBRQ" supplier="_gnNjgAuLEei-6eSvavMBRQ" contract="_gnNjgAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvG7TwuLEei-6eSvavMBRQ" name="updateState" specification="_gtZrEQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvG7UAuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvG7UQuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the ball, if it is the correct ball,
			 * using the dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					if (Math.abs(ball.getVel().x) &lt; 100 &amp;&amp; Math.abs(ball.getVel().y) &lt; 100) {
						if (ball.getItr() % 10 == 0) {
							if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y + 2));
							} else if (ball.getVel().x > 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x + 2, ball.getVel().y - 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y > 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y + 2));
							} else if (ball.getVel().x &lt; 0 &amp;&amp; ball.getVel().y &lt; 0) {
								ball.setVel(new Point(ball.getVel().x - 2, ball.getVel().y - 2));
							}
						}
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gtZrEQuLEei-6eSvavMBRQ" name="updateState" method="_gvG7TwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gtZrEguLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gtZrEwuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnFAoAuLEei-6eSvavMBRQ" name="HumbirdImagePaintStrategy">
        <generalization xmi:id="_gtaSIwuLEei-6eSvavMBRQ" general="_gn2csAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvHiUAuLEei-6eSvavMBRQ" name="HumbirdImagePaintStrategy" specification="_gnFnsAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvHiUQuLEei-6eSvavMBRQ" type="_gnFAoAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Humbird.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gnFnsAuLEei-6eSvavMBRQ" name="HumbirdImagePaintStrategy" method="_gvHiUAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gnFnsQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gnFnsguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gnFnswuLEei-6eSvavMBRQ" type="_gnFAoAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_gnGOwAuLEei-6eSvavMBRQ" name="IBallCmd" isAbstract="true">
        <ownedOperation xmi:id="_gta5MAuLEei-6eSvavMBRQ" name="apply" isAbstract="true">
          <ownedParameter xmi:id="_gta5MQuLEei-6eSvavMBRQ" name="context" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gta5MguLEei-6eSvavMBRQ" name="disp" type="_gn7VMAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_gnID8AuLEei-6eSvavMBRQ" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_gvTvmwuLEei-6eSvavMBRQ">
          <body>This is an interface which defines the functions that the model wants the view to have/do.
@author sn32, kyl3</body>
        </ownedComment>
        <ownedAttribute xmi:id="_gnID8guLEei-6eSvavMBRQ" name="canvas" type="_gtFiAAuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwGZwAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_gnIrAAuLEei-6eSvavMBRQ" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_gnID8AuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwHA0QuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gnIrAQuLEei-6eSvavMBRQ" value="new IModel2ViewAdapter() {&#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is an update function that we want the view to have.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public void update() {&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9; &#xA;&#x9;&#x9; /**&#xA;&#x9;&#x9;  * This is a function that gets the canvas from the view.&#xA;&#x9;&#x9;  * @return A container that is initially null.&#xA;&#x9;&#x9;  */&#xA;&#x9;&#x9; public Container getCanvas() {&#xA;&#x9;&#x9;&#x9; return null;&#xA;&#x9;&#x9; }&#xA;&#x9; }"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_gnID8QuLEei-6eSvavMBRQ" name="update">
          <ownedComment xmi:id="_gvTvnAuLEei-6eSvavMBRQ">
            <body>This is an update function that we want the view to have.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_gnJSEAuLEei-6eSvavMBRQ" name="IPaintStrategy">
        <ownedComment xmi:id="_gvTvnQuLEei-6eSvavMBRQ">
          <body>This is an interface for an IPaintStrategy that defines the methods we want it to have.
@author sn32, ll45</body>
        </ownedComment>
        <ownedOperation xmi:id="_gtbgQAuLEei-6eSvavMBRQ" name="init">
          <ownedParameter xmi:id="_gtbgQQuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guJR8QuLEei-6eSvavMBRQ" name="paint">
          <ownedParameter xmi:id="_guJR8guLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guJR8wuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_gnJ5IAuLEei-6eSvavMBRQ" name="IShapeFactory">
        <ownedComment xmi:id="_gvTvnguLEei-6eSvavMBRQ">
          <body>This interface defines the methods we want a shape factory to have.
@author sn32, ll45
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_gnKgMAuLEei-6eSvavMBRQ" name="makeShape">
          <ownedParameter xmi:id="_gnKgMQuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gnKgMguLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gnKgMwuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gnKgNAuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_guJ5AAuLEei-6eSvavMBRQ" type="_gtYc8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_gnLHQAuLEei-6eSvavMBRQ" name="IStrategyFac">
        <ownedComment xmi:id="_gvTvnwuLEei-6eSvavMBRQ">
          <body>This interface defines the functions we want IStrategyFac to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_gnLuUguLEei-6eSvavMBRQ" name="_errorStrategyFac" type="_gnLHQAuLEei-6eSvavMBRQ" association="_gwHn4QuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gnMVYAuLEei-6eSvavMBRQ" value="new IStrategyFac(){&#xA;        /**&#xA;         * Make the beeping error strategy&#xA;         * @return  An instance of a beeping error strategy&#xA;         */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;            return new IUpdateStrategy() {&#xA;                private int count = 0; // update counter&#xA;                &#xA;                /**&#xA;                 * Beep the speaker every 25 updates&#xA;                 */&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void updateState(Ball ball, Dispatcher dispatcher) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(25 &lt; count++){&#xA;                        java.awt.Toolkit.getDefaultToolkit().beep(); &#xA;                        count = 0;&#xA;                    }&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;            };&#xA;        }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;}&#xA;    }"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gnMVYguLEei-6eSvavMBRQ" name="switcherStrat" type="_gnLHQAuLEei-6eSvavMBRQ" association="_gwIO8QuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gnMVYwuLEei-6eSvavMBRQ" value="new IStrategyFac() {&#xA;    &#x9;&#x9;/**&#xA;    &#x9;&#x9; * This function makes the switcher strategy.&#xA;    &#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xA;&#x9;&#x9;&#x9;return new SwitcherStrategy();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9; * Make the default paint strategy.&#xA;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public IPaintStrategy makePaint() {&#xA;&#x9;&#x9;&#x9;&#x9;return new BallPaintStrategy();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_gnLuUAuLEei-6eSvavMBRQ" name="make">
          <ownedComment xmi:id="_gvTvoAuLEei-6eSvavMBRQ">
            <body>This function allows IStrategyFac to make an IUpdateStrategy.
	 * @return An IUpdateStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_gtcHUAuLEei-6eSvavMBRQ" type="_gnNjgAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gnLuUQuLEei-6eSvavMBRQ" name="makePaint">
          <ownedComment xmi:id="_gvUWoAuLEei-6eSvavMBRQ">
            <body>This function allows IStrategyFac to make an IPaintStrategy.
	 * @return An IPaintStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_gtcHUQuLEei-6eSvavMBRQ" type="_gnJSEAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_gnNjgAuLEei-6eSvavMBRQ" name="IUpdateStrategy">
        <ownedComment xmi:id="_gvUWoQuLEei-6eSvavMBRQ">
          <body>This interface defines the functions we want IUpdateStrategies to have.
@author sn32, lka2</body>
        </ownedComment>
        <ownedOperation xmi:id="_gtcHUguLEei-6eSvavMBRQ" name="updateState">
          <ownedParameter xmi:id="_gtcHUwuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gtcHVAuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnOKkAuLEei-6eSvavMBRQ" name="ImagePaintStrategy">
        <ownedComment xmi:id="_gvUWoguLEei-6eSvavMBRQ">
          <body>This class defines a paint strategy for an image that extends APaintStrategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_gtfKoAuLEei-6eSvavMBRQ" general="_gmd8oAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_gurdcguLEei-6eSvavMBRQ" name="scaleFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gurdcwuLEei-6eSvavMBRQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gusEgQuLEei-6eSvavMBRQ" name="fillFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gusEgguLEei-6eSvavMBRQ" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gusEhAuLEei-6eSvavMBRQ" name="localAT" visibility="private" type="_gtH-QAuLEei-6eSvavMBRQ" association="_gwMgZAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gusEhQuLEei-6eSvavMBRQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gusrkQuLEei-6eSvavMBRQ" name="tempAT" type="_gtH-QAuLEei-6eSvavMBRQ" association="_gwNHcQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gusrkguLEei-6eSvavMBRQ" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gusrkwuLEei-6eSvavMBRQ" name="filename" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gusrlAuLEei-6eSvavMBRQ" name="image" visibility="private" type="_gtcuYguLEei-6eSvavMBRQ" association="_gwNHdAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_gutSoAuLEei-6eSvavMBRQ" name="imageObs" visibility="private" type="_gtFiAAuLEei-6eSvavMBRQ" association="_gwNugQuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvHiUguLEei-6eSvavMBRQ" name="ImagePaintStrategy" specification="_gnPYsAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvHiUwuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvHiVAuLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvHiVQuLEei-6eSvavMBRQ" type="_gnOKkAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super (new AffineTransform());
		this.fillFactor = fillFactor;
		this.setFilename(filename);
				
		try {
			image =  Toolkit.getDefaultToolkit().getImage(filename);	
			
		} catch (Exception e) {
			System.out.println(&quot;failed&quot;);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvHiVguLEei-6eSvavMBRQ" name="ImagePaintStrategy" specification="_guKgEAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvHiVwuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvHiWAuLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvHiWQuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvHiWguLEei-6eSvavMBRQ" type="_gnOKkAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.fillFactor = fillFactor;
		this.setFilename(filename);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvIJYAuLEei-6eSvavMBRQ" name="init" specification="_gtejkQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvIJYQuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>imageObs = ball.getCon();
		MediaTracker mt = new MediaTracker(ball.getCon());
		mt.addImage(image, 1);
		try {
			mt.waitForAll();
		} catch(Exception e){
			System.out.println(&quot;ImagePaintStrategy.init(): Error waiting for image.  Exception = &quot;+e);
		}
		scaleFactor = 2.0/(fillFactor*(image.getWidth(imageObs)+image.getHeight(imageObs))/2.0); // this line is described below
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvIJYguLEei-6eSvavMBRQ" name="paintXfrm" specification="_guKgFwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvIJYwuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvIJZAuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvIJZQuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>localAT.setToScale(scaleFactor, scaleFactor);
		localAT.translate(-image.getWidth(imageObs)/2.0, -image.getHeight(imageObs)/2.0);
		localAT.preConcatenate(at);
		((Graphics2D)g).drawImage(image, localAT, imageObs); 
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvIJZguLEei-6eSvavMBRQ" name="setFilename" specification="_gnP_wAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvIJZwuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.filename = filename;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gnPYsAuLEei-6eSvavMBRQ" name="ImagePaintStrategy" method="_gvHiUguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gnPYswuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gnPYtAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_gvUWowuLEei-6eSvavMBRQ">
            <body>This is a constructor for the Image Paint Strategy that doesn't take an Affine Transform.
	 * @param filename String that is the path to the image file to load
	 * @param fillFactor A double that is the fill factor</body>
          </ownedComment>
          <ownedParameter xmi:id="_gnPYsQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gnPYsguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gnPYtQuLEei-6eSvavMBRQ" type="_gnOKkAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gnP_wAuLEei-6eSvavMBRQ" name="setFilename" method="_gvIJZguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvUWpguLEei-6eSvavMBRQ">
            <body>This function sets the filename.
	 * @param filename the filename to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_gnP_wQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gtejkQuLEei-6eSvavMBRQ" name="init" method="_gvIJYAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvUWpQuLEei-6eSvavMBRQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gtejkguLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guKgEAuLEei-6eSvavMBRQ" name="ImagePaintStrategy" method="_gvHiVguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_guKgFAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_guKgFQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_gvUWpAuLEei-6eSvavMBRQ">
            <body>This is a constructor for Image Paint Strategy that takes an Affine Transform.
	 * @param filename String that is the path to the image file to load.
	 * @param fillFactor A double that is the fill factor
	 * @param at An Affine Transform.</body>
          </ownedComment>
          <ownedParameter xmi:id="_guKgEQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_guKgEguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_guKgEwuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guKgFguLEei-6eSvavMBRQ" type="_gnOKkAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guKgFwuLEei-6eSvavMBRQ" name="paintXfrm" method="_gvIJYguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_guKgGAuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guKgGQuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guLHIAuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnTDEAuLEei-6eSvavMBRQ" name="JupiterImagePaintStrategy">
        <generalization xmi:id="_gtgYwAuLEei-6eSvavMBRQ" general="_gnOKkAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvIJaAuLEei-6eSvavMBRQ" name="JupiterImagePaintStrategy" specification="_gnTqIAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvIJaQuLEei-6eSvavMBRQ" type="_gnTDEAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Jupiter.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gnTqIAuLEei-6eSvavMBRQ" name="JupiterImagePaintStrategy" method="_gvIJaAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gnTqIQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gnTqIguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gnTqIwuLEei-6eSvavMBRQ" type="_gnTDEAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnURMAuLEei-6eSvavMBRQ" name="MarioImagePaintStrategy">
        <generalization xmi:id="_gtgYwQuLEei-6eSvavMBRQ" general="_gn2csAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvIJaguLEei-6eSvavMBRQ" name="MarioImagePaintStrategy" specification="_gnU4QAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvIJawuLEei-6eSvavMBRQ" type="_gnURMAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Mario.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gnU4QAuLEei-6eSvavMBRQ" name="MarioImagePaintStrategy" method="_gvIJaguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gnU4QQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gnU4QguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gnU4QwuLEei-6eSvavMBRQ" type="_gnURMAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnVfUAuLEei-6eSvavMBRQ" name="MarioMarsImagePaintStrategy">
        <generalization xmi:id="_gtgYwguLEei-6eSvavMBRQ" general="_gnXUgAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvIJbAuLEei-6eSvavMBRQ" name="MarioMarsImagePaintStrategy" specification="_gnVfUQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvIJbQuLEei-6eSvavMBRQ" type="_gnVfUAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(new APaintStrategy[]{new UprightImagePaintStrategy(&quot;images/Mars.gif&quot;, 1.0),
				new UprightImagePaintStrategy(&quot;images/Mario.gif&quot;, 1.0)});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gnVfUQuLEei-6eSvavMBRQ" name="MarioMarsImagePaintStrategy" method="_gvIJbAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gnWGYAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gnWGYQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gnWGYguLEei-6eSvavMBRQ" type="_gnVfUAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnWGYwuLEei-6eSvavMBRQ" name="MarsImagePaintStrategy">
        <generalization xmi:id="_gtgYwwuLEei-6eSvavMBRQ" general="_gnOKkAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvIJbguLEei-6eSvavMBRQ" name="MarsImagePaintStrategy" specification="_gnWtcAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvIJbwuLEei-6eSvavMBRQ" type="_gnWGYwuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Mars.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gnWtcAuLEei-6eSvavMBRQ" name="MarsImagePaintStrategy" method="_gvIJbguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gnWtcQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gnWtcguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gnWtcwuLEei-6eSvavMBRQ" type="_gnWGYwuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnXUgAuLEei-6eSvavMBRQ" name="MultiPaintStrategy">
        <ownedComment xmi:id="_gvUWpwuLEei-6eSvavMBRQ">
          <body>This class defines a multi paint strategy which is the composition of other paint strategies.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_gtg_1wuLEei-6eSvavMBRQ" general="_gmd8oAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_gutSoguLEei-6eSvavMBRQ" name="pstrats" visibility="private" type="_gmd8oAuLEei-6eSvavMBRQ" association="_gwNuhAuLEei-6eSvavMBRQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gut5sAuLEei-6eSvavMBRQ" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvIwcAuLEei-6eSvavMBRQ" name="MultiPaintStrategy" specification="_gtgYxAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvIwcQuLEei-6eSvavMBRQ" name="pstrats" type="_gmd8oAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gvIwcguLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvIwcwuLEei-6eSvavMBRQ" type="_gnXUgAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(new AffineTransform());&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvIwdAuLEei-6eSvavMBRQ" name="MultiPaintStrategy" specification="_guLuMAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvIwdQuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvIwdguLEei-6eSvavMBRQ" name="pstrats" type="_gmd8oAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gvIwdwuLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvIweAuLEei-6eSvavMBRQ" type="_gnXUgAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(at);&#xD;
		this.pstrats = pstrats;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvIweQuLEei-6eSvavMBRQ" name="init" specification="_gtg_1QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvIweguLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
		    strategy.init(ball);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvIwewuLEei-6eSvavMBRQ" name="paintXfrm" specification="_guMVQguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvIwfAuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvIwfQuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvIwfguLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>for (APaintStrategy strategy : pstrats) {&#xD;
			strategy.paintXfrm(g, ball, at);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gnX7kAuLEei-6eSvavMBRQ" name="MultiPaintStrategy">
          <eAnnotations xmi:id="_gnX7kQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gnX7kguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gnYioQuLEei-6eSvavMBRQ" type="_gnXUgAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gtgYxAuLEei-6eSvavMBRQ" name="MultiPaintStrategy" method="_gvIwcAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gtg_0QuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gtg_0guLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_gvUWqAuLEei-6eSvavMBRQ">
            <body>This is a constructor that doesn't take in an affine transform.&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_gtg_0AuLEei-6eSvavMBRQ" name="pstrats" type="_gmd8oAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gtg_1AuLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gtg_0wuLEei-6eSvavMBRQ" type="_gnXUgAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gtg_1QuLEei-6eSvavMBRQ" name="init" method="_gvIweQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvUWqguLEei-6eSvavMBRQ">
            <body>This function initializes the ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gtg_1guLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guLuMAuLEei-6eSvavMBRQ" name="MultiPaintStrategy" method="_gvIwdAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_guLuMwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_guLuNAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_gvUWqQuLEei-6eSvavMBRQ">
            <body>This is a constructor that does take in an affine transform.&#xD;
	 * @param at An affine transform&#xD;
	 * @param pstrats An array of APaintStrategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_guLuMQuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guLuMguLEei-6eSvavMBRQ" name="pstrats" type="_gmd8oAuLEei-6eSvavMBRQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_guMVQQuLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_guMVQAuLEei-6eSvavMBRQ" type="_gnXUgAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guMVQguLEei-6eSvavMBRQ" name="paintXfrm" method="_gvIwewuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_guMVQwuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guMVRAuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guMVRQuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnc0EAuLEei-6eSvavMBRQ" name="MultiStrategy">
        <ownedComment xmi:id="_gvUWqwuLEei-6eSvavMBRQ">
          <body>This class defines a Multi Strategy which defines a movement strategy for a ball
is a combination of 2 other strategies.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_guugwAuLEei-6eSvavMBRQ" name="s1" visibility="private" type="_gnNjgAuLEei-6eSvavMBRQ" association="_gwOVkQuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_gvUWrAuLEei-6eSvavMBRQ" name="s2" visibility="private" type="_gnNjgAuLEei-6eSvavMBRQ" association="_gwbw8AuLEei-6eSvavMBRQ"/>
        <interfaceRealization xmi:id="_gthm4AuLEei-6eSvavMBRQ" client="_gnc0EAuLEei-6eSvavMBRQ" supplier="_gnNjgAuLEei-6eSvavMBRQ" contract="_gnNjgAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvIwfwuLEei-6eSvavMBRQ" name="MultiStrategy" specification="_gthm4QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvIwgAuLEei-6eSvavMBRQ" name="s1" type="_gnNjgAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvIwgQuLEei-6eSvavMBRQ" name="s2" type="_gnNjgAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvIwgguLEei-6eSvavMBRQ" type="_gnc0EAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this.s1 = s1;
		this.s2 = s2;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvIwgwuLEei-6eSvavMBRQ" name="updateState" specification="_gtiN9QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvIwhAuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvIwhQuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					s1.updateState(ball, disp);
					s2.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gthm4QuLEei-6eSvavMBRQ" name="MultiStrategy" method="_gvIwfwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gtiN8guLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gtiN8wuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gtiN8AuLEei-6eSvavMBRQ" name="s1" type="_gnNjgAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gtiN8QuLEei-6eSvavMBRQ" name="s2" type="_gnNjgAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gtiN9AuLEei-6eSvavMBRQ" type="_gnc0EAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gtiN9QuLEei-6eSvavMBRQ" name="updateState" method="_gvIwgwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gtiN9guLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gtiN9wuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnfQUAuLEei-6eSvavMBRQ" name="ReefImagePaintStrategy">
        <generalization xmi:id="_gti1AguLEei-6eSvavMBRQ" general="_gn2csAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvJXgAuLEei-6eSvavMBRQ" name="ReefImagePaintStrategy" specification="_gnfQUQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvJXgQuLEei-6eSvavMBRQ" type="_gnfQUAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Reef.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gnfQUQuLEei-6eSvavMBRQ" name="ReefImagePaintStrategy" method="_gvJXgAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gnf3YAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gnf3YQuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gnf3YguLEei-6eSvavMBRQ" type="_gnfQUAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gni6sAuLEei-6eSvavMBRQ" name="SaturnImagePaintStrategy">
        <generalization xmi:id="_gti1AwuLEei-6eSvavMBRQ" general="_gnOKkAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvJXgguLEei-6eSvavMBRQ" name="SaturnImagePaintStrategy" specification="_gnjhwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvJXgwuLEei-6eSvavMBRQ" type="_gni6sAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Saturn.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gnjhwAuLEei-6eSvavMBRQ" name="SaturnImagePaintStrategy" method="_gvJXgguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gnjhwQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gnkI0AuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gnkI0QuLEei-6eSvavMBRQ" type="_gni6sAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnkI0guLEei-6eSvavMBRQ" name="ShapePaintStrategy">
        <ownedComment xmi:id="_gvVkwAuLEei-6eSvavMBRQ">
          <body>This class defines a shape paint strategy.
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_gtjcEAuLEei-6eSvavMBRQ" general="_gmd8oAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_guvH0AuLEei-6eSvavMBRQ" name="shape" visibility="package" type="_gtYc8AuLEei-6eSvavMBRQ" association="_gwO8oQuLEei-6eSvavMBRQ"/>
        <interfaceRealization xmi:id="_gti1BAuLEei-6eSvavMBRQ" client="_gnkI0guLEei-6eSvavMBRQ" supplier="_gnJ5IAuLEei-6eSvavMBRQ" contract="_gnJ5IAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvJXhAuLEei-6eSvavMBRQ" name="ShapePaintStrategy" specification="_guOKcAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvJXhQuLEei-6eSvavMBRQ" name="shape" type="_gtYc8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvJXhguLEei-6eSvavMBRQ" type="_gnkI0guLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvJXhwuLEei-6eSvavMBRQ" name="ShapePaintStrategy" specification="_guOKdQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvJXiAuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvJXiQuLEei-6eSvavMBRQ" name="shape" type="_gtYc8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvJXiguLEei-6eSvavMBRQ" type="_gnkI0guLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(at);
		this.shape = shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvJXiwuLEei-6eSvavMBRQ" name="paintXfrm" specification="_guOxhQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvJXjAuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvJXjQuLEei-6eSvavMBRQ" name="host" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvJXjguLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>((Graphics2D) g).fill(at.createTransformedShape(shape));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvJXjwuLEei-6eSvavMBRQ" name="makeShape" specification="_gnlW8AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvJXkAuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvJXkQuLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvJXkguLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvJXkwuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvJXlAuLEei-6eSvavMBRQ" type="_gtYc8AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>at.setToTranslation(x, y);
		at.scale(x * xScale, y * yScale);  // optional rotation can be added as well
		return at.createTransformedShape(shape);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gnlW8AuLEei-6eSvavMBRQ" name="makeShape" method="_gvJXjwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gnlW8QuLEei-6eSvavMBRQ" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gnlW8guLEei-6eSvavMBRQ" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gnlW8wuLEei-6eSvavMBRQ" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gnl-AAuLEei-6eSvavMBRQ" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_guPYkAuLEei-6eSvavMBRQ" type="_gtYc8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guOKcAuLEei-6eSvavMBRQ" name="ShapePaintStrategy" method="_gvJXhAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_guOKcguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_guOKcwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_guOKcQuLEei-6eSvavMBRQ" name="shape" type="_gtYc8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guOKdAuLEei-6eSvavMBRQ" type="_gnkI0guLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guOKdQuLEei-6eSvavMBRQ" name="ShapePaintStrategy" method="_gvJXhwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_guOxgguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_guOxgwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_guOxgAuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guOxgQuLEei-6eSvavMBRQ" name="shape" type="_gtYc8AuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guOxhAuLEei-6eSvavMBRQ" type="_gnkI0guLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guOxhQuLEei-6eSvavMBRQ" name="paintXfrm" method="_gvJXiwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_guOxhguLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guOxhwuLEei-6eSvavMBRQ" name="host" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guOxiAuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnoaQAuLEei-6eSvavMBRQ" name="SheepImagePaintStrategy">
        <generalization xmi:id="_gtkDIAuLEei-6eSvavMBRQ" general="_gn2csAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvJ-kAuLEei-6eSvavMBRQ" name="SheepImagePaintStrategy" specification="_gnoaQQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvJ-kQuLEei-6eSvavMBRQ" type="_gnoaQAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Sheep.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gnoaQQuLEei-6eSvavMBRQ" name="SheepImagePaintStrategy" method="_gvJ-kAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gnoaQguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gnoaQwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gnpBUAuLEei-6eSvavMBRQ" type="_gnoaQAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnpBUQuLEei-6eSvavMBRQ" name="SoccerImagePaintStrategy">
        <generalization xmi:id="_gtkDIQuLEei-6eSvavMBRQ" general="_gnOKkAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvJ-kguLEei-6eSvavMBRQ" name="SoccerImagePaintStrategy" specification="_gnt50AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvJ-kwuLEei-6eSvavMBRQ" type="_gnpBUQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Soccer.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gnt50AuLEei-6eSvavMBRQ" name="SoccerImagePaintStrategy" method="_gvJ-kguLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gnt50QuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gnt50guLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gnt50wuLEei-6eSvavMBRQ" type="_gnpBUQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnug4AuLEei-6eSvavMBRQ" name="SonicImagePaintStrategy">
        <generalization xmi:id="_gtkDIguLEei-6eSvavMBRQ" general="_gn2csAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvJ-lAuLEei-6eSvavMBRQ" name="SonicImagePaintStrategy" specification="_gnug4QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvJ-lQuLEei-6eSvavMBRQ" type="_gnug4AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Sonic.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gnug4QuLEei-6eSvavMBRQ" name="SonicImagePaintStrategy" method="_gvJ-lAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gnvH8AuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gnvH8QuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gnvH8guLEei-6eSvavMBRQ" type="_gnug4AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnvH8wuLEei-6eSvavMBRQ" name="SpawnStrategy">
        <ownedComment xmi:id="_gvVkwQuLEei-6eSvavMBRQ">
          <body>This class defines a spawn strategy that interacts with other balls.
@author sn32, ll45</body>
        </ownedComment>
        <ownedAttribute xmi:id="_guvu4AuLEei-6eSvavMBRQ" name="count" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_guvu4QuLEei-6eSvavMBRQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_guwV8AuLEei-6eSvavMBRQ" name="delay" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_guwV8QuLEei-6eSvavMBRQ" value="100"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_gtkDIwuLEei-6eSvavMBRQ" client="_gnvH8wuLEei-6eSvavMBRQ" supplier="_gnNjgAuLEei-6eSvavMBRQ" contract="_gnNjgAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvJ-lguLEei-6eSvavMBRQ" name="updateState" specification="_gtkqMAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvJ-lwuLEei-6eSvavMBRQ" name="context" type="_gmkqUAuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_gvJ-mAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gvJ-mQuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_gvJ-mguLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>if (delay &lt; count++) {
			dispatcher.notifyAll(new IBallCmd() {
				/**
				 * This function applies this command to the correct ball using a dispatcher.
				 */
				@Override
				public void apply(Ball other, Dispatcher disp) {
					if (count != 0 &amp;&amp; context != other) {
						if ((context.getRad() + other.getRad()) > 
						    context.getLoc().distance(other.getLoc())) {
							disp.addObserver(new Ball(
									context.getCol(),
									new Point(context.getLoc()), 
									context.getRad(),
									new Point(-context.getVel().x+1,-context.getVel().y+1), 
									context.getCon(), 
									new SpawnStrategy(), 
									context.getPaintStrat()));
							count = 0;
							delay *= 5;
						}
					}
				}
			});
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gtkqMAuLEei-6eSvavMBRQ" name="updateState" method="_gvJ-lguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gtkqMQuLEei-6eSvavMBRQ" name="context" type="_gmkqUAuLEei-6eSvavMBRQ">
            <eAnnotations xmi:id="_gtkqNAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gtkqNQuLEei-6eSvavMBRQ" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_gtkqMguLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnwWEAuLEei-6eSvavMBRQ" name="SquarePaintStrategy">
        <ownedComment xmi:id="_gvVkwguLEei-6eSvavMBRQ">
          <body>This is the square paint strategy that paints a square.
@author sn32, ll45</body>
        </ownedComment>
        <interfaceRealization xmi:id="_gtlRQAuLEei-6eSvavMBRQ" client="_gnwWEAuLEei-6eSvavMBRQ" supplier="_gnJSEAuLEei-6eSvavMBRQ" contract="_gnJSEAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvKloAuLEei-6eSvavMBRQ" name="paint" specification="_guP_oAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvKloQuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvKloguLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>int halfSide = ball.getRad();
		g.setColor(ball.getCol());
		g.fillRect(ball.getLoc().x - halfSide, ball.getLoc().y - halfSide, 2 * halfSide, 2 * halfSide);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gtlRQQuLEei-6eSvavMBRQ" name="init">
          <ownedParameter xmi:id="_gtlRQguLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guP_oAuLEei-6eSvavMBRQ" name="paint" method="_gvKloAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_guP_oQuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guP_oguLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnxkMAuLEei-6eSvavMBRQ" name="StraightStrategy">
        <ownedComment xmi:id="_gvVkwwuLEei-6eSvavMBRQ">
          <body>This class defines a Straight Strategy which defines a movement strategy for a ball that just
moves by changing it's location by its velocity components.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_gtl4UAuLEei-6eSvavMBRQ" client="_gnxkMAuLEei-6eSvavMBRQ" supplier="_gnNjgAuLEei-6eSvavMBRQ" contract="_gnNjgAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvKlowuLEei-6eSvavMBRQ" name="updateState" specification="_gtl4UQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvKlpAuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvKlpQuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gtl4UQuLEei-6eSvavMBRQ" name="updateState" method="_gvKlowuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gtl4UguLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gtl4UwuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnyyUAuLEei-6eSvavMBRQ" name="SwellStrategy">
        <ownedComment xmi:id="_gvVkxAuLEei-6eSvavMBRQ">
          <body>This class defines a Swell Strategy which defines a movement strategy for a ball that grows it
in size, and once it reaches a certain size, it changes colors, and then shrinks slowly and repeats.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_gtmfYwuLEei-6eSvavMBRQ" client="_gnyyUAuLEei-6eSvavMBRQ" supplier="_gnNjgAuLEei-6eSvavMBRQ" contract="_gnNjgAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvKlpguLEei-6eSvavMBRQ" name="updateState" specification="_gtmfZAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvKlpwuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvKlqAuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					ball.setRad(ball.getRad() + ball.getRadDelta());
					if (ball.getRad() >= 80) {
						ball.setRadDelta(1);
						ball.setRadDelta(ball.getRadDelta() * -1);
						ball.setCol(rzr.randomColor());
					} else if (ball.getRad() &lt;= 20) {
						ball.setRadDelta(-5);
						ball.setRadDelta(ball.getRadDelta() * -1);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gtmfZAuLEei-6eSvavMBRQ" name="updateState" method="_gvKlpguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gtnGcAuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gtnGcQuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gnzZYAuLEei-6eSvavMBRQ" name="SwitcherStrategy">
        <ownedComment xmi:id="_gvVkxQuLEei-6eSvavMBRQ">
          <body>This class defines a Switcher Strategy which defines a strategy for a ball that can
change by updating the strategy.
@author sn32, lka2</body>
        </ownedComment>
        <ownedAttribute xmi:id="_guwV8wuLEei-6eSvavMBRQ" name="strategy" visibility="private" isStatic="true" type="_gnNjgAuLEei-6eSvavMBRQ" association="_gwPjsQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_guw9AAuLEei-6eSvavMBRQ" value="new StraightStrategy()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_gtnGdQuLEei-6eSvavMBRQ" client="_gnzZYAuLEei-6eSvavMBRQ" supplier="_gnNjgAuLEei-6eSvavMBRQ" contract="_gnNjgAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvKlqQuLEei-6eSvavMBRQ" name="updateState" specification="_gtntgAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvKlqguLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvKlqwuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the command to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					strategy.updateState(ball, disp);
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvLMsAuLEei-6eSvavMBRQ" name="setStrat" specification="_gtoUkguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvLMsQuLEei-6eSvavMBRQ" name="strat" type="_gnNjgAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>SwitcherStrategy.strategy = strat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvLMsguLEei-6eSvavMBRQ" name="getStrat" specification="_gn0AcAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvLMswuLEei-6eSvavMBRQ" type="_gnNjgAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return SwitcherStrategy.strategy;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gn0AcAuLEei-6eSvavMBRQ" name="getStrat" isStatic="true" method="_gvLMsguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvWL0QuLEei-6eSvavMBRQ">
            <body>This function returns the current strategy of the switcher balls.
	 * @return An IUpdateStrategy which is the current strategy of the switcher balls.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gtoUlAuLEei-6eSvavMBRQ" type="_gnNjgAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gtntgAuLEei-6eSvavMBRQ" name="updateState" method="_gvKlqQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gtntgQuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gtntgguLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gtoUkguLEei-6eSvavMBRQ" name="setStrat" isStatic="true" method="_gvLMsAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvWL0AuLEei-6eSvavMBRQ">
            <body>This function changes the strategy of all switcher balls to that of the parameter.
	 * @param strat An IUpdateStrategy which is the new strategy for all the balls to use</body>
          </ownedComment>
          <ownedParameter xmi:id="_gtoUkwuLEei-6eSvavMBRQ" name="strat" type="_gnNjgAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gn1OkAuLEei-6eSvavMBRQ" name="TeleportStrategy">
        <ownedComment xmi:id="_gvWL0guLEei-6eSvavMBRQ">
          <body>This class defines a Teleport Strategy which defines a movement strategy for a ball that randomly
changes the location of it, so it teleports.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_gto7oAuLEei-6eSvavMBRQ" client="_gn1OkAuLEei-6eSvavMBRQ" supplier="_gnNjgAuLEei-6eSvavMBRQ" contract="_gnNjgAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvLMtAuLEei-6eSvavMBRQ" name="updateState" specification="_gto7oQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvLMtQuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvLMtguLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % 80 == 0) {
						ball.setLoc(rzr.randomLoc(new Rectangle(ball.getCon().getWidth() - ball.getRad(), ball.getCon().getHeight() - ball.getRad())));
						ball.setCol(rzr.randomColor());
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gto7oQuLEei-6eSvavMBRQ" name="updateState" method="_gvLMtAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gto7oguLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gto7owuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gn2csAuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy">
        <ownedComment xmi:id="_gvWL0wuLEei-6eSvavMBRQ">
          <body>This class defines an upright image.&#xD;
@author sn32, ll45</body>
        </ownedComment>
        <generalization xmi:id="_gtpisguLEei-6eSvavMBRQ" general="_gnOKkAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvLMtwuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy" specification="_gn3DwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvLMuAuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvLMuQuLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvLMuguLEei-6eSvavMBRQ" type="_gn2csAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvLzwAuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy" specification="_guRNwAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvLzwQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvLzwguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvLzwwuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvLzxAuLEei-6eSvavMBRQ" type="_gn2csAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor, at);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvLzxQuLEei-6eSvavMBRQ" name="paintCfg" specification="_guR00guLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvLzxguLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvLzxwuLEei-6eSvavMBRQ" name="host" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>super.paintCfg(g, host);&#xD;
		if(Math.abs(Math.atan2(host.getVel().y, host.getVel().x))> Math.PI/2.0) {&#xD;
			at.scale(1.0, -1.0);&#xD;
		}       &#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gn3DwAuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy" method="_gvLMtwuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gn3DwwuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gn3DxAuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gn3DwQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gn3DwguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gn3DxQuLEei-6eSvavMBRQ" type="_gn2csAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guRNwAuLEei-6eSvavMBRQ" name="UprightImagePaintStrategy" method="_gvLzwAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_guRNxAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_guR00AuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_guRNwQuLEei-6eSvavMBRQ" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_guRNwguLEei-6eSvavMBRQ" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_guRNwwuLEei-6eSvavMBRQ" name="at" type="_gtH-QAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guR00QuLEei-6eSvavMBRQ" type="_gn2csAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guR00guLEei-6eSvavMBRQ" name="paintCfg" visibility="protected" method="_gvLzxQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_guR00wuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guR01AuLEei-6eSvavMBRQ" name="host" type="_gmkqUAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gn4R4AuLEei-6eSvavMBRQ" name="VenusImagePaintStrategy">
        <generalization xmi:id="_gtqJwAuLEei-6eSvavMBRQ" general="_gnOKkAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvLzyAuLEei-6eSvavMBRQ" name="VenusImagePaintStrategy" specification="_gn448AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvLzyQuLEei-6eSvavMBRQ" type="_gn4R4AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;images/Venus.gif&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gn448AuLEei-6eSvavMBRQ" name="VenusImagePaintStrategy" method="_gvLzyAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gn448QuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gn448guLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gn448wuLEei-6eSvavMBRQ" type="_gn4R4AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gn5gAAuLEei-6eSvavMBRQ" name="WiggleStrategy">
        <ownedComment xmi:id="_gvWL1AuLEei-6eSvavMBRQ">
          <body>This class defines a Wiggle Strategy which defines a movement strategy for a ball that randomly
changes the velocity direction, so it wiggles.
@author sn32, lka2</body>
        </ownedComment>
        <interfaceRealization xmi:id="_gtqw0AuLEei-6eSvavMBRQ" client="_gn5gAAuLEei-6eSvavMBRQ" supplier="_gnNjgAuLEei-6eSvavMBRQ" contract="_gnNjgAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvLzyguLEei-6eSvavMBRQ" name="updateState" specification="_gtqw0QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvLzywuLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvLzzAuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd() {
			/**
			 * This function applies the changes to the correct ball using a dispatcher.
			 */
			@Override
			public void apply(Ball other, Dispatcher disp) {
				if (ball.equals(other)) {
					Randomizer rzr = Randomizer.Singleton;
					if (ball.getItr() % rzr.randomInt(2,  100) == 0) {
						ball.setVel(new Point(ball.getVel().x, ball.getVel().y * -1));
					} else if (ball.getItr() % rzr.randomInt(2, 100) == 0){
						ball.setVel(new Point(ball.getVel().x * -1, ball.getVel().y));
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gtqw0QuLEei-6eSvavMBRQ" name="updateState" method="_gvLzyguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gtqw0guLEei-6eSvavMBRQ" name="ball" type="_gmkqUAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gtqw0wuLEei-6eSvavMBRQ" name="dispatcher" type="_gn7VMAuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gvRTUAuLEei-6eSvavMBRQ" name="" memberEnd="_gunMAAuLEei-6eSvavMBRQ _gvRTUQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gvRTUQuLEei-6eSvavMBRQ" name="" type="_gmkqUAuLEei-6eSvavMBRQ" association="_gvRTUAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gvR6YAuLEei-6eSvavMBRQ" name="" memberEnd="_gunMAQuLEei-6eSvavMBRQ _gvR6YQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gvR6YQuLEei-6eSvavMBRQ" name="" type="_gmkqUAuLEei-6eSvavMBRQ" association="_gvR6YAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gvR6YguLEei-6eSvavMBRQ" name="" memberEnd="_gunzEguLEei-6eSvavMBRQ _gvR6YwuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gvR6YwuLEei-6eSvavMBRQ" name="" type="_gmkqUAuLEei-6eSvavMBRQ" association="_gvR6YguLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gvR6ZAuLEei-6eSvavMBRQ" name="" memberEnd="_gunzEwuLEei-6eSvavMBRQ _gvShcAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gvShcAuLEei-6eSvavMBRQ" name="" type="_gmkqUAuLEei-6eSvavMBRQ" association="_gvR6ZAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwGZwAuLEei-6eSvavMBRQ" name="" memberEnd="_gwGZwQuLEei-6eSvavMBRQ _gnID8guLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwGZwQuLEei-6eSvavMBRQ" name="" type="_gnID8AuLEei-6eSvavMBRQ" association="_gwGZwAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwHA0QuLEei-6eSvavMBRQ" name="" memberEnd="_gwHA0guLEei-6eSvavMBRQ _gnIrAAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwHA0guLEei-6eSvavMBRQ" name="" type="_gnID8AuLEei-6eSvavMBRQ" association="_gwHA0QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwHn4QuLEei-6eSvavMBRQ" name="" memberEnd="_gwHn4guLEei-6eSvavMBRQ _gnLuUguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwHn4guLEei-6eSvavMBRQ" name="" type="_gnLHQAuLEei-6eSvavMBRQ" association="_gwHn4QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwIO8QuLEei-6eSvavMBRQ" name="" memberEnd="_gwIO8guLEei-6eSvavMBRQ _gnMVYguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwIO8guLEei-6eSvavMBRQ" name="" type="_gnLHQAuLEei-6eSvavMBRQ" association="_gwIO8QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwKEIQuLEei-6eSvavMBRQ" name="" memberEnd="_gwKEIguLEei-6eSvavMBRQ _gumk8QuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwKEIguLEei-6eSvavMBRQ" name="" type="_gmd8oAuLEei-6eSvavMBRQ" association="_gwKEIQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwKEJAuLEei-6eSvavMBRQ" name="" memberEnd="_gwKEJQuLEei-6eSvavMBRQ _gunzFAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwKEJQuLEei-6eSvavMBRQ" name="" type="_gmkqUAuLEei-6eSvavMBRQ" association="_gwKEJAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwKrMQuLEei-6eSvavMBRQ" name="" memberEnd="_gwKrMguLEei-6eSvavMBRQ _guoaIQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwKrMguLEei-6eSvavMBRQ" name="" type="_gmkqUAuLEei-6eSvavMBRQ" association="_gwKrMQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwLSQAuLEei-6eSvavMBRQ" name="" memberEnd="_gwLSQQuLEei-6eSvavMBRQ _gupoQAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwLSQQuLEei-6eSvavMBRQ" name="" type="_gmw3kAuLEei-6eSvavMBRQ" association="_gwLSQAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwLSQwuLEei-6eSvavMBRQ" name="" memberEnd="_gwLSRAuLEei-6eSvavMBRQ _guqPUguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwLSRAuLEei-6eSvavMBRQ" name="" type="_gmw3kAuLEei-6eSvavMBRQ" association="_gwLSQwuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwL5UQuLEei-6eSvavMBRQ" name="" memberEnd="_gwL5UguLEei-6eSvavMBRQ _guqPVQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwL5UguLEei-6eSvavMBRQ" name="" type="_gmw3kAuLEei-6eSvavMBRQ" association="_gwL5UQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwMgYQuLEei-6eSvavMBRQ" name="" memberEnd="_gwMgYguLEei-6eSvavMBRQ _gurdcAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwMgYguLEei-6eSvavMBRQ" name="" type="_gnB9UAuLEei-6eSvavMBRQ" association="_gwMgYQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwMgZAuLEei-6eSvavMBRQ" name="" memberEnd="_gwMgZQuLEei-6eSvavMBRQ _gusEhAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwMgZQuLEei-6eSvavMBRQ" name="" type="_gnOKkAuLEei-6eSvavMBRQ" association="_gwMgZAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwNHcQuLEei-6eSvavMBRQ" name="" memberEnd="_gwNHcguLEei-6eSvavMBRQ _gusrkQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwNHcguLEei-6eSvavMBRQ" name="" type="_gnOKkAuLEei-6eSvavMBRQ" association="_gwNHcQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwNHdAuLEei-6eSvavMBRQ" name="" memberEnd="_gwNHdQuLEei-6eSvavMBRQ _gusrlAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwNHdQuLEei-6eSvavMBRQ" name="" type="_gnOKkAuLEei-6eSvavMBRQ" association="_gwNHdAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwNugQuLEei-6eSvavMBRQ" name="" memberEnd="_gwNugguLEei-6eSvavMBRQ _gutSoAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwNugguLEei-6eSvavMBRQ" name="" type="_gnOKkAuLEei-6eSvavMBRQ" association="_gwNugQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwNuhAuLEei-6eSvavMBRQ" name="" memberEnd="_gwNuhQuLEei-6eSvavMBRQ _gutSoguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwNuhQuLEei-6eSvavMBRQ" name="" type="_gnXUgAuLEei-6eSvavMBRQ" association="_gwNuhAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwOVkQuLEei-6eSvavMBRQ" name="" memberEnd="_gwOVkguLEei-6eSvavMBRQ _guugwAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwOVkguLEei-6eSvavMBRQ" name="" type="_gnc0EAuLEei-6eSvavMBRQ" association="_gwOVkQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwO8oQuLEei-6eSvavMBRQ" name="" memberEnd="_gwO8oguLEei-6eSvavMBRQ _guvH0AuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwO8oguLEei-6eSvavMBRQ" name="" type="_gnkI0guLEei-6eSvavMBRQ" association="_gwO8oQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwPjsQuLEei-6eSvavMBRQ" name="" memberEnd="_gwPjsguLEei-6eSvavMBRQ _guwV8wuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwPjsguLEei-6eSvavMBRQ" name="" type="_gnzZYAuLEei-6eSvavMBRQ" association="_gwPjsQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwbw8AuLEei-6eSvavMBRQ" name="" memberEnd="_gwbw8QuLEei-6eSvavMBRQ _gvUWrAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwbw8QuLEei-6eSvavMBRQ" name="" type="_gnc0EAuLEei-6eSvavMBRQ" association="_gwbw8AuLEei-6eSvavMBRQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gk52YAuLEei-6eSvavMBRQ" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_goPeQAuLEei-6eSvavMBRQ" name="BallWorldView">
        <ownedComment xmi:id="_gvWy5AuLEei-6eSvavMBRQ">
          <body>This is the BallWorldView class, which has the frame on which our BallWorld is displayed.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <generalization xmi:id="_gudbAAuLEei-6eSvavMBRQ" general="_gtvpUQuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_guzZQQuLEei-6eSvavMBRQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu0AUAuLEei-6eSvavMBRQ" value="-7114823923004621639L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu0AUQuLEei-6eSvavMBRQ" name="contentPane" visibility="private" type="_gtwQYQuLEei-6eSvavMBRQ" association="_gwQKxAuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_gu0nYAuLEei-6eSvavMBRQ" name="pnlControl" visibility="private" isLeaf="true" type="_gtwQYQuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwQx0QuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu0nYQuLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu0nYwuLEei-6eSvavMBRQ" name="tfClassname" visibility="private" isLeaf="true" type="_gtw3cQuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwRY4QuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu0nZAuLEei-6eSvavMBRQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu1OcQuLEei-6eSvavMBRQ" name="btnClearBalls" visibility="private" isLeaf="true" type="_gtxegQuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwR_8QuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu1OcguLEei-6eSvavMBRQ" value="new JButton(&quot;Clear balls&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu11gAuLEei-6eSvavMBRQ" name="adapter" visibility="private" type="_goZ2UAuLEei-6eSvavMBRQ" association="_gwSnAQuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_gu2ckQuLEei-6eSvavMBRQ" name="pnlCanvas" visibility="private" isLeaf="true" type="_gtwQYQuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwTOEQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu2ckguLEei-6eSvavMBRQ" value="new JPanel() {&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * This is a private variable that gives the class an ID to serialize and deserialize.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;private static final long serialVersionUID = 8303517520311377718L;&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Overridden paintComponent method to paint a shape in the panel.&#xA;&#x9;&#x9; * @param g The Graphics object to paint on.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public void paintComponent(Graphics g) {&#xA;&#x9;&#x9;&#x9;super.paintComponent(g); // Do everything normally done first, e.g. clear the screen.&#xA;&#x9;&#x9;&#x9;adapter.paintBalls(g);&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu3DoQuLEei-6eSvavMBRQ" name="btnAddToList" visibility="private" isLeaf="true" type="_gtxegQuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwT1IQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu3DoguLEei-6eSvavMBRQ" value="new JButton(&quot;Add to list&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu3DpAuLEei-6eSvavMBRQ" name="btnCombine" visibility="private" isLeaf="true" type="_gtxegQuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwUcMQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu3qsAuLEei-6eSvavMBRQ" value="new JButton(&quot;Combine&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu3qsguLEei-6eSvavMBRQ" name="btnMakeSelectedBall" visibility="private" isLeaf="true" type="_gtxegQuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwVDQQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu3qswuLEei-6eSvavMBRQ" value="new JButton(&quot;Make selected ball&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu4RwQuLEei-6eSvavMBRQ" name="btnMakeSwitcher" visibility="private" isLeaf="true" type="_gtxegQuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwVqUQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu4RwguLEei-6eSvavMBRQ" value="new JButton(&quot;Make switcher&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu4RxAuLEei-6eSvavMBRQ" name="btnSwitch" visibility="private" isLeaf="true" type="_gtxegQuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwWRYQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu440AuLEei-6eSvavMBRQ" value="new JButton(&quot;Switch&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu440guLEei-6eSvavMBRQ" name="comBoxTop" visibility="private" type="_gtysoguLEei-6eSvavMBRQ" association="_gwW4cQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu5f4QuLEei-6eSvavMBRQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu5f4wuLEei-6eSvavMBRQ" name="comBoxBottom" visibility="private" type="_gtysoguLEei-6eSvavMBRQ" association="_gwW4dAuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu6uAAuLEei-6eSvavMBRQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu6uAguLEei-6eSvavMBRQ" name="pnlChangeList" visibility="private" isLeaf="true" type="_gtwQYQuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwXfgQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu7VEAuLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu7VEguLEei-6eSvavMBRQ" name="pnlDropDowns" visibility="private" isLeaf="true" type="_gtwQYQuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwYGkQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu7VEwuLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu78IQuLEei-6eSvavMBRQ" name="pnlSwitching" visibility="private" isLeaf="true" type="_gtwQYQuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwYtoQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu78IguLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu78JAuLEei-6eSvavMBRQ" name="pnlPaintStrats" visibility="private" isLeaf="true" type="_gtwQYQuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwZUsQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu8jMAuLEei-6eSvavMBRQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu8jMguLEei-6eSvavMBRQ" name="btnAddPaintStrat" visibility="private" isLeaf="true" type="_gtxegQuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwZ7wQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu8jMwuLEei-6eSvavMBRQ" value="new JButton(&quot;Add&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu9KQQuLEei-6eSvavMBRQ" name="txtPaintStrat" visibility="private" isLeaf="true" type="_gtw3cQuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwai0QuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu9KQguLEei-6eSvavMBRQ" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gu9KRAuLEei-6eSvavMBRQ" name="comBoxStrats" visibility="private" isLeaf="true" type="_gtysoguLEei-6eSvavMBRQ" isReadOnly="true" association="_gwbJ4AuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gu9xUQuLEei-6eSvavMBRQ" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvNo-QuLEei-6eSvavMBRQ" name="getPanel" specification="_goR6gAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvNo-guLEei-6eSvavMBRQ" type="_gtwQYQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return pnlCanvas;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvOQAAuLEei-6eSvavMBRQ" name="BallWorldView" specification="_gt1I4AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvOQAQuLEei-6eSvavMBRQ" name="adapter" type="_goZ2UAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvOQAguLEei-6eSvavMBRQ" type="_goPeQAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>txtPaintStrat.setToolTipText(&quot;This is the text field where you can add paint strategies.&quot;);
		pnlPaintStrats.setToolTipText(&quot;This is the panel that holds the components that let you add paint strategies and select them.&quot;);
		pnlPaintStrats.add(txtPaintStrat);
		txtPaintStrat.setColumns(10);
		this.adapter = adapter;
		initGUI();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvOQAwuLEei-6eSvavMBRQ" name="updateView" specification="_goR6gQuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>repaint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvOQBAuLEei-6eSvavMBRQ" name="getCanvas" specification="_goR6gguLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvOQBQuLEei-6eSvavMBRQ" type="_gtFiAAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return getPanel();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvOQBguLEei-6eSvavMBRQ" name="initGUI" specification="_goShkAuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>setTitle(&quot;BallWorld&quot;);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setToolTipText(&quot;This is the content of the frame.&quot;);
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		pnlControl.setBackground(Color.DARK_GRAY);
		pnlControl.setToolTipText(&quot;This is the control panel that lets you create balls and clear them.&quot;);
		
		contentPane.add(pnlControl, BorderLayout.NORTH);
		pnlControl.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		pnlChangeList.setToolTipText(&quot;This panel is where you can add the type of ball you want to make to the drop down lists.&quot;);
		
		pnlControl.add(pnlChangeList);
		pnlChangeList.setLayout(new GridLayout(0, 1, 0, 0));
		
		pnlChangeList.add(tfClassname);
		tfClassname.setToolTipText(&quot;The type of the ball you want to make.&quot;);
		
		tfClassname.setColumns(10);
		btnAddToList.setToolTipText(&quot;This button adds the strategy type in the text field to the drop down boxes.&quot;);
		pnlChangeList.add(btnAddToList);
		btnAddToList.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (tfClassname.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem stratFac = adapter.addStrategy(tfClassname.getText());

             comBoxTop.insertItemAt(stratFac, 0);
             comBoxBottom.insertItemAt(stratFac, 0);
			}
		});
		pnlDropDowns.setToolTipText(&quot;This panel is for the drop down boxes, and buttons to make selected balls and combine strategies.&quot;);
		
		pnlControl.add(pnlDropDowns);
		pnlDropDowns.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSelectedBall.setToolTipText(&quot;This button makes a ball with the update strategy of the factory that's selected on the top drop down box.&quot;);
		pnlDropDowns.add(btnMakeSelectedBall);
		comBoxTop.setToolTipText(&quot;This is the drop down list on the top.&quot;);
		pnlDropDowns.add(comBoxTop);
		comBoxBottom.setToolTipText(&quot;This is the drop down list on the bottom.&quot;);
		pnlDropDowns.add(comBoxBottom);
		btnCombine.setToolTipText(&quot;This button combines the two strategy factories in the combo boxes.&quot;);
		pnlDropDowns.add(btnCombine);
		btnCombine.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem top = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem bottom = comBoxBottom.getItemAt(comBoxBottom.getSelectedIndex());
				
				if (top == null || bottom == null) {
					return;
				}
				
				TDropListItem combo = adapter.combineStrategies(top, bottom);
				comBoxTop.addItem(combo);
				comBoxBottom.addItem(combo);
			}
		});
		btnMakeSelectedBall.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem selected = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				TDropListItem paintFac = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (selected == null || paintFac == null) {
					return;
				}
				
				adapter.makeBall(selected, paintFac);
			}
		});
		pnlSwitching.setToolTipText(&quot;This panel is for the buttons related to making switcher balls and switching their strategies.&quot;);
		
		pnlControl.add(pnlSwitching);
		pnlSwitching.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeSwitcher.setToolTipText(&quot;Click this item to make a switcher ball.&quot;);
		pnlSwitching.add(btnMakeSwitcher);
		btnSwitch.setToolTipText(&quot;Click this button to switch the switcher balls to the selected item in the top combo box.&quot;);
		pnlSwitching.add(btnSwitch);
		
		btnSwitch.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switchFac = comBoxTop.getItemAt(comBoxTop.getSelectedIndex());
				
				if (switchFac == null) {
					return;
				}
				
				adapter.setSwitcherStrategy(switchFac);
			}
		});
		
		btnMakeSwitcher.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem switcherStrat = adapter.getSwitcherFac();
				TDropListItem paintStrat = comBoxStrats.getItemAt(comBoxStrats.getSelectedIndex());
				
				if (paintStrat == null) {
					return;
				}
				
				adapter.makeBall(switcherStrat, paintStrat);
			}
		});
		btnClearBalls.setToolTipText(&quot;Click this to clear the balls on the canvas.&quot;);
		btnClearBalls.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				adapter.clearBalls();
			}
		});
		
		pnlControl.add(btnClearBalls);
		
		pnlControl.add(pnlPaintStrats);
		pnlPaintStrats.setLayout(new GridLayout(0, 1, 0, 0));
		btnAddPaintStrat.setToolTipText(&quot;This is the button that lets you add paint strategies to the combo box below.&quot;);
		btnAddPaintStrat.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (txtPaintStrat.getText().equals(&quot;&quot;)) {
					return;
				}
				
				TDropListItem paintFac = adapter.addPaintFactory(txtPaintStrat.getText());
             comBoxStrats.insertItemAt(paintFac, 0);
			}
		});
		
		
		pnlPaintStrats.add(btnAddPaintStrat);
		comBoxStrats.setToolTipText(&quot;The is the combo box for the paint strategies that can be implemented.&quot;);
		
		pnlPaintStrats.add(comBoxStrats);
		pnlCanvas.setBackground(Color.LIGHT_GRAY);
		pnlCanvas.setToolTipText(&quot;This is the canvas where the balls move, and stay in.&quot;);
		
		contentPane.add(pnlCanvas, BorderLayout.CENTER);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvOQBwuLEei-6eSvavMBRQ" name="start" specification="_goShkQuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>setExtendedState(JFrame.MAXIMIZED_BOTH);
		setVisible(true);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_goR6gAuLEei-6eSvavMBRQ" name="getPanel" method="_gvNo-QuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvWy5QuLEei-6eSvavMBRQ">
            <body>This gets the canvas of the frame.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_gucz8AuLEei-6eSvavMBRQ" type="_gtwQYQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_goR6gQuLEei-6eSvavMBRQ" name="updateView" method="_gvOQAwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvWy5wuLEei-6eSvavMBRQ">
            <body>Update the view by repainting</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_goR6gguLEei-6eSvavMBRQ" name="getCanvas" method="_gvOQBAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvWy6AuLEei-6eSvavMBRQ">
            <body>This function returns the canvas panel.
	 * @return JPanel which is the canvas</body>
          </ownedComment>
          <ownedParameter xmi:id="_gucz8QuLEei-6eSvavMBRQ" type="_gtFiAAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_goShkAuLEei-6eSvavMBRQ" name="initGUI" visibility="private" method="_gvOQBguLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvWy6QuLEei-6eSvavMBRQ">
            <body>This private function initializes the GUI.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_goShkQuLEei-6eSvavMBRQ" name="start" method="_gvOQBwuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvWy6guLEei-6eSvavMBRQ">
            <body>This function makes the frame visible after initializing it.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_gt1I4AuLEei-6eSvavMBRQ" name="BallWorldView" method="_gvOQAAuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gt1v8AuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gt1v8QuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_gvWy5guLEei-6eSvavMBRQ">
            <body>Create the frame
	 * @param adapter An IView2ModelAdapter</body>
          </ownedComment>
          <ownedParameter xmi:id="_gt1I4QuLEei-6eSvavMBRQ" name="adapter" type="_goZ2UAuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gt1v8guLEei-6eSvavMBRQ" type="_goPeQAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_goZ2UAuLEei-6eSvavMBRQ" name="IView2ModelAdapter">
        <ownedComment xmi:id="_gvWy6wuLEei-6eSvavMBRQ">
          <body>This is an interface which has the functions that the view wants the model to have.
@author sn32, kyl3, lka2, swong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_godgsAuLEei-6eSvavMBRQ" name="switcherFac" type="_guf3QQuLEei-6eSvavMBRQ" isReadOnly="true" association="_gwI2AQuLEei-6eSvavMBRQ"/>
        <ownedOperation xmi:id="_gobrgAuLEei-6eSvavMBRQ" name="clearBalls">
          <ownedComment xmi:id="_gvWy7AuLEei-6eSvavMBRQ">
            <body>This is a function that will tell the model to clear the balls.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_goc5oAuLEei-6eSvavMBRQ" name="addStrategy">
          <ownedComment xmi:id="_gvWy7guLEei-6eSvavMBRQ">
            <body>This function will take the given short strategy name and return a corresponding
     * something to put onto both drop lists.
     * @param classname The shortened class name of the desired strategy
     * @return Something to put onto both the drop lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_goc5oQuLEei-6eSvavMBRQ" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gugeUQuLEei-6eSvavMBRQ" type="_guf3QQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_goeHwAuLEei-6eSvavMBRQ" name="addPaintFactory">
          <ownedParameter xmi:id="_goeHwQuLEei-6eSvavMBRQ" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_guhscguLEei-6eSvavMBRQ" type="_guf3QQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gufQMAuLEei-6eSvavMBRQ" name="paintBalls">
          <ownedComment xmi:id="_gvWy7QuLEei-6eSvavMBRQ">
            <body>This is a function that will tell the model to paint the balls.
	 * @param g The graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_guf3QAuLEei-6eSvavMBRQ" name="g" type="_gtGwIQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gugeUguLEei-6eSvavMBRQ" name="makeBall">
          <ownedComment xmi:id="_gvWy7wuLEei-6eSvavMBRQ">
            <body>This function will make a ball with the selected short strategy name.
     * @param selectedItem A shorten class name for the desired strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_gugeUwuLEei-6eSvavMBRQ" name="selectedItem" type="_guf3QQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gugeVAuLEei-6eSvavMBRQ" name="paintStrat" type="_guf3QQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guhFYAuLEei-6eSvavMBRQ" name="combineStrategies">
          <ownedComment xmi:id="_gvXZ8AuLEei-6eSvavMBRQ">
            <body>This function will return a new object to put on both lists, given two items from the lists.
     * @param selectedItem1 An object from one drop list
     * @param selectedItem2 An object from the other drop list
     * @return An object to put back on both lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_guhFYQuLEei-6eSvavMBRQ" name="selectedItem1" type="_guf3QQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guhFYguLEei-6eSvavMBRQ" name="selectedItem2" type="_guf3QQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guhFYwuLEei-6eSvavMBRQ" type="_guf3QQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guhscAuLEei-6eSvavMBRQ" name="setSwitcherStrategy">
          <ownedComment xmi:id="_gvXZ8QuLEei-6eSvavMBRQ">
            <body>This function will change the current strategy of the switcher balls to whatever
     * strategy is made by the factory in the parameter.
     * @param switchFac An object from the top drop list.</body>
          </ownedComment>
          <ownedParameter xmi:id="_guhscQuLEei-6eSvavMBRQ" name="switchFac" type="_guf3QQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_guf3QQuLEei-6eSvavMBRQ" name="TDropListItem"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwI2AQuLEei-6eSvavMBRQ" name="" memberEnd="_gwI2AguLEei-6eSvavMBRQ _godgsAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwI2AguLEei-6eSvavMBRQ" name="" type="_goZ2UAuLEei-6eSvavMBRQ" association="_gwI2AQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwQKxAuLEei-6eSvavMBRQ" name="" memberEnd="_gwQKxQuLEei-6eSvavMBRQ _gu0AUQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwQKxQuLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwQKxAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwQx0QuLEei-6eSvavMBRQ" name="" memberEnd="_gwQx0guLEei-6eSvavMBRQ _gu0nYAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwQx0guLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwQx0QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwRY4QuLEei-6eSvavMBRQ" name="" memberEnd="_gwRY4guLEei-6eSvavMBRQ _gu0nYwuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwRY4guLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwRY4QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwR_8QuLEei-6eSvavMBRQ" name="" memberEnd="_gwR_8guLEei-6eSvavMBRQ _gu1OcQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwR_8guLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwR_8QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwSnAQuLEei-6eSvavMBRQ" name="" memberEnd="_gwSnAguLEei-6eSvavMBRQ _gu11gAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwSnAguLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwSnAQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwTOEQuLEei-6eSvavMBRQ" name="" memberEnd="_gwTOEguLEei-6eSvavMBRQ _gu2ckQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwTOEguLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwTOEQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwT1IQuLEei-6eSvavMBRQ" name="" memberEnd="_gwT1IguLEei-6eSvavMBRQ _gu3DoQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwT1IguLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwT1IQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwUcMQuLEei-6eSvavMBRQ" name="" memberEnd="_gwUcMguLEei-6eSvavMBRQ _gu3DpAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwUcMguLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwUcMQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwVDQQuLEei-6eSvavMBRQ" name="" memberEnd="_gwVDQguLEei-6eSvavMBRQ _gu3qsguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwVDQguLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwVDQQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwVqUQuLEei-6eSvavMBRQ" name="" memberEnd="_gwVqUguLEei-6eSvavMBRQ _gu4RwQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwVqUguLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwVqUQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwWRYQuLEei-6eSvavMBRQ" name="" memberEnd="_gwWRYguLEei-6eSvavMBRQ _gu4RxAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwWRYguLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwWRYQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwW4cQuLEei-6eSvavMBRQ" name="" memberEnd="_gwW4cguLEei-6eSvavMBRQ _gu440guLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwW4cguLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwW4cQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwW4dAuLEei-6eSvavMBRQ" name="" memberEnd="_gwW4dQuLEei-6eSvavMBRQ _gu5f4wuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwW4dQuLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwW4dAuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwXfgQuLEei-6eSvavMBRQ" name="" memberEnd="_gwXfgguLEei-6eSvavMBRQ _gu6uAguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwXfgguLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwXfgQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwYGkQuLEei-6eSvavMBRQ" name="" memberEnd="_gwYGkguLEei-6eSvavMBRQ _gu7VEguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwYGkguLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwYGkQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwYtoQuLEei-6eSvavMBRQ" name="" memberEnd="_gwYtoguLEei-6eSvavMBRQ _gu78IQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwYtoguLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwYtoQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwZUsQuLEei-6eSvavMBRQ" name="" memberEnd="_gwZUsguLEei-6eSvavMBRQ _gu78JAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwZUsguLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwZUsQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwZ7wQuLEei-6eSvavMBRQ" name="" memberEnd="_gwZ7wguLEei-6eSvavMBRQ _gu8jMguLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwZ7wguLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwZ7wQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwai0QuLEei-6eSvavMBRQ" name="" memberEnd="_gwai0guLEei-6eSvavMBRQ _gu9KQQuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwai0guLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwai0QuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwbJ4AuLEei-6eSvavMBRQ" name="" memberEnd="_gwbJ4QuLEei-6eSvavMBRQ _gu9KRAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwbJ4QuLEei-6eSvavMBRQ" name="" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwbJ4AuLEei-6eSvavMBRQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gk7rkAuLEei-6eSvavMBRQ" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_gmaSQAuLEei-6eSvavMBRQ" name="BallWorldController">
        <ownedComment xmi:id="_gvQsQAuLEei-6eSvavMBRQ">
          <body>This is the BallWorldController, that has private variables for model and view,
and is able to interface between them.
@author sn32, kyl3, lka2, swong
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_gulW0AuLEei-6eSvavMBRQ" name="model" visibility="private" type="_gmw3kAuLEei-6eSvavMBRQ" association="_gwJdEQuLEei-6eSvavMBRQ"/>
        <ownedAttribute xmi:id="_gul94AuLEei-6eSvavMBRQ" name="view" visibility="private" type="_goPeQAuLEei-6eSvavMBRQ" association="_gwJdFAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvA0oAuLEei-6eSvavMBRQ" name="main" specification="_gmbgYAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvA0oQuLEei-6eSvavMBRQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gvA0oguLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(() -> {
			try {
				(new BallWorldController()).start();
			} catch (Exception e) {
				e.printStackTrace();
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvA0owuLEei-6eSvavMBRQ" name="BallWorldController" specification="_gmcHcAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvA0pAuLEei-6eSvavMBRQ" type="_gmaSQAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>model = new BallWorldModel(new IModel2ViewAdapter() {

			/**
			 * This function from the IModel2ViewAdapter allows the controller
			 * to tell the view to update.
			 */
			@Override
			public void update() {
				view.updateView();
			}

			/**
			 * This function from the IModel2ViewAdapter allows the controller to get
			 * the canvas from the view.
			 */
			@Override
			public Container getCanvas() {
				return view.getCanvas();
			}
		});
		
		view = new BallWorldView&lt;IStrategyFac>(new IView2ModelAdapter&lt;IStrategyFac>() {
	        /**
	         * Returns an IStrategyFac that can instantiate the strategy specified
	         * by classname. Returns the error strategy factory if classname is null.
	         * The toString() of the returned factory is the classname.
	         * @param classname Shortened name of desired strategy
	         * @return A factory to make that strategy
	         */
			@Override
	        public IStrategyFac addStrategy(String classname) {
	        		return model.makeStrategyFac(classname);
	        	}

	        /**
	         * Add a ball to the system with a strategy as given by the given IStrategyFac
	         * @param selectedItem The fully qualified name of the desired strategy.
	         */
	        @Override
	        public void makeBall(IStrategyFac selectedItem, IStrategyFac paintStrat) {
	        		if (null != selectedItem &amp;&amp; paintStrat != null) {
	        			model.makeBall(selectedItem.make(), paintStrat.makePaint());
	        		}
	        	}
			
			/**
			 * Returns an IStrategyFac that can instantiate a MultiStrategy with the
			 * two strategies made by the two given IStrategyFac objects. Returns
			 * the error strategy factory if either supplied factory is null. The
			 * toString() of the returned factory is the toString()'s of the two given
			 * factories, concatenated with &quot;-&quot;.
			 * @param selectedItem1 An IStrategyFac for a strategy
			 * @param selectedItem2 An IStrategyFac for a strategy
			 * @return An IStrategyFac for the composition of the two strategies
			 */
	        @Override
			public IStrategyFac combineStrategies(IStrategyFac selectedItem1, IStrategyFac selectedItem2) {
				return model.combineStrategyFacs(selectedItem1, selectedItem2);
			}
			
			/**
			 * This function tells the model to clear all the balls from the canvas.
			 */
			@Override
			public void clearBalls() {
				model.clearBalls();
			}
			
			/**
			 * This function tells the model to paint and update the status of all the balls.
			 */
			@Override 
			public void paintBalls(Graphics g) {
				model.update(g); // see is this is correct or if a paint method is needed
			}

			/**
			 * This function sets the strategy of the switcher balls to whatever is made by
			 * the input's make method.
			 * @param switchFac The new strategy factory whose make method returns the new strategy
			 * for the switcher balls
			 */
			@Override
			public void setSwitcherStrategy(IStrategyFac switchFac) {
				model.setSwitcherStrategy(switchFac);
			}

			/**
			 * This function returns the strategy factory that is making the switcher balls' current strategy.
			 * @return An IStrategyFactory that makes the current switcher balls' strategy.
			 */
			@Override
			public IStrategyFac getSwitcherFac() {
				return model.getSwitcherFac();
			}

			@Override
			public IStrategyFac addPaintFactory(String text) {
				return model.makePaintFactory(text);
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvA0pQuLEei-6eSvavMBRQ" name="start" specification="_gmdVkAuLEei-6eSvavMBRQ">
          <language>java</language>
          <body>view.start();
		model.start();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gmbgYAuLEei-6eSvavMBRQ" name="main" isStatic="true" method="_gvA0oAuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvQsQQuLEei-6eSvavMBRQ">
            <body>This main method starts the BallWorldController.
	 * @param args Command line arguments.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gmbgYQuLEei-6eSvavMBRQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gmbgYguLEei-6eSvavMBRQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gmcHcAuLEei-6eSvavMBRQ" name="BallWorldController" method="_gvA0owuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_gmcHcQuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gmcHcguLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_gvQsQguLEei-6eSvavMBRQ">
            <body>This is the constructor for BallWorldController, which
	 * creates anonymous inner classes for the adapters, and defines their functions.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gmcugAuLEei-6eSvavMBRQ" type="_gmaSQAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gmdVkAuLEei-6eSvavMBRQ" name="start" method="_gvA0pQuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvQsQwuLEei-6eSvavMBRQ">
            <body>This function starts the view and model.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwJdEQuLEei-6eSvavMBRQ" name="" memberEnd="_gwJdEguLEei-6eSvavMBRQ _gulW0AuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwJdEguLEei-6eSvavMBRQ" name="" type="_gmaSQAuLEei-6eSvavMBRQ" association="_gwJdEQuLEei-6eSvavMBRQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwJdFAuLEei-6eSvavMBRQ" name="" memberEnd="_gwJdFQuLEei-6eSvavMBRQ _gul94AuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwJdFQuLEei-6eSvavMBRQ" name="" type="_gmaSQAuLEei-6eSvavMBRQ" association="_gwJdFAuLEei-6eSvavMBRQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gk_9AQuLEei-6eSvavMBRQ" name="util">
      <packagedElement xmi:type="uml:Class" xmi:id="_gn7VMAuLEei-6eSvavMBRQ" name="Dispatcher">
        <ownedComment xmi:id="_gvWL1QuLEei-6eSvavMBRQ">
          <body>A simplified Observable class that immediately notifies its Observers when its
notifyAll() method is called. The changed state of the Dispatcher does not need
to be separately set.
@author sn32, kyl3</body>
        </ownedComment>
        <generalization xmi:id="_guTC8AuLEei-6eSvavMBRQ" general="_gtLooQuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvLzzQuLEei-6eSvavMBRQ" name="notifyAll" specification="_guSb4AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvLzzguLEei-6eSvavMBRQ" name="param" type="_guFnkQuLEei-6eSvavMBRQ"/>
          <language>java</language>
          <body>setChanged();
     notifyObservers(param);
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_guSb4AuLEei-6eSvavMBRQ" name="notifyAll" method="_gvLzzQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_guSb4QuLEei-6eSvavMBRQ" name="param" type="_guFnkQuLEei-6eSvavMBRQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_gn8jUAuLEei-6eSvavMBRQ" name="IRandomizer">
        <ownedOperation xmi:id="_gn9KYAuLEei-6eSvavMBRQ" name="randomInt">
          <ownedComment xmi:id="_gvWL2AuLEei-6eSvavMBRQ">
            <body>Returns a random integer greater than or equal to min and less than or equal to max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return an int subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_gn9KYQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gn9KYguLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gn9KYwuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gn9KZAuLEei-6eSvavMBRQ" name="randomDouble">
          <ownedComment xmi:id="_gvWL2QuLEei-6eSvavMBRQ">
            <body>Returns a random double greater than or equal to min and less than max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return a double subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_gn9KZQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gn9KZguLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gn9xcAuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gn9xcQuLEei-6eSvavMBRQ" name="randomColor">
          <ownedComment xmi:id="_gvWL3QuLEei-6eSvavMBRQ">
            <body>Generates a random color
	 * @return a random Color object</body>
          </ownedComment>
          <ownedParameter xmi:id="_guWtVAuLEei-6eSvavMBRQ" type="_gtKagAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guTC8QuLEei-6eSvavMBRQ" name="randomLoc">
          <ownedComment xmi:id="_gvWL1guLEei-6eSvavMBRQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than rect.width
	 * and 0 less than y less than rect.height.
	 * @param rect The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_guTC8guLEei-6eSvavMBRQ" name="rect" type="_gtRvQguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guTqAAuLEei-6eSvavMBRQ" type="_gtLBkQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guU4IQuLEei-6eSvavMBRQ" name="randomLoc">
          <ownedComment xmi:id="_gvWL1wuLEei-6eSvavMBRQ">
            <body>Generates a random location point subject to the constraint that 0 less than x less than dim.width
	 * and 0 less than y less than dim.height.
	 * @param dim The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_guU4IguLEei-6eSvavMBRQ" name="dim" type="_guTqAQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guU4IwuLEei-6eSvavMBRQ" type="_gtLBkQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guVfMAuLEei-6eSvavMBRQ" name="randomVel">
          <ownedComment xmi:id="_gvWL2guLEei-6eSvavMBRQ">
            <body>Returns a random velocity (as a Point) subject to the constraint that the absolute value
	 * of the velocity (speed) within the bound (inclusive) defined by rect. Thus the resultant
	 * velocity may be negative. The given Rectangle should use all positive values.
	 * @param rect The bounds for the absolute value of the velocity in the x and y directions.  
	 * @return a Point object with x and y subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_guVfMQuLEei-6eSvavMBRQ" name="rect" type="_gtRvQguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guVfMguLEei-6eSvavMBRQ" type="_gtLBkQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guWGQAuLEei-6eSvavMBRQ" name="randomDim">
          <ownedComment xmi:id="_gvWL2wuLEei-6eSvavMBRQ">
            <body>Returns a random square Dimension, whose width is maxDim.width/2 less than width less than maxDim.width
	 * @param maxDim  The bounds on the side of the created Dimension.
	 * @return A random square Dimension subject to the given bound</body>
          </ownedComment>
          <ownedParameter xmi:id="_guWGQQuLEei-6eSvavMBRQ" name="maxDim" type="_guTqAQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guWGQguLEei-6eSvavMBRQ" type="_guTqAQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guWtUAuLEei-6eSvavMBRQ" name="randomBounds">
          <ownedComment xmi:id="_gvWL3AuLEei-6eSvavMBRQ">
            <body>Generates a randomly located and sized rectangle
	 * @param rect  The bounds for the location of the created rectangle
	 * @param maxDim  The bounds for the dimensions of the create rectangle
	 * @return A Rectangle with location and dimensions subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_guWtUQuLEei-6eSvavMBRQ" name="rect" type="_gtRvQguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guWtUguLEei-6eSvavMBRQ" name="maxDim" type="_guTqAQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guWtUwuLEei-6eSvavMBRQ" type="_gtRvQguLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guXUYAuLEei-6eSvavMBRQ" name="randomChoice">
          <ownedComment xmi:id="_gvWL3guLEei-6eSvavMBRQ">
            <body>Returns a random choice of one of two objects, x and y, where probX is the probability 
	 * that x will be picked (0 less than x less than 1).
	 * @param x The first of two choices
	 * @param y The second of two choices
	 * @param probX  The probability of the first choice
	 * @return Either x or y as per the probability of choosing them.</body>
          </ownedComment>
          <ownedParameter xmi:id="_guXUYQuLEei-6eSvavMBRQ" name="x" type="_guFnkQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guXUYguLEei-6eSvavMBRQ" name="y" type="_guFnkQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guXUYwuLEei-6eSvavMBRQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_guXUZAuLEei-6eSvavMBRQ" type="_guFnkQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_goBb0AuLEei-6eSvavMBRQ" name="Randomizer">
        <ownedComment xmi:id="_gvWL3wuLEei-6eSvavMBRQ">
          <body>Utility class that supplies  class routines for generating various random values</body>
        </ownedComment>
        <ownedAttribute xmi:id="_guxkEAuLEei-6eSvavMBRQ" name="Singleton" isStatic="true" type="_goBb0AuLEei-6eSvavMBRQ" association="_gwQKwQuLEei-6eSvavMBRQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_guxkEQuLEei-6eSvavMBRQ" value="new Randomizer()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_gtr-8AuLEei-6eSvavMBRQ" client="_goBb0AuLEei-6eSvavMBRQ" supplier="_gn8jUAuLEei-6eSvavMBRQ" contract="_gn8jUAuLEei-6eSvavMBRQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvMa0AuLEei-6eSvavMBRQ" name="randomLoc" specification="_guX7cAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvMa0QuLEei-6eSvavMBRQ" name="rect" type="_gtRvQguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvMa0guLEei-6eSvavMBRQ" type="_gtLBkQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, rect.width), randomInt(0, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvMa0wuLEei-6eSvavMBRQ" name="randomLoc" specification="_guYigAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvMa1AuLEei-6eSvavMBRQ" name="dim" type="_guTqAQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvMa1QuLEei-6eSvavMBRQ" type="_gtLBkQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, dim.width), randomInt(0, dim.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvMa1guLEei-6eSvavMBRQ" name="randomInt" specification="_goDRAAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvMa1wuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvMa2AuLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvMa2QuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int)Math.floor((Math.random()*(1+max-min))+min);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvMa2guLEei-6eSvavMBRQ" name="randomDouble" specification="_goD4EQuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvMa2wuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvMa3AuLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvMa3QuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return (Math.random()*(max-min))+min;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvMa3guLEei-6eSvavMBRQ" name="randomVel" specification="_guZJkAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvMa3wuLEei-6eSvavMBRQ" name="rect" type="_gtRvQguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvMa4AuLEei-6eSvavMBRQ" type="_gtLBkQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return (new Point (randomInt(-rect.width, rect.width), randomInt(-rect.height, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvNB4AuLEei-6eSvavMBRQ" name="randomDim" specification="_guZJkwuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvNB4QuLEei-6eSvavMBRQ" name="maxDim" type="_guTqAQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvNB4guLEei-6eSvavMBRQ" type="_guTqAQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>int x =  randomInt(maxDim.width/2,maxDim.width);
		return new Dimension(x,x);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvNB4wuLEei-6eSvavMBRQ" name="randomBounds" specification="_guZwoAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvNB5AuLEei-6eSvavMBRQ" name="rect" type="_gtRvQguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvNB5QuLEei-6eSvavMBRQ" name="maxDim" type="_guTqAQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvNB5guLEei-6eSvavMBRQ" type="_gtRvQguLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return new Rectangle(randomLoc(rect), randomDim(maxDim));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvNB5wuLEei-6eSvavMBRQ" name="randomColor" specification="_goFtQAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvNB6AuLEei-6eSvavMBRQ" type="_gtKagAuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return new Color( randomInt(0,255),randomInt(0,255),randomInt(0,255));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvNB6QuLEei-6eSvavMBRQ" name="randomChoice" specification="_guaXsAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvNB6guLEei-6eSvavMBRQ" name="x" type="_guFnkQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvNB6wuLEei-6eSvavMBRQ" name="y" type="_guFnkQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_gvNB7AuLEei-6eSvavMBRQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvNB7QuLEei-6eSvavMBRQ" type="_guFnkQuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>return (Math.random() &lt; probX) ? x: y;

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_goCp8AuLEei-6eSvavMBRQ" name="Randomizer" visibility="private">
          <eAnnotations xmi:id="_goCp8QuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_goCp8guLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_goCp9AuLEei-6eSvavMBRQ" type="_goBb0AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_goDRAAuLEei-6eSvavMBRQ" name="randomInt" method="_gvMa1guLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_goDRAQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_goDRAguLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_goD4EAuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_goD4EQuLEei-6eSvavMBRQ" name="randomDouble" method="_gvMa2guLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_goD4EguLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_goD4EwuLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_goD4FAuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_goFtQAuLEei-6eSvavMBRQ" name="randomColor" method="_gvNB5wuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_guZwpAuLEei-6eSvavMBRQ" type="_gtKagAuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guX7cAuLEei-6eSvavMBRQ" name="randomLoc" method="_gvMa0AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_guX7cQuLEei-6eSvavMBRQ" name="rect" type="_gtRvQguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guX7cguLEei-6eSvavMBRQ" type="_gtLBkQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guYigAuLEei-6eSvavMBRQ" name="randomLoc" method="_gvMa0wuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_guYigQuLEei-6eSvavMBRQ" name="dim" type="_guTqAQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guYigguLEei-6eSvavMBRQ" type="_gtLBkQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guZJkAuLEei-6eSvavMBRQ" name="randomVel" method="_gvMa3guLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_guZJkQuLEei-6eSvavMBRQ" name="rect" type="_gtRvQguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guZJkguLEei-6eSvavMBRQ" type="_gtLBkQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guZJkwuLEei-6eSvavMBRQ" name="randomDim" method="_gvNB4AuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_guZJlAuLEei-6eSvavMBRQ" name="maxDim" type="_guTqAQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guZJlQuLEei-6eSvavMBRQ" type="_guTqAQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guZwoAuLEei-6eSvavMBRQ" name="randomBounds" method="_gvNB4wuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_guZwoQuLEei-6eSvavMBRQ" name="rect" type="_gtRvQguLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guZwoguLEei-6eSvavMBRQ" name="maxDim" type="_guTqAQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guZwowuLEei-6eSvavMBRQ" type="_gtRvQguLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_guaXsAuLEei-6eSvavMBRQ" name="randomChoice" method="_gvNB6QuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_guaXsQuLEei-6eSvavMBRQ" name="x" type="_guFnkQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guaXsguLEei-6eSvavMBRQ" name="y" type="_guFnkQuLEei-6eSvavMBRQ"/>
          <ownedParameter xmi:id="_guaXswuLEei-6eSvavMBRQ" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_guaXtAuLEei-6eSvavMBRQ" type="_guFnkQuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_goMa8AuLEei-6eSvavMBRQ" name="SineMaker">
        <ownedComment xmi:id="_gvWy4AuLEei-6eSvavMBRQ">
          <body>A utility class that can be used to create smoothly varying sinusoidal
numerical data.
Note that this is not a singleton class nor does it have static methods as
its behavior depends on the minimum, maximum and delta values given to 
its constructor.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_guyLIAuLEei-6eSvavMBRQ" name="_mid" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_guyLIguLEei-6eSvavMBRQ" name="_ampl" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_guyyMQuLEei-6eSvavMBRQ" name="_delta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_guyyMwuLEei-6eSvavMBRQ" name="_theta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_guyyNAuLEei-6eSvavMBRQ" value="-Math.PI/2.0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvNo8AuLEei-6eSvavMBRQ" name="SineMaker" specification="_goNCAAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvNo8QuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvNo8guLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvNo8wuLEei-6eSvavMBRQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gvNo9AuLEei-6eSvavMBRQ" type="_goMa8AuLEei-6eSvavMBRQ" direction="return"/>
          <language>java</language>
          <body>_mid = (max+min)/2.0;
		_ampl = (max-min)/2.0;
		_delta = delta;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvNo9QuLEei-6eSvavMBRQ" name="getDblVal" specification="_goOQIAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvNo9guLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double result = _mid + _ampl*Math.sin(_theta);
		_theta += _delta; // shorthand for _theta = _theta + _delta
		return result;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gvNo9wuLEei-6eSvavMBRQ" name="getIntVal" specification="_goO3MAuLEei-6eSvavMBRQ">
          <ownedParameter xmi:id="_gvNo-AuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int) Math.round(getDblVal());
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_goNCAAuLEei-6eSvavMBRQ" name="SineMaker" method="_gvNo8AuLEei-6eSvavMBRQ">
          <eAnnotations xmi:id="_goNpEguLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_goNpEwuLEei-6eSvavMBRQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_gvWy4QuLEei-6eSvavMBRQ">
            <body>The constructor takes several values to control the object's behavior.
	 * @param min The minimum and initial value to produce.
	 * @param max The maximum value to produce.
	 * @param delta The amount in radians that the generating angle is incremented each time
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_goNCAQuLEei-6eSvavMBRQ" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_goNpEAuLEei-6eSvavMBRQ" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_goNpEQuLEei-6eSvavMBRQ" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_goNpFAuLEei-6eSvavMBRQ" type="_goMa8AuLEei-6eSvavMBRQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_goOQIAuLEei-6eSvavMBRQ" name="getDblVal" method="_gvNo9QuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvWy4guLEei-6eSvavMBRQ">
            <body>Returns a different value each time it is called.  The value varies smoothly in a 
	 * sinusoidal fashion, incrementing each time as per the above specified delta 
	 * angle increase.
	 * @return the next value as a double</body>
          </ownedComment>
          <ownedParameter xmi:id="_goOQIQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_goO3MAuLEei-6eSvavMBRQ" name="getIntVal" method="_gvNo9wuLEei-6eSvavMBRQ">
          <ownedComment xmi:id="_gvWy4wuLEei-6eSvavMBRQ">
            <body>Same as getDblVal, but returns the result rounded to the nearest integer.
	 * Note that getDblVal and getIntVal are not independent as getIntVal merely calls
	 * getDblVal.
	 * @return the next value as an int</body>
          </ownedComment>
          <ownedParameter xmi:id="_goO3MQuLEei-6eSvavMBRQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gwQKwQuLEei-6eSvavMBRQ" name="" memberEnd="_gwQKwguLEei-6eSvavMBRQ _guxkEAuLEei-6eSvavMBRQ">
        <ownedEnd xmi:id="_gwQKwguLEei-6eSvavMBRQ" name="" type="_goBb0AuLEei-6eSvavMBRQ" association="_gwQKwQuLEei-6eSvavMBRQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_glE1gAuLEei-6eSvavMBRQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_glE1gQuLEei-6eSvavMBRQ" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_gtSWUQuLEei-6eSvavMBRQ" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtvpUQuLEei-6eSvavMBRQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtwQYQuLEei-6eSvavMBRQ" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtw3cQuLEei-6eSvavMBRQ" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtxegQuLEei-6eSvavMBRQ" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gtysoguLEei-6eSvavMBRQ" name="JComboBox"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_gL4SYAuLEei-6eSvavMBRQ">
      <eAnnotations xmi:id="_gL45cAuLEei-6eSvavMBRQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_gL45cQuLEei-6eSvavMBRQ" base_Package="_gDBRUAuLEei-6eSvavMBRQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Array xmi:id="_gmbgYwuLEei-6eSvavMBRQ" base_Element="_gmbgYQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gmejswuLEei-6eSvavMBRQ" base_Element="_gmejsAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gmvpcguLEei-6eSvavMBRQ" base_Element="_gmvCYAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gnDLcAuLEei-6eSvavMBRQ" base_Element="_gnCkYAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_gnDLcQuLEei-6eSvavMBRQ" base_Element="_gnCkYAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_gnDygAuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gnHc4AuLEei-6eSvavMBRQ" base_Element="_gnGOwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gnMVYQuLEei-6eSvavMBRQ" base_Element="_gnLuUguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gnM8cAuLEei-6eSvavMBRQ" base_Element="_gnMVYguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gnYioAuLEei-6eSvavMBRQ" base_Element="_gnX7kAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gnl-AQuLEei-6eSvavMBRQ" base_Element="_gnlW8AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_gnmlEAuLEei-6eSvavMBRQ" base_Element="_gnlW8AuLEei-6eSvavMBRQ">
    <annotations xmi:id="_gnmlEQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_goCp8wuLEei-6eSvavMBRQ" base_Element="_goCp8AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_goQFUAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_goPeQAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_goadYAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_goZ2UAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtGJEAuLEei-6eSvavMBRQ" base_Element="_gtFiAAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtGwIAuLEei-6eSvavMBRQ" base_Element="_gtGJEQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtHXMAuLEei-6eSvavMBRQ" base_Element="_gtGwIQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtIlUAuLEei-6eSvavMBRQ" base_Element="_gtH-QAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gtJMYguLEei-6eSvavMBRQ" base_Element="_gtJMYAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtLBkAuLEei-6eSvavMBRQ" base_Element="_gtKagAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtLooAuLEei-6eSvavMBRQ" base_Element="_gtLBkQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtMPsAuLEei-6eSvavMBRQ" base_Element="_gtLooQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtM2wAuLEei-6eSvavMBRQ" base_Element="_gtMPsQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gtRIMguLEei-6eSvavMBRQ" base_Element="_gtRIMAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_gtRvQAuLEei-6eSvavMBRQ" base_Element="_gtRIMAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_gtRvQQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_gtSWUAuLEei-6eSvavMBRQ" base_Element="_gtRvQguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtS9YAuLEei-6eSvavMBRQ" base_Element="_gtSWUQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gtWAsQuLEei-6eSvavMBRQ" base_Element="_gtVZoQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_gtWAsguLEei-6eSvavMBRQ" base_Element="_gtVZoQuLEei-6eSvavMBRQ">
    <annotations xmi:id="_gtWAswuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gtWnxAuLEei-6eSvavMBRQ" base_Element="_gtWnwQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_gtWnxQuLEei-6eSvavMBRQ" base_Element="_gtWnwQuLEei-6eSvavMBRQ">
    <annotations xmi:id="_gtWnxguLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gtXO1AuLEei-6eSvavMBRQ" base_Element="_gtXO0QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_gtX14AuLEei-6eSvavMBRQ" base_Element="_gtXO0QuLEei-6eSvavMBRQ">
    <annotations xmi:id="_gtX14QuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_gtYc8QuLEei-6eSvavMBRQ" base_Element="_gtYc8AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtZEAQuLEei-6eSvavMBRQ" base_Element="_gtZEAAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gtaSIAuLEei-6eSvavMBRQ" base_Element="_gtZrEQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_gtaSIQuLEei-6eSvavMBRQ" base_Element="_gtZrEQuLEei-6eSvavMBRQ">
    <annotations xmi:id="_gtaSIguLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_gta5MwuLEei-6eSvavMBRQ" base_Element="_gta5MAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtcuYQuLEei-6eSvavMBRQ" base_Element="_gtcuYAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtdVcAuLEei-6eSvavMBRQ" base_Element="_gtcuYguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtd8gAuLEei-6eSvavMBRQ" base_Element="_gtdVcQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtejkAuLEei-6eSvavMBRQ" base_Element="_gtd8gQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gtiN-AuLEei-6eSvavMBRQ" base_Element="_gtiN9QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_gti1AAuLEei-6eSvavMBRQ" base_Element="_gtiN9QuLEei-6eSvavMBRQ">
    <annotations xmi:id="_gti1AQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gtkqMwuLEei-6eSvavMBRQ" base_Element="_gtkqMAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_gtkqNguLEei-6eSvavMBRQ" base_Element="_gtkqMAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_gtkqNwuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gtlRQwuLEei-6eSvavMBRQ" base_Element="_gtlRQQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gtmfYAuLEei-6eSvavMBRQ" base_Element="_gtl4UQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_gtmfYQuLEei-6eSvavMBRQ" base_Element="_gtl4UQuLEei-6eSvavMBRQ">
    <annotations xmi:id="_gtmfYguLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gtnGcguLEei-6eSvavMBRQ" base_Element="_gtmfZAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_gtnGcwuLEei-6eSvavMBRQ" base_Element="_gtmfZAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_gtnGdAuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gtntgwuLEei-6eSvavMBRQ" base_Element="_gtntgAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_gtoUkAuLEei-6eSvavMBRQ" base_Element="_gtntgAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_gtoUkQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gto7pAuLEei-6eSvavMBRQ" base_Element="_gto7oQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_gtpisAuLEei-6eSvavMBRQ" base_Element="_gto7oQuLEei-6eSvavMBRQ">
    <annotations xmi:id="_gtpisQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gtqw1AuLEei-6eSvavMBRQ" base_Element="_gtqw0QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_gtrX4AuLEei-6eSvavMBRQ" base_Element="_gtqw0QuLEei-6eSvavMBRQ">
    <annotations xmi:id="_gtrX4QuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_gtvpUAuLEei-6eSvavMBRQ" base_Element="_gtvCQAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtwQYAuLEei-6eSvavMBRQ" base_Element="_gtvpUQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtw3cAuLEei-6eSvavMBRQ" base_Element="_gtwQYQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtxegAuLEei-6eSvavMBRQ" base_Element="_gtw3cQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtyFkAuLEei-6eSvavMBRQ" base_Element="_gtxegQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtyFkguLEei-6eSvavMBRQ" base_Element="_gtyFkQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtysoQuLEei-6eSvavMBRQ" base_Element="_gtysoAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtzTsAuLEei-6eSvavMBRQ" base_Element="_gtysoguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtz6wAuLEei-6eSvavMBRQ" base_Element="_gtzTsQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gtz6wguLEei-6eSvavMBRQ" base_Element="_gtz6wQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_gt2XAAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_gt1I4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guCkQwuLEei-6eSvavMBRQ" base_Element="_guCkQAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_guFnkguLEei-6eSvavMBRQ" base_Element="_guFnkQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guHcwwuLEei-6eSvavMBRQ" base_Element="_guHcwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_guHcxAuLEei-6eSvavMBRQ" base_Element="_guHcwAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_guHcxQuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guLHIQuLEei-6eSvavMBRQ" base_Element="_guKgFwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_guLHIguLEei-6eSvavMBRQ" base_Element="_guKgFwuLEei-6eSvavMBRQ">
    <annotations xmi:id="_guLHIwuLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guM8UAuLEei-6eSvavMBRQ" base_Element="_guMVQguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_guM8UQuLEei-6eSvavMBRQ" base_Element="_guMVQguLEei-6eSvavMBRQ">
    <annotations xmi:id="_guM8UguLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guQmsAuLEei-6eSvavMBRQ" base_Element="_guP_oAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Annotations xmi:id="_guQmsQuLEei-6eSvavMBRQ" base_Element="_guP_oAuLEei-6eSvavMBRQ">
    <annotations xmi:id="_guQmsguLEei-6eSvavMBRQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_guU4IAuLEei-6eSvavMBRQ" base_Element="_guTqAQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gugeUAuLEei-6eSvavMBRQ" base_Element="_guf3QQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gulW0QuLEei-6eSvavMBRQ" base_Element="_gulW0AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_gul94QuLEei-6eSvavMBRQ" genericsValue="?" base_Element="_gul94AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gumk8AuLEei-6eSvavMBRQ" base_Element="_gul94AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gumk8guLEei-6eSvavMBRQ" base_Element="_gumk8QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gunzEQuLEei-6eSvavMBRQ" base_Element="_gunzEAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guoaIAuLEei-6eSvavMBRQ" base_Element="_gunzFAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gupBMQuLEei-6eSvavMBRQ" base_Element="_guoaIguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gupoQguLEei-6eSvavMBRQ" base_Element="_gupoQAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guqPUQuLEei-6eSvavMBRQ" base_Element="_gupoQwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guqPVAuLEei-6eSvavMBRQ" base_Element="_guqPUguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guq2YQuLEei-6eSvavMBRQ" base_Element="_guqPVQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gusEgAuLEei-6eSvavMBRQ" base_Element="_gurdcguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gusEgwuLEei-6eSvavMBRQ" base_Element="_gusEgQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gusrkAuLEei-6eSvavMBRQ" base_Element="_gusEhAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gusrlQuLEei-6eSvavMBRQ" base_Element="_gusrlAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gutSoQuLEei-6eSvavMBRQ" base_Element="_gutSoAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Array xmi:id="_gut5sQuLEei-6eSvavMBRQ" base_Element="_gutSoguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gut5sguLEei-6eSvavMBRQ" base_Element="_gutSoguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_guugwQuLEei-6eSvavMBRQ" base_Property="_guugwAuLEei-6eSvavMBRQ" siblings="_gvUWrAuLEei-6eSvavMBRQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guugwguLEei-6eSvavMBRQ" base_Element="_guugwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guvH0QuLEei-6eSvavMBRQ" base_Element="_guvH0AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guvu4guLEei-6eSvavMBRQ" base_Element="_guvu4AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guwV8guLEei-6eSvavMBRQ" base_Element="_guwV8AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guw9AQuLEei-6eSvavMBRQ" base_Element="_guwV8wuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guxkEguLEei-6eSvavMBRQ" base_Element="_guxkEAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guyLIQuLEei-6eSvavMBRQ" base_Element="_guyLIAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guyyMAuLEei-6eSvavMBRQ" base_Element="_guyLIguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guyyMguLEei-6eSvavMBRQ" base_Element="_guyyMQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_guzZQAuLEei-6eSvavMBRQ" base_Element="_guyyMwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu0AUguLEei-6eSvavMBRQ" base_Element="_gu0AUQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu0nYguLEei-6eSvavMBRQ" base_Element="_gu0nYAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu1OcAuLEei-6eSvavMBRQ" base_Element="_gu0nYwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu1OcwuLEei-6eSvavMBRQ" base_Element="_gu1OcQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_gu11gQuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_gu11gAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu2ckAuLEei-6eSvavMBRQ" base_Element="_gu11gAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu3DoAuLEei-6eSvavMBRQ" base_Element="_gu2ckQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu3DowuLEei-6eSvavMBRQ" base_Element="_gu3DoQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu3qsQuLEei-6eSvavMBRQ" base_Element="_gu3DpAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu4RwAuLEei-6eSvavMBRQ" base_Element="_gu3qsguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu4RwwuLEei-6eSvavMBRQ" base_Element="_gu4RwQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu440QuLEei-6eSvavMBRQ" base_Element="_gu4RxAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_gu5f4AuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_gu440guLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu5f4guLEei-6eSvavMBRQ" base_Element="_gu440guLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_gu6G8AuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_gu5f4wuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu6uAQuLEei-6eSvavMBRQ" base_Element="_gu5f4wuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu7VEQuLEei-6eSvavMBRQ" base_Element="_gu6uAguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu78IAuLEei-6eSvavMBRQ" base_Element="_gu7VEguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu78IwuLEei-6eSvavMBRQ" base_Element="_gu78IQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu8jMQuLEei-6eSvavMBRQ" base_Element="_gu78JAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu9KQAuLEei-6eSvavMBRQ" base_Element="_gu8jMguLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu9KQwuLEei-6eSvavMBRQ" base_Element="_gu9KQQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Generics xmi:id="_gu9xUAuLEei-6eSvavMBRQ" genericsValue="TDropListItem" base_Element="_gu9KRAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gu-YYAuLEei-6eSvavMBRQ" base_Element="_gu9KRAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gvU9sAuLEei-6eSvavMBRQ" base_Property="_gvUWrAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gvU9sQuLEei-6eSvavMBRQ" base_Element="_gvUWrAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwHA0AuLEei-6eSvavMBRQ" base_Element="_gwGZwAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwHn4AuLEei-6eSvavMBRQ" base_Element="_gwHA0QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwIO8AuLEei-6eSvavMBRQ" base_Element="_gwHn4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwI2AAuLEei-6eSvavMBRQ" base_Element="_gwIO8QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwJdEAuLEei-6eSvavMBRQ" base_Element="_gwI2AQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwJdEwuLEei-6eSvavMBRQ" base_Element="_gwJdEQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwKEIAuLEei-6eSvavMBRQ" base_Element="_gwJdFAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwKEIwuLEei-6eSvavMBRQ" base_Element="_gwKEIQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwKrMAuLEei-6eSvavMBRQ" base_Element="_gwKEJAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwKrMwuLEei-6eSvavMBRQ" base_Element="_gwKrMQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwLSQguLEei-6eSvavMBRQ" base_Element="_gwLSQAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwL5UAuLEei-6eSvavMBRQ" base_Element="_gwLSQwuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwMgYAuLEei-6eSvavMBRQ" base_Element="_gwL5UQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwMgYwuLEei-6eSvavMBRQ" base_Element="_gwMgYQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwNHcAuLEei-6eSvavMBRQ" base_Element="_gwMgZAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwNHcwuLEei-6eSvavMBRQ" base_Element="_gwNHcQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwNugAuLEei-6eSvavMBRQ" base_Element="_gwNHdAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwNugwuLEei-6eSvavMBRQ" base_Element="_gwNugQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwOVkAuLEei-6eSvavMBRQ" base_Element="_gwNuhAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwO8oAuLEei-6eSvavMBRQ" base_Element="_gwOVkQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwPjsAuLEei-6eSvavMBRQ" base_Element="_gwO8oQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwQKwAuLEei-6eSvavMBRQ" base_Element="_gwPjsQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwQKwwuLEei-6eSvavMBRQ" base_Element="_gwQKwQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwQx0AuLEei-6eSvavMBRQ" base_Element="_gwQKxAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwRY4AuLEei-6eSvavMBRQ" base_Element="_gwQx0QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwR_8AuLEei-6eSvavMBRQ" base_Element="_gwRY4QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwSnAAuLEei-6eSvavMBRQ" base_Element="_gwR_8QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwTOEAuLEei-6eSvavMBRQ" base_Element="_gwSnAQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwT1IAuLEei-6eSvavMBRQ" base_Element="_gwTOEQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwUcMAuLEei-6eSvavMBRQ" base_Element="_gwT1IQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwVDQAuLEei-6eSvavMBRQ" base_Element="_gwUcMQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwVqUAuLEei-6eSvavMBRQ" base_Element="_gwVDQQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwWRYAuLEei-6eSvavMBRQ" base_Element="_gwVqUQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwW4cAuLEei-6eSvavMBRQ" base_Element="_gwWRYQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwW4cwuLEei-6eSvavMBRQ" base_Element="_gwW4cQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwXfgAuLEei-6eSvavMBRQ" base_Element="_gwW4dAuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwYGkAuLEei-6eSvavMBRQ" base_Element="_gwXfgQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwYtoAuLEei-6eSvavMBRQ" base_Element="_gwYGkQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwZUsAuLEei-6eSvavMBRQ" base_Element="_gwYtoQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwZ7wAuLEei-6eSvavMBRQ" base_Element="_gwZUsQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwai0AuLEei-6eSvavMBRQ" base_Element="_gwZ7wQuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwai0wuLEei-6eSvavMBRQ" base_Element="_gwai0QuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwbJ4guLEei-6eSvavMBRQ" base_Element="_gwbJ4AuLEei-6eSvavMBRQ"/>
  <UMLLabProfile:Reference xmi:id="_gwbw8guLEei-6eSvavMBRQ" base_Element="_gwbw8AuLEei-6eSvavMBRQ"/>
</xmi:XMI>
